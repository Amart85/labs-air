<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Project AIR™ – Documentation</title>
    <link>https://tibcosoftware.github.io/labs-air/docs/</link>
    <description>Recent content in Documentation on Project AIR™</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://tibcosoftware.github.io/labs-air/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Login to UI</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/users-guide/login-to-ui/</link>
      <pubDate>Sun, 24 May 2020 16:24:47 -0400</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/users-guide/login-to-ui/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The following steps will guide you to login and get started with TIBCO Project AIR™ UI.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;h4 id=&#34;prerequisite-1-tibco-cloud-account&#34;&gt;Prerequisite 1: TIBCO Cloud™ Account&lt;/h4&gt;
&lt;p&gt;Sign up for a TIBCO Cloud™ Account&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://account.cloud.tibco.com/&#34;&gt;TIBCO Cloud™ Account&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;prerequisite-2-activate-tibco-cloud-account&#34;&gt;Prerequisite 2: Activate TIBCO Cloud™ Account&lt;/h4&gt;
&lt;p&gt;Check your email and activate your account&lt;/p&gt;
&lt;h4 id=&#34;prerequisite-3-make-sure-tibco-project-air-ui-is-running&#34;&gt;Prerequisite 3: Make sure TIBCO Project AIR™ UI is running&lt;/h4&gt;
&lt;h2 id=&#34;login-steps&#34;&gt;Login Steps&lt;/h2&gt;
&lt;h4 id=&#34;step-1-open-tibco-project-air-ui-web-page&#34;&gt;Step 1: Open TIBCO Project AIR™ UI web page&lt;/h4&gt;
&lt;p&gt;Open TIBCO Project AIR™ UI by clicking the link below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://localhost:4200/&#34;&gt;TIBCO Project AIR™ UI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;step-2-enter-your-tibco-cloud-account-credentials&#34;&gt;Step 2: Enter your TIBCO Cloud™ Account credentials&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_login.png&#34; alt=&#34;Login image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-3-once-you-are-in-click-the-get-started-button&#34;&gt;Step 3: Once you are in, click the Get started button.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_landing.png&#34; alt=&#34;Landing image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-4-you-are-ready-to-manage-your-devices&#34;&gt;Step 4: You are ready to manage your devices.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_start.png&#34; alt=&#34;Start image&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Infrastructure Config</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/configuration/infrastructure-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/configuration/infrastructure-config/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Project Air&amp;rsquo;s infrastructure is mainly composed of &lt;a href=&#34;https://helm.sh/&#34;&gt;helm charts&lt;/a&gt; that run on a &lt;a href=&#34;https://kubernetes.io/&#34;&gt;kubernetes&lt;/a&gt; cluster, which makes overriding the default configuration very simple.&lt;/p&gt;
&lt;h2 id=&#34;how-to-override-configuration&#34;&gt;How to override configuration&lt;/h2&gt;
&lt;p&gt;During &amp;ldquo;air install&amp;rdquo; or &amp;ldquo;air upgrade-charts&amp;rdquo; commands a values.yml file can be passed as a parameter that will override the default configuration (more information about helm values files &lt;a href=&#34;https://helm.sh/docs/chart_template_guide/values_files/&#34;&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;In order to pass the values.yml file 2 things are needed:&lt;/p&gt;
&lt;p&gt;1.- Mount your &amp;ldquo;values.yml&amp;rdquo; file using the docker option -v, more info about docker volumes &lt;a href=&#34;https://docs.docker.com/storage/volumes/&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2.- Pass &amp;ndash;values flag to &amp;ldquo;air install&amp;rdquo; or &amp;ldquo;air upgrade-charts&amp;rdquo; command&lt;/p&gt;
&lt;p&gt;For example to increase the mosquitto pod number create a file called override-values.yml&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mosquitto:
  deployment:
    replicaCount: 2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then use that file when calling &amp;ldquo;air install&amp;rdquo; or &amp;ldquo;air upgrade-charts&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Command example overriding default values:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -e MINIKUBE_IP=$(minikube ip) -it --network host -v ${HOME}/.minikube:/.minikube -v ${HOME}/.kube:/.kube -v /path/to/override-values/folder:/values -e MINIKUBE_HOST_OS=mac tibcosoftware/labs-air-minikube-cli air install --values /values/override-values.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;Note: &lt;strong&gt;-v /path/to/override-values/folder:/values&lt;/strong&gt; (Will mount your override-values.yml inside the container)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: &lt;strong&gt;&amp;ndash;values /values/override-values.yaml&lt;/strong&gt; (Parameter with the file path that will override the helm values)&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Install infrastructure on AWS</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/getting-started-aws/install-the-infrastructure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/getting-started-aws/install-the-infrastructure/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The following steps will guide you through the full infrastructure installation on Amazon Web Services.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;h4 id=&#34;prerequisite-1-docker&#34;&gt;Prerequisite 1: Docker&lt;/h4&gt;
&lt;p&gt;Air&amp;rsquo;s CLI is wrapped in a docker container to ease the installation process:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.docker.com/get-started&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;prerequisite-2-aws-account-information&#34;&gt;Prerequisite 2: AWS Account Information&lt;/h4&gt;
&lt;p&gt;All the infrastructure components needed for Project Air will be installed in your provided AWS account, you will need the following information to install it:&lt;/p&gt;
&lt;p&gt;Your AWS access and secret keys: More information &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;installation-steps&#34;&gt;Installation Steps&lt;/h2&gt;
&lt;h4 id=&#34;step-1-pull-aws-cli&#34;&gt;Step 1: pull aws cli&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;docker pull tibcosoftware/labs-air-aws-cli
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-2-call-install-command-on-cli&#34;&gt;Step 2: call install command on cli&lt;/h4&gt;
&lt;p&gt;Note: This installation installs a Kubernetes cluster using EKS in your aws account so it takes around ~20minutes to finish.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -it tibcosoftware/labs-air-aws-cli air install
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Enter the AWS information when prompted (Note: To avoid prompt look at the Advanced install configuration section &lt;a href=&#34;#advanced-install-configuration&#34;&gt;here&lt;/a&gt;)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Please enter your AWS_ACCESS_KEY_ID:

Please enter your AWS_SECRET_ACCESS_KEY:
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-3-optional-check-installation&#34;&gt;Step 3 [optional]: check installation&lt;/h4&gt;
&lt;p&gt;This command will allow you to connect to the kubernetes cluster to see the different components&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -it -p 8001:8001 tibcosoftware/labs-air-aws-cli air dashboard
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Copy the token printed in the terminal&lt;/p&gt;
&lt;p&gt;And follow the dashboard link also printed in the terminal&lt;/p&gt;
&lt;p&gt;Congratulations!! Project Air infrastructure has been installed&lt;/p&gt;
&lt;h2 id=&#34;advanced-install-configuration&#34;&gt;Advanced install configuration&lt;/h2&gt;
&lt;p&gt;There is a way to avoid being prompted for your credentials as well as adding advanced configuration.&lt;/p&gt;
&lt;p&gt;You need to create a config.yaml file with the following content:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aws:
  AWS_ACCESS_KEY_ID: &amp;lt;YOUR ACCESS KEY ID HERE&amp;gt;
  AWS_SECRET_ACCESS_KEY: &amp;lt;YOUR SECRET ACCESS KEY ID HERE&amp;gt;
  AWS_DEFAULT_REGION: &amp;lt;YOUR DEFAULT REGION HERE&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then just mount a volume with the config.yaml file when calling the cli for example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -it -v /path/to/config/file/:/configuration tibcosoftware/labs-air-aws-cli air install
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;advanced-configuration-for-assuming-a-different-role&#34;&gt;Advanced configuration for Assuming a different role&lt;/h3&gt;
&lt;p&gt;Add the following entry to the config.yaml file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aws:
  ...&amp;lt;Your previous configuration goes here&amp;gt;...
  AWS_ASSUME_ROLE_ARN: &amp;quot;&amp;lt;Add your Role ARN&amp;gt;&amp;quot;
  AWS_ASSUME_ROLE_SESSION_DURATION: &amp;quot;&amp;lt;Add your session duration for example 3600&amp;gt;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that the role session duration also implies how often you need to &amp;ldquo;air upgrade-charts&amp;rdquo; refresh the token&lt;/p&gt;
&lt;h3 id=&#34;advanced-configuration-for-choosing-a-different-cluster-name&#34;&gt;Advanced configuration for choosing a different cluster name&lt;/h3&gt;
&lt;p&gt;Sometimes if you are shareing an AWS account you want to choose a different kubernetes cluster name.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aws:
  ...&amp;lt;Your previous configuration goes here&amp;gt;...
  KUBE_CLUSTER_NAME: &amp;quot;&amp;lt;Your cluster name&amp;gt;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;uninstallation-steps&#34;&gt;Uninstallation Steps&lt;/h2&gt;
&lt;h4 id=&#34;step-1-pull-aws-cli-1&#34;&gt;Step 1: pull aws cli&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;docker pull tibcosoftware/labs-air-aws-cli
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-2-call-delete-command-on-cli&#34;&gt;Step 2: call delete command on cli&lt;/h4&gt;
&lt;p&gt;Note: This installation deletes the Kubernetes cluster.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -it tibcosoftware/labs-air-aws-cli air delete
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Enter the AWS information when prompted (Note: To avoid prompt look at the Advanced install configuration section &lt;a href=&#34;#advanced-install-configuration&#34;&gt;here&lt;/a&gt;)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Please enter your AWS_ACCESS_KEY_ID:

Please enter your AWS_SECRET_ACCESS_KEY:
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;troubleshooting&#34;&gt;Troubleshooting&lt;/h2&gt;
&lt;h3 id=&#34;alreadyexistexception&#34;&gt;AlreadyExistException&lt;/h3&gt;
&lt;p&gt;If you get a message similar to this&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[✖]  creating CloudFormation stack &amp;quot;eksctl-air-cluster-cluster&amp;quot;: AlreadyExistsException: Stack [eksctl-air-cluster-cluster] already exists
        status code: 400, request id: a4eba6b2-bd4a-475d-b3a1-93fc6cfd5d1f
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This means that there is an already existing cluster with that name the solution is:&lt;/p&gt;
&lt;p&gt;1.- Delete the cluster, go &lt;a href=&#34;#uninstallation-steps&#34;&gt;here&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;2.- Create a cluster with a different name, go &lt;a href=&#34;#advanced-configuration-for-choosing-a-different-cluster-name&#34;&gt;here&lt;/a&gt; for more information.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Install infrastructure on Minikube</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/getting-started-minikube/install-the-infrastructure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/getting-started-minikube/install-the-infrastructure/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The following steps will guide you through the full infrastructure installation on Minikube.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;h4 id=&#34;prerequisite-1-docker&#34;&gt;Prerequisite 1: Docker&lt;/h4&gt;
&lt;p&gt;Air&amp;rsquo;s CLI is wrapped in a docker container to ease the installation process:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.docker.com/get-started&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;prerequisite-2-minikube&#34;&gt;Prerequisite 2: Minikube&lt;/h4&gt;
&lt;p&gt;All the infrastructure components needed for Project Air will be installed in your provided minikube cluster&lt;/p&gt;
&lt;p&gt;More information to install minikube &lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/install-minikube/&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;installation-steps&#34;&gt;Installation Steps&lt;/h2&gt;
&lt;h4 id=&#34;step-1-start-minikube&#34;&gt;Step 1: start minikube&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;minikube start
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note: make sure your driver is correct and that the minikube installation is correct as indicated &lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/install-minikube/#confirm-installation&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-2-enable-ingress&#34;&gt;Step 2: enable ingress&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;minikube addons enable ingress
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;IMPORTANT: Make sure your ingress-nginx-controller is running!!, you can wait a couple of minutes or you can check it by running:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl get pods -n kube-system
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-3-pull-minikube-cli&#34;&gt;Step 3: pull minikube cli&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;docker pull tibcosoftware/labs-air-minikube-cli
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-4-for-mac-users-call-install-command-on-cli&#34;&gt;Step 4 [FOR MAC USERS]: call install command on cli&lt;/h4&gt;
&lt;p&gt;In one terminal&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl proxy --port=8080 --disable-filter=true
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In a different terminal&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -e MINIKUBE_IP=$(minikube ip) -it --network host -v ${HOME}/.minikube:/.minikube -v ${HOME}/.kube:/.kube -e MINIKUBE_HOST_OS=mac tibcosoftware/labs-air-minikube-cli air install
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-4-for-linux-users-call-install-command-on-cli&#34;&gt;Step 4 [FOR LINUX USERS]: call install command on cli&lt;/h4&gt;
&lt;p&gt;In one terminal&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl proxy --port=8080
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In a different terminal&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -e MINIKUBE_IP=$(minikube ip) -it --network host -v ${HOME}/.minikube:/.minikube -v ${HOME}/.kube:/.kube tibcosoftware/labs-air-minikube-cli air install
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-4-for-windows-users-call-install-command-on-cli&#34;&gt;Step 4 [FOR WINDOWS USERS]: call install command on cli&lt;/h4&gt;
&lt;p&gt;In one terminal&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl proxy --port=8080 --disable-filter=true
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In a different terminal&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -e MINIKUBE_IP=$(minikube ip) -it --network host -v ${HOME}/.minikube:/.minikube -v ${HOME}/.kube:/.kube -e MINIKUBE_HOST_OS=windows tibcosoftware/labs-air-minikube-cli air install
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-5-optional-check-installation&#34;&gt;Step 5 [optional]: check installation&lt;/h4&gt;
&lt;p&gt;This command will allow you to connect to the kubernetes cluster to see the different components&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;minikube dashboard
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Congratulations!! Project Air infrastructure has been installed&lt;/p&gt;
&lt;h2 id=&#34;uninstallation-steps&#34;&gt;Uninstallation Steps&lt;/h2&gt;
&lt;h4 id=&#34;step-1-pull-minikube-cli&#34;&gt;Step 1: pull minikube cli&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;docker pull tibcosoftware/labs-air-minikube-cli
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-2-call-delete-command-on-cli&#34;&gt;Step 2: call delete command on cli&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;docker run -it -v ${HOME}/.minikube:/.minikube -v ${HOME}/.kube:/.kube tibcosoftware/labs-air-minikube-cli air delete
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-3-delete-minikube&#34;&gt;Step 3: delete minikube&lt;/h4&gt;
&lt;p&gt;Note: This installation deletes the Kubernetes cluster.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;minikube delete
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Manage Device Groups</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/users-guide/manage-device-groups/</link>
      <pubDate>Sun, 24 May 2020 15:42:50 -0400</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/users-guide/manage-device-groups/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The following steps will guide you through the creation  and management of device groups.
A device group represent a number of edge devices controlled and managed by the Edgex platform.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;h4 id=&#34;prerequisite-1-edgex&#34;&gt;Prerequisite 1: Edgex&lt;/h4&gt;
&lt;p&gt;Edgex is a vendor neutral open source platform at the edge of the network that interacts with physical devices, sensors, actuators and other IoT objects. It enables the interoperability between devices and applications at the edge and at the cloud.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.edgexfoundry.org&#34;&gt;Edgex&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From a running instance of Edgex, gather the following information:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Edgex Instance Name&lt;/li&gt;
&lt;li&gt;Overall gps coordinates of where the Edgex platform is running&lt;/li&gt;
&lt;li&gt;Edgex gateway api security token&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;prerequisite-2-project-air-ui&#34;&gt;Prerequisite 2: Project AIR UI&lt;/h4&gt;
&lt;p&gt;Login to TIBCO Project AIR™ UI&lt;/p&gt;
&lt;h2 id=&#34;adding-device-groups-steps&#34;&gt;Adding Device Groups Steps&lt;/h2&gt;
&lt;h4 id=&#34;step-1-click-the-iot-management-menu-on-the-top-left-corner-and-select-gateways&#34;&gt;Step 1: Click the IoT Management menu on the top left corner and select Gateways.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_side_menu.png&#34; alt=&#34;Gateway Page image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-2-on-the-gateways-page-enter-the-following-information-and-then-click-add-gateway&#34;&gt;Step 2: On the Gateways page, enter the following information and then click Add Gateway:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Device Group Id: the grouping name from Edgex&lt;/li&gt;
&lt;li&gt;Description: a description for the group of devices&lt;/li&gt;
&lt;li&gt;Address: the ip address of the machine where Edgex Gateway is running.&lt;/li&gt;
&lt;li&gt;Latitude: Edgex machine latitude&lt;/li&gt;
&lt;li&gt;Longitude: Edgex machine longitude&lt;/li&gt;
&lt;li&gt;Access Token: The Edgex security token&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;./air_add_gateway.png&#34; alt=&#34;Gateway Add image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-3-verify-connection-to-edgex&#34;&gt;Step 3: Verify connection to Edgex&lt;/h4&gt;
&lt;p&gt;Once the grouping has been added, click the grouping on the Device Groups table on the top-left corner, and then click Ping Gateway.  If the connection is succesful, you should see a Success banner. Otherwise, a Failure banner is displayed and you should review that Edgex is running or make sure the Address and Access Token parameters are correct.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_gateway_added.png&#34; alt=&#34;Gateway Verify image&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;updating-device-group-steps&#34;&gt;Updating Device Group Steps&lt;/h2&gt;
&lt;h4 id=&#34;step-1-select-grouping-to-be-updated-from-the-device-groups-table&#34;&gt;Step 1: Select grouping to be updated from the Device Groups table.&lt;/h4&gt;
&lt;h4 id=&#34;step-2-modify-groupin-parameters-as-required-note-that-the-device-group-id-can-not-be-modified&#34;&gt;Step 2: Modify groupin parameters as required. Note that the Device Group Id can not be modified.&lt;/h4&gt;
&lt;h4 id=&#34;step-3-click-the-update-gateway-button&#34;&gt;Step 3: Click the Update Gateway button.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_update_gateway.png&#34; alt=&#34;Update Gateway image&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;removing-device-group-steps&#34;&gt;Removing Device Group Steps&lt;/h2&gt;
&lt;h4 id=&#34;step-1-select-grouping-to-be-removed-from-the-device-groups-table&#34;&gt;Step 1: Select grouping to be removed from the Device Groups table.&lt;/h4&gt;
&lt;h4 id=&#34;step-3-click-the-delete-gateway-button&#34;&gt;Step 3: Click the Delete Gateway button.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_remove_gateway.png&#34; alt=&#34;Delete Gateway image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-3-verify-removed-gateway-is-not-longer-in-the-device-groups-table&#34;&gt;Step 3: Verify removed gateway is not longer in the Device Groups table.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_gateway_removed.png&#34; alt=&#34;Delete Gateway image&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Basic Authentication</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/configuration/basic-auth/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/configuration/basic-auth/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Project Air provides with basic authentication out of the box, this basic auth can be configured and even removed if desired.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: It is highly encouraged to change the default basic authentication secrets to your own secrets.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;how-to-override-default-basic-auth-configuration&#34;&gt;How to override default basic auth configuration&lt;/h2&gt;
&lt;p&gt;In order to override the basic auth configuration the following is needed&lt;/p&gt;
&lt;p&gt;Step 1.-  Create a new secret overriding the basic auth values&lt;/p&gt;
&lt;p&gt;To create your new secret in a terminal create the auth file (Replace &lt;YourDesiredUsername&gt; with your username for example admin)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;htpasswd -c auth &amp;lt;YourDesiredUsername&amp;gt;
base64 auth
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Step 2.- Override secret on install or upgrade&lt;/p&gt;
&lt;p&gt;In this step we are going to use secret created in Step 1.&lt;/p&gt;
&lt;p&gt;Create a new override-values.yml file as defined in &lt;a href=&#34;../infrastructure-config#how-to-override-configuration&#34;&gt;here&lt;/a&gt; with the current content:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;basicauth:
  secret: &amp;lt;AddYourSecretHere&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Step 3.- Use the new override-values.yaml to install or upgrade air infrastructure&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;More information about overriding values &lt;a href=&#34;../infrastructure-config#how-to-override-configuration&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Step 4.- Change UI to use new BasicAuth http headers&lt;/p&gt;
&lt;p&gt;Open labs-air-ui/src/app/services/auth/auth.service.ts and replace the line &lt;AddYourBase64BasicAuthHere&gt; with your base64 header.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;this.basicAuthHeaders = {
        &#39;Authorization&#39;: &#39;Basic &amp;lt;AddYourBase64BasicAuthHere&amp;gt;&#39;
    }
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Start the Edge</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/getting-started-aws/start-the-edge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/getting-started-aws/start-the-edge/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The following steps will guide you through the configuration and how to run the edge elements locally.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;h4 id=&#34;prerequisite-1-docker&#34;&gt;Prerequisite 1: Docker&lt;/h4&gt;
&lt;p&gt;Air&amp;rsquo;s CLI is wrapped in a docker container to ease the installation process:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.docker.com/get-started&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;running-steps&#34;&gt;Running Steps&lt;/h2&gt;
&lt;h4 id=&#34;step-1-download-basic-demo&#34;&gt;Step 1: Download basic demo&lt;/h4&gt;
&lt;p&gt;Download the &lt;a href=&#34;../../basicdemo.zip&#34;&gt;basic demo file&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unzip basicdemo.zip&lt;/p&gt;
&lt;p&gt;Then, change to the folder just unzipped&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd basicdemo
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-2-startup-edgex-components&#34;&gt;Step 2: Startup Edgex components&lt;/h4&gt;
&lt;p&gt;Inside your basicdemo folder run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./startEdgex.sh
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-3-get-edgex-gateway-api-security-token&#34;&gt;Step 3: Get Edgex Gateway API security token&lt;/h4&gt;
&lt;p&gt;Inside your basicdemo folder run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./getSecurityToken.sh
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Copy the access token for tibuser, you will need it to configure AIR components.&lt;/p&gt;
&lt;h4 id=&#34;step-4-configure-air-edgex-components&#34;&gt;Step 4: Configure AIR Edgex Components&lt;/h4&gt;
&lt;p&gt;First let&amp;rsquo;s query the endpoints&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -it tibcosoftware/labs-air-aws-cli air show-endpoints
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You should see 3 endpoints being displayed something like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{&#39;service_name&#39;: &#39;core-air-cors-anywhere-service&#39;, &#39;hostname&#39;: &#39;&amp;lt;someawsdns&amp;gt;.us-west-2.elb.amazonaws.com&#39;, &#39;ports&#39;: [80]}


{&#39;service_name&#39;: &#39;core-ingress-nginx-controller&#39;, &#39;hostname&#39;: &#39;&amp;lt;someawsdns&amp;gt;.us-west-2.elb.amazonaws.com&#39;, &#39;ports&#39;: [80, 443]}


{&#39;service_name&#39;: &#39;core-mosquitto-service&#39;, &#39;hostname&#39;: &#39;&amp;lt;someawsdns&amp;gt;.us-west-2.elb.amazonaws.com&#39;, &#39;ports&#39;: [443]}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then, let&amp;rsquo;s use those endpoints to configure the Edge example.&lt;/p&gt;
&lt;p&gt;Modify basicdemo/.env file which is used to provide AIR environment variables to docker-compose&lt;/p&gt;
&lt;p&gt;Open the file and replace the following variables using values for your environment and the information returned from the service list:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GATEWAY_ID=changeme
GATEWAY_DESCRIPTION=changeme
GATEWAY_HOSTNAME=localhost
GATEWAY_LATITUDE=36.0
GATEWAY_LONGITUDE=-98.0
GATEWAY_ACCESS_TOKEN=changeme
GATEWAY_METADATA_PUBLISH_INTERVAL_SECS=30
AIR_MQTT_HOSTNAME=changeme
AIR_MQTT_PORT=changeme
AIR_MQTT_USER=mqtt_admin
AIR_MQTT_PASSWORD=mqtt_admin
AIR_MQTT_DATA_TOPIC=EdgexGatewayData
AIR_MQTT_NOTIFICATION_TOPIC=EdgexGatewayNotification
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Please note that the GATEWAY_ID is the identifier that will be used to identify your deployment in the AIR UI.&lt;/p&gt;
&lt;h4 id=&#34;step-5-startup-air-edgex-components&#34;&gt;Step 5: Startup AIR Edgex components&lt;/h4&gt;
&lt;p&gt;Inside your basicdemo folder run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./startEdgeAIR.sh
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Congratulations!! Project Air edge basic demo is running&lt;/p&gt;
&lt;h2 id=&#34;uninstallation-steps&#34;&gt;Uninstallation Steps&lt;/h2&gt;
&lt;h4 id=&#34;step-1-stop-the-demo&#34;&gt;Step 1: stop the demo&lt;/h4&gt;
&lt;p&gt;Inside your basicdemo folder run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./stopEdgex.sh
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Start the Edge</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/getting-started-minikube/start-the-edge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/getting-started-minikube/start-the-edge/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The following steps will guide you through the configuration and how to run the edge elements locally.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;h4 id=&#34;prerequisite-1-docker&#34;&gt;Prerequisite 1: Docker&lt;/h4&gt;
&lt;p&gt;Air&amp;rsquo;s CLI is wrapped in a docker container to ease the installation process:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.docker.com/get-started&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;running-steps&#34;&gt;Running Steps&lt;/h2&gt;
&lt;h4 id=&#34;step-1-download-basic-demo&#34;&gt;Step 1: Download basic demo&lt;/h4&gt;
&lt;p&gt;Download the &lt;a href=&#34;../../basicdemo.zip&#34;&gt;basic demo file&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unzip basicdemo.zip&lt;/p&gt;
&lt;p&gt;Then, change to the folder just unzipped&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd basicdemo
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-2-startup-edgex-components&#34;&gt;Step 2: Startup Edgex components&lt;/h4&gt;
&lt;p&gt;Inside your basicdemo folder run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./startEdgex.sh
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-3-get-edgex-gateway-api-security-token&#34;&gt;Step 3: Get Edgex Gateway API security token&lt;/h4&gt;
&lt;p&gt;Inside your basicdemo folder run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./getSecurityToken.sh
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Copy the access token for tibuser, you will need it to configure AIR components.&lt;/p&gt;
&lt;h4 id=&#34;step-4-configure-air-edgex-components&#34;&gt;Step 4: Configure AIR Edgex Components&lt;/h4&gt;
&lt;p&gt;First let&amp;rsquo;s get the service list&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;minikube service list
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You should see something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;|----------------------|------------------------------------|--------------------|-----------------------------|
|      NAMESPACE       |                NAME                |    TARGET PORT     |             URL             |
|----------------------|------------------------------------|--------------------|-----------------------------|
| default              | kubernetes                         | No node port       |
| default              | minikube-air-app-manager-service   | appmanager-http/80 | http://192.168.99.117:30640 |
| default              | minikube-air-cors-anywhe-service   | ca-http/80         | http://192.168.99.117:31118 |
| default              | minikube-dgraph-alpha              | No node port       |
| default              | minikube-dgraph-alpha-headless     | No node port       |
| default              | minikube-dgraph-ratel              | No node port       |
| default              | minikube-dgraph-zero               | No node port       |
| default              | minikube-dgraph-zero-headless      | No node port       |
| default              | minikube-mosquitto-service         | mosquitto/443      | http://192.168.99.117:30987 |
| kube-system          | ingress-nginx-controller-admission | No node port       |
| kube-system          | kube-dns                           | No node port       |
| kubernetes-dashboard | dashboard-metrics-scraper          | No node port       |
| kubernetes-dashboard | kubernetes-dashboard               | No node port       |
|----------------------|------------------------------------|--------------------|-----------------------------|
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then, let&amp;rsquo;s use those endpoints to configure the Edge example.&lt;/p&gt;
&lt;p&gt;Modify basicdemo/.env file which is used to provide AIR environment variables to docker-compose&lt;/p&gt;
&lt;p&gt;Open the file and replace the following variables using values for your environment and the information returned from the service list:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GATEWAY_ID=changeme
GATEWAY_DESCRIPTION=changeme
GATEWAY_HOSTNAME=localhost
GATEWAY_LATITUDE=36.0
GATEWAY_LONGITUDE=-98.0
GATEWAY_ACCESS_TOKEN=changeme
GATEWAY_METADATA_PUBLISH_INTERVAL_SECS=30
AIR_MQTT_HOSTNAME=changeme
AIR_MQTT_PORT=changeme
AIR_MQTT_USER=mqtt_admin
AIR_MQTT_PASSWORD=mqtt_admin
AIR_MQTT_DATA_TOPIC=EdgexGatewayData
AIR_MQTT_NOTIFICATION_TOPIC=EdgexGatewayNotification
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Please note that the GATEWAY_ID is the identifier that will be used to identify your deployment in the AIR UI.&lt;/p&gt;
&lt;h4 id=&#34;step-5-startup-air-edgex-components&#34;&gt;Step 5: Startup AIR Edgex components&lt;/h4&gt;
&lt;p&gt;Inside your basicdemo folder run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./startEdgeAIR.sh
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Congratulations!! Project Air edge basic demo is running&lt;/p&gt;
&lt;h2 id=&#34;uninstallation-steps&#34;&gt;Uninstallation Steps&lt;/h2&gt;
&lt;h4 id=&#34;step-1-stop-the-demo&#34;&gt;Step 1: stop the demo&lt;/h4&gt;
&lt;p&gt;Inside your basicdemo folder run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./stopEdgex.sh
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Configuring Device Groups</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/users-guide/configuring-device-groups/</link>
      <pubDate>Mon, 25 May 2020 12:33:17 -0400</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/users-guide/configuring-device-groups/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Once a Device Grouping has been created, a connection has been established with Edgex devices and now we wil show you how to configure Messaging Protocos and Data Stores that will be used to receive and store data from devices.
The following steps will guide you through the configuration of messaging protocols and data stores.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;h4 id=&#34;prerequisite-1-edgex&#34;&gt;Prerequisite 1: Edgex&lt;/h4&gt;
&lt;p&gt;Edgex is a vendor neutral open source platform at the edge of the network that interacts with physical devices, sensors, actuators and other IoT objects. It enables the interoperability between devices and applications at the edge and at the cloud.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;edgexfoundry.org&#34;&gt;Edgex&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Every running Edgex platform will provide one or more Service to export data from the edge. From a running instance of Edgex, gather the following information from each of the available Export Services:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Transport used: MQTT, Kafka or TCM&lt;/li&gt;
&lt;li&gt;Connection URL&lt;/li&gt;
&lt;li&gt;Connection credentials&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;prerequisite-2-data-store-information&#34;&gt;Prerequisite 2: Data Store Information&lt;/h4&gt;
&lt;p&gt;Device data can be stored in one or several data stores depending on the use case requirements. Gather the following information for each data store:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Connection URL&lt;/li&gt;
&lt;li&gt;Connection Credentials&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;prerequisite-3-data-store-table-setup&#34;&gt;Prerequisite 3: Data Store Table Setup&lt;/h4&gt;
&lt;p&gt;For each required data store, the user needs to configure the datastate and create tables to store the data.
Project AIR provides scripts with SQL commands to create the required artifacts.&lt;/p&gt;
&lt;p&gt;Following is an example sql script to create the artifact for a Postgres Database.
&lt;a href=&#34;./setup.sql&#34;&gt;Postgres SQL script&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;accessing-endpoints-configuration&#34;&gt;Accessing Endpoints Configuration&lt;/h2&gt;
&lt;h4 id=&#34;step-1-from-the-gateways-page-select-the-device-group-you-want-to-configure&#34;&gt;Step 1: From the Gateways page, select the Device Group you want to configure.&lt;/h4&gt;
&lt;h4 id=&#34;step-2-click-the-endpoints-configuration-button&#34;&gt;Step 2: Click the Endpoints Configuration button.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_endpoint_gateway.png&#34; alt=&#34;Gateway Endpoint Config image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-3-the-endpoint-configuration-page-should-be-displayed&#34;&gt;Step 3: The Endpoint configuration page should be displayed.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_endpoint.png&#34; alt=&#34;Gateway Endpoint Config image&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;adding-messaging-protocols&#34;&gt;Adding Messaging Protocols&lt;/h2&gt;
&lt;h4 id=&#34;step-1-select-the-desired-protocol-from-the-pulldown-menu-under-the-protocol-details-panel&#34;&gt;Step 1: Select the desired protocol from the pulldown menu under the Protocol Details panel&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_mqtt_1.png&#34; alt=&#34;Adding Protocol MQTT1 image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-2-enter-required-information-for-the-selected-protocol&#34;&gt;Step 2: Enter required information for the selected protocol&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_mqtt_2.png&#34; alt=&#34;Adding Protocol MQTT2 image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-2-click-the-add-protocol-button-the-new-protocol-configuration-should-be-shown-in-the-inbound-protocols-panel&#34;&gt;Step 2: Click the Add Protocol button. The new protocol configuration should be shown in the Inbound Protocols panel&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_mqtt_3.png&#34; alt=&#34;Adding Protocol MQTT2 image&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;adding-data-stores&#34;&gt;Adding Data Stores&lt;/h2&gt;
&lt;h4 id=&#34;step-1-click-the-data-stores-tab&#34;&gt;Step 1: Click the Data Stores tab&lt;/h4&gt;
&lt;h4 id=&#34;step-2-select-the-desired-data-store-from-the-pulldown-menu-under-the-datastore-details-panel&#34;&gt;Step 2: Select the desired data store from the pulldown menu under the DataStore Details panel&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_dgraph_1.png&#34; alt=&#34;Adding DS Dgraph1 image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-3-enter-required-information-for-the-selected-data-store&#34;&gt;Step 3: Enter required information for the selected data store&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_dgraph_2.png&#34; alt=&#34;Adding DS Dgraph2 image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-4-click-the-add-data-store-button-the-new-data-store-configuration-should-be-shown-in-the-data-stores-panel&#34;&gt;Step 4: Click the Add Data Store button. The new data store configuration should be shown in the Data Stores panel&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_dgraph_3.png&#34; alt=&#34;Adding Protocol MQTT2 image&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Start the UI</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/getting-started-aws/start-the-ui/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/getting-started-aws/start-the-ui/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The following steps will guide you through the configuration and how to run the UI locally.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;h4 id=&#34;prerequisite-1-git&#34;&gt;Prerequisite 1: Git&lt;/h4&gt;
&lt;p&gt;Air&amp;rsquo;s UI is located in a github repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;prerequisite-2-npm&#34;&gt;Prerequisite 2: npm&lt;/h4&gt;
&lt;p&gt;Air&amp;rsquo;s UI is an angular application that uses npm to install dependencies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/&#34;&gt;npm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;prerequisite-3-tibco-live-apps-subscription-free-trial-available&#34;&gt;Prerequisite 3: TIBCO Live Apps subscription (Free trial available)&lt;/h4&gt;
&lt;p&gt;Project Air makes use of TIBCO Live Apps user management and application hosting capabilities, for a free trial please go to the page:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.tibco.com/products/tibco-cloud-live-apps&#34;&gt;TIBCO Cloud™ Live Apps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;running-steps&#34;&gt;Running Steps&lt;/h2&gt;
&lt;h4 id=&#34;step-1-clone-ui&#34;&gt;Step 1: clone UI&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/TIBCOSoftware/labs-air-ui.git
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-2-configure-ui-endpoints&#34;&gt;Step 2: configure UI endpoints&lt;/h4&gt;
&lt;p&gt;In this steps we are connecting the UI to Air&amp;rsquo;s infrastructure endpoints&lt;/p&gt;
&lt;p&gt;First let&amp;rsquo;s query the endpoints&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -it tibcosoftware/labs-air-aws-cli air show-endpoints
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You should see 3 endpoints being displayed something like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{&#39;service_name&#39;: &#39;core-air-cors-anywhere-service&#39;, &#39;hostname&#39;: &#39;&amp;lt;someawsdns&amp;gt;.us-west-2.elb.amazonaws.com&#39;, &#39;ports&#39;: [80]}


{&#39;service_name&#39;: &#39;core-ingress-nginx-controller&#39;, &#39;hostname&#39;: &#39;&amp;lt;someawsdns&amp;gt;.us-west-2.elb.amazonaws.com&#39;, &#39;ports&#39;: [80, 443]}


{&#39;service_name&#39;: &#39;core-mosquitto-service&#39;, &#39;hostname&#39;: &#39;&amp;lt;someawsdns&amp;gt;.us-west-2.elb.amazonaws.com&#39;, &#39;ports&#39;: [443]}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then, let&amp;rsquo;s use those endpoints to configure the UI.&lt;/p&gt;
&lt;p&gt;Open the file proxy.conf.prod.us.json and replace the following entries at the end of the json file with the endpoints from previous step.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;quot;/edgex/remotegateway/*&amp;quot;: {
    &amp;quot;target&amp;quot;: &amp;quot;http://&amp;lt;Add-Your-air-cors-anywhere-service-Enpoint-Here&amp;gt;&amp;quot;,
    &amp;quot;secure&amp;quot;: false,
    &amp;quot;changeOrigin&amp;quot;: true,
    &amp;quot;logLevel&amp;quot;: &amp;quot;info&amp;quot;,
    &amp;quot;pathRewrite&amp;quot;:{&amp;quot;^/edgex/remotegateway&amp;quot; : &amp;quot;&amp;quot;}
  },
  &amp;quot;/airEndpoint/*&amp;quot;: {
    &amp;quot;target&amp;quot;: &amp;quot;http://&amp;lt;Add-Your-ingress-nginx-controller-Enpoint-Here&amp;gt;&amp;quot;,
    &amp;quot;secure&amp;quot;: &amp;quot;false&amp;quot;,
    &amp;quot;changeOrigin&amp;quot;: true,
    &amp;quot;logLevel&amp;quot;: &amp;quot;info&amp;quot;,
    &amp;quot;pathRewrite&amp;quot;:{&amp;quot;^/airEndpoint&amp;quot; : &amp;quot;&amp;quot;}
  }
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-3-npm-install&#34;&gt;Step 3: npm install&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;cd labs-air-ui
npm install
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-4-start-the-ui&#34;&gt;Step 4: start the UI&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;npm run serve_us
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Congratulations!! Project Air UI is started on https://localhost:4200&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Start the UI</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/getting-started-minikube/start-the-ui/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/getting-started-minikube/start-the-ui/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The following steps will guide you through the configuration and how to run the UI locally.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;h4 id=&#34;prerequisite-1-git&#34;&gt;Prerequisite 1: Git&lt;/h4&gt;
&lt;p&gt;Air&amp;rsquo;s UI is located in a github repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;prerequisite-2-npm&#34;&gt;Prerequisite 2: npm&lt;/h4&gt;
&lt;p&gt;Air&amp;rsquo;s UI is an angular application that uses npm to install dependencies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/&#34;&gt;npm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;prerequisite-3-tibco-live-apps-subscription-free-trial-available&#34;&gt;Prerequisite 3: TIBCO Live Apps subscription (Free trial available)&lt;/h4&gt;
&lt;p&gt;Project Air makes use of TIBCO Live Apps user management and application hosting capabilities, for a free trial please go to the page:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.tibco.com/products/tibco-cloud-live-apps&#34;&gt;TIBCO Cloud™ Live Apps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;running-steps&#34;&gt;Running Steps&lt;/h2&gt;
&lt;h4 id=&#34;step-1-clone-ui&#34;&gt;Step 1: clone UI&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/TIBCOSoftware/labs-air-ui.git
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-2-configure-ui-endpoints&#34;&gt;Step 2: configure UI endpoints&lt;/h4&gt;
&lt;p&gt;In this steps we are connecting the UI to Air&amp;rsquo;s infrastructure endpoints&lt;/p&gt;
&lt;p&gt;First: Get minikube ip&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;minikube ip
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Second: Get the service list&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;minikube service list
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You should see something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;|----------------------|------------------------------------|--------------------|-----------------------------|
|      NAMESPACE       |                NAME                |    TARGET PORT     |             URL             |
|----------------------|------------------------------------|--------------------|-----------------------------|
| default              | kubernetes                         | No node port       |
| default              | minikube-air-app-manager-service   | appmanager-http/80 | http://192.168.99.117:30640 |
| default              | minikube-air-cors-anywhe-service   | ca-http/80         | http://192.168.99.117:31118 |
| default              | minikube-dgraph-alpha              | No node port       |
| default              | minikube-dgraph-alpha-headless     | No node port       |
| default              | minikube-dgraph-ratel              | No node port       |
| default              | minikube-dgraph-zero               | No node port       |
| default              | minikube-dgraph-zero-headless      | No node port       |
| default              | minikube-mosquitto-service         | mosquitto/443      | http://192.168.99.117:30987 |
| kube-system          | ingress-nginx-controller-admission | No node port       |
| kube-system          | kube-dns                           | No node port       |
| kubernetes-dashboard | dashboard-metrics-scraper          | No node port       |
| kubernetes-dashboard | kubernetes-dashboard               | No node port       |
|----------------------|------------------------------------|--------------------|-----------------------------|
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then, let&amp;rsquo;s use those endpoints to configure the UI.&lt;/p&gt;
&lt;p&gt;Open the file proxy.conf.prod.us.json and replace the following entries at the end of the json file with the endpoints from previous step.&lt;/p&gt;
&lt;p&gt;Replace &amp;lt;Add-Your-ingress-nginx-controller-Enpoint-Here&amp;gt; with the ip you got from &amp;lsquo;minikube ip&amp;rsquo; command in step 2.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;quot;/edgex/remotegateway/*&amp;quot;: {
    &amp;quot;target&amp;quot;: &amp;quot;http://&amp;lt;Add-Your-air-cors-anywhere-service-Enpoint-Here&amp;gt;&amp;quot;,
    &amp;quot;secure&amp;quot;: false,
    &amp;quot;changeOrigin&amp;quot;: true,
    &amp;quot;logLevel&amp;quot;: &amp;quot;info&amp;quot;,
    &amp;quot;pathRewrite&amp;quot;:{&amp;quot;^/edgex/remotegateway&amp;quot; : &amp;quot;&amp;quot;}
  },
  &amp;quot;/airEndpoint/*&amp;quot;: {
    &amp;quot;target&amp;quot;: &amp;quot;http://&amp;lt;Add-Your-ingress-nginx-controller-Enpoint-Here&amp;gt;&amp;quot;,
    &amp;quot;secure&amp;quot;: &amp;quot;false&amp;quot;,
    &amp;quot;changeOrigin&amp;quot;: true,
    &amp;quot;logLevel&amp;quot;: &amp;quot;info&amp;quot;,
    &amp;quot;pathRewrite&amp;quot;:{&amp;quot;^/airEndpoint&amp;quot; : &amp;quot;&amp;quot;}
  }
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-3-npm-install&#34;&gt;Step 3: npm install&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;cd labs-air-ui
npm install
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;step-4-start-the-ui&#34;&gt;Step 4: start the UI&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;npm run serve_us
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Congratulations!! Project Air UI is started on https://localhost:4200&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Data Pipelines</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/users-guide/adding-data-pipelines/</link>
      <pubDate>Mon, 25 May 2020 12:36:01 -0400</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/users-guide/adding-data-pipelines/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;TIBCO Project AIR enables users to configure what to do with data from edge devices.
Users can configure a Data Pipeline to sequence, filter, stream data and specify a data store based on your business logic.
A typical pipeline configuration consists of activities that define the messaging protocol to receive data, define operations on the data (filtering, streaming, rules) and the data stores.
This section will guide you through all the steps required to  create data pipelines.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;h4 id=&#34;prerequisite-1-device-groups-configuration&#34;&gt;Prerequisite 1: Device Groups Configuration&lt;/h4&gt;
&lt;p&gt;Before you begin, make sure the messaging protocols and data stores configuration for device groups have been configured.  See Configuring Device Groups.&lt;/p&gt;
&lt;h2 id=&#34;adding-data-pipelines&#34;&gt;Adding Data Pipelines&lt;/h2&gt;
&lt;h4 id=&#34;step-1-from-the-gateways-page-select-the-device-group-you-want-to-configure-and-click-data-pipelines&#34;&gt;Step 1: From the Gateways page, select the Device Group you want to configure and click Data Pipelines.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_gateway_pipeline.png&#34; alt=&#34;Gateway Pipeline Config image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-2-the-data-pipelines-page-should-be-displayed&#34;&gt;Step 2: The Data Pipelines page should be displayed.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_pipeline.png&#34; alt=&#34;Pipeline Config image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-3-on-the-steps-panel-select-the-type-of-pipeline-and-then-click-next&#34;&gt;Step 3: On the Steps Panel, select the type of Pipeline and then click Next.&lt;/h4&gt;
&lt;p&gt;You can configure pipelines for device data as well as pipelines for notificatios.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_pipeline_1.png&#34; alt=&#34;Pipeline Config Type image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-4-select-and-review-the-messaging-protocol-and-then-click-next&#34;&gt;Step 4: Select and review the messaging protocol and then click Next&lt;/h4&gt;
&lt;p&gt;All the messaging protocols that have previously been configured in the Device Groups Configuration will be available for selection&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_pipeline_2.png&#34; alt=&#34;Pipeline Config Protocol image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-5-select-the-devices-to-filter-and-then-click-next&#34;&gt;Step 5: Select the devices to filter and then click Next.&lt;/h4&gt;
&lt;p&gt;Data can be filtered from going through the pipeline.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_pipeline_3.png&#34; alt=&#34;Pipeline Config Filter image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-6-configure-streaming-operations-for-a-device-instrument-and-then-click-next&#34;&gt;Step 6: Configure streaming operations for a device instrument and then click Next&lt;/h4&gt;
&lt;p&gt;TIBCO Project AIR allows users to perform streaming operations on instrument data. For example you can aggregate the values on a time window and prapagate only the results of the aggregation operation.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_pipeline_4.png&#34; alt=&#34;Pipeline Config Aggregate image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-7-select-and-review-the-data-store-and-then-click-next&#34;&gt;Step 7: Select and review the data store and then click Next&lt;/h4&gt;
&lt;p&gt;All the data stores that have previously been configured in the Device Groups Configuration will be available for selection&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_pipeline_5.png&#34; alt=&#34;Pipeline Config DS image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-8-click-save-data-pipeline-button&#34;&gt;Step 8: Click Save Data Pipeline button.&lt;/h4&gt;
&lt;p&gt;Save the pipeline configuration.  The configuration can then be deployed to a Kubernetes cluster either local or on the cloud.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_pipeline_6.png&#34; alt=&#34;Pipeline Config Type image&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;deploying-data-pipelines&#34;&gt;Deploying Data Pipelines&lt;/h2&gt;
&lt;p&gt;Once data pipelines have been configured, they can be deployed dynamically to Kubernetes cluster running locally or on the cloud.&lt;/p&gt;
&lt;h4 id=&#34;step-1-select-the-desired-pipeline-from-the-pipelines-table-and-then-click--deploy-pipeline&#34;&gt;Step 1: Select the desired pipeline from the Pipelines table and then click  Deploy Pipeline&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_deploy_pipeline_1.png&#34; alt=&#34;Pipeline Deploy Select image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-2-the-pipeline-is-deployed-and-should-show-the-status-as-deployedready&#34;&gt;Step 2: The pipeline is deployed and should show the Status as Deployed/Ready&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_deploy_pipeline_2.png&#34; alt=&#34;Pipeline Deploy Result image&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;updeploying-data-pipelines&#34;&gt;Updeploying Data Pipelines&lt;/h2&gt;
&lt;p&gt;If data from a device is not longer required or if needs to be modified, you can undeploy the pipeline.  Undeploying will remove the engine processing the data from the Kubernetes cluster.&lt;/p&gt;
&lt;h4 id=&#34;step-1-select-the-desired-pipeline-from-the-pipelines-table-and-then-click--undeploy-pipeline&#34;&gt;Step 1: Select the desired pipeline from the Pipelines table and then click  Undeploy Pipeline&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_undeploy_pipeline_1.png&#34; alt=&#34;Pipeline Undeploy Select image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-2-the-pipeline-is-undeployed-and-should-show-the-status-as-undeployed&#34;&gt;Step 2: The pipeline is undeployed and should show the Status as Undeployed&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_undeploy_pipeline_2.png&#34; alt=&#34;Pipeline Undeploy Final image&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;deleting-data-pipelines&#34;&gt;Deleting Data Pipelines&lt;/h2&gt;
&lt;p&gt;If data pipelines are not longer required, you can delete the pipeline. Notice that deployed pipelines can&amp;rsquo;t be deleted.  They need to be undeployed first.&lt;/p&gt;
&lt;h4 id=&#34;step-1-select-the-desired-pipeline-from-the-pipelines-table-and-then-click--delete-pipeline&#34;&gt;Step 1: Select the desired pipeline from the Pipelines table and then click  Delete Pipeline&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_delete_pipeline_1.png&#34; alt=&#34;Pipeline Delete Select image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-2-the-pipeline-is-deleted-and-should-not-appear-in-the-pipelines-table&#34;&gt;Step 2: The pipeline is deleted and should not appear in the Pipelines table.&lt;/h4&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Inspecting Devices</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/users-guide/inspecting-devices/</link>
      <pubDate>Mon, 25 May 2020 13:24:39 -0400</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/users-guide/inspecting-devices/</guid>
      <description>
        
        
        &lt;p&gt;TIBCO Project AIR has the capabilities to inspect edge devices metadata as well as data generated by those devices.
Device Metadata provides information about the device and all the instruments (sensors, actuators) associated with the device. It provides information on all the operations available on the devices as well as the type of data generated by the devices.
This section will guide you through all the steps to inspect device metadata as well as how to visualize data generated by the devices.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;h4 id=&#34;prerequisite-1-edgex-connection&#34;&gt;Prerequisite 1: Edgex Connection&lt;/h4&gt;
&lt;p&gt;In order to access device metadata, Project AIR needs to be configured to access an Edgex Gateway. See Manage Device Groups&lt;/p&gt;
&lt;h4 id=&#34;prerequisite-2-device-groups-configuration&#34;&gt;Prerequisite 2: Device Groups Configuration&lt;/h4&gt;
&lt;p&gt;Before you can see device data, make sure the messaging protocols and data stores configuration for device groups have been configured.  See Configuring Device Groups.&lt;/p&gt;
&lt;h2 id=&#34;inspecting-device-metadata&#34;&gt;Inspecting Device Metadata&lt;/h2&gt;
&lt;h4 id=&#34;step-1-from-the-main-menu-select-devices&#34;&gt;Step 1: From the Main Menu, select Devices.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_menu_devices.png&#34; alt=&#34;Device Menu image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-2-select-the-device-group-for-the-devices-you-want-to-inspect&#34;&gt;Step 2: Select the Device Group for the devices you want to inspect.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_device_grouping.png&#34; alt=&#34;Device Grouping image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-3-viewing-all-devices&#34;&gt;Step 3: Viewing all devices&lt;/h4&gt;
&lt;p&gt;The list of devices available will be displayed. Now you can select any of those devices to see the metadata and data details&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_device_1.png&#34; alt=&#34;Device List image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-4-inspect-device-latest-data-and-metadata&#34;&gt;Step 4: Inspect Device Latest Data and Metadata&lt;/h4&gt;
&lt;p&gt;Select a device from the Devices table (1) to see a summary of the current data sent by the device instruments (2) and a list of the instrument with a description for each of them (3)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_device_2.png&#34; alt=&#34;Device List image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-5-inspecting-device-metadata&#34;&gt;Step 5: Inspecting Device Metadata&lt;/h4&gt;
&lt;p&gt;Select an instrument from the Instruments table (1) to view the device metadata information (2) like data value type, minimun value, maximun value, etc.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_device_3.png&#34; alt=&#34;Device List image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-6-visualizing-data&#34;&gt;Step 6: Visualizing Data&lt;/h4&gt;
&lt;p&gt;Data will also be visualized.  Data is viewved depending the data type. For example, for an instrument emitting status information (discrete value), a timeline is displayed showing the different states and times the instrument has been on that state.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_device_4.png&#34; alt=&#34;Device List image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-7-visualizing-time-series-data&#34;&gt;Step 7: Visualizing time series data&lt;/h4&gt;
&lt;p&gt;Selecting a different instrument, the metadata and data information will be displayed. For example, the Voltage instrument emits numeric data.  In that case, a chart with a history of values is displayed.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_device_5.png&#34; alt=&#34;Device List image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-8-viewing-streaming-data&#34;&gt;Step 8: Viewing Streaming Data&lt;/h4&gt;
&lt;p&gt;If the device is transmitting data, the last chart will display an streaming chart with the latest values transmitted by the device&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_device_6.png&#34; alt=&#34;Device List image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-9-visualization-for-different-data-types&#34;&gt;Step 9: Visualization for different data types&lt;/h4&gt;
&lt;p&gt;As indicated previously, different visualization can be used for different data types.  In this example, data from a vehicle will be shown&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_device_7.png&#34; alt=&#34;Device List image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-10-visualizing-geo-location-data&#34;&gt;Step 10: Visualizing geo location data&lt;/h4&gt;
&lt;p&gt;Selecting an instrument with geo location data will display the position of the instrument on a map.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_device_9.png&#34; alt=&#34;Device List image&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Edge Rules</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/users-guide/adding-edge-rules/</link>
      <pubDate>Mon, 25 May 2020 13:26:04 -0400</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/users-guide/adding-edge-rules/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;TIBCO Project AIR enables users to work with data at the edge. The user can configure rules that can be applied to device data before it is sent to the cloud.  It also provides capabilities to configure rules to trigger actions on other devices if a condition is met.
A typical rule configuration consists of conditions on the values of a device, and actions to be taken when the conditions are met.
This section will guide you through all the steps required to  create edge rules.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;h4 id=&#34;prerequisite-1-device-groups-configuration&#34;&gt;Prerequisite 1: Device Groups Configuration&lt;/h4&gt;
&lt;p&gt;Before you begin, make sure the messaging protocols and data stores configuration for device groups have been configured.  This is required if the rule will be configured to send notifications to the cloud. See Configuring Device Groups.&lt;/p&gt;
&lt;h2 id=&#34;adding-edge-rules&#34;&gt;Adding Edge Rules&lt;/h2&gt;
&lt;h4 id=&#34;step-1-from-the-main-menu-select-edge-rules&#34;&gt;Step 1: From the Main Menu, select Edge Rules.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_menu_rules.png&#34; alt=&#34;Edge Rule Menu image&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_rule_1.png&#34; alt=&#34;Rule Config image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-2-select-the-device-group-for-which-the-rule-is-going-to-be-configured-for&#34;&gt;Step 2: Select the Device Group for which the rule is going to be configured for.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_rule_2.png&#34; alt=&#34;Rule Config Gateway image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-3-on-the-rule-definition-panel-configure-the-rule-by-enter-the-following-information-and-then-click-add-rule&#34;&gt;Step 3: On the Rule Definition panel, configure the rule by enter the following information and then click Add Rule&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Rule Name&lt;/li&gt;
&lt;li&gt;Rule Description&lt;/li&gt;
&lt;li&gt;Enter conditions
&lt;ul&gt;
&lt;li&gt;Select Device&lt;/li&gt;
&lt;li&gt;Select a metric (instrument) on the device&lt;/li&gt;
&lt;li&gt;Select the conditions to apply and configure the operation and values to compare to.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Enter actions
&lt;ul&gt;
&lt;li&gt;Select the actions to apply and configure the notification or action to be sent to another device.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The configuration can then be deployed dynamically to the edge.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_rule_3.png&#34; alt=&#34;Rule Config Definition image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-4-rule-is-saved-for-later-use-and-deployment&#34;&gt;Step 4: Rule is saved for later use and deployment.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_rule_4.png&#34; alt=&#34;Rule Config Table image&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;deploying-rules&#34;&gt;Deploying Rules&lt;/h2&gt;
&lt;p&gt;Once the rules have been configured, they can be deployed dynamically to a rules engine running at the edge.&lt;/p&gt;
&lt;h4 id=&#34;step-1-select-the-desired-rule-from-the-rules-table&#34;&gt;Step 1: Select the desired rule from the Rules table&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_deploy_rule_1.png&#34; alt=&#34;Rule Deploy Select image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-2-review-rule-and-click-the-deploy-rule-button&#34;&gt;Step 2: Review rule and click the Deploy Rule button.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_deploy_rule_2.png&#34; alt=&#34;Rule Deploy image&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;viewing-notifications&#34;&gt;Viewing Notifications&lt;/h2&gt;
&lt;p&gt;Rules can be configured to send notifications to cloud applications and data stores. The followin steps show how to view notifications.&lt;/p&gt;
&lt;h4 id=&#34;step-1-from-the-main-menu-select-notifications&#34;&gt;Step 1: From the Main Menu, select Notifications.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_menu_notifications.png&#34; alt=&#34;Notifications Menu image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-2-review-all-notifications&#34;&gt;Step 2: Review all notifications&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_notifications.png&#34; alt=&#34;Notifications image&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;updating-rules&#34;&gt;Updating Rules&lt;/h2&gt;
&lt;p&gt;If a rule needs to be modified, make sure the rule is first  undeployed and then update conditions and actions.&lt;/p&gt;
&lt;h4 id=&#34;step-1-select-the-desired-rule-from-the-rules-table-and-then-click--update-rule&#34;&gt;Step 1: Select the desired rule from the Rules table and then click  Update Rule&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_update_rule.png&#34; alt=&#34;Rule Update Select image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-2-the-rule-is-updated&#34;&gt;Step 2: The rule is updated&lt;/h4&gt;
&lt;h2 id=&#34;updeploying-rules&#34;&gt;Updeploying Rules&lt;/h2&gt;
&lt;p&gt;If a rule is not longer required or if needs to be modified, you can undeploy the rule.  Undeploying will remove the rule from the rule engine running on the edge.&lt;/p&gt;
&lt;h4 id=&#34;step-1-select-the-desired-rule-from-the-rules-table-and-then-click--undeploy-rule&#34;&gt;Step 1: Select the desired rule from the Rules table and then click  Undeploy Rule&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_undeploy_rule.png&#34; alt=&#34;Rule Undeploy Select image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-2-the-rule-is-undeployed&#34;&gt;Step 2: The rule is undeployed&lt;/h4&gt;
&lt;h2 id=&#34;deleting-rules&#34;&gt;Deleting Rules&lt;/h2&gt;
&lt;p&gt;If rules are not longer required, you can delete the rule. Notice that deployed rules can&amp;rsquo;t be deleted.  They need to be undeployed first.&lt;/p&gt;
&lt;h4 id=&#34;step-1-select-the-desired-rule-from-the-rules-table-and-then-click--delete-rule&#34;&gt;Step 1: Select the desired rule from the Rules table and then click  Delete Rule&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_delete_rule.png&#34; alt=&#34;Rule Delete Select image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-2-the-rule-is-deleted-and-should-not-appear-in-the-rules-table&#34;&gt;Step 2: The rule is deleted and should not appear in the Rules table.&lt;/h4&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Onboarding New Devices</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/users-guide/onboarding-new-devices/</link>
      <pubDate>Mon, 25 May 2020 13:27:38 -0400</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/users-guide/onboarding-new-devices/</guid>
      <description>
        
        
        &lt;p&gt;Coming soon!&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
