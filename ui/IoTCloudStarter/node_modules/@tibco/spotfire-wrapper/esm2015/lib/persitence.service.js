/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// Copyright (c) 2018-2018. TIBCO Software Inc. All Rights Reserved. Confidential & Proprietary.
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class PersistanceService {
    constructor() {
        this.pfx = '';
        this.set = (/**
         * @param {?} key
         * @param {?} data
         * @return {?}
         */
        (key, data) => {
            try {
                localStorage.setItem(`${this.pfx}.sw.${key}`, JSON.stringify(data));
            }
            catch (e) {
                console.error('Error saving to localStorage', e);
            }
        });
        this.get = (/**
         * @param {?} key
         * @return {?}
         */
        (key) => {
            try {
                return JSON.parse(localStorage.getItem(`${this.pfx}.sw.${key}`));
            }
            catch (e) {
                console.error('Error getting data from localStorage', e);
                return null;
            }
        });
    }
}
PersistanceService.decorators = [
    { type: Injectable, args: [{ providedIn: 'root' },] }
];
/** @nocollapse */ PersistanceService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function PersistanceService_Factory() { return new PersistanceService(); }, token: PersistanceService, providedIn: "root" });
if (false) {
    /** @type {?} */
    PersistanceService.prototype.pfx;
    /** @type {?} */
    PersistanceService.prototype.set;
    /** @type {?} */
    PersistanceService.prototype.get;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyc2l0ZW5jZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpYmNvL3Nwb3RmaXJlLXdyYXBwZXIvIiwic291cmNlcyI6WyJsaWIvcGVyc2l0ZW5jZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFHM0MsTUFBTSxPQUFPLGtCQUFrQjtJQUQvQjtRQUVFLFFBQUcsR0FBRyxFQUFFLENBQUM7UUFDVCxRQUFHOzs7OztRQUFHLENBQUMsR0FBVyxFQUFFLElBQVMsRUFBRSxFQUFFO1lBQy9CLElBQUk7Z0JBQ0YsWUFBWSxDQUFDLE9BQU8sQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLE9BQU8sR0FBRyxFQUFFLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO2FBQ3JFO1lBQUMsT0FBTyxDQUFDLEVBQUU7Z0JBQ1YsT0FBTyxDQUFDLEtBQUssQ0FBQyw4QkFBOEIsRUFBRSxDQUFDLENBQUMsQ0FBQzthQUNsRDtRQUNILENBQUMsRUFBQTtRQUNELFFBQUc7Ozs7UUFBRyxDQUFDLEdBQVcsRUFBRSxFQUFFO1lBQ3BCLElBQUk7Z0JBQ0YsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxPQUFPLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQzthQUNsRTtZQUFDLE9BQU8sQ0FBQyxFQUFFO2dCQUNWLE9BQU8sQ0FBQyxLQUFLLENBQUMsc0NBQXNDLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQ3pELE9BQU8sSUFBSSxDQUFDO2FBQ2I7UUFDSCxDQUFDLEVBQUE7S0FDRjs7O1lBbEJBLFVBQVUsU0FBQyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUU7Ozs7O0lBRWhDLGlDQUFTOztJQUNULGlDQU1DOztJQUNELGlDQU9DIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDE4LTIwMTguIFRJQkNPIFNvZnR3YXJlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4gQ29uZmlkZW50aWFsICYgUHJvcHJpZXRhcnkuXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pXG5leHBvcnQgY2xhc3MgUGVyc2lzdGFuY2VTZXJ2aWNlIHtcbiAgcGZ4ID0gJyc7XG4gIHNldCA9IChrZXk6IHN0cmluZywgZGF0YTogYW55KSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGAke3RoaXMucGZ4fS5zdy4ke2tleX1gLCBKU09OLnN0cmluZ2lmeShkYXRhKSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3Igc2F2aW5nIHRvIGxvY2FsU3RvcmFnZScsIGUpO1xuICAgIH1cbiAgfVxuICBnZXQgPSAoa2V5OiBzdHJpbmcpID0+IHtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oYCR7dGhpcy5wZnh9LnN3LiR7a2V5fWApKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBnZXR0aW5nIGRhdGEgZnJvbSBsb2NhbFN0b3JhZ2UnLCBlKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfVxufVxuIl19