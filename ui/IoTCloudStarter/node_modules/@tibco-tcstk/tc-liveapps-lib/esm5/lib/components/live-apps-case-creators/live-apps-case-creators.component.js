/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { LiveAppsService } from '../../services/live-apps.service';
import { take, takeUntil, tap } from 'rxjs/operators';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
import { TcCaseProcessesService } from '../../services/tc-case-processes.service';
/**
 * Wraps case creator and case creator list
 *
 * \@example <tcla-live-apps-case-creators></tcla-live-apps-case-creators>
 */
var LiveAppsCaseCreatorsComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LiveAppsCaseCreatorsComponent, _super);
    function LiveAppsCaseCreatorsComponent(liveapps, caseProcessesService) {
        var _this = _super.call(this) || this;
        _this.liveapps = liveapps;
        _this.caseProcessesService = caseProcessesService;
        /**
         * ~event creatorClicked : Case Creator selected
         * ~payload LaProcessSelection : LaProcessSelection object output when an action is clicked (ie. message to parent to run creator component)
         */
        _this.creatorClicked = new EventEmitter();
        _this.refresh = (/**
         * @return {?}
         */
        function () {
            _this.caseProcessesService.getCaseCreators(_this.sandboxId, _this.appId, _this.typeId)
                .pipe(take(1), takeUntil(_this._destroyed$)).subscribe((/**
             * @param {?} casecreators
             * @return {?}
             */
            function (casecreators) {
                _this.casecreators = casecreators.creators;
                if (_this.casecreators.length === 1) {
                    _this.selectCreator(_this.casecreators[0]);
                }
            }), (/**
             * @param {?} error
             * @return {?}
             */
            function (error) { _this.errorMessage = 'Error retrieving case actions: ' + error.error.errorMsg; }));
        });
        return _this;
    }
    /**
     * @param {?} creator
     * @return {?}
     */
    LiveAppsCaseCreatorsComponent.prototype.selectCreator = /**
     * @param {?} creator
     * @return {?}
     */
    function (creator) {
        var _this = this;
        this.caseProcessesService.getProcessDetails(null, this.appId, this.typeId, this.sandboxId, null, creator, 100).pipe(take(1), takeUntil(this._destroyed$), tap((/**
         * @param {?} processDetails
         * @return {?}
         */
        function (processDetails) {
            if (!processDetails || !processDetails.process || (processDetails.process.jsonSchema.$schema === 'NOSCHEMA')) {
                // This will be triggered when no form schema is available
                // Typically happens when:
                // 1) The form has elements that are not supported by the Live Apps API for form schemas such as participant selectors
                // 2) The Live Apps application is legacy and has no form schema at all, redeploying the live apps application would fix this.
                console.error('No schema available for this case type: The form may not be supported or you may need to update/re-deploy the live apps application. Alternatively use a custom form.');
            }
        })))
            .subscribe((/**
         * @param {?} processSchema
         * @return {?}
         */
        function (processSchema) {
            _this.creatorClicked.emit(processSchema);
            return processSchema;
        }), (/**
         * @param {?} error
         * @return {?}
         */
        function (error) { _this.errorMessage = 'Error retrieving case actions: ' + error.error.errorMsg; }));
    };
    /**
     * @return {?}
     */
    LiveAppsCaseCreatorsComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.refresh();
    };
    LiveAppsCaseCreatorsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tcla-live-apps-case-creators',
                    template: "<div *ngIf=\"casecreators && casecreators.length > 1\" fxFlex style=\"margin-left: 10px;\">\n  <span class=\"tcs-case-creation-dialog-instruction\">Select a case creator</span>\n  <mat-select #creatorSelector class=\"tcs-creator-selector-option\" [disableOptionCentering]=\"true\"\n              placeholder=\"Case Creators\" (selectionChange)=\"selectCreator($event.value)\">\n    <mat-option *ngFor=\"let creator of casecreators\" [value]=\"creator\">\n      <span>{{creator.label}}</span>\n    </mat-option>\n  </mat-select>\n</div>\n",
                    styles: [":host ::ng-deep .tcs-creator-selector-option .mat-select-value span{font-family:Source Sans Pro;font-size:16px;font-weight:400;font-style:normal;font-stretch:normal;line-height:1.5;letter-spacing:.3px;color:#0081cb}:host ::ng-deep .tcs-creator-selector-option .mat-select-arrow-wrapper div{color:#0081cb}:host ::ng-deep .mat-select-value{min-width:100px;max-width:100%;width:auto}.tcs-creators-box{width:200px;height:44px;box-shadow:inset 0 1px 3px 0 rgba(0,0,0,.5);background-color:#fff}tcs-creator-selector-option{width:170px;margin-left:5px;margin-right:5px;background-color:#eee;padding-left:20px;padding-right:20px;height:35px}.tcs-case-creation-dialog-instruction{font-family:Source Sans Pro;font-size:16px;font-weight:600;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;color:#727272}"]
                }] }
    ];
    /** @nocollapse */
    LiveAppsCaseCreatorsComponent.ctorParameters = function () { return [
        { type: LiveAppsService },
        { type: TcCaseProcessesService }
    ]; };
    LiveAppsCaseCreatorsComponent.propDecorators = {
        appId: [{ type: Input }],
        typeId: [{ type: Input }],
        sandboxId: [{ type: Input }],
        creatorClicked: [{ type: Output }]
    };
    return LiveAppsCaseCreatorsComponent;
}(LiveAppsComponent));
export { LiveAppsCaseCreatorsComponent };
if (false) {
    /**
     * The LA Application Id
     * @type {?}
     */
    LiveAppsCaseCreatorsComponent.prototype.appId;
    /**
     * The LA Application Type Id (generally 1)
     * @type {?}
     */
    LiveAppsCaseCreatorsComponent.prototype.typeId;
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsCaseCreatorsComponent.prototype.sandboxId;
    /**
     * ~event creatorClicked : Case Creator selected
     * ~payload LaProcessSelection : LaProcessSelection object output when an action is clicked (ie. message to parent to run creator component)
     * @type {?}
     */
    LiveAppsCaseCreatorsComponent.prototype.creatorClicked;
    /** @type {?} */
    LiveAppsCaseCreatorsComponent.prototype.casecreators;
    /** @type {?} */
    LiveAppsCaseCreatorsComponent.prototype.errorMessage;
    /** @type {?} */
    LiveAppsCaseCreatorsComponent.prototype.appSchema;
    /** @type {?} */
    LiveAppsCaseCreatorsComponent.prototype.caseType;
    /** @type {?} */
    LiveAppsCaseCreatorsComponent.prototype.caseActionList;
    /** @type {?} */
    LiveAppsCaseCreatorsComponent.prototype.refresh;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsCaseCreatorsComponent.prototype.liveapps;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsCaseCreatorsComponent.prototype.caseProcessesService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLWNhc2UtY3JlYXRvcnMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpYmNvLXRjc3RrL3RjLWxpdmVhcHBzLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2xpdmUtYXBwcy1jYXNlLWNyZWF0b3JzL2xpdmUtYXBwcy1jYXNlLWNyZWF0b3JzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUVBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBcUIsTUFBTSxFQUFZLE1BQU0sZUFBZSxDQUFDO0FBRW5HLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxrQ0FBa0MsQ0FBQztBQUNqRSxPQUFPLEVBQU0sSUFBSSxFQUFFLFNBQVMsRUFBRSxHQUFHLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUd6RCxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxzREFBc0QsQ0FBQztBQUN2RixPQUFPLEVBQUMsc0JBQXNCLEVBQUMsTUFBTSwwQ0FBMEMsQ0FBQzs7Ozs7O0FBU2hGO0lBS21ELHlEQUFpQjtJQThCbEUsdUNBQXNCLFFBQXlCLEVBQVksb0JBQTRDO1FBQXZHLFlBQ0UsaUJBQU8sU0FDUjtRQUZxQixjQUFRLEdBQVIsUUFBUSxDQUFpQjtRQUFZLDBCQUFvQixHQUFwQixvQkFBb0IsQ0FBd0I7Ozs7O1FBVjdGLG9CQUFjLEdBQXFDLElBQUksWUFBWSxFQUFzQixDQUFDO1FBYzdGLGFBQU87OztRQUFHO1lBQ2YsS0FBSSxDQUFDLG9CQUFvQixDQUFDLGVBQWUsQ0FBQyxLQUFJLENBQUMsU0FBUyxFQUFFLEtBQUksQ0FBQyxLQUFLLEVBQUUsS0FBSSxDQUFDLE1BQU0sQ0FBQztpQkFDL0UsSUFBSSxDQUNILElBQUksQ0FBQyxDQUFDLENBQUMsRUFDUCxTQUFTLENBQUMsS0FBSSxDQUFDLFdBQVcsQ0FBQyxDQUM1QixDQUFDLFNBQVM7Ozs7WUFDWCxVQUFBLFlBQVk7Z0JBQ1YsS0FBSSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUMsUUFBUSxDQUFDO2dCQUMxQyxJQUFJLEtBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtvQkFDbEMsS0FBSSxDQUFDLGFBQWEsQ0FBQyxLQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7aUJBQzFDO1lBQ0gsQ0FBQzs7OztZQUFFLFVBQUEsS0FBSyxJQUFNLEtBQUksQ0FBQyxZQUFZLEdBQUcsaUNBQWlDLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQztRQUNuRyxDQUFDLEVBQUE7O0lBZEQsQ0FBQzs7Ozs7SUFnQk0scURBQWE7Ozs7SUFBcEIsVUFBcUIsT0FBb0I7UUFBekMsaUJBb0JDO1FBbkJDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQ2pILElBQUksQ0FBQyxDQUFDLENBQUMsRUFDUCxTQUFTLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxFQUMzQixHQUFHOzs7O1FBQUMsVUFBQSxjQUFjO1lBQ2hCLElBQUksQ0FBQyxjQUFjLElBQUksQ0FBQyxjQUFjLENBQUMsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsT0FBTyxLQUFLLFVBQVUsQ0FBQyxFQUFFO2dCQUM1RywwREFBMEQ7Z0JBQzFELDBCQUEwQjtnQkFDMUIsc0hBQXNIO2dCQUN0SCw4SEFBOEg7Z0JBQzVILE9BQU8sQ0FBQyxLQUFLLENBQUMsdUtBQXVLLENBQUMsQ0FBQzthQUN4TDtRQUNILENBQUMsRUFDRixDQUNGO2FBQ0EsU0FBUzs7OztRQUFDLFVBQUEsYUFBYTtZQUNwQixLQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztZQUN4QyxPQUFPLGFBQWEsQ0FBQztRQUN2QixDQUFDOzs7O1FBQ0MsVUFBQSxLQUFLLElBQU0sS0FBSSxDQUFDLFlBQVksR0FBRyxpQ0FBaUMsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDO0lBQ2xHLENBQUM7Ozs7SUFFRCxnREFBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDakIsQ0FBQzs7Z0JBN0VGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsOEJBQThCO29CQUN4QyxxaUJBQXVEOztpQkFFeEQ7Ozs7Z0JBbEJPLGVBQWU7Z0JBS2Ysc0JBQXNCOzs7d0JBa0IzQixLQUFLO3lCQUtMLEtBQUs7NEJBS0wsS0FBSztpQ0FNTCxNQUFNOztJQXNEVCxvQ0FBQztDQUFBLEFBL0VELENBS21ELGlCQUFpQixHQTBFbkU7U0ExRVksNkJBQTZCOzs7Ozs7SUFJeEMsOENBQXVCOzs7OztJQUt2QiwrQ0FBd0I7Ozs7O0lBS3hCLGtEQUEyQjs7Ozs7O0lBTTNCLHVEQUFvRzs7SUFHcEcscURBQW1DOztJQUNuQyxxREFBNEI7O0lBRTVCLGtEQUF5Qjs7SUFDekIsaURBQW1COztJQUNuQix1REFBMEI7O0lBTTFCLGdEQVlDOzs7OztJQWhCVyxpREFBbUM7Ozs7O0lBQUUsNkRBQXNEIiwic291cmNlc0NvbnRlbnQiOlsiXG5cbmltcG9ydCB7Q29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCwgT3V0cHV0LCBWaWV3Q2hpbGR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtTdWJqZWN0fSBmcm9tICdyeGpzJztcbmltcG9ydCB7TGl2ZUFwcHNTZXJ2aWNlfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9saXZlLWFwcHMuc2VydmljZSc7XG5pbXBvcnQge21hcCwgdGFrZSwgdGFrZVVudGlsLCB0YXB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7Q2FzZUNyZWF0b3IsIENhc2VUeXBlLCBDYXNlVHlwZXNMaXN0LCBQcm9jZXNzfSBmcm9tICcuLi8uLi9tb2RlbHMvbGl2ZWFwcHNkYXRhJztcbmltcG9ydCB7TGFQcm9jZXNzU2VsZWN0aW9ufSBmcm9tICcuLi8uLi9tb2RlbHMvdGMtY2FzZS1wcm9jZXNzZXMnO1xuaW1wb3J0IHtMaXZlQXBwc0NvbXBvbmVudH0gZnJvbSAnLi4vbGl2ZS1hcHBzLWNvbXBvbmVudC9saXZlLWFwcHMtY29tcG9uZW50LmNvbXBvbmVudCc7XG5pbXBvcnQge1RjQ2FzZVByb2Nlc3Nlc1NlcnZpY2V9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3RjLWNhc2UtcHJvY2Vzc2VzLnNlcnZpY2UnO1xuaW1wb3J0IHtDdXN0b21Gb3JtRGVmc30gZnJvbSAnQHRpYmNvLXRjc3RrL3RjLWZvcm1zLWxpYic7XG5cblxuLyoqXG4gKiBXcmFwcyBjYXNlIGNyZWF0b3IgYW5kIGNhc2UgY3JlYXRvciBsaXN0XG4gKlxuICpAZXhhbXBsZSA8dGNsYS1saXZlLWFwcHMtY2FzZS1jcmVhdG9ycz48L3RjbGEtbGl2ZS1hcHBzLWNhc2UtY3JlYXRvcnM+XG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RjbGEtbGl2ZS1hcHBzLWNhc2UtY3JlYXRvcnMnLFxuICB0ZW1wbGF0ZVVybDogJy4vbGl2ZS1hcHBzLWNhc2UtY3JlYXRvcnMuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9saXZlLWFwcHMtY2FzZS1jcmVhdG9ycy5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgTGl2ZUFwcHNDYXNlQ3JlYXRvcnNDb21wb25lbnQgZXh0ZW5kcyBMaXZlQXBwc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIC8qKlxuICAgKiBUaGUgTEEgQXBwbGljYXRpb24gSWRcbiAgICovXG4gIEBJbnB1dCgpIGFwcElkOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBMQSBBcHBsaWNhdGlvbiBUeXBlIElkIChnZW5lcmFsbHkgMSlcbiAgICovXG4gIEBJbnB1dCgpIHR5cGVJZDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBzYW5kYm94SWQgLSB0aGlzIGNvbWVzIGZyb20gY2xhaW1zIHJlc29sdmVyXG4gICAqL1xuICBASW5wdXQoKSBzYW5kYm94SWQ6IG51bWJlcjtcblxuICAvKipcbiAgICogfmV2ZW50IGNyZWF0b3JDbGlja2VkIDogQ2FzZSBDcmVhdG9yIHNlbGVjdGVkXG4gICAqIH5wYXlsb2FkIExhUHJvY2Vzc1NlbGVjdGlvbiA6IExhUHJvY2Vzc1NlbGVjdGlvbiBvYmplY3Qgb3V0cHV0IHdoZW4gYW4gYWN0aW9uIGlzIGNsaWNrZWQgKGllLiBtZXNzYWdlIHRvIHBhcmVudCB0byBydW4gY3JlYXRvciBjb21wb25lbnQpXG4gICAqL1xuICBAT3V0cHV0KCkgY3JlYXRvckNsaWNrZWQ6IEV2ZW50RW1pdHRlcjxMYVByb2Nlc3NTZWxlY3Rpb24+ID0gbmV3IEV2ZW50RW1pdHRlcjxMYVByb2Nlc3NTZWxlY3Rpb24+KCk7XG5cblxuICBwdWJsaWMgY2FzZWNyZWF0b3JzOiBDYXNlQ3JlYXRvcltdO1xuICBwdWJsaWMgZXJyb3JNZXNzYWdlOiBzdHJpbmc7XG5cbiAgYXBwU2NoZW1hOiBDYXNlVHlwZXNMaXN0O1xuICBjYXNlVHlwZTogQ2FzZVR5cGU7XG4gIGNhc2VBY3Rpb25MaXN0OiBQcm9jZXNzW107XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGxpdmVhcHBzOiBMaXZlQXBwc1NlcnZpY2UsIHByb3RlY3RlZCBjYXNlUHJvY2Vzc2VzU2VydmljZTogVGNDYXNlUHJvY2Vzc2VzU2VydmljZSkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBwdWJsaWMgcmVmcmVzaCA9ICgpID0+IHtcbiAgICB0aGlzLmNhc2VQcm9jZXNzZXNTZXJ2aWNlLmdldENhc2VDcmVhdG9ycyh0aGlzLnNhbmRib3hJZCwgdGhpcy5hcHBJZCwgdGhpcy50eXBlSWQpXG4gICAgICAucGlwZShcbiAgICAgICAgdGFrZSgxKSxcbiAgICAgICAgdGFrZVVudGlsKHRoaXMuX2Rlc3Ryb3llZCQpXG4gICAgICApLnN1YnNjcmliZShcbiAgICAgIGNhc2VjcmVhdG9ycyA9PiB7XG4gICAgICAgIHRoaXMuY2FzZWNyZWF0b3JzID0gY2FzZWNyZWF0b3JzLmNyZWF0b3JzO1xuICAgICAgICBpZiAodGhpcy5jYXNlY3JlYXRvcnMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgdGhpcy5zZWxlY3RDcmVhdG9yKHRoaXMuY2FzZWNyZWF0b3JzWzBdKTtcbiAgICAgICAgfVxuICAgICAgfSwgZXJyb3IgPT4geyB0aGlzLmVycm9yTWVzc2FnZSA9ICdFcnJvciByZXRyaWV2aW5nIGNhc2UgYWN0aW9uczogJyArIGVycm9yLmVycm9yLmVycm9yTXNnOyB9KTtcbiAgfVxuXG4gIHB1YmxpYyBzZWxlY3RDcmVhdG9yKGNyZWF0b3I6IENhc2VDcmVhdG9yKSB7XG4gICAgdGhpcy5jYXNlUHJvY2Vzc2VzU2VydmljZS5nZXRQcm9jZXNzRGV0YWlscyhudWxsLCB0aGlzLmFwcElkLCB0aGlzLnR5cGVJZCwgdGhpcy5zYW5kYm94SWQsIG51bGwsIGNyZWF0b3IsIDEwMCkucGlwZShcbiAgICAgIHRha2UoMSksXG4gICAgICB0YWtlVW50aWwodGhpcy5fZGVzdHJveWVkJCksXG4gICAgICB0YXAocHJvY2Vzc0RldGFpbHMgPT4ge1xuICAgICAgICBpZiAoIXByb2Nlc3NEZXRhaWxzIHx8ICFwcm9jZXNzRGV0YWlscy5wcm9jZXNzIHx8IChwcm9jZXNzRGV0YWlscy5wcm9jZXNzLmpzb25TY2hlbWEuJHNjaGVtYSA9PT0gJ05PU0NIRU1BJykpIHtcbiAgICAgICAgICAvLyBUaGlzIHdpbGwgYmUgdHJpZ2dlcmVkIHdoZW4gbm8gZm9ybSBzY2hlbWEgaXMgYXZhaWxhYmxlXG4gICAgICAgICAgLy8gVHlwaWNhbGx5IGhhcHBlbnMgd2hlbjpcbiAgICAgICAgICAvLyAxKSBUaGUgZm9ybSBoYXMgZWxlbWVudHMgdGhhdCBhcmUgbm90IHN1cHBvcnRlZCBieSB0aGUgTGl2ZSBBcHBzIEFQSSBmb3IgZm9ybSBzY2hlbWFzIHN1Y2ggYXMgcGFydGljaXBhbnQgc2VsZWN0b3JzXG4gICAgICAgICAgLy8gMikgVGhlIExpdmUgQXBwcyBhcHBsaWNhdGlvbiBpcyBsZWdhY3kgYW5kIGhhcyBubyBmb3JtIHNjaGVtYSBhdCBhbGwsIHJlZGVwbG95aW5nIHRoZSBsaXZlIGFwcHMgYXBwbGljYXRpb24gd291bGQgZml4IHRoaXMuXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdObyBzY2hlbWEgYXZhaWxhYmxlIGZvciB0aGlzIGNhc2UgdHlwZTogVGhlIGZvcm0gbWF5IG5vdCBiZSBzdXBwb3J0ZWQgb3IgeW91IG1heSBuZWVkIHRvIHVwZGF0ZS9yZS1kZXBsb3kgdGhlIGxpdmUgYXBwcyBhcHBsaWNhdGlvbi4gQWx0ZXJuYXRpdmVseSB1c2UgYSBjdXN0b20gZm9ybS4nKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIClcbiAgICApXG4gICAgLnN1YnNjcmliZShwcm9jZXNzU2NoZW1hID0+IHtcbiAgICAgICAgdGhpcy5jcmVhdG9yQ2xpY2tlZC5lbWl0KHByb2Nlc3NTY2hlbWEpO1xuICAgICAgICByZXR1cm4gcHJvY2Vzc1NjaGVtYTtcbiAgICAgIH1cbiAgICAgICwgZXJyb3IgPT4geyB0aGlzLmVycm9yTWVzc2FnZSA9ICdFcnJvciByZXRyaWV2aW5nIGNhc2UgYWN0aW9uczogJyArIGVycm9yLmVycm9yLmVycm9yTXNnOyB9KTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMucmVmcmVzaCgpO1xuICB9XG5cbn1cbiJdfQ==