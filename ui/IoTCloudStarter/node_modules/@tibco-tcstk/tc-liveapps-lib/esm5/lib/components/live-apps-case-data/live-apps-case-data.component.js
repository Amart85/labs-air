/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { map, take, takeUntil } from 'rxjs/operators';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
import { TcCaseDataService } from '../../services/tc-case-data.service';
import { CustomFormDefs } from '@tibco-tcstk/tc-forms-lib';
/**
 * Displays data for a case in a widget (high level)
 *
 * ![alt-text](../live-apps-case-data.png "Image")
 *
 * \@example <tcla-live-apps-case-data></tcla-live-apps-case-data>
 */
var LiveAppsCaseDataComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LiveAppsCaseDataComponent, _super);
    function LiveAppsCaseDataComponent(caseDataService) {
        var _this = _super.call(this) || this;
        _this.caseDataService = caseDataService;
        /**
         * not used
         */
        _this.customDataId = _this.customDataId ? _this.customDataId : 'default';
        _this.refresh = (/**
         * @return {?}
         */
        function () {
            _this.caseDataService.getCaseWithSchema(_this.caseRef, _this.sandboxId, _this.appId, _this.typeId, _this.uiAppId)
                .pipe(take(1), takeUntil(_this._destroyed$), map((/**
             * @param {?} result
             * @return {?}
             */
            function (result) {
                _this.casedata = result.caseInfo.untaggedCasedataObj;
                _this.metadata = result.caseInfo.metadata;
                _this.summary = result.caseInfo.summaryObj;
                _this.schema = result.caseSchema;
                _this.formRef = result.applicationName + '.' + result.applicationInternalName + '.casedata.' + _this.customDataId;
            }))).subscribe(null, (/**
             * @param {?} error
             * @return {?}
             */
            function (error) { _this.errorMessage = 'Error retrieving case data: ' + error.error.errorMsg; }));
        });
        return _this;
    }
    /**
     * @return {?}
     */
    LiveAppsCaseDataComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.refresh();
    };
    LiveAppsCaseDataComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tcla-live-apps-case-data',
                    template: "<div class=\"tcs-case-data-pane\" fxLayout=\"column\" fxFill style=\"overflow: hidden;\">\n  <tc-tibco-cloud-widget-header *ngIf=\"showHeader\" fxFlex=\"nogrow\" [headerText]=\"'Case Data'\" [icon]=\"'tcs-case-data-icon'\"></tc-tibco-cloud-widget-header>\n  <tcla-live-apps-case-data-display fxFlex=\"grow\" id=\"readOnlyDiv\" style=\"overflow:auto\" *ngIf=\"casedata && schema\" [schema]=\"schema\" [caseRef]=\"caseRef\" [appId]=\"appId\" [caseData]=\"casedata\" [layout]=\"layout\" [customFormDefs]=\"customFormDefs\" [formRef]=\"formRef\"></tcla-live-apps-case-data-display>\n</div>\n",
                    styles: [".tcs-case-data-pane{border-radius:3px;box-shadow:0 2px 4px 0 rgba(0,0,0,.33);background-color:#fff}.tcs-case-data-header{height:40px;border-radius:3px 3px 0 0;box-shadow:0 1px 2px 0 #dedede;padding-left:20px;padding-right:20px}.tcs-case-data-header-text{margin-left:10px;font-family:Source Sans Pro;font-size:18px;font-weight:600;font-style:normal;font-stretch:normal;line-height:1.5;letter-spacing:.3px}"]
                }] }
    ];
    /** @nocollapse */
    LiveAppsCaseDataComponent.ctorParameters = function () { return [
        { type: TcCaseDataService }
    ]; };
    LiveAppsCaseDataComponent.propDecorators = {
        caseRef: [{ type: Input }],
        appId: [{ type: Input }],
        typeId: [{ type: Input }],
        sandboxId: [{ type: Input }],
        uiAppId: [{ type: Input }],
        showHeader: [{ type: Input }],
        layout: [{ type: Input }],
        customFormDefs: [{ type: Input }],
        customDataId: [{ type: Input }]
    };
    return LiveAppsCaseDataComponent;
}(LiveAppsComponent));
export { LiveAppsCaseDataComponent };
if (false) {
    /**
     * The case reference
     * @type {?}
     */
    LiveAppsCaseDataComponent.prototype.caseRef;
    /**
     * The LA Application Id
     * @type {?}
     */
    LiveAppsCaseDataComponent.prototype.appId;
    /**
     * The LA Application Type Id (generally 1)
     * @type {?}
     */
    LiveAppsCaseDataComponent.prototype.typeId;
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsCaseDataComponent.prototype.sandboxId;
    /**
     * The Application ID of the UI (should ideally be unique as it is shared state key)
     * @type {?}
     */
    LiveAppsCaseDataComponent.prototype.uiAppId;
    /**
     * Whether to show the header bar in the widget - eg. favorites on home page (contains icon etc) - if off icons still appear without bar
     * @type {?}
     */
    LiveAppsCaseDataComponent.prototype.showHeader;
    /**
     * Layout object that can be passed to override default layout of the form renderer
     * @type {?}
     */
    LiveAppsCaseDataComponent.prototype.layout;
    /**
     * Custom Form configuration file
     * @type {?}
     */
    LiveAppsCaseDataComponent.prototype.customFormDefs;
    /**
     * not used
     * @type {?}
     */
    LiveAppsCaseDataComponent.prototype.customDataId;
    /** @type {?} */
    LiveAppsCaseDataComponent.prototype.casedata;
    /** @type {?} */
    LiveAppsCaseDataComponent.prototype.summary;
    /** @type {?} */
    LiveAppsCaseDataComponent.prototype.metadata;
    /** @type {?} */
    LiveAppsCaseDataComponent.prototype.errorMessage;
    /** @type {?} */
    LiveAppsCaseDataComponent.prototype.schema;
    /** @type {?} */
    LiveAppsCaseDataComponent.prototype.formRef;
    /** @type {?} */
    LiveAppsCaseDataComponent.prototype.refresh;
    /**
     * @type {?}
     * @private
     */
    LiveAppsCaseDataComponent.prototype.caseDataService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLWNhc2UtZGF0YS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGliY28tdGNzdGsvdGMtbGl2ZWFwcHMtbGliLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvbGl2ZS1hcHBzLWNhc2UtZGF0YS9saXZlLWFwcHMtY2FzZS1kYXRhLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUErQixNQUFNLGVBQWUsQ0FBQztBQUc3RSxPQUFPLEVBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUVwRCxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxzREFBc0QsQ0FBQztBQUN2RixPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxxQ0FBcUMsQ0FBQztBQUN0RSxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sMkJBQTJCLENBQUM7Ozs7Ozs7O0FBVXpEO0lBSytDLHFEQUFpQjtJQXFEOUQsbUNBQW9CLGVBQWtDO1FBQXRELFlBQ0UsaUJBQU8sU0FDUjtRQUZtQixxQkFBZSxHQUFmLGVBQWUsQ0FBbUI7Ozs7UUFUN0Msa0JBQVksR0FBRyxLQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxLQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7UUFhbkUsYUFBTzs7O1FBQUc7WUFDZixLQUFJLENBQUMsZUFBZSxDQUFDLGlCQUFpQixDQUFDLEtBQUksQ0FBQyxPQUFPLEVBQUUsS0FBSSxDQUFDLFNBQVMsRUFBRSxLQUFJLENBQUMsS0FBSyxFQUFFLEtBQUksQ0FBQyxNQUFNLEVBQUUsS0FBSSxDQUFDLE9BQU8sQ0FBQztpQkFDeEcsSUFBSSxDQUNILElBQUksQ0FBQyxDQUFDLENBQUMsRUFDUCxTQUFTLENBQUMsS0FBSSxDQUFDLFdBQVcsQ0FBQyxFQUMzQixHQUFHOzs7O1lBQUMsVUFBQSxNQUFNO2dCQUNSLEtBQUksQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxtQkFBbUIsQ0FBQztnQkFDcEQsS0FBSSxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQztnQkFDekMsS0FBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQztnQkFDMUMsS0FBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDO2dCQUNoQyxLQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQyxlQUFlLEdBQUcsR0FBRyxHQUFHLE1BQU0sQ0FBQyx1QkFBdUIsR0FBRyxZQUFZLEdBQUcsS0FBSSxDQUFDLFlBQVksQ0FBQztZQUNsSCxDQUFDLEVBQUMsQ0FDSCxDQUFDLFNBQVMsQ0FDWCxJQUFJOzs7O1lBQUUsVUFBQSxLQUFLLElBQU0sS0FBSSxDQUFDLFlBQVksR0FBRyw4QkFBOEIsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDO1FBQ25HLENBQUMsRUFBQTs7SUFoQkQsQ0FBQzs7OztJQWtCRCw0Q0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDakIsQ0FBQzs7Z0JBaEZGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsMEJBQTBCO29CQUNwQyx1bEJBQW1EOztpQkFFcEQ7Ozs7Z0JBZk8saUJBQWlCOzs7MEJBb0J0QixLQUFLO3dCQUtMLEtBQUs7eUJBS0wsS0FBSzs0QkFLTCxLQUFLOzBCQUtMLEtBQUs7NkJBS0wsS0FBSzt5QkFLTCxLQUFLO2lDQUtMLEtBQUs7K0JBS0wsS0FBSzs7SUFpQ1IsZ0NBQUM7Q0FBQSxBQWxGRCxDQUsrQyxpQkFBaUIsR0E2RS9EO1NBN0VZLHlCQUF5Qjs7Ozs7O0lBSXBDLDRDQUF5Qjs7Ozs7SUFLekIsMENBQXVCOzs7OztJQUt2QiwyQ0FBd0I7Ozs7O0lBS3hCLDhDQUEyQjs7Ozs7SUFLM0IsNENBQXlCOzs7OztJQUt6QiwrQ0FBNkI7Ozs7O0lBSzdCLDJDQUF1Qjs7Ozs7SUFLdkIsbURBQXdDOzs7OztJQUt4QyxpREFBMEU7O0lBRTFFLDZDQUFxQjs7SUFDckIsNENBQW9COztJQUNwQiw2Q0FBMEI7O0lBQzFCLGlEQUE0Qjs7SUFDNUIsMkNBQTBCOztJQUMxQiw0Q0FBdUI7O0lBTXZCLDRDQWNDOzs7OztJQWxCVyxvREFBMEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0LCBWaWV3Q2hpbGR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtMaXZlQXBwc1NlcnZpY2V9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2xpdmUtYXBwcy5zZXJ2aWNlJztcbmltcG9ydCB7Q2FzZUluZm8sIEpzb25TY2hlbWEsIE1ldGFkYXRhfSBmcm9tICcuLi8uLi9tb2RlbHMvbGl2ZWFwcHNkYXRhJztcbmltcG9ydCB7bWFwLCB0YWtlLCB0YWtlVW50aWx9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7U3ViamVjdH0gZnJvbSAncnhqcyc7XG5pbXBvcnQge0xpdmVBcHBzQ29tcG9uZW50fSBmcm9tICcuLi9saXZlLWFwcHMtY29tcG9uZW50L2xpdmUtYXBwcy1jb21wb25lbnQuY29tcG9uZW50JztcbmltcG9ydCB7VGNDYXNlRGF0YVNlcnZpY2V9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3RjLWNhc2UtZGF0YS5zZXJ2aWNlJztcbmltcG9ydCB7Q3VzdG9tRm9ybURlZnN9IGZyb20gJ0B0aWJjby10Y3N0ay90Yy1mb3Jtcy1saWInO1xuXG5cbi8qKlxuICogRGlzcGxheXMgZGF0YSBmb3IgYSBjYXNlIGluIGEgd2lkZ2V0IChoaWdoIGxldmVsKVxuICpcbiAqICFbYWx0LXRleHRdKC4uL2xpdmUtYXBwcy1jYXNlLWRhdGEucG5nIFwiSW1hZ2VcIilcbiAqXG4gKkBleGFtcGxlIDx0Y2xhLWxpdmUtYXBwcy1jYXNlLWRhdGE+PC90Y2xhLWxpdmUtYXBwcy1jYXNlLWRhdGE+XG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RjbGEtbGl2ZS1hcHBzLWNhc2UtZGF0YScsXG4gIHRlbXBsYXRlVXJsOiAnLi9saXZlLWFwcHMtY2FzZS1kYXRhLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbGl2ZS1hcHBzLWNhc2UtZGF0YS5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgTGl2ZUFwcHNDYXNlRGF0YUNvbXBvbmVudCBleHRlbmRzIExpdmVBcHBzQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgLyoqXG4gICAqIFRoZSBjYXNlIHJlZmVyZW5jZVxuICAgKi9cbiAgQElucHV0KCkgY2FzZVJlZjogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgTEEgQXBwbGljYXRpb24gSWRcbiAgICovXG4gIEBJbnB1dCgpIGFwcElkOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBMQSBBcHBsaWNhdGlvbiBUeXBlIElkIChnZW5lcmFsbHkgMSlcbiAgICovXG4gIEBJbnB1dCgpIHR5cGVJZDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBzYW5kYm94SWQgLSB0aGlzIGNvbWVzIGZyb20gY2xhaW1zIHJlc29sdmVyXG4gICAqL1xuICBASW5wdXQoKSBzYW5kYm94SWQ6IG51bWJlcjtcblxuICAvKipcbiAgICogVGhlIEFwcGxpY2F0aW9uIElEIG9mIHRoZSBVSSAoc2hvdWxkIGlkZWFsbHkgYmUgdW5pcXVlIGFzIGl0IGlzIHNoYXJlZCBzdGF0ZSBrZXkpXG4gICAqL1xuICBASW5wdXQoKSB1aUFwcElkOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgdG8gc2hvdyB0aGUgaGVhZGVyIGJhciBpbiB0aGUgd2lkZ2V0IC0gZWcuIGZhdm9yaXRlcyBvbiBob21lIHBhZ2UgKGNvbnRhaW5zIGljb24gZXRjKSAtIGlmIG9mZiBpY29ucyBzdGlsbCBhcHBlYXIgd2l0aG91dCBiYXJcbiAgICovXG4gIEBJbnB1dCgpIHNob3dIZWFkZXI6IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIExheW91dCBvYmplY3QgdGhhdCBjYW4gYmUgcGFzc2VkIHRvIG92ZXJyaWRlIGRlZmF1bHQgbGF5b3V0IG9mIHRoZSBmb3JtIHJlbmRlcmVyXG4gICAqL1xuICBASW5wdXQoKSBsYXlvdXQ6IGFueVtdO1xuXG4gIC8qKlxuICAgKiBDdXN0b20gRm9ybSBjb25maWd1cmF0aW9uIGZpbGVcbiAgICovXG4gIEBJbnB1dCgpIGN1c3RvbUZvcm1EZWZzOiBDdXN0b21Gb3JtRGVmcztcblxuICAvKipcbiAgICogbm90IHVzZWRcbiAgICovXG4gIEBJbnB1dCgpIGN1c3RvbURhdGFJZCA9IHRoaXMuY3VzdG9tRGF0YUlkID8gdGhpcy5jdXN0b21EYXRhSWQgOiAnZGVmYXVsdCc7XG5cbiAgcHVibGljIGNhc2VkYXRhOiBhbnk7XG4gIHB1YmxpYyBzdW1tYXJ5OiBhbnk7XG4gIHB1YmxpYyBtZXRhZGF0YTogTWV0YWRhdGE7XG4gIHB1YmxpYyBlcnJvck1lc3NhZ2U6IHN0cmluZztcbiAgcHVibGljIHNjaGVtYTogSnNvblNjaGVtYTtcbiAgcHVibGljIGZvcm1SZWY6IHN0cmluZztcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNhc2VEYXRhU2VydmljZTogVGNDYXNlRGF0YVNlcnZpY2UpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgcHVibGljIHJlZnJlc2ggPSAoKSA9PiB7XG4gICAgdGhpcy5jYXNlRGF0YVNlcnZpY2UuZ2V0Q2FzZVdpdGhTY2hlbWEodGhpcy5jYXNlUmVmLCB0aGlzLnNhbmRib3hJZCwgdGhpcy5hcHBJZCwgdGhpcy50eXBlSWQsIHRoaXMudWlBcHBJZClcbiAgICAgIC5waXBlKFxuICAgICAgICB0YWtlKDEpLFxuICAgICAgICB0YWtlVW50aWwodGhpcy5fZGVzdHJveWVkJCksXG4gICAgICAgIG1hcChyZXN1bHQgPT4ge1xuICAgICAgICAgIHRoaXMuY2FzZWRhdGEgPSByZXN1bHQuY2FzZUluZm8udW50YWdnZWRDYXNlZGF0YU9iajtcbiAgICAgICAgICB0aGlzLm1ldGFkYXRhID0gcmVzdWx0LmNhc2VJbmZvLm1ldGFkYXRhO1xuICAgICAgICAgIHRoaXMuc3VtbWFyeSA9IHJlc3VsdC5jYXNlSW5mby5zdW1tYXJ5T2JqO1xuICAgICAgICAgIHRoaXMuc2NoZW1hID0gcmVzdWx0LmNhc2VTY2hlbWE7XG4gICAgICAgICAgdGhpcy5mb3JtUmVmID0gcmVzdWx0LmFwcGxpY2F0aW9uTmFtZSArICcuJyArIHJlc3VsdC5hcHBsaWNhdGlvbkludGVybmFsTmFtZSArICcuY2FzZWRhdGEuJyArIHRoaXMuY3VzdG9tRGF0YUlkO1xuICAgICAgICB9KVxuICAgICAgKS5zdWJzY3JpYmUoXG4gICAgICBudWxsLCBlcnJvciA9PiB7IHRoaXMuZXJyb3JNZXNzYWdlID0gJ0Vycm9yIHJldHJpZXZpbmcgY2FzZSBkYXRhOiAnICsgZXJyb3IuZXJyb3IuZXJyb3JNc2c7IH0pO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5yZWZyZXNoKCk7XG4gIH1cblxufVxuIl19