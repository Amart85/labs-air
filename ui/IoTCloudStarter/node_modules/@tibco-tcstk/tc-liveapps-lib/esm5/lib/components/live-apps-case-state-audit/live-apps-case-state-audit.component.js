/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { map, take, takeUntil } from 'rxjs/operators';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
import { TcCaseStatesService } from '../../services/tc-case-states.service';
/**
 * Provides case audit summary for states
 *
 * ![alt-text](../live-apps-case-state-audit.png "Image")
 *
 * \@example <tcla-live-apps-case-state-audit></tcla-live-apps-case-state-audit>
 */
var LiveAppsCaseStateAuditComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LiveAppsCaseStateAuditComponent, _super);
    function LiveAppsCaseStateAuditComponent(caseStatesService) {
        var _this = _super.call(this) || this;
        _this.caseStatesService = caseStatesService;
        _this.refresh = (/**
         * @return {?}
         */
        function () {
            _this.caseStatesService.getCaseStateAuditWithTerminal(_this.caseRef, _this.sandboxId, _this.appId)
                .pipe(take(1), takeUntil(_this._destroyed$), map((/**
             * @param {?} auditeventlist
             * @return {?}
             */
            function (auditeventlist) {
                _this.auditEvents = auditeventlist.auditEvents;
                if (!_this.auditEvents || _this.auditEvents.length <= 0) {
                    console.error('Unable to create states audit view. Case Audit likely removed due to subscription retention period.');
                }
            }))).subscribe(null, (/**
             * @param {?} error
             * @return {?}
             */
            function (error) { _this.errorMessage = 'Error retrieving case audit: ' + error.error.errorMsg; }));
        });
        return _this;
    }
    /**
     * @return {?}
     */
    LiveAppsCaseStateAuditComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.refresh();
    };
    LiveAppsCaseStateAuditComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tcla-live-apps-case-state-audit',
                    template: "<div class=\"tcs-state-audit-pane\" fxLayout=\"column\" fxFill style=\"overflow: hidden;\">\n  <tc-tibco-cloud-widget-header fxFlex=\"nogrow\" [headerText]=\"'States'\" [icon]=\"'tcs-case-state-audit-icon'\"></tc-tibco-cloud-widget-header>\n  <div *ngIf=\"auditEvents && auditEvents.length > 0\" class=\"tcs-state-audit-container\">\n    <div class=\"tcs-state-audit-details\" fxLayout=\"column\" fxLayoutAlign=\"start start\">\n      <div *ngFor=\"let state of auditEvents; first as isFirst; last as isLast\"\n           [ngClass]=\"isFirst ? 'tcs-mini-state-item-first' : (isLast ? 'tcs-mini-state-item-last' : 'tcs-mini-state-item-middle')\">\n        <div fxLayout=\"row\">\n          <mat-icon class=\"tcs-mini-state-icon\"\n                    [svgIcon]=\"isLast ? (state.isTerminal ? 'tcs-mini-state-terminal-completed' : 'tcs-mini-state-current') : 'tcs-mini-state-completed'\"></mat-icon>\n          <li class=\"tcs-mini-state-details\" fxLayout=\"column\" fxLayoutAlign=\"start start\"\n              ng-class=\"{'underline':smallContainer}\">\n            <div class=\"tcs-mini-state-primary-label\"><span>{{state.caseState.value}}</span></div>\n            <div class=\"tcs-mini-state-secondary-label\">\n              <span *ngIf=\"state.principalName\">By {{state.principalName.value}}</span>\n              <span class=\"tcs-mini-state-spanPadding\"> on {{state.creationTime.value | date: \"medium\"}}</span>\n            </div>\n          </li>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"!auditEvents || auditEvents.length <= 0\">\n    <span class=\"tc-no-audit-data\">Audit data not available</span>\n  </div>\n</div>\n",
                    styles: [".tcs-state-audit-pane{border-radius:3px;box-shadow:0 2px 4px 0 rgba(0,0,0,.33);background-color:#fff}.tcs-mini-state-item-middle{padding-top:30px;border-left:3px solid #062e79;margin-top:-10px}.tcs-mini-state-item-first{border-left:3px solid #062e79}.tcs-mini-state-item-last{margin-top:-10px;padding-top:30px;border-left:3px solid #062e79}.tcs-state-audit-container{height:100%;overflow-x:auto;padding:11px}.tc-no-audit-data{padding:20px;min-width:150px;font-family:Source Sans Pro;font-size:18px;font-weight:600;font-style:normal;font-stretch:normal;line-height:1.5;letter-spacing:.3px;color:#000}.tcs-mini-state-item-last:after{content:'';display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-align:center;align-items:center;position:relative;left:-46px;top:0;background-color:red;width:10px;height:0;margin-top:-12px}.tcs-mini-state-icon{position:relative;left:-13px}.tcs-state-audit-details{padding:10px 20px}.tcs-mini-state-details{margin-left:10px}.tcs-mini-state-primary-label{font-family:Source Sans Pro;font-size:14px;font-weight:600;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:.2px;color:#212121}.tcs-mini-state-secondary-label{font-family:Source Sans Pro;font-size:14px;font-weight:400;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:.2px;color:#b6b6b6}"]
                }] }
    ];
    /** @nocollapse */
    LiveAppsCaseStateAuditComponent.ctorParameters = function () { return [
        { type: TcCaseStatesService }
    ]; };
    LiveAppsCaseStateAuditComponent.propDecorators = {
        caseRef: [{ type: Input }],
        sandboxId: [{ type: Input }],
        appId: [{ type: Input }]
    };
    return LiveAppsCaseStateAuditComponent;
}(LiveAppsComponent));
export { LiveAppsCaseStateAuditComponent };
if (false) {
    /**
     * The case reference
     * @type {?}
     */
    LiveAppsCaseStateAuditComponent.prototype.caseRef;
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsCaseStateAuditComponent.prototype.sandboxId;
    /**
     * The LA Application Id
     * @type {?}
     */
    LiveAppsCaseStateAuditComponent.prototype.appId;
    /** @type {?} */
    LiveAppsCaseStateAuditComponent.prototype.auditEvents;
    /** @type {?} */
    LiveAppsCaseStateAuditComponent.prototype.errorMessage;
    /** @type {?} */
    LiveAppsCaseStateAuditComponent.prototype.refresh;
    /**
     * @type {?}
     * @private
     */
    LiveAppsCaseStateAuditComponent.prototype.caseStatesService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLWNhc2Utc3RhdGUtYXVkaXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpYmNvLXRjc3RrL3RjLWxpdmVhcHBzLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2xpdmUtYXBwcy1jYXNlLXN0YXRlLWF1ZGl0L2xpdmUtYXBwcy1jYXNlLXN0YXRlLWF1ZGl0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFvQixNQUFNLGVBQWUsQ0FBQztBQUVsRSxPQUFPLEVBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUVwRCxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxzREFBc0QsQ0FBQztBQUN2RixPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSx1Q0FBdUMsQ0FBQzs7Ozs7Ozs7QUFXMUU7SUFLcUQsMkRBQWlCO0lBcUJwRSx5Q0FBb0IsaUJBQXNDO1FBQTFELFlBQ0UsaUJBQU8sU0FDUjtRQUZtQix1QkFBaUIsR0FBakIsaUJBQWlCLENBQXFCO1FBSW5ELGFBQU87OztRQUFHO1lBQ2YsS0FBSSxDQUFDLGlCQUFpQixDQUFDLDZCQUE2QixDQUFDLEtBQUksQ0FBQyxPQUFPLEVBQUUsS0FBSSxDQUFDLFNBQVMsRUFBRSxLQUFJLENBQUMsS0FBSyxDQUFDO2lCQUMzRixJQUFJLENBQ0gsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUNQLFNBQVMsQ0FBQyxLQUFJLENBQUMsV0FBVyxDQUFDLEVBQzNCLEdBQUc7Ozs7WUFBQyxVQUFBLGNBQWM7Z0JBQ2hCLEtBQUksQ0FBQyxXQUFXLEdBQUcsY0FBYyxDQUFDLFdBQVcsQ0FBQztnQkFDOUMsSUFBSSxDQUFDLEtBQUksQ0FBQyxXQUFXLElBQUksS0FBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO29CQUNyRCxPQUFPLENBQUMsS0FBSyxDQUFDLHFHQUFxRyxDQUFDLENBQUM7aUJBQ3RIO1lBQ0gsQ0FBQyxFQUFDLENBQ0gsQ0FBQyxTQUFTLENBQ1gsSUFBSTs7OztZQUFFLFVBQUEsS0FBSyxJQUFNLEtBQUksQ0FBQyxZQUFZLEdBQUcsK0JBQStCLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQztRQUNwRyxDQUFDLEVBQUE7O0lBZkQsQ0FBQzs7OztJQWlCRCxrREFBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDakIsQ0FBQzs7Z0JBL0NGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsaUNBQWlDO29CQUMzQyx5b0RBQTBEOztpQkFFM0Q7Ozs7Z0JBZk8sbUJBQW1COzs7MEJBcUJ4QixLQUFLOzRCQUtMLEtBQUs7d0JBS0wsS0FBSzs7SUE0QlIsc0NBQUM7Q0FBQSxBQWhERCxDQUtxRCxpQkFBaUIsR0EyQ3JFO1NBM0NZLCtCQUErQjs7Ozs7O0lBSzFDLGtEQUF5Qjs7Ozs7SUFLekIsb0RBQTJCOzs7OztJQUszQixnREFBdUI7O0lBRXZCLHNEQUFzQzs7SUFDdEMsdURBQTRCOztJQU81QixrREFhQzs7Ozs7SUFqQlcsNERBQThDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1N1YmplY3R9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHttYXAsIHRha2UsIHRha2VVbnRpbH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHtBdWRpdEV2ZW50fSBmcm9tICcuLi8uLi9tb2RlbHMvdGMtY2FzZS1hdWRpdCc7XG5pbXBvcnQge0xpdmVBcHBzQ29tcG9uZW50fSBmcm9tICcuLi9saXZlLWFwcHMtY29tcG9uZW50L2xpdmUtYXBwcy1jb21wb25lbnQuY29tcG9uZW50JztcbmltcG9ydCB7VGNDYXNlU3RhdGVzU2VydmljZX0gZnJvbSAnLi4vLi4vc2VydmljZXMvdGMtY2FzZS1zdGF0ZXMuc2VydmljZSc7XG5pbXBvcnQge1N0YXRlQXVkaXRFdmVudH0gZnJvbSAnLi4vLi4vbW9kZWxzL3RjLWNhc2Utc3RhdGVzJztcblxuXG4vKipcbiAqIFByb3ZpZGVzIGNhc2UgYXVkaXQgc3VtbWFyeSBmb3Igc3RhdGVzXG4gKlxuICogIVthbHQtdGV4dF0oLi4vbGl2ZS1hcHBzLWNhc2Utc3RhdGUtYXVkaXQucG5nIFwiSW1hZ2VcIilcbiAqXG4gKkBleGFtcGxlIDx0Y2xhLWxpdmUtYXBwcy1jYXNlLXN0YXRlLWF1ZGl0PjwvdGNsYS1saXZlLWFwcHMtY2FzZS1zdGF0ZS1hdWRpdD5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGNsYS1saXZlLWFwcHMtY2FzZS1zdGF0ZS1hdWRpdCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9saXZlLWFwcHMtY2FzZS1zdGF0ZS1hdWRpdC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2xpdmUtYXBwcy1jYXNlLXN0YXRlLWF1ZGl0LmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBMaXZlQXBwc0Nhc2VTdGF0ZUF1ZGl0Q29tcG9uZW50IGV4dGVuZHMgTGl2ZUFwcHNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIC8qKlxuICAgKiBUaGUgY2FzZSByZWZlcmVuY2VcbiAgICovXG4gIEBJbnB1dCgpIGNhc2VSZWY6IHN0cmluZztcblxuICAvKipcbiAgICogc2FuZGJveElkIC0gdGhpcyBjb21lcyBmcm9tIGNsYWltcyByZXNvbHZlclxuICAgKi9cbiAgQElucHV0KCkgc2FuZGJveElkOiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFRoZSBMQSBBcHBsaWNhdGlvbiBJZFxuICAgKi9cbiAgQElucHV0KCkgYXBwSWQ6IHN0cmluZztcblxuICBwdWJsaWMgYXVkaXRFdmVudHM6IFN0YXRlQXVkaXRFdmVudFtdO1xuICBwdWJsaWMgZXJyb3JNZXNzYWdlOiBzdHJpbmc7XG5cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNhc2VTdGF0ZXNTZXJ2aWNlOiBUY0Nhc2VTdGF0ZXNTZXJ2aWNlKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIHB1YmxpYyByZWZyZXNoID0gKCkgPT4ge1xuICAgIHRoaXMuY2FzZVN0YXRlc1NlcnZpY2UuZ2V0Q2FzZVN0YXRlQXVkaXRXaXRoVGVybWluYWwodGhpcy5jYXNlUmVmLCB0aGlzLnNhbmRib3hJZCwgdGhpcy5hcHBJZClcbiAgICAgIC5waXBlKFxuICAgICAgICB0YWtlKDEpLFxuICAgICAgICB0YWtlVW50aWwodGhpcy5fZGVzdHJveWVkJCksXG4gICAgICAgIG1hcChhdWRpdGV2ZW50bGlzdCA9PiB7XG4gICAgICAgICAgdGhpcy5hdWRpdEV2ZW50cyA9IGF1ZGl0ZXZlbnRsaXN0LmF1ZGl0RXZlbnRzO1xuICAgICAgICAgIGlmICghdGhpcy5hdWRpdEV2ZW50cyB8fCB0aGlzLmF1ZGl0RXZlbnRzLmxlbmd0aCA8PSAwKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdVbmFibGUgdG8gY3JlYXRlIHN0YXRlcyBhdWRpdCB2aWV3LiBDYXNlIEF1ZGl0IGxpa2VseSByZW1vdmVkIGR1ZSB0byBzdWJzY3JpcHRpb24gcmV0ZW50aW9uIHBlcmlvZC4nKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICApLnN1YnNjcmliZShcbiAgICAgIG51bGwsIGVycm9yID0+IHsgdGhpcy5lcnJvck1lc3NhZ2UgPSAnRXJyb3IgcmV0cmlldmluZyBjYXNlIGF1ZGl0OiAnICsgZXJyb3IuZXJyb3IuZXJyb3JNc2c7IH0pO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5yZWZyZXNoKCk7XG4gIH1cbn1cbiJdfQ==