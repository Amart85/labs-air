/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { MatSnackBar, MatDialog } from '@angular/material';
import { TcGeneralLandingPageConfigService, TibcoCloudNewElementComponent, TibcoCloudUploadDialogComponent } from '@tibco-tcstk/tc-core-lib';
import { TcDocumentService } from '../../services/tc-document.service';
import { LandingPageConfig, LandingPageItemConfig } from '../../models/tc-live-apps-landing-page-config';
/**
 * Configuration page home
 *
 * \@example <tcla-live-apps-setting-landing></tcla-live-apps-setting-landing>
 */
var LiveAppsSettingsLandingComponent = /** @class */ (function () {
    function LiveAppsSettingsLandingComponent(route, generalLandingPageConfigService, snackBar, dialog, documentsService) {
        var _this = this;
        this.route = route;
        this.generalLandingPageConfigService = generalLandingPageConfigService;
        this.snackBar = snackBar;
        this.dialog = dialog;
        this.documentsService = documentsService;
        /**
         * New Configuration
         */
        this.runNewConfiguration = (/**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var dialogRef = _this.dialog.open(TibcoCloudNewElementComponent, {
                width: '50%',
                height: '30%',
                maxWidth: '100vw',
                maxHeight: '100vh',
                panelClass: 'tcs-style-dialog',
                data: { resourceType: 'Landing Page' }
            });
            dialogRef.afterClosed().subscribe((/**
             * @param {?} result
             * @return {?}
             */
            function (result) {
                if (result) {
                    /** @type {?} */
                    var newElement = new LandingPageConfig().deserialize({
                        key: result.id,
                        description: result.name,
                        highlights: [new LandingPageItemConfig(), new LandingPageItemConfig(), new LandingPageItemConfig()]
                    });
                    _this.landingPages.push(newElement);
                    _this.selectedWelcomePage = newElement;
                }
            }));
        });
        /**
         * Helper to Compare Objects
         */
        this.compareObjects = (/**
         * @param {?} o1
         * @param {?} o2
         * @return {?}
         */
        function (o1, o2) {
            return o1 === o2;
        });
    }
    /**
    * @ignore
    */
    /**
     * @ignore
     * @return {?}
     */
    LiveAppsSettingsLandingComponent.prototype.ngOnInit = /**
     * @ignore
     * @return {?}
     */
    function () {
        this.landingPagesConfig = this.route.snapshot.data.landingPagesConfigHolder;
        this.landingPages = this.landingPagesConfig.landingPage;
        this.allRoles = this.route.snapshot.data.allRolesHolder.roles.filter((/**
         * @param {?} element
         * @return {?}
         */
        function (element) { return !element.configuration; }));
        this.sandboxId = this.route.snapshot.data.claims.primaryProductionSandbox.id;
        this.uiAppId = this.route.snapshot.data.landingPagesConfigHolder.uiAppId;
        // If there is only one landing page selects it automatically
        if (this.landingPages.length == 1) {
            this.selectedWelcomePage = this.landingPages[0];
        }
    };
    /**
     * Save Configuration
     */
    /**
     * Save Configuration
     * @return {?}
     */
    LiveAppsSettingsLandingComponent.prototype.runSaveFunction = /**
     * Save Configuration
     * @return {?}
     */
    function () {
        var _this = this;
        this.generalLandingPageConfigService.updateGeneralLandingPageConfig(this.sandboxId, this.uiAppId, this.landingPagesConfig, this.landingPagesConfig.id).subscribe((/**
         * @param {?} result
         * @return {?}
         */
        function (result) {
            _this.snackBar.open('Landing Pages configuration saved', 'OK', {
                duration: 3000
            });
        }), (/**
         * @param {?} err
         * @return {?}
         */
        function (err) {
            _this.snackBar.open('Error saving Landing Pages configuration', 'OK', {
                duration: 3000
            });
        }));
    };
    /**
     * Delete Configuration
     */
    /**
     * Delete Configuration
     * @return {?}
     */
    LiveAppsSettingsLandingComponent.prototype.runDeleteConfiguration = /**
     * Delete Configuration
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var pages = this.landingPages;
        pages.forEach((/**
         * @param {?} element
         * @return {?}
         */
        function (element) {
            if (element == _this.selectedWelcomePage) {
                /** @type {?} */
                var index = pages.indexOf(element, 0);
                pages.splice(index, 1);
                _this.selectedWelcomePage = undefined;
            }
        }));
    };
    /**
     * @param {?} imageFormat
     * @param {?} location
     * @param {?=} index
     * @return {?}
     */
    LiveAppsSettingsLandingComponent.prototype.openDialog = /**
     * @param {?} imageFormat
     * @param {?} location
     * @param {?=} index
     * @return {?}
     */
    function (imageFormat, location, index) {
        var _this = this;
        /** @type {?} */
        var dialogRef = this.dialog.open(TibcoCloudUploadDialogComponent, {
            width: '500px',
            data: {
                title: 'Upload New ' + location + ' image',
                allowedExtensions: imageFormat,
                location: location,
                index: index
            }
        });
        dialogRef.componentInstance.fileevent.subscribe((/**
         * @param {?} $e
         * @return {?}
         */
        function ($e) {
            _this.uploadFile($e.file, location, index);
        }));
        dialogRef.afterClosed().subscribe((/**
         * @param {?} result
         * @return {?}
         */
        function (result) {
        }));
    };
    /**
     * @param {?} file
     * @param {?} location
     * @param {?=} index
     * @return {?}
     */
    LiveAppsSettingsLandingComponent.prototype.uploadFile = /**
     * @param {?} file
     * @param {?} location
     * @param {?=} index
     * @return {?}
     */
    function (file, location, index) {
        if (file) {
            switch (location) {
                case 'background':
                    this.selectedWelcomePage.backgroundURL = file.name;
                    break;
                case 'hightlight':
                    this.selectedWelcomePage.highlights[index].iconURL = file.name;
                    break;
                default:
                    break;
            }
            this.documentsService.uploadDocument('orgFolders', this.uiAppId, this.sandboxId, file, location + '%2F' + file.name, '')
                .subscribe((/**
             * @param {?} val
             * @return {?}
             */
            function (val) {
                console.log("*********** DONE");
            }), (/**
             * @param {?} error
             * @return {?}
             */
            function (error) { console.log('error', error.errorMsg); })); //); this.errorMessage = 'Error uploading state icon: ' +
        }
    };
    LiveAppsSettingsLandingComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tcla-live-apps-settings-landing',
                    template: "<div fxLayout=\"column\" fxFill>\n    <tc-tibco-cloud-widget-header style=\"height: 40px;\" [icon]=\"'tcs-capabilities'\"\n        [headerText]=\"'Landing Page Configuration'\"></tc-tibco-cloud-widget-header>\n    <div fxFlex style=\"padding: 20px; overflow: hidden\" fxLayout=\"column\">\n        <div style=\"overflow: auto;\">\n            <div fxLayout=\"column\" fxFlex>\n                <p>You can manage the configuration for the landing pages here.</p>\n                <br>\n                <mat-form-field>\n                    <mat-label>Welcome Page Configuration</mat-label>\n                    <mat-select [(value)]=\"selectedWelcomePage\">\n                        <mat-option *ngFor=\"let landingPage of landingPages\" [value]=\"landingPage\">\n                            {{landingPage.key}}-{{landingPage.description}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <div *ngIf=\"selectedWelcomePage\">\n                    <div fxLayoutGap=\"10px\">\n                        <mat-form-field fxFlex=\"50\">\n                            <input matInput placeholder=\"Title\" [(ngModel)]=\"selectedWelcomePage.title\">\n                        </mat-form-field>\n                        <mat-form-field fxFlex=\"50\">\n                            <input matInput placeholder=\"Subtitle\" [(ngModel)]=\"selectedWelcomePage.subtitle\">\n                        </mat-form-field>\n                    </div>\n                    <div fxLayoutGap=\"10px\">\n                        <div fxFlex=\"50\">\n                            <mat-form-field fxFlex>\n                                <input matInput placeholder=\"Background URL\" [(ngModel)]=\"selectedWelcomePage.backgroundURL\">\n                            </mat-form-field>\n                            <mat-icon (click)=\"openDialog('.jpeg,.png', 'background')\"\n                                class=\"tcs-icon tcs-icon-active tcs-document-edit-buttons tcs-document-upload-icon\"\n                                matTooltip=\"Upload Document\"\n                                matTooltipPosition=\"left\" matTooltipShowDelay=\"1000\" svgIcon=\"tcs-document-upload\"></mat-icon>\n                        </div>\n                        <mat-form-field fxFlex=\"50\">\n                            <input matInput placeholder=\"Margin above highlight panel (px)\" type=\"number\" min=\"0\" [(ngModel)]=\"selectedWelcomePage.topMargin\">\n                        </mat-form-field>\n                    </div>\n                    <div fxLayoutGap=\"10px\">\n                        <mat-form-field fxFlex=\"50\">\n                            <mat-label>Used in roles</mat-label>\n                            <mat-select [(ngModel)]=\"selectedWelcomePage.roles\" [compareWith]=\"compareObjects\" multiple>\n                                <mat-option *ngFor=\"let role of allRoles\" [value]=\"role.id\">{{role.display}}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field fxFlex=\"50\">\n                            <input matInput placeholder=\"Home route\" [(ngModel)]=\"selectedWelcomePage.homeRoute\">\n                        </mat-form-field>\n                    </div>\n                    <div>Hightlights</div>\n                    <div *ngFor=\"let highlight of selectedWelcomePage.highlights; let i = index\" fxLayoutGap=\"10px\">\n                        <div fxFlex=\"15\">\n                            <mat-form-field fxFlex=\"80\">\n                                <input matInput placeholder=\"Icon URL\" [(ngModel)]=\"highlight.iconURL\">\n                            </mat-form-field>\n                            <mat-icon fxFlex=\"20\" (click)=\"openDialog('.svg', 'hightlight', i)\"\n                                class=\"tcs-icon tcs-icon-active tcs-document-edit-buttons tcs-document-upload-icon\" matTooltip=\"Upload Document\"\n                                matTooltipPosition=\"left\" matTooltipShowDelay=\"1000\" svgIcon=\"tcs-document-upload\"></mat-icon>\n                        </div>\n                        <mat-form-field fxFlex=\"30\">\n                            <input matInput placeholder=\"Title\" [(ngModel)]=\"highlight.title\">\n                        </mat-form-field>\n                        <mat-form-field fxFlex=\"55\">\n                            <textarea matInput placeholder=\"Subtitle\" [(ngModel)]=\"highlight.content\" cdkAutosizeMinRows=\"3\" cdkAutosizeMaxRows=\"3\"></textarea>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div fxFlex class=\"tcs-filler-panel\"></div>\n        <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"end end\" style=\"min-height: 50px\">\n            <button mat-raised-button color=\"secundary\" (click)=\"runDeleteConfiguration()\">Delete</button>\n            <button mat-raised-button color=\"secundary\" (click)=\"runNewConfiguration()\">New</button>\n            <button mat-raised-button color=\"primary\" (click)=\"runSaveFunction()\">Save</button>\n        </div>\n    </div>\n</div>",
                    styles: [".tcs-document-upload-icon{margin-top:10px}"]
                }] }
    ];
    /** @nocollapse */
    LiveAppsSettingsLandingComponent.ctorParameters = function () { return [
        { type: ActivatedRoute },
        { type: TcGeneralLandingPageConfigService },
        { type: MatSnackBar },
        { type: MatDialog },
        { type: TcDocumentService }
    ]; };
    return LiveAppsSettingsLandingComponent;
}());
export { LiveAppsSettingsLandingComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    LiveAppsSettingsLandingComponent.prototype.landingPagesConfig;
    /**
     * @type {?}
     * @private
     */
    LiveAppsSettingsLandingComponent.prototype.sandboxId;
    /**
     * @type {?}
     * @private
     */
    LiveAppsSettingsLandingComponent.prototype.uiAppId;
    /** @type {?} */
    LiveAppsSettingsLandingComponent.prototype.landingPages;
    /** @type {?} */
    LiveAppsSettingsLandingComponent.prototype.selectedWelcomePage;
    /** @type {?} */
    LiveAppsSettingsLandingComponent.prototype.allRoles;
    /** @type {?} */
    LiveAppsSettingsLandingComponent.prototype.selectedRole;
    /**
     * New Configuration
     * @type {?}
     */
    LiveAppsSettingsLandingComponent.prototype.runNewConfiguration;
    /**
     * Helper to Compare Objects
     * @type {?}
     */
    LiveAppsSettingsLandingComponent.prototype.compareObjects;
    /**
     * @type {?}
     * @private
     */
    LiveAppsSettingsLandingComponent.prototype.route;
    /**
     * @type {?}
     * @private
     */
    LiveAppsSettingsLandingComponent.prototype.generalLandingPageConfigService;
    /**
     * @type {?}
     * @private
     */
    LiveAppsSettingsLandingComponent.prototype.snackBar;
    /**
     * @type {?}
     * @private
     */
    LiveAppsSettingsLandingComponent.prototype.dialog;
    /**
     * @type {?}
     * @private
     */
    LiveAppsSettingsLandingComponent.prototype.documentsService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLXNldHRpbmdzLWxhbmRpbmcuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpYmNvLXRjc3RrL3RjLWxpdmVhcHBzLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2xpdmUtYXBwcy1zZXR0aW5ncy1sYW5kaW5nL2xpdmUtYXBwcy1zZXR0aW5ncy1sYW5kaW5nLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDakQsT0FBTyxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUMzRCxPQUFPLEVBQWlCLGlDQUFpQyxFQUFFLDZCQUE2QixFQUFFLCtCQUErQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDNUosT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDdkUsT0FBTyxFQUE0QixpQkFBaUIsRUFBRSxxQkFBcUIsRUFBRSxNQUFNLCtDQUErQyxDQUFDOzs7Ozs7QUFPbkk7SUFnQkksMENBQ1ksS0FBcUIsRUFDckIsK0JBQWtFLEVBQ2xFLFFBQXFCLEVBQ3JCLE1BQWlCLEVBQ2pCLGdCQUFtQztRQUwvQyxpQkFNSztRQUxPLFVBQUssR0FBTCxLQUFLLENBQWdCO1FBQ3JCLG9DQUErQixHQUEvQiwrQkFBK0IsQ0FBbUM7UUFDbEUsYUFBUSxHQUFSLFFBQVEsQ0FBYTtRQUNyQixXQUFNLEdBQU4sTUFBTSxDQUFXO1FBQ2pCLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBbUI7Ozs7UUF1RC9DLHdCQUFtQjs7O1FBQUc7O2dCQUVaLFNBQVMsR0FBRyxLQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyw2QkFBNkIsRUFBRTtnQkFDOUQsS0FBSyxFQUFFLEtBQUs7Z0JBQ1osTUFBTSxFQUFFLEtB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QywrREF1QkM7Ozs7O0lBS0QsMERBRUM7Ozs7O0lBekZHLGlEQUE2Qjs7Ozs7SUFDN0IsMkVBQTBFOzs7OztJQUMxRSxvREFBNkI7Ozs7O0lBQzdCLGtEQUF5Qjs7Ozs7SUFDekIsNERBQTJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IE1hdFNuYWNrQmFyLCBNYXREaWFsb2cgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbCc7XG5pbXBvcnQgeyBSb2xlQXR0cmlidXRlLCBUY0dlbmVyYWxMYW5kaW5nUGFnZUNvbmZpZ1NlcnZpY2UsIFRpYmNvQ2xvdWROZXdFbGVtZW50Q29tcG9uZW50LCBUaWJjb0Nsb3VkVXBsb2FkRGlhbG9nQ29tcG9uZW50IH0gZnJvbSAnQHRpYmNvLXRjc3RrL3RjLWNvcmUtbGliJztcbmltcG9ydCB7IFRjRG9jdW1lbnRTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvdGMtZG9jdW1lbnQuc2VydmljZSc7XG5pbXBvcnQgeyBHZW5lcmFsTGFuZGluZ1BhZ2VDb25maWcsIExhbmRpbmdQYWdlQ29uZmlnLCBMYW5kaW5nUGFnZUl0ZW1Db25maWcgfSBmcm9tICcuLi8uLi9tb2RlbHMvdGMtbGl2ZS1hcHBzLWxhbmRpbmctcGFnZS1jb25maWcnO1xuXG4vKipcbiAqIENvbmZpZ3VyYXRpb24gcGFnZSBob21lXG4gKlxuICpAZXhhbXBsZSA8dGNsYS1saXZlLWFwcHMtc2V0dGluZy1sYW5kaW5nPjwvdGNsYS1saXZlLWFwcHMtc2V0dGluZy1sYW5kaW5nPlxuICovXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3RjbGEtbGl2ZS1hcHBzLXNldHRpbmdzLWxhbmRpbmcnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9saXZlLWFwcHMtc2V0dGluZ3MtbGFuZGluZy5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vbGl2ZS1hcHBzLXNldHRpbmdzLWxhbmRpbmcuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIExpdmVBcHBzU2V0dGluZ3NMYW5kaW5nQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAgIHByaXZhdGUgbGFuZGluZ1BhZ2VzQ29uZmlnOiBHZW5lcmFsTGFuZGluZ1BhZ2VDb25maWc7XG4gICAgcHJpdmF0ZSBzYW5kYm94SWQ6IG51bWJlcjtcbiAgICBwcml2YXRlIHVpQXBwSWQ6IHN0cmluZztcblxuICAgIHB1YmxpYyBsYW5kaW5nUGFnZXM6IExhbmRpbmdQYWdlQ29uZmlnW107XG4gICAgcHVibGljIHNlbGVjdGVkV2VsY29tZVBhZ2U6IExhbmRpbmdQYWdlQ29uZmlnO1xuICAgIHB1YmxpYyBhbGxSb2xlczogUm9sZUF0dHJpYnV0ZVtdO1xuICAgIHB1YmxpYyBzZWxlY3RlZFJvbGU6IFJvbGVBdHRyaWJ1dGVbXTtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcml2YXRlIHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZSxcbiAgICAgICAgcHJpdmF0ZSBnZW5lcmFsTGFuZGluZ1BhZ2VDb25maWdTZXJ2aWNlOiBUY0dlbmVyYWxMYW5kaW5nUGFnZUNvbmZpZ1NlcnZpY2UsXG4gICAgICAgIHByaXZhdGUgc25hY2tCYXI6IE1hdFNuYWNrQmFyLFxuICAgICAgICBwcml2YXRlIGRpYWxvZzogTWF0RGlhbG9nLFxuICAgICAgICBwcml2YXRlIGRvY3VtZW50c1NlcnZpY2U6IFRjRG9jdW1lbnRTZXJ2aWNlXG4gICAgKSB7IH1cblxuICAgIC8qKlxuICAgICogQGlnbm9yZVxuICAgICovXG4gICAgbmdPbkluaXQoKSB7ICAgICAgXG4gICAgICAgIHRoaXMubGFuZGluZ1BhZ2VzQ29uZmlnID0gdGhpcy5yb3V0ZS5zbmFwc2hvdC5kYXRhLmxhbmRpbmdQYWdlc0NvbmZpZ0hvbGRlcjtcbiAgICAgICAgdGhpcy5sYW5kaW5nUGFnZXMgPSB0aGlzLmxhbmRpbmdQYWdlc0NvbmZpZy5sYW5kaW5nUGFnZTtcbiAgICAgICAgdGhpcy5hbGxSb2xlcyA9IHRoaXMucm91dGUuc25hcHNob3QuZGF0YS5hbGxSb2xlc0hvbGRlci5yb2xlcy5maWx0ZXIoZWxlbWVudCA9PiAhZWxlbWVudC5jb25maWd1cmF0aW9uKTtcblxuICAgICAgICB0aGlzLnNhbmRib3hJZCA9IHRoaXMucm91dGUuc25hcHNob3QuZGF0YS5jbGFpbXMucHJpbWFyeVByb2R1Y3Rpb25TYW5kYm94LmlkO1xuICAgICAgICB0aGlzLnVpQXBwSWQgPSB0aGlzLnJvdXRlLnNuYXBzaG90LmRhdGEubGFuZGluZ1BhZ2VzQ29uZmlnSG9sZGVyLnVpQXBwSWQ7XG5cbiAgICAgICAgLy8gSWYgdGhlcmUgaXMgb25seSBvbmUgbGFuZGluZyBwYWdlIHNlbGVjdHMgaXQgYXV0b21hdGljYWxseVxuICAgICAgICBpZiAodGhpcy5sYW5kaW5nUGFnZXMubGVuZ3RoID09IDEpIHtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRXZWxjb21lUGFnZSA9IHRoaXMubGFuZGluZ1BhZ2VzWzBdO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2F2ZSBDb25maWd1cmF0aW9uXG4gICAgICovXG4gICAgcnVuU2F2ZUZ1bmN0aW9uKCl7XG4gICAgICAgIHRoaXMuZ2VuZXJhbExhbmRpbmdQYWdlQ29uZmlnU2VydmljZS51cGRhdGVHZW5lcmFsTGFuZGluZ1BhZ2VDb25maWcodGhpcy5zYW5kYm94SWQsIHRoaXMudWlBcHBJZCwgdGhpcy5sYW5kaW5nUGFnZXNDb25maWcsIHRoaXMubGFuZGluZ1BhZ2VzQ29uZmlnLmlkKS5zdWJzY3JpYmUoXG4gICAgICAgICAgICByZXN1bHQgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuc25hY2tCYXIub3BlbignTGFuZGluZyBQYWdlcyBjb25maWd1cmF0aW9uIHNhdmVkJywgJ09LJywge1xuICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMzAwMFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVyciA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5zbmFja0Jhci5vcGVuKCdFcnJvciBzYXZpbmcgTGFuZGluZyBQYWdlcyBjb25maWd1cmF0aW9uJywgJ09LJywge1xuICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMzAwMFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIERlbGV0ZSBDb25maWd1cmF0aW9uXG4gICAgICovXG4gICAgcnVuRGVsZXRlQ29uZmlndXJhdGlvbigpe1xuICAgICAgICBjb25zdCBwYWdlcyA9IHRoaXMubGFuZGluZ1BhZ2VzO1xuICAgICAgICBwYWdlcy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xuICAgICAgICAgICAgaWYgKGVsZW1lbnQgPT0gdGhpcy5zZWxlY3RlZFdlbGNvbWVQYWdlKXtcbiAgICAgICAgICAgICAgICBjb25zdCBpbmRleCA9IHBhZ2VzLmluZGV4T2YoZWxlbWVudCwgMCk7XG4gICAgICAgICAgICAgICAgcGFnZXMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkV2VsY29tZVBhZ2UgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIE5ldyBDb25maWd1cmF0aW9uXG4gICAgICovXG4gICAgcnVuTmV3Q29uZmlndXJhdGlvbiA9ICgpOnZvaWQgPT4ge1xuXG4gICAgICAgIGNvbnN0IGRpYWxvZ1JlZiA9IHRoaXMuZGlhbG9nLm9wZW4oVGliY29DbG91ZE5ld0VsZW1lbnRDb21wb25lbnQsIHtcbiAgICAgICAgICAgIHdpZHRoOiAnNTAlJyxcbiAgICAgICAgICAgIGhlaWdodDogJzMwJScsXG4gICAgICAgICAgICBtYXhXaWR0aDogJzEwMHZ3JyxcbiAgICAgICAgICAgIG1heEhlaWdodDogJzEwMHZoJyxcbiAgICAgICAgICAgIHBhbmVsQ2xhc3M6ICd0Y3Mtc3R5bGUtZGlhbG9nJyxcbiAgICAgICAgICAgIGRhdGE6IHsgcmVzb3VyY2VUeXBlOiAnTGFuZGluZyBQYWdlJyB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGRpYWxvZ1JlZi5hZnRlckNsb3NlZCgpLnN1YnNjcmliZShyZXN1bHQgPT4ge1xuICAgICAgICAgICAgaWYgKHJlc3VsdCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5ld0VsZW1lbnQgPSBuZXcgTGFuZGluZ1BhZ2VDb25maWcoKS5kZXNlcmlhbGl6ZSh7XG4gICAgICAgICAgICAgICAgICAgIGtleTogcmVzdWx0LmlkLFxuICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogcmVzdWx0Lm5hbWUsXG4gICAgICAgICAgICAgICAgICAgIGhpZ2hsaWdodHM6IFtuZXcgTGFuZGluZ1BhZ2VJdGVtQ29uZmlnKCksIG5ldyBMYW5kaW5nUGFnZUl0ZW1Db25maWcoKSwgbmV3IExhbmRpbmdQYWdlSXRlbUNvbmZpZygpXVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgdGhpcy5sYW5kaW5nUGFnZXMucHVzaChuZXdFbGVtZW50KTtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkV2VsY29tZVBhZ2UgPSBuZXdFbGVtZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBIZWxwZXIgdG8gQ29tcGFyZSBPYmplY3RzXG4gICAgICovXG4gICAgY29tcGFyZU9iamVjdHMgPSAobzE6IHN0cmluZywgbzI6IHN0cmluZyk6IGJvb2xlYW4gPT4ge1xuICAgICAgICByZXR1cm4gbzEgPT09IG8yO1xuICAgIH1cblxuICAgIHB1YmxpYyBvcGVuRGlhbG9nKGltYWdlRm9ybWF0OiBzdHJpbmcsIGxvY2F0aW9uOiBzdHJpbmcsIGluZGV4PzogbnVtYmVyKTogdm9pZCB7XG5cbiAgICAgICAgY29uc3QgZGlhbG9nUmVmID0gdGhpcy5kaWFsb2cub3BlbihUaWJjb0Nsb3VkVXBsb2FkRGlhbG9nQ29tcG9uZW50LCB7XG4gICAgICAgICAgICB3aWR0aDogJzUwMHB4JyxcbiAgICAgICAgICAgIGRhdGE6IHsgXG4gICAgICAgICAgICAgICAgdGl0bGU6ICdVcGxvYWQgTmV3ICcgKyBsb2NhdGlvbiArICcgaW1hZ2UnLFxuICAgICAgICAgICAgICAgIGFsbG93ZWRFeHRlbnNpb25zOiBpbWFnZUZvcm1hdCxcbiAgICAgICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgICAgICAgICAgaW5kZXg6IGluZGV4XG4gICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBkaWFsb2dSZWYuY29tcG9uZW50SW5zdGFuY2UuZmlsZWV2ZW50LnN1YnNjcmliZSgoJGUpID0+IHtcbiAgICAgICAgICAgIHRoaXMudXBsb2FkRmlsZSgkZS5maWxlLCBsb2NhdGlvbiwgaW5kZXgpO1xuICAgICAgICB9KVxuXG4gICAgICAgIGRpYWxvZ1JlZi5hZnRlckNsb3NlZCgpLnN1YnNjcmliZShyZXN1bHQgPT4ge1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBwdWJsaWMgdXBsb2FkRmlsZShmaWxlOiBGaWxlLCBsb2NhdGlvbjogc3RyaW5nLCBpbmRleD86IG51bWJlcikge1xuICAgICAgICBpZiAoZmlsZSkge1xuICAgICAgICAgICAgc3dpdGNoIChsb2NhdGlvbikge1xuICAgICAgICAgICAgICAgIGNhc2UgJ2JhY2tncm91bmQnOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkV2VsY29tZVBhZ2UuYmFja2dyb3VuZFVSTCA9IGZpbGUubmFtZTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnaGlnaHRsaWdodCc6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRXZWxjb21lUGFnZS5oaWdobGlnaHRzW2luZGV4XS5pY29uVVJMID0gZmlsZS5uYW1lO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgdGhpcy5kb2N1bWVudHNTZXJ2aWNlLnVwbG9hZERvY3VtZW50KCdvcmdGb2xkZXJzJywgdGhpcy51aUFwcElkLCB0aGlzLnNhbmRib3hJZCwgZmlsZSwgbG9jYXRpb24gKyAnJTJGJyArIGZpbGUubmFtZSwgJycpXG4gICAgICAgICAgICAgICAgLnN1YnNjcmliZShcbiAgICAgICAgICAgICAgICAgICAgdmFsID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiKioqKioqKioqKiogRE9ORVwiKVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBlcnJvciA9PiB7IGNvbnNvbGUubG9nKCdlcnJvcicsIGVycm9yLmVycm9yTXNnKSB9KTsgLy8pOyB0aGlzLmVycm9yTWVzc2FnZSA9ICdFcnJvciB1cGxvYWRpbmcgc3RhdGUgaWNvbjogJyArXG4gICAgICAgIH1cbiAgICB9XG5cblxufVxuIl19