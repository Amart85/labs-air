/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { LiveAppsService } from '../../services/live-apps.service';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
/**
 * Renders list of cases for caserefs
 *
 * ![alt-text](../live-apps-case-list.png "Image")
 *
 * \@example <tcla-live-apps-case-list></tcla-live-apps-case-list>
 */
var LiveAppsCaseListComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LiveAppsCaseListComponent, _super);
    function LiveAppsCaseListComponent(liveapps) {
        var _this = _super.call(this) || this;
        _this.liveapps = liveapps;
        /**
         * ~event clickCase : Case clicked
         * ~payload CaseRoute : CaseRoute object output when case is clicked so calling component can route accordingly - ie. route to case
         */
        _this.clickCase = new EventEmitter();
        /**
         * ~event clearMatches : Clear Matches button clicked
         *
         */
        _this.clearMatches = new EventEmitter();
        _this.clickCaseAction = (/**
         * @param {?} caseRoute
         * @return {?}
         */
        function (caseRoute) {
            _this.clickCase.emit(caseRoute);
        });
        _this.clearMatchingCases = (/**
         * @return {?}
         */
        function () {
            _this.clearMatches.emit();
        });
        return _this;
    }
    /**
     * @return {?}
     */
    LiveAppsCaseListComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    LiveAppsCaseListComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tcla-live-apps-case-list',
                    template: "<div class=\"tcs-case-list-box\" fxLayout=\"column\">\n  <div class=\"tcs-case-list-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div fxFlex fxLayoutAlign=\"start center\">\n      <mat-icon class=\"tcs-icon tcs-caselist-icon\" svgIcon=\"tcs-caselist-icon\"></mat-icon>\n      <div class=\"tcs-case-list-header-text\">{{headerText}}</div>\n      <div fxFlex class=\"tcs-type-filter-text\" fxLayoutAlign=\"end center\">\n        <div *ngIf=\"headerMessage\" fxLayout=\"row\">\n          [\n          <div class=\"tcs-type-filter-text-highlight\">{{headerMessage}}</div>\n          ]\n        </div>\n        <mat-icon (click)=\"clearMatchingCases()\" class=\"tcs-icon tcs-icon-active tcs-clear-cases-icon\" svgIcon=\"tcs-clear-icon\" matTooltip=\"Clear Matching Cases\" matTooltipPosition=\"left\" matTooltipShowDelay=\"1000\"></mat-icon>\n      </div>\n    </div>\n  </div>\n\n  <!--div *ngIf=\"displayType != 'list'\" class=\"tcs-case-list-flow-list\" fxLayout=\"column\">\n    <div class=\"tcs-case-list-item-box\" *ngFor=\"let caseRef of caseRefs\">\n      <tcla-live-apps-case-summary style=\"max-width: 297px;\" [uiAppId]=\"uiAppId\" [typeBar]=\"true\" [borderCard]=\"false\" [displayType]=\"displayType\" [sandboxId]=\"sandboxId\" [caseRef]=\"caseRef\" [highlight]=\"highlight\" (clickCase)=\"clickCaseAction($event)\"></tcla-live-apps-case-summary>\n      <div class=\"tcs-case-summary-line\"></div>\n    </div>\n  </div-->\n\n  <div *ngIf=\"displayType === 'list'\" fxFlex fxLayout=\"column\">\n    <cdk-virtual-scroll-viewport class=\"tcs-case-list-flow-list\" itemSize=\"56\">\n      <div class=\"tcs-case-list-item-box\" *cdkVirtualFor=\"let caseRef of caseRefs; templateCacheSize: 0; let index = index\">\n        <tcla-live-apps-case-summary style=\"max-width: 297px;\" [uiAppId]=\"uiAppId\" [typeBar]=\"true\" [borderCard]=\"false\" [displayType]=\"displayType\" [sandboxId]=\"sandboxId\" [caseRef]=\"caseRef\" [highlight]=\"highlight\" (clickCase)=\"clickCaseAction($event)\"></tcla-live-apps-case-summary>\n        <div class=\"tcs-case-summary-line\"></div>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </div>\n</div>\n",
                    styles: [".tcs-case-list-box{width:100%;min-height:366px;border-radius:3px;box-shadow:0 2px 8px 0 #dedede;background-color:#fff}.tcs-case-list-header{height:40px;border-radius:3px 3px 0 0;box-shadow:0 1px 2px 0 #dedede;padding-left:20px;padding-right:20px}.tcs-case-list-header-text{font-family:Source Sans Pro;font-size:18px;font-weight:600;font-style:normal;font-stretch:normal;line-height:1.5;letter-spacing:.3px;text-align:left;color:#000;margin-left:10px}.tcs-case-list-flow-list{margin:24px;overflow-y:auto;height:278px;max-height:278px}.tcs-case-list-item-box{margin:3px 5px 10px}.tcs-icon.tcs-icon-active:hover{cursor:pointer}:host ::ng-deep .tcs-icon.tcs-icon-active:hover .svg-content{fill:#0081cb}.tcs-case-summary-line{padding:0;margin:4px 5px 0;border-bottom:1.1px solid #f4f4f4}.tcs-type-filter-text{font-family:Source Sans Pro;font-size:12px;font-weight:600;font-style:normal;font-stretch:normal;line-height:1.5;letter-spacing:.3px;text-align:left;color:#000;margin-left:10px}.tcs-type-filter-text-highlight{color:#ff7800}"]
                }] }
    ];
    /** @nocollapse */
    LiveAppsCaseListComponent.ctorParameters = function () { return [
        { type: LiveAppsService }
    ]; };
    LiveAppsCaseListComponent.propDecorators = {
        headerText: [{ type: Input }],
        displayType: [{ type: Input }],
        sandboxId: [{ type: Input }],
        uiAppId: [{ type: Input }],
        caseRefs: [{ type: Input }],
        highlight: [{ type: Input }],
        headerMessage: [{ type: Input }],
        clickCase: [{ type: Output }],
        clearMatches: [{ type: Output }]
    };
    return LiveAppsCaseListComponent;
}(LiveAppsComponent));
export { LiveAppsCaseListComponent };
if (false) {
    /**
     * Text shown in menu bar
     * @type {?}
     */
    LiveAppsCaseListComponent.prototype.headerText;
    /**
     * case card format - list, card, miniCard, staticList (no click event)
     * @type {?}
     */
    LiveAppsCaseListComponent.prototype.displayType;
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsCaseListComponent.prototype.sandboxId;
    /**
     * The Application ID of the UI (should ideally be unique as it is shared state key)
     * @type {?}
     */
    LiveAppsCaseListComponent.prototype.uiAppId;
    /**
     * List of case references to display in the list
     * @type {?}
     */
    LiveAppsCaseListComponent.prototype.caseRefs;
    /**
     * Text to highlight in the list of cases (normall text that was searched)
     * @type {?}
     */
    LiveAppsCaseListComponent.prototype.highlight;
    /**
     * Filter text displayed when listing cases after selecting case type and state via report widget
     * @type {?}
     */
    LiveAppsCaseListComponent.prototype.headerMessage;
    /**
     * ~event clickCase : Case clicked
     * ~payload CaseRoute : CaseRoute object output when case is clicked so calling component can route accordingly - ie. route to case
     * @type {?}
     */
    LiveAppsCaseListComponent.prototype.clickCase;
    /**
     * ~event clearMatches : Clear Matches button clicked
     *
     * @type {?}
     */
    LiveAppsCaseListComponent.prototype.clearMatches;
    /** @type {?} */
    LiveAppsCaseListComponent.prototype.errorMessage;
    /** @type {?} */
    LiveAppsCaseListComponent.prototype.clickCaseAction;
    /** @type {?} */
    LiveAppsCaseListComponent.prototype.clearMatchingCases;
    /**
     * @type {?}
     * @private
     */
    LiveAppsCaseListComponent.prototype.liveapps;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLWNhc2UtbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGliY28tdGNzdGsvdGMtbGl2ZWFwcHMtbGliLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvbGl2ZS1hcHBzLWNhc2UtbGlzdC9saXZlLWFwcHMtY2FzZS1saXN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBcUIsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBR3hGLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxrQ0FBa0MsQ0FBQztBQUNqRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzREFBc0QsQ0FBQzs7Ozs7Ozs7QUFVekY7SUFNK0MscURBQWlCO0lBMkQ5RCxtQ0FBb0IsUUFBeUI7UUFBN0MsWUFDRSxpQkFBTyxTQUNSO1FBRm1CLGNBQVEsR0FBUixRQUFRLENBQWlCOzs7OztRQWxCbkMsZUFBUyxHQUE0QixJQUFJLFlBQVksRUFBYSxDQUFDOzs7OztRQU1uRSxrQkFBWSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFJckMscUJBQWU7Ozs7UUFBRyxVQUFDLFNBQW9CO1lBQzVDLEtBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ2pDLENBQUMsRUFBQTtRQUVNLHdCQUFrQjs7O1FBQUc7WUFDMUIsS0FBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUMzQixDQUFDLEVBQUE7O0lBSUQsQ0FBQzs7OztJQUVELDRDQUFROzs7SUFBUjtJQUNBLENBQUM7O2dCQXRFRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLDBCQUEwQjtvQkFDcEMscW9FQUFtRDs7aUJBRXBEOzs7O2dCQWZPLGVBQWU7Ozs2QkFxQnBCLEtBQUs7OEJBS0wsS0FBSzs0QkFLTCxLQUFLOzBCQUtMLEtBQUs7MkJBS0wsS0FBSzs0QkFLTCxLQUFLO2dDQUtMLEtBQUs7NEJBT0wsTUFBTTsrQkFNTixNQUFNOztJQW1CVCxnQ0FBQztDQUFBLEFBeEVELENBTStDLGlCQUFpQixHQWtFL0Q7U0FsRVkseUJBQXlCOzs7Ozs7SUFJcEMsK0NBQTRCOzs7OztJQUs1QixnREFBNkI7Ozs7O0lBSzdCLDhDQUEyQjs7Ozs7SUFLM0IsNENBQXlCOzs7OztJQUt6Qiw2Q0FBNEI7Ozs7O0lBSzVCLDhDQUEyQjs7Ozs7SUFLM0Isa0RBQStCOzs7Ozs7SUFPL0IsOENBQTZFOzs7Ozs7SUFNN0UsaURBQTRDOztJQUU1QyxpREFBNEI7O0lBRTVCLG9EQUVDOztJQUVELHVEQUVDOzs7OztJQUVXLDZDQUFpQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCwgT3V0cHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7U3ViamVjdH0gZnJvbSAncnhqcyc7XG5pbXBvcnQge21hcCwgdGFrZSwgdGFrZVVudGlsfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQge0xpdmVBcHBzU2VydmljZX0gZnJvbSAnLi4vLi4vc2VydmljZXMvbGl2ZS1hcHBzLnNlcnZpY2UnO1xuaW1wb3J0IHsgTGl2ZUFwcHNDb21wb25lbnQgfSBmcm9tICcuLi9saXZlLWFwcHMtY29tcG9uZW50L2xpdmUtYXBwcy1jb21wb25lbnQuY29tcG9uZW50JztcbmltcG9ydCB7Q2FzZVJvdXRlfSBmcm9tICcuLi8uLi9tb2RlbHMvbGl2ZWFwcHNkYXRhJztcblxuLyoqXG4gKiBSZW5kZXJzIGxpc3Qgb2YgY2FzZXMgZm9yIGNhc2VyZWZzXG4gKlxuICogIVthbHQtdGV4dF0oLi4vbGl2ZS1hcHBzLWNhc2UtbGlzdC5wbmcgXCJJbWFnZVwiKVxuICpcbiAqQGV4YW1wbGUgPHRjbGEtbGl2ZS1hcHBzLWNhc2UtbGlzdD48L3RjbGEtbGl2ZS1hcHBzLWNhc2UtbGlzdD5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGNsYS1saXZlLWFwcHMtY2FzZS1saXN0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xpdmUtYXBwcy1jYXNlLWxpc3QuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9saXZlLWFwcHMtY2FzZS1saXN0LmNvbXBvbmVudC5jc3MnXVxufSlcblxuZXhwb3J0IGNsYXNzIExpdmVBcHBzQ2FzZUxpc3RDb21wb25lbnQgZXh0ZW5kcyBMaXZlQXBwc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIC8qKlxuICAgKiBUZXh0IHNob3duIGluIG1lbnUgYmFyXG4gICAqL1xuICBASW5wdXQoKSBoZWFkZXJUZXh0OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIGNhc2UgY2FyZCBmb3JtYXQgLSBsaXN0LCBjYXJkLCBtaW5pQ2FyZCwgc3RhdGljTGlzdCAobm8gY2xpY2sgZXZlbnQpXG4gICAqL1xuICBASW5wdXQoKSBkaXNwbGF5VHlwZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBzYW5kYm94SWQgLSB0aGlzIGNvbWVzIGZyb20gY2xhaW1zIHJlc29sdmVyXG4gICAqL1xuICBASW5wdXQoKSBzYW5kYm94SWQ6IG51bWJlcjtcblxuICAvKipcbiAgICogVGhlIEFwcGxpY2F0aW9uIElEIG9mIHRoZSBVSSAoc2hvdWxkIGlkZWFsbHkgYmUgdW5pcXVlIGFzIGl0IGlzIHNoYXJlZCBzdGF0ZSBrZXkpXG4gICAqL1xuICBASW5wdXQoKSB1aUFwcElkOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIExpc3Qgb2YgY2FzZSByZWZlcmVuY2VzIHRvIGRpc3BsYXkgaW4gdGhlIGxpc3RcbiAgICovXG4gIEBJbnB1dCgpIGNhc2VSZWZzOiBzdHJpbmdbXTtcblxuICAvKipcbiAgICogVGV4dCB0byBoaWdobGlnaHQgaW4gdGhlIGxpc3Qgb2YgY2FzZXMgKG5vcm1hbGwgdGV4dCB0aGF0IHdhcyBzZWFyY2hlZClcbiAgICovXG4gIEBJbnB1dCgpIGhpZ2hsaWdodDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBGaWx0ZXIgdGV4dCBkaXNwbGF5ZWQgd2hlbiBsaXN0aW5nIGNhc2VzIGFmdGVyIHNlbGVjdGluZyBjYXNlIHR5cGUgYW5kIHN0YXRlIHZpYSByZXBvcnQgd2lkZ2V0XG4gICAqL1xuICBASW5wdXQoKSBoZWFkZXJNZXNzYWdlOiBzdHJpbmc7XG5cblxuICAvKipcbiAgICogfmV2ZW50IGNsaWNrQ2FzZSA6IENhc2UgY2xpY2tlZFxuICAgKiB+cGF5bG9hZCBDYXNlUm91dGUgOiBDYXNlUm91dGUgb2JqZWN0IG91dHB1dCB3aGVuIGNhc2UgaXMgY2xpY2tlZCBzbyBjYWxsaW5nIGNvbXBvbmVudCBjYW4gcm91dGUgYWNjb3JkaW5nbHkgLSBpZS4gcm91dGUgdG8gY2FzZVxuICAgKi9cbiAgQE91dHB1dCgpIGNsaWNrQ2FzZTogRXZlbnRFbWl0dGVyPENhc2VSb3V0ZT4gPSBuZXcgRXZlbnRFbWl0dGVyPENhc2VSb3V0ZT4oKTtcblxuICAvKipcbiAgICogfmV2ZW50IGNsZWFyTWF0Y2hlcyA6IENsZWFyIE1hdGNoZXMgYnV0dG9uIGNsaWNrZWRcbiAgICpcbiAgICovXG4gIEBPdXRwdXQoKSBjbGVhck1hdGNoZXMgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgcHVibGljIGVycm9yTWVzc2FnZTogc3RyaW5nO1xuXG4gIHB1YmxpYyBjbGlja0Nhc2VBY3Rpb24gPSAoY2FzZVJvdXRlOiBDYXNlUm91dGUpID0+IHtcbiAgICB0aGlzLmNsaWNrQ2FzZS5lbWl0KGNhc2VSb3V0ZSk7XG4gIH1cblxuICBwdWJsaWMgY2xlYXJNYXRjaGluZ0Nhc2VzID0gKCkgPT4ge1xuICAgIHRoaXMuY2xlYXJNYXRjaGVzLmVtaXQoKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbGl2ZWFwcHM6IExpdmVBcHBzU2VydmljZSkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgfVxuXG59XG4iXX0=