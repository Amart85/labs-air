/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { take, takeUntil } from 'rxjs/operators';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
import { TcCaseStatesService } from '../../services/tc-case-states.service';
import { DurationSincePipe } from '@tibco-tcstk/tc-core-lib';
/**
 * Case States/Milestone view
 *
 * ![alt-text](../live-apps-case-states.png "Image")
 *
 * \@example <tcla-live-apps-case-states></tcla-live-apps-case-states>
 */
var LiveAppsCaseStatesComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LiveAppsCaseStatesComponent, _super);
    function LiveAppsCaseStatesComponent(caseStatesService, durationSince) {
        var _this = _super.call(this) || this;
        _this.caseStatesService = caseStatesService;
        _this.durationSince = durationSince;
        _this.getToolTipText = (/**
         * @param {?} trackerState
         * @return {?}
         */
        function (trackerState) {
            /** @type {?} */
            var toolTipText = '';
            if (trackerState.status != 'pending') {
                toolTipText = toolTipText + trackerState.user + ' ' + _this.durationSince.transform(trackerState.changed);
            }
            return toolTipText;
        });
        _this.refresh = (/**
         * @return {?}
         */
        function () {
            _this.caseStatesService.getTracker(_this.caseRef, _this.sandboxId, _this.appId).pipe(take(1), takeUntil(_this._destroyed$)).subscribe((/**
             * @param {?} tracker
             * @return {?}
             */
            function (tracker) {
                _this.tracker = tracker;
                if (!tracker.valid) {
                    console.error('Unable to create milestone trailer. Case Audit likely removed due to subscription retention period.');
                }
                return tracker;
            }), (/**
             * @param {?} error
             * @return {?}
             */
            function (error) { _this.errorMessage = 'Error constructing state tracker: ' + error.error.errorMsg; }));
        });
        return _this;
    }
    /**
     * @return {?}
     */
    LiveAppsCaseStatesComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.refresh();
    };
    LiveAppsCaseStatesComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tcla-live-apps-case-states',
                    template: "<div fxFlex class=\"starters-case-states-container\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n  <div *ngIf=\"tracker && tracker.valid\">\n    <span class=\"tc-milestone-title\" fxLayoutAlign=\"start center\">Milestones</span>\n    <div fxFlex class=\"starters-milestone-trailer\" fxLayout=\"row wrap\">\n      <div class=\"starters-ms-wrapper\" *ngFor=\"let trackerState of tracker.states; first as isFirst; last as isLast\" ngclass=\"{'starters-milestone-first-section': isFirst, 'starters-milestone-mid-section': (!isFirst && !isLast), 'starters-milestone-end-section': isLast}\">\n        <tcla-live-apps-milestone [isFirst]=\"isFirst\" [isLast]=\"isLast\" [isTerminal]=\"trackerState.isTerminal\" [label]=\"trackerState.label\" [phase]=\"trackerState.phase\" [previousPhase]=\"trackerState.previousPhase\" [status]=\"trackerState.status\" [matTooltip]=\"getToolTipText(trackerState)\" matTooltipShowDelay=\"1000\" matTooltipPosition=\"below\"></tcla-live-apps-milestone>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"tracker && !tracker.valid\">\n    <span class=\"tc-milestone-title\">Milestone data not available</span>\n  </div>\n</div>\n\n\n",
                    styles: [".tc-milestone-title{min-width:150px;font-family:Source Sans Pro;font-size:18px;font-weight:600;font-style:normal;font-stretch:normal;line-height:1.5;letter-spacing:.3px;color:#000}:host ::ng-deep tcla-live-apps-milestone .tc-ms-pending-bg{fill:#dedede}:host ::ng-deep tcla-live-apps-milestone .tc-ms-inprogress-bg{fill:#0081cb}:host ::ng-deep tcla-live-apps-milestone .tc-ms-completed-bg{fill:#062e79}:host ::ng-deep tcla-live-apps-milestone .tc-ms-completed-terminal-bg{fill:#04be5b}:host ::ng-deep tcla-live-apps-milestone .tc-ms-label{color:#000}"]
                }] }
    ];
    /** @nocollapse */
    LiveAppsCaseStatesComponent.ctorParameters = function () { return [
        { type: TcCaseStatesService },
        { type: DurationSincePipe }
    ]; };
    LiveAppsCaseStatesComponent.propDecorators = {
        appId: [{ type: Input }],
        sandboxId: [{ type: Input }],
        caseRef: [{ type: Input }]
    };
    return LiveAppsCaseStatesComponent;
}(LiveAppsComponent));
export { LiveAppsCaseStatesComponent };
if (false) {
    /**
     * The LA Application Id
     * @type {?}
     */
    LiveAppsCaseStatesComponent.prototype.appId;
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsCaseStatesComponent.prototype.sandboxId;
    /**
     * The case reference
     * @type {?}
     */
    LiveAppsCaseStatesComponent.prototype.caseRef;
    /** @type {?} */
    LiveAppsCaseStatesComponent.prototype.states;
    /** @type {?} */
    LiveAppsCaseStatesComponent.prototype.tracker;
    /** @type {?} */
    LiveAppsCaseStatesComponent.prototype.errorMessage;
    /** @type {?} */
    LiveAppsCaseStatesComponent.prototype.getToolTipText;
    /** @type {?} */
    LiveAppsCaseStatesComponent.prototype.refresh;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsCaseStatesComponent.prototype.caseStatesService;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsCaseStatesComponent.prototype.durationSince;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLWNhc2Utc3RhdGVzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0aWJjby10Y3N0ay90Yy1saXZlYXBwcy1saWIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9saXZlLWFwcHMtY2FzZS1zdGF0ZXMvbGl2ZS1hcHBzLWNhc2Utc3RhdGVzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFvQixNQUFNLGVBQWUsQ0FBQztBQUlsRSxPQUFPLEVBQU0sSUFBSSxFQUFFLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ3BELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHNEQUFzRCxDQUFDO0FBRXZGLE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLHVDQUF1QyxDQUFDO0FBQzFFLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLDBCQUEwQixDQUFDOzs7Ozs7OztBQVUzRDtJQUtpRCx1REFBaUI7SUEyQ2hFLHFDQUFzQixpQkFBc0MsRUFBWSxhQUFnQztRQUF4RyxZQUNFLGlCQUFPLFNBQ1I7UUFGcUIsdUJBQWlCLEdBQWpCLGlCQUFpQixDQUFxQjtRQUFZLG1CQUFhLEdBQWIsYUFBYSxDQUFtQjtRQXRCakcsb0JBQWM7Ozs7UUFBRyxVQUFDLFlBQTBCOztnQkFDN0MsV0FBVyxHQUFHLEVBQUU7WUFDcEIsSUFBSSxZQUFZLENBQUMsTUFBTSxJQUFJLFNBQVMsRUFBRTtnQkFDcEMsV0FBVyxHQUFHLFdBQVcsR0FBRyxZQUFZLENBQUMsSUFBSSxHQUFHLEdBQUcsR0FBRyxLQUFJLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUM7YUFDMUc7WUFDRCxPQUFPLFdBQVcsQ0FBQztRQUNyQixDQUFDLEVBQUE7UUFFTSxhQUFPOzs7UUFBRztZQUNmLEtBQUksQ0FBQyxpQkFBaUIsQ0FBQyxVQUFVLENBQUMsS0FBSSxDQUFDLE9BQU8sRUFBRSxLQUFJLENBQUMsU0FBUyxFQUFFLEtBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQzlFLElBQUksQ0FBQyxDQUFDLENBQUMsRUFDUCxTQUFTLENBQUMsS0FBSSxDQUFDLFdBQVcsQ0FBQyxDQUM1QixDQUFDLFNBQVM7Ozs7WUFDVCxVQUFBLE9BQU87Z0JBQ0wsS0FBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7Z0JBQ3ZCLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFO29CQUNsQixPQUFPLENBQUMsS0FBSyxDQUFDLHFHQUFxRyxDQUFDLENBQUM7aUJBQ3RIO2dCQUNELE9BQU8sT0FBTyxDQUFDO1lBQ2pCLENBQUM7Ozs7WUFBRSxVQUFBLEtBQUssSUFBTSxLQUFJLENBQUMsWUFBWSxHQUFHLG9DQUFvQyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUM7UUFDdEcsQ0FBQyxFQUFBOztJQUlELENBQUM7Ozs7SUFFRCw4Q0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDakIsQ0FBQzs7Z0JBdERGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsNEJBQTRCO29CQUN0Qyx3cENBQXFEOztpQkFFdEQ7Ozs7Z0JBZk8sbUJBQW1CO2dCQUNuQixpQkFBaUI7Ozt3QkFtQnRCLEtBQUs7NEJBS0wsS0FBSzswQkFLTCxLQUFLOztJQXFDUixrQ0FBQztDQUFBLEFBeERELENBS2lELGlCQUFpQixHQW1EakU7U0FuRFksMkJBQTJCOzs7Ozs7SUFJdEMsNENBQXVCOzs7OztJQUt2QixnREFBMkI7Ozs7O0lBSzNCLDhDQUF5Qjs7SUFHekIsNkNBQStCOztJQUMvQiw4Q0FBNkI7O0lBQzdCLG1EQUE0Qjs7SUFFNUIscURBTUM7O0lBRUQsOENBWUM7Ozs7O0lBRVcsd0RBQWdEOzs7OztJQUFFLG9EQUEwQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtDYXNlVHlwZVN0YXRlLCBDYXNlVHlwZVN0YXRlc0xpc3QsIE1ldGFkYXRhfSBmcm9tICcuLi8uLi9tb2RlbHMvbGl2ZWFwcHNkYXRhJztcbmltcG9ydCB7U3ViamVjdH0gZnJvbSAncnhqcyc7XG5pbXBvcnQge0xpdmVBcHBzU2VydmljZX0gZnJvbSAnLi4vLi4vc2VydmljZXMvbGl2ZS1hcHBzLnNlcnZpY2UnO1xuaW1wb3J0IHttYXAsIHRha2UsIHRha2VVbnRpbH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHtMaXZlQXBwc0NvbXBvbmVudH0gZnJvbSAnLi4vbGl2ZS1hcHBzLWNvbXBvbmVudC9saXZlLWFwcHMtY29tcG9uZW50LmNvbXBvbmVudCc7XG5pbXBvcnQge1N0YXRlVHJhY2tlciwgVHJhY2tlclN0YXRlfSBmcm9tICcuLi8uLi9tb2RlbHMvdGMtY2FzZS1zdGF0ZXMnO1xuaW1wb3J0IHtUY0Nhc2VTdGF0ZXNTZXJ2aWNlfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy90Yy1jYXNlLXN0YXRlcy5zZXJ2aWNlJztcbmltcG9ydCB7RHVyYXRpb25TaW5jZVBpcGV9IGZyb20gJ0B0aWJjby10Y3N0ay90Yy1jb3JlLWxpYic7XG5cblxuLyoqXG4gKiBDYXNlIFN0YXRlcy9NaWxlc3RvbmUgdmlld1xuICpcbiAqICFbYWx0LXRleHRdKC4uL2xpdmUtYXBwcy1jYXNlLXN0YXRlcy5wbmcgXCJJbWFnZVwiKVxuICpcbiAqQGV4YW1wbGUgPHRjbGEtbGl2ZS1hcHBzLWNhc2Utc3RhdGVzPjwvdGNsYS1saXZlLWFwcHMtY2FzZS1zdGF0ZXM+XG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RjbGEtbGl2ZS1hcHBzLWNhc2Utc3RhdGVzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xpdmUtYXBwcy1jYXNlLXN0YXRlcy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2xpdmUtYXBwcy1jYXNlLXN0YXRlcy5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgTGl2ZUFwcHNDYXNlU3RhdGVzQ29tcG9uZW50IGV4dGVuZHMgTGl2ZUFwcHNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAvKipcbiAgICogVGhlIExBIEFwcGxpY2F0aW9uIElkXG4gICAqL1xuICBASW5wdXQoKSBhcHBJZDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBzYW5kYm94SWQgLSB0aGlzIGNvbWVzIGZyb20gY2xhaW1zIHJlc29sdmVyXG4gICAqL1xuICBASW5wdXQoKSBzYW5kYm94SWQ6IG51bWJlcjtcblxuICAvKipcbiAgICogVGhlIGNhc2UgcmVmZXJlbmNlXG4gICAqL1xuICBASW5wdXQoKSBjYXNlUmVmOiBzdHJpbmc7XG5cblxuICBwdWJsaWMgc3RhdGVzOiBDYXNlVHlwZVN0YXRlW107XG4gIHB1YmxpYyB0cmFja2VyOiBTdGF0ZVRyYWNrZXI7XG4gIHB1YmxpYyBlcnJvck1lc3NhZ2U6IHN0cmluZztcblxuICBwdWJsaWMgZ2V0VG9vbFRpcFRleHQgPSAodHJhY2tlclN0YXRlOiBUcmFja2VyU3RhdGUpOiBzdHJpbmcgPT4ge1xuICAgIGxldCB0b29sVGlwVGV4dCA9ICcnO1xuICAgIGlmICh0cmFja2VyU3RhdGUuc3RhdHVzICE9ICdwZW5kaW5nJykge1xuICAgICAgdG9vbFRpcFRleHQgPSB0b29sVGlwVGV4dCArIHRyYWNrZXJTdGF0ZS51c2VyICsgJyAnICsgdGhpcy5kdXJhdGlvblNpbmNlLnRyYW5zZm9ybSh0cmFja2VyU3RhdGUuY2hhbmdlZCk7XG4gICAgfVxuICAgIHJldHVybiB0b29sVGlwVGV4dDtcbiAgfVxuXG4gIHB1YmxpYyByZWZyZXNoID0gKCkgPT4ge1xuICAgIHRoaXMuY2FzZVN0YXRlc1NlcnZpY2UuZ2V0VHJhY2tlcih0aGlzLmNhc2VSZWYsIHRoaXMuc2FuZGJveElkLCB0aGlzLmFwcElkKS5waXBlKFxuICAgICAgdGFrZSgxKSxcbiAgICAgIHRha2VVbnRpbCh0aGlzLl9kZXN0cm95ZWQkKVxuICAgICkuc3Vic2NyaWJlKFxuICAgICAgdHJhY2tlciA9PiB7XG4gICAgICAgIHRoaXMudHJhY2tlciA9IHRyYWNrZXI7XG4gICAgICAgIGlmICghdHJhY2tlci52YWxpZCkge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1VuYWJsZSB0byBjcmVhdGUgbWlsZXN0b25lIHRyYWlsZXIuIENhc2UgQXVkaXQgbGlrZWx5IHJlbW92ZWQgZHVlIHRvIHN1YnNjcmlwdGlvbiByZXRlbnRpb24gcGVyaW9kLicpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cmFja2VyO1xuICAgICAgfSwgZXJyb3IgPT4geyB0aGlzLmVycm9yTWVzc2FnZSA9ICdFcnJvciBjb25zdHJ1Y3Rpbmcgc3RhdGUgdHJhY2tlcjogJyArIGVycm9yLmVycm9yLmVycm9yTXNnOyB9KTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBjYXNlU3RhdGVzU2VydmljZTogVGNDYXNlU3RhdGVzU2VydmljZSwgcHJvdGVjdGVkIGR1cmF0aW9uU2luY2U6IER1cmF0aW9uU2luY2VQaXBlKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMucmVmcmVzaCgpO1xuICB9XG5cbn1cbiJdfQ==