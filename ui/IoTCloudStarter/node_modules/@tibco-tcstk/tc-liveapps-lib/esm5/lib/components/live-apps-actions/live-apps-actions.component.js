/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { CustomFormDefs } from '@tibco-tcstk/tc-forms-lib';
import { LiveAppsCaseActionsComponent } from '../live-apps-case-actions/live-apps-case-actions.component';
/**
 * Not used by app but wraps action list and action execution.
 *
 * \@example <tcla-live-apps-actions></tcla-live-apps-actions>
 */
var LiveAppsActionsComponent = /** @class */ (function () {
    function LiveAppsActionsComponent() {
        var _this = this;
        /**
         * ~event caseActioned : Case action starterd (process started)
         * ~payload ProcessId : processId of started process in live apps (action)
         */
        this.caseActioned = new EventEmitter();
        // action clicked
        this.handleActionCompleted = (/**
         * @param {?} result
         * @return {?}
         */
        function (result) {
            _this.caseActioned.emit(result);
            _this.actionSelector.toggleEnable();
        });
        this.handleActionClicked = (/**
         * @param {?} action
         * @return {?}
         */
        function (action) {
            _this.actionSelector.toggleEnable();
            _this.selectedAction = action;
        });
    }
    /**
     * @return {?}
     */
    LiveAppsActionsComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    LiveAppsActionsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tcla-live-apps-actions',
                    template: "<div fxLayout=\"column\" fxFlexFill>\n  <tcla-live-apps-case-actions [sandboxId]=\"sandboxId\" [typeId]=\"typeId\" [appId]=\"applicationId\" [caseRef]=\"caseRef\" [caseState]=\"caseState\" [maxActions]=\"5\" (actionClicked)=\"handleActionClicked($event)\"></tcla-live-apps-case-actions>\n  <tcla-live-apps-case-action *ngIf=\"selectedAction\" [process]=\"selectedAction\" [caseRef]=\"caseRef\" [typeId]=\"typeId\" [applicationId]=\"applicationId\" [sandboxId]=\"sandboxId\"></tcla-live-apps-case-action>\n</div>\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    LiveAppsActionsComponent.ctorParameters = function () { return []; };
    LiveAppsActionsComponent.propDecorators = {
        actionSelector: [{ type: ViewChild, args: [LiveAppsCaseActionsComponent, { static: false },] }],
        caseRef: [{ type: Input }],
        caseState: [{ type: Input }],
        sandboxId: [{ type: Input }],
        applicationId: [{ type: Input }],
        typeId: [{ type: Input }],
        customFormDefs: [{ type: Input }],
        caseActioned: [{ type: Output }]
    };
    return LiveAppsActionsComponent;
}());
export { LiveAppsActionsComponent };
if (false) {
    /** @type {?} */
    LiveAppsActionsComponent.prototype.actionSelector;
    /**
     * The case reference
     * @type {?}
     */
    LiveAppsActionsComponent.prototype.caseRef;
    /**
     * The state of the case
     * @type {?}
     */
    LiveAppsActionsComponent.prototype.caseState;
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsActionsComponent.prototype.sandboxId;
    /**
     * LA Application ID
     * @type {?}
     */
    LiveAppsActionsComponent.prototype.applicationId;
    /**
     * The LA Application Type Id (generally 1)
     * @type {?}
     */
    LiveAppsActionsComponent.prototype.typeId;
    /**
     * Custom Form configuration file
     * @type {?}
     */
    LiveAppsActionsComponent.prototype.customFormDefs;
    /**
     * ~event caseActioned : Case action starterd (process started)
     * ~payload ProcessId : processId of started process in live apps (action)
     * @type {?}
     */
    LiveAppsActionsComponent.prototype.caseActioned;
    /** @type {?} */
    LiveAppsActionsComponent.prototype.selectedAction;
    /** @type {?} */
    LiveAppsActionsComponent.prototype.handleActionCompleted;
    /** @type {?} */
    LiveAppsActionsComponent.prototype.handleActionClicked;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLWFjdGlvbnMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpYmNvLXRjc3RrL3RjLWxpdmVhcHBzLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2xpdmUtYXBwcy1hY3Rpb25zL2xpdmUtYXBwcy1hY3Rpb25zLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFHeEYsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBQ3pELE9BQU8sRUFBQyw0QkFBNEIsRUFBQyxNQUFNLDREQUE0RCxDQUFDOzs7Ozs7QUFReEc7SUE0REU7UUFBQSxpQkFBaUI7Ozs7O1FBaEJQLGlCQUFZLEdBQTRCLElBQUksWUFBWSxFQUFhLENBQUM7O1FBS2hGLDBCQUFxQjs7OztRQUFHLFVBQUMsTUFBaUI7WUFDeEMsS0FBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDL0IsS0FBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUNyQyxDQUFDLEVBQUE7UUFHRCx3QkFBbUI7Ozs7UUFBRyxVQUFDLE1BQU07WUFDM0IsS0FBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLEVBQUUsQ0FBQztZQUNuQyxLQUFJLENBQUMsY0FBYyxHQUFHLE1BQU0sQ0FBQztRQUMvQixDQUFDLEVBQUE7SUFFZSxDQUFDOzs7O0lBR2pCLDJDQUFROzs7SUFBUjtJQUNBLENBQUM7O2dCQWhFRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHdCQUF3QjtvQkFDbEMsNmdCQUFpRDs7aUJBRWxEOzs7OztpQ0FHRSxTQUFTLFNBQUMsNEJBQTRCLEVBQUUsRUFBQyxNQUFNLEVBQUUsS0FBSyxFQUFDOzBCQUt2RCxLQUFLOzRCQUtMLEtBQUs7NEJBS0wsS0FBSztnQ0FLTCxLQUFLO3lCQUtMLEtBQUs7aUNBS0wsS0FBSzsrQkFPTCxNQUFNOztJQXNCVCwrQkFBQztDQUFBLEFBbEVELElBa0VDO1NBN0RZLHdCQUF3Qjs7O0lBRW5DLGtEQUFzRzs7Ozs7SUFLdEcsMkNBQXlCOzs7OztJQUt6Qiw2Q0FBMkI7Ozs7O0lBSzNCLDZDQUEyQjs7Ozs7SUFLM0IsaURBQStCOzs7OztJQUsvQiwwQ0FBd0I7Ozs7O0lBS3hCLGtEQUF3Qzs7Ozs7O0lBT3hDLGdEQUFnRjs7SUFFaEYsa0RBQW1DOztJQUduQyx5REFHQzs7SUFHRCx1REFHQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkluaXQsIE91dHB1dCwgVmlld0NoaWxkfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7UHJvY2Vzc0lkfSBmcm9tICcuLi8uLi9tb2RlbHMvbGl2ZWFwcHNkYXRhJztcbmltcG9ydCB7TGFQcm9jZXNzU2VsZWN0aW9ufSBmcm9tICcuLi8uLi9tb2RlbHMvdGMtY2FzZS1wcm9jZXNzZXMnO1xuaW1wb3J0IHtDdXN0b21Gb3JtRGVmc30gZnJvbSAnQHRpYmNvLXRjc3RrL3RjLWZvcm1zLWxpYic7XG5pbXBvcnQge0xpdmVBcHBzQ2FzZUFjdGlvbnNDb21wb25lbnR9IGZyb20gJy4uL2xpdmUtYXBwcy1jYXNlLWFjdGlvbnMvbGl2ZS1hcHBzLWNhc2UtYWN0aW9ucy5jb21wb25lbnQnO1xuXG5cbi8qKlxuICogTm90IHVzZWQgYnkgYXBwIGJ1dCB3cmFwcyBhY3Rpb24gbGlzdCBhbmQgYWN0aW9uIGV4ZWN1dGlvbi5cbiAqXG4gKkBleGFtcGxlIDx0Y2xhLWxpdmUtYXBwcy1hY3Rpb25zPjwvdGNsYS1saXZlLWFwcHMtYWN0aW9ucz5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGNsYS1saXZlLWFwcHMtYWN0aW9ucycsXG4gIHRlbXBsYXRlVXJsOiAnLi9saXZlLWFwcHMtYWN0aW9ucy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2xpdmUtYXBwcy1hY3Rpb25zLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBMaXZlQXBwc0FjdGlvbnNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIEBWaWV3Q2hpbGQoTGl2ZUFwcHNDYXNlQWN0aW9uc0NvbXBvbmVudCwge3N0YXRpYzogZmFsc2V9KSBhY3Rpb25TZWxlY3RvcjogTGl2ZUFwcHNDYXNlQWN0aW9uc0NvbXBvbmVudFxuXG4gIC8qKlxuICAgKiBUaGUgY2FzZSByZWZlcmVuY2VcbiAgICovXG4gIEBJbnB1dCgpIGNhc2VSZWY6IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIHN0YXRlIG9mIHRoZSBjYXNlXG4gICAqL1xuICBASW5wdXQoKSBjYXNlU3RhdGU6IHN0cmluZztcblxuICAvKipcbiAgICogc2FuZGJveElkIC0gdGhpcyBjb21lcyBmcm9tIGNsYWltcyByZXNvbHZlclxuICAgKi9cbiAgQElucHV0KCkgc2FuZGJveElkOiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIExBIEFwcGxpY2F0aW9uIElEXG4gICAqL1xuICBASW5wdXQoKSBhcHBsaWNhdGlvbklkOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBMQSBBcHBsaWNhdGlvbiBUeXBlIElkIChnZW5lcmFsbHkgMSlcbiAgICovXG4gIEBJbnB1dCgpIHR5cGVJZDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBDdXN0b20gRm9ybSBjb25maWd1cmF0aW9uIGZpbGVcbiAgICovXG4gIEBJbnB1dCgpIGN1c3RvbUZvcm1EZWZzOiBDdXN0b21Gb3JtRGVmcztcblxuXG4gIC8qKlxuICAgKiB+ZXZlbnQgY2FzZUFjdGlvbmVkIDogQ2FzZSBhY3Rpb24gc3RhcnRlcmQgKHByb2Nlc3Mgc3RhcnRlZClcbiAgICogfnBheWxvYWQgUHJvY2Vzc0lkIDogcHJvY2Vzc0lkIG9mIHN0YXJ0ZWQgcHJvY2VzcyBpbiBsaXZlIGFwcHMgKGFjdGlvbilcbiAgICovXG4gIEBPdXRwdXQoKSBjYXNlQWN0aW9uZWQ6IEV2ZW50RW1pdHRlcjxQcm9jZXNzSWQ+ID0gbmV3IEV2ZW50RW1pdHRlcjxQcm9jZXNzSWQ+KCk7XG5cbiAgc2VsZWN0ZWRBY3Rpb246IExhUHJvY2Vzc1NlbGVjdGlvbjtcblxuICAvLyBhY3Rpb24gY2xpY2tlZFxuICBoYW5kbGVBY3Rpb25Db21wbGV0ZWQgPSAocmVzdWx0OiBQcm9jZXNzSWQpID0+IHtcbiAgICB0aGlzLmNhc2VBY3Rpb25lZC5lbWl0KHJlc3VsdCk7XG4gICAgdGhpcy5hY3Rpb25TZWxlY3Rvci50b2dnbGVFbmFibGUoKTtcbiAgfVxuXG5cbiAgaGFuZGxlQWN0aW9uQ2xpY2tlZCA9IChhY3Rpb24pID0+IHtcbiAgICB0aGlzLmFjdGlvblNlbGVjdG9yLnRvZ2dsZUVuYWJsZSgpO1xuICAgIHRoaXMuc2VsZWN0ZWRBY3Rpb24gPSBhY3Rpb247XG4gIH1cblxuICBjb25zdHJ1Y3RvcigpIHsgfVxuXG5cbiAgbmdPbkluaXQoKSB7XG4gIH1cblxufVxuIl19