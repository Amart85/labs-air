/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { CustomFormDefs } from '@tibco-tcstk/tc-forms-lib';
import { LiveAppsCaseActionsComponent } from '../live-apps-case-actions/live-apps-case-actions.component';
/**
 * Not used by app but wraps action list and action execution.
 *
 * \@example <tcla-live-apps-actions></tcla-live-apps-actions>
 */
var LiveAppsActionsComponent = /** @class */ (function () {
    function LiveAppsActionsComponent() {
        var _this = this;
        /**
         * Allow override of forms framework
         * Options: bootstrap-4 or material-design
         */
        this.formsFramework = this.formsFramework ? this.formsFramework : 'material-design';
        /**
         * ~event caseActioned : Case action starterd (process started)
         * ~payload ProcessId : processId of started process in live apps (action)
         */
        this.caseActioned = new EventEmitter();
        // action clicked
        this.handleActionCompleted = (/**
         * @param {?} result
         * @return {?}
         */
        function (result) {
            _this.caseActioned.emit(result);
            _this.actionSelector.toggleEnable();
        });
        this.handleActionClicked = (/**
         * @param {?} action
         * @return {?}
         */
        function (action) {
            _this.actionSelector.toggleEnable();
            _this.selectedAction = action;
        });
    }
    /**
     * @return {?}
     */
    LiveAppsActionsComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    LiveAppsActionsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tcla-live-apps-actions',
                    template: "<div fxLayout=\"column\" fxFlexFill>\n  <tcla-live-apps-case-actions [sandboxId]=\"sandboxId\" [typeId]=\"typeId\" [appId]=\"applicationId\" [caseRef]=\"caseRef\" [maxActions]=\"5\" [actionFilter]=\"actionFilter\" (actionClicked)=\"handleActionClicked($event)\"></tcla-live-apps-case-actions>\n  <tcla-live-apps-case-action *ngIf=\"selectedAction\" [process]=\"selectedAction\" [caseRef]=\"caseRef\" [typeId]=\"typeId\" [applicationId]=\"applicationId\" [sandboxId]=\"sandboxId\" [formsFramework]=\"formsFramework\"></tcla-live-apps-case-action>\n</div>\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    LiveAppsActionsComponent.ctorParameters = function () { return []; };
    LiveAppsActionsComponent.propDecorators = {
        actionSelector: [{ type: ViewChild, args: [LiveAppsCaseActionsComponent, { static: false },] }],
        caseRef: [{ type: Input }],
        caseState: [{ type: Input }],
        sandboxId: [{ type: Input }],
        applicationId: [{ type: Input }],
        typeId: [{ type: Input }],
        customFormDefs: [{ type: Input }],
        formsFramework: [{ type: Input }],
        actionFilter: [{ type: Input }],
        caseActioned: [{ type: Output }]
    };
    return LiveAppsActionsComponent;
}());
export { LiveAppsActionsComponent };
if (false) {
    /** @type {?} */
    LiveAppsActionsComponent.prototype.actionSelector;
    /**
     * The case reference
     * @type {?}
     */
    LiveAppsActionsComponent.prototype.caseRef;
    /**
     * The state of the case
     * @type {?}
     */
    LiveAppsActionsComponent.prototype.caseState;
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsActionsComponent.prototype.sandboxId;
    /**
     * LA Application ID
     * @type {?}
     */
    LiveAppsActionsComponent.prototype.applicationId;
    /**
     * The LA Application Type Id (generally 1)
     * @type {?}
     */
    LiveAppsActionsComponent.prototype.typeId;
    /**
     * Custom Form configuration file
     * @type {?}
     */
    LiveAppsActionsComponent.prototype.customFormDefs;
    /**
     * Allow override of forms framework
     * Options: bootstrap-4 or material-design
     * @type {?}
     */
    LiveAppsActionsComponent.prototype.formsFramework;
    /**
     * Dont show buttons for any actions that start with this string.
     * eg: '$' will remove the action $Update
     * @type {?}
     */
    LiveAppsActionsComponent.prototype.actionFilter;
    /**
     * ~event caseActioned : Case action starterd (process started)
     * ~payload ProcessId : processId of started process in live apps (action)
     * @type {?}
     */
    LiveAppsActionsComponent.prototype.caseActioned;
    /** @type {?} */
    LiveAppsActionsComponent.prototype.selectedAction;
    /** @type {?} */
    LiveAppsActionsComponent.prototype.handleActionCompleted;
    /** @type {?} */
    LiveAppsActionsComponent.prototype.handleActionClicked;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLWFjdGlvbnMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpYmNvLXRjc3RrL3RjLWxpdmVhcHBzLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2xpdmUtYXBwcy1hY3Rpb25zL2xpdmUtYXBwcy1hY3Rpb25zLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFHeEYsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBQ3pELE9BQU8sRUFBQyw0QkFBNEIsRUFBQyxNQUFNLDREQUE0RCxDQUFDOzs7Ozs7QUFReEc7SUF5RUU7UUFBQSxpQkFBaUI7Ozs7O1FBOUJSLG1CQUFjLEdBQVcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsaUJBQWlCLENBQUM7Ozs7O1FBY3RGLGlCQUFZLEdBQTRCLElBQUksWUFBWSxFQUFhLENBQUM7O1FBS2hGLDBCQUFxQjs7OztRQUFHLFVBQUMsTUFBaUI7WUFDeEMsS0FBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDL0IsS0FBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUNyQyxDQUFDLEVBQUE7UUFHRCx3QkFBbUI7Ozs7UUFBRyxVQUFDLE1BQU07WUFDM0IsS0FBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLEVBQUUsQ0FBQztZQUNuQyxLQUFJLENBQUMsY0FBYyxHQUFHLE1BQU0sQ0FBQztRQUMvQixDQUFDLEVBQUE7SUFFZSxDQUFDOzs7O0lBR2pCLDJDQUFROzs7SUFBUjtJQUNBLENBQUM7O2dCQTdFRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHdCQUF3QjtvQkFDbEMsdWpCQUFpRDs7aUJBRWxEOzs7OztpQ0FHRSxTQUFTLFNBQUMsNEJBQTRCLEVBQUUsRUFBQyxNQUFNLEVBQUUsS0FBSyxFQUFDOzBCQUt2RCxLQUFLOzRCQUtMLEtBQUs7NEJBS0wsS0FBSztnQ0FLTCxLQUFLO3lCQUtMLEtBQUs7aUNBS0wsS0FBSztpQ0FNTCxLQUFLOytCQU9MLEtBQUs7K0JBT0wsTUFBTTs7SUFzQlQsK0JBQUM7Q0FBQSxBQS9FRCxJQStFQztTQTFFWSx3QkFBd0I7OztJQUVuQyxrREFBc0c7Ozs7O0lBS3RHLDJDQUF5Qjs7Ozs7SUFLekIsNkNBQTJCOzs7OztJQUszQiw2Q0FBMkI7Ozs7O0lBSzNCLGlEQUErQjs7Ozs7SUFLL0IsMENBQXdCOzs7OztJQUt4QixrREFBd0M7Ozs7OztJQU14QyxrREFBZ0c7Ozs7OztJQU9oRyxnREFBZ0M7Ozs7OztJQU9oQyxnREFBZ0Y7O0lBRWhGLGtEQUFtQzs7SUFHbkMseURBR0M7O0lBR0QsdURBR0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXQsIFZpZXdDaGlsZH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1Byb2Nlc3NJZH0gZnJvbSAnLi4vLi4vbW9kZWxzL2xpdmVhcHBzZGF0YSc7XG5pbXBvcnQge0xhUHJvY2Vzc1NlbGVjdGlvbn0gZnJvbSAnLi4vLi4vbW9kZWxzL3RjLWNhc2UtcHJvY2Vzc2VzJztcbmltcG9ydCB7Q3VzdG9tRm9ybURlZnN9IGZyb20gJ0B0aWJjby10Y3N0ay90Yy1mb3Jtcy1saWInO1xuaW1wb3J0IHtMaXZlQXBwc0Nhc2VBY3Rpb25zQ29tcG9uZW50fSBmcm9tICcuLi9saXZlLWFwcHMtY2FzZS1hY3Rpb25zL2xpdmUtYXBwcy1jYXNlLWFjdGlvbnMuY29tcG9uZW50JztcblxuXG4vKipcbiAqIE5vdCB1c2VkIGJ5IGFwcCBidXQgd3JhcHMgYWN0aW9uIGxpc3QgYW5kIGFjdGlvbiBleGVjdXRpb24uXG4gKlxuICpAZXhhbXBsZSA8dGNsYS1saXZlLWFwcHMtYWN0aW9ucz48L3RjbGEtbGl2ZS1hcHBzLWFjdGlvbnM+XG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RjbGEtbGl2ZS1hcHBzLWFjdGlvbnMnLFxuICB0ZW1wbGF0ZVVybDogJy4vbGl2ZS1hcHBzLWFjdGlvbnMuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9saXZlLWFwcHMtYWN0aW9ucy5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgTGl2ZUFwcHNBY3Rpb25zQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBAVmlld0NoaWxkKExpdmVBcHBzQ2FzZUFjdGlvbnNDb21wb25lbnQsIHtzdGF0aWM6IGZhbHNlfSkgYWN0aW9uU2VsZWN0b3I6IExpdmVBcHBzQ2FzZUFjdGlvbnNDb21wb25lbnRcblxuICAvKipcbiAgICogVGhlIGNhc2UgcmVmZXJlbmNlXG4gICAqL1xuICBASW5wdXQoKSBjYXNlUmVmOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBzdGF0ZSBvZiB0aGUgY2FzZVxuICAgKi9cbiAgQElucHV0KCkgY2FzZVN0YXRlOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIHNhbmRib3hJZCAtIHRoaXMgY29tZXMgZnJvbSBjbGFpbXMgcmVzb2x2ZXJcbiAgICovXG4gIEBJbnB1dCgpIHNhbmRib3hJZDogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBMQSBBcHBsaWNhdGlvbiBJRFxuICAgKi9cbiAgQElucHV0KCkgYXBwbGljYXRpb25JZDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgTEEgQXBwbGljYXRpb24gVHlwZSBJZCAoZ2VuZXJhbGx5IDEpXG4gICAqL1xuICBASW5wdXQoKSB0eXBlSWQ6IHN0cmluZztcblxuICAvKipcbiAgICogQ3VzdG9tIEZvcm0gY29uZmlndXJhdGlvbiBmaWxlXG4gICAqL1xuICBASW5wdXQoKSBjdXN0b21Gb3JtRGVmczogQ3VzdG9tRm9ybURlZnM7XG5cbiAgLyoqXG4gICAqIEFsbG93IG92ZXJyaWRlIG9mIGZvcm1zIGZyYW1ld29ya1xuICAgKiBPcHRpb25zOiBib290c3RyYXAtNCBvciBtYXRlcmlhbC1kZXNpZ25cbiAgICovXG4gIEBJbnB1dCgpIGZvcm1zRnJhbWV3b3JrOiBzdHJpbmcgPSB0aGlzLmZvcm1zRnJhbWV3b3JrID8gdGhpcy5mb3Jtc0ZyYW1ld29yayA6ICdtYXRlcmlhbC1kZXNpZ24nO1xuXG5cbiAgLyoqXG4gICAqIERvbnQgc2hvdyBidXR0b25zIGZvciBhbnkgYWN0aW9ucyB0aGF0IHN0YXJ0IHdpdGggdGhpcyBzdHJpbmcuXG4gICAqIGVnOiAnJCcgd2lsbCByZW1vdmUgdGhlIGFjdGlvbiAkVXBkYXRlXG4gICAqL1xuICBASW5wdXQoKSBhY3Rpb25GaWx0ZXI6IHN0cmluZ1tdO1xuXG5cbiAgLyoqXG4gICAqIH5ldmVudCBjYXNlQWN0aW9uZWQgOiBDYXNlIGFjdGlvbiBzdGFydGVyZCAocHJvY2VzcyBzdGFydGVkKVxuICAgKiB+cGF5bG9hZCBQcm9jZXNzSWQgOiBwcm9jZXNzSWQgb2Ygc3RhcnRlZCBwcm9jZXNzIGluIGxpdmUgYXBwcyAoYWN0aW9uKVxuICAgKi9cbiAgQE91dHB1dCgpIGNhc2VBY3Rpb25lZDogRXZlbnRFbWl0dGVyPFByb2Nlc3NJZD4gPSBuZXcgRXZlbnRFbWl0dGVyPFByb2Nlc3NJZD4oKTtcblxuICBzZWxlY3RlZEFjdGlvbjogTGFQcm9jZXNzU2VsZWN0aW9uO1xuXG4gIC8vIGFjdGlvbiBjbGlja2VkXG4gIGhhbmRsZUFjdGlvbkNvbXBsZXRlZCA9IChyZXN1bHQ6IFByb2Nlc3NJZCkgPT4ge1xuICAgIHRoaXMuY2FzZUFjdGlvbmVkLmVtaXQocmVzdWx0KTtcbiAgICB0aGlzLmFjdGlvblNlbGVjdG9yLnRvZ2dsZUVuYWJsZSgpO1xuICB9XG5cblxuICBoYW5kbGVBY3Rpb25DbGlja2VkID0gKGFjdGlvbikgPT4ge1xuICAgIHRoaXMuYWN0aW9uU2VsZWN0b3IudG9nZ2xlRW5hYmxlKCk7XG4gICAgdGhpcy5zZWxlY3RlZEFjdGlvbiA9IGFjdGlvbjtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cblxuICBuZ09uSW5pdCgpIHtcbiAgfVxuXG59XG4iXX0=