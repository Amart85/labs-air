/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { LiveAppsService } from '../../services/live-apps.service';
import { CaseType, CaseTypesList } from '../../models/liveappsdata';
import { map, take, takeUntil } from 'rxjs/operators';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
/**
 * Lists live apps applications in drop down list allowing selection of app
 *
 * ![alt-text](../live-apps-applications.png "Image")
 *
 * \@example <tcla-live-apps-applications></tcla-live-apps-applications>
 */
var LiveAppsApplicationsComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LiveAppsApplicationsComponent, _super);
    function LiveAppsApplicationsComponent(liveapps) {
        var _this = _super.call(this) || this;
        _this.liveapps = liveapps;
        /**
         * Application selected from dropdown (output)
         */
        _this.selectedApp = _this.selectedApp ? _this.selectedApp : new CaseType();
        /**
         * ~event selection : Value selected in child component
         * ~payload CaseType : type varies.  but is when something is selected in a drop down it is passed back to the caller
         */
        _this.selection = new EventEmitter();
        _this.applications = new CaseTypesList();
        _this.changeAppSelection = (/**
         * @param {?} appSelected
         * @return {?}
         */
        function (appSelected) {
            _this.selectedApp = _this.applications.casetypes.find((/**
             * @param {?} casetype
             * @return {?}
             */
            function (casetype) {
                return casetype.applicationId === appSelected.applicationId;
            }));
        });
        _this.selectApplication = (/**
         * @param {?} selectionEvent
         * @return {?}
         */
        function (selectionEvent) {
            _this.selectedApp = selectionEvent.source.value;
            _this.selection.emit(selectionEvent.source.value);
        });
        _this.refresh = (/**
         * @param {?} bypassCache
         * @return {?}
         */
        function (bypassCache) {
            _this.liveapps.getApplications(_this.sandboxId, _this.appIds, 100, bypassCache)
                .pipe(take(1), takeUntil(_this._destroyed$), map((/**
             * @param {?} applicationList
             * @return {?}
             */
            function (applicationList) {
                _this.applications = applicationList;
                if (_this.selectedApp.applicationId) {
                    _this.selectedApp = applicationList.casetypes.find((/**
                     * @param {?} casetype
                     * @return {?}
                     */
                    function (casetype) {
                        return casetype.applicationId === _this.selectedApp.applicationId;
                    }));
                    // this.selection.emit(this.selectedApp);
                }
                else 
                // select first as default
                if (applicationList.casetypes.length > 0 && _this.selectFirstApp) {
                    _this.selectedApp = applicationList.casetypes[0];
                    _this.selection.emit(applicationList.casetypes[0]);
                }
            })))
                .subscribe(null, (/**
             * @param {?} error
             * @return {?}
             */
            function (error) { _this.errorMessage = 'Error retrieving applications: ' + error.error.errorMsg; }));
        });
        return _this;
    }
    /**
     * @return {?}
     */
    LiveAppsApplicationsComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.refresh(false);
    };
    LiveAppsApplicationsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tcla-live-apps-applications',
                    template: "<div class=\"tcs-application-selector\" fxFlex style=\"margin-left: 10px;\">\n    <mat-label></mat-label>\n    <mat-select *ngIf=\"selectedApp\" class=\"tcs-application-selector-option\" [disableOptionCentering]=\"true\" placeholder=\"Application\" [(value)]=\"selectedApp\" (selectionChange)=\"selectApplication($event)\" matTooltip=\"{{selectedApp.applicationName}}\" matTooltipShowDelay=\"1000\" matTooltipPosition=\"below\">\n      <mat-option *ngFor=\"let application of applications.casetypes\" [value]=\"application\">\n        {{application.label | ellipsis : 20}}\n      </mat-option>\n    </mat-select>\n</div>\n\n\n\n<!--div *ngIf=\"errorMessage\">{{errorMessage}}</div>\n<div *ngIf=\"applications\" class=\"la-applications-div\" fxLayoutAlign=\"space-around start\">\n  <div class=\"la-applications-card\" fxLayout=\"column\">\n    <h3>Select application:</h3>\n    <div class=\"la-application-selection\">\n      <div class=\"la-available-sub\" (click)=\"selectApplication(application)\" *ngFor=\"let application of applications.casetypes\">\n        <div class=\"la-application-name\">{{application.applicationName}}</div>\n        <div fxLayout=\"column\" class=\"la-application-selection-dtl\" fxLayoutAlign=\"start start\">\n          <div>Application Id: {{application.applicationId}}</div>\n          <div>Type Id: {{application.id}}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div-->\n",
                    styles: ["::ng-deep .tcs-application-selector .mat-form-field-underline{display:none}:host ::ng-deep .mat-select-value{min-width:100px;max-width:100%;width:auto}.la-applications-div{margin-top:50px}.la-applications-card{width:500px}.la-available-sub:hover{box-shadow:0 7px 14px 0 rgba(0,0,0,.3);-webkit-transition:.2s ease-in-out;transition:.2s ease-in-out;cursor:pointer}.la-available-sub{border:1px solid #dedede;border-radius:4px;box-shadow:0 1px 4px 0 rgba(0,0,0,.1);padding:20px 31px 31px;margin-top:5px;margin-bottom:5px}.la-application-name{font-size:18px;font-weight:700}:host ::ng-deep .tcs-application-selector-option .mat-select-value span{font-family:Source Sans Pro;font-size:16px;font-weight:400;font-style:normal;font-stretch:normal;line-height:1.5;letter-spacing:.3px;color:#0081cb}:host ::ng-deep .tcs-application-selector-option .mat-select-arrow-wrapper div{color:#0081cb}"]
                }] }
    ];
    /** @nocollapse */
    LiveAppsApplicationsComponent.ctorParameters = function () { return [
        { type: LiveAppsService }
    ]; };
    LiveAppsApplicationsComponent.propDecorators = {
        sandboxId: [{ type: Input }],
        appIds: [{ type: Input }],
        selectFirstApp: [{ type: Input }],
        selectedApp: [{ type: Input }],
        selection: [{ type: Output }]
    };
    return LiveAppsApplicationsComponent;
}(LiveAppsComponent));
export { LiveAppsApplicationsComponent };
if (false) {
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsApplicationsComponent.prototype.sandboxId;
    /**
     * The list of LA Application IDs you want to handle
     * @type {?}
     */
    LiveAppsApplicationsComponent.prototype.appIds;
    /**
     * Whether to auto select the first app in dropdown selector (eg search)
     * @type {?}
     */
    LiveAppsApplicationsComponent.prototype.selectFirstApp;
    /**
     * Application selected from dropdown (output)
     * @type {?}
     */
    LiveAppsApplicationsComponent.prototype.selectedApp;
    /**
     * ~event selection : Value selected in child component
     * ~payload CaseType : type varies.  but is when something is selected in a drop down it is passed back to the caller
     * @type {?}
     */
    LiveAppsApplicationsComponent.prototype.selection;
    /** @type {?} */
    LiveAppsApplicationsComponent.prototype.applications;
    /** @type {?} */
    LiveAppsApplicationsComponent.prototype.errorMessage;
    /** @type {?} */
    LiveAppsApplicationsComponent.prototype.changeAppSelection;
    /** @type {?} */
    LiveAppsApplicationsComponent.prototype.selectApplication;
    /** @type {?} */
    LiveAppsApplicationsComponent.prototype.refresh;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsApplicationsComponent.prototype.liveapps;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLWFwcGxpY2F0aW9ucy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGliY28tdGNzdGsvdGMtbGl2ZWFwcHMtbGliLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvbGl2ZS1hcHBzLWFwcGxpY2F0aW9ucy9saXZlLWFwcHMtYXBwbGljYXRpb25zLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUVBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBcUIsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hGLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxrQ0FBa0MsQ0FBQztBQUNqRSxPQUFPLEVBQVcsUUFBUSxFQUFFLGFBQWEsRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBQzVFLE9BQU8sRUFBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRXBELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHNEQUFzRCxDQUFDOzs7Ozs7OztBQVd2RjtJQU1tRCx5REFBaUI7SUFnQ2xFLHVDQUFzQixRQUF5QjtRQUEvQyxZQUNFLGlCQUFPLFNBQ1I7UUFGcUIsY0FBUSxHQUFSLFFBQVEsQ0FBaUI7Ozs7UUFidEMsaUJBQVcsR0FBYSxLQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxLQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJLFFBQVEsRUFBRSxDQUFDOzs7OztRQU81RSxlQUFTLEdBQTJCLElBQUksWUFBWSxFQUFZLENBQUM7UUFFM0Usa0JBQVksR0FBa0IsSUFBSSxhQUFhLEVBQUUsQ0FBQztRQVFsRCx3QkFBa0I7Ozs7UUFBRyxVQUFDLFdBQXFCO1lBQ3pDLEtBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsSUFBSTs7OztZQUFDLFVBQUMsUUFBUTtnQkFDM0QsT0FBTyxRQUFRLENBQUMsYUFBYSxLQUFLLFdBQVcsQ0FBQyxhQUFhLENBQUM7WUFDOUQsQ0FBQyxFQUFDLENBQUM7UUFDTCxDQUFDLEVBQUE7UUFFRCx1QkFBaUI7Ozs7UUFBRyxVQUFDLGNBQWM7WUFDakMsS0FBSSxDQUFDLFdBQVcsR0FBRyxjQUFjLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztZQUMvQyxLQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ25ELENBQUMsRUFBQTtRQUVNLGFBQU87Ozs7UUFBRyxVQUFDLFdBQW9CO1lBQ3BDLEtBQUksQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLEtBQUksQ0FBQyxTQUFTLEVBQUUsS0FBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsV0FBVyxDQUFDO2lCQUN6RSxJQUFJLENBQ0gsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUNQLFNBQVMsQ0FBQyxLQUFJLENBQUMsV0FBVyxDQUFDLEVBQzNCLEdBQUc7Ozs7WUFBQyxVQUFBLGVBQWU7Z0JBQ2pCLEtBQUksQ0FBQyxZQUFZLEdBQUcsZUFBZSxDQUFDO2dCQUNwQyxJQUFJLEtBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxFQUFFO29CQUNsQyxLQUFJLENBQUMsV0FBVyxHQUFHLGVBQWUsQ0FBQyxTQUFTLENBQUMsSUFBSTs7OztvQkFBQyxVQUFDLFFBQVE7d0JBQ3pELE9BQU8sUUFBUSxDQUFDLGFBQWEsS0FBSyxLQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQztvQkFDbkUsQ0FBQyxFQUFDLENBQUM7b0JBQ0gseUNBQXlDO2lCQUMxQzs7Z0JBQ0QsMEJBQTBCO2dCQUN4QixJQUFJLGVBQWUsQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxLQUFJLENBQUMsY0FBYyxFQUFFO29CQUMvRCxLQUFJLENBQUMsV0FBVyxHQUFHLGVBQWUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQ2hELEtBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztpQkFDckQ7WUFDSCxDQUFDLEVBQUMsQ0FDSDtpQkFDQSxTQUFTLENBQUMsSUFBSTs7OztZQUFFLFVBQUEsS0FBSyxJQUFNLEtBQUksQ0FBQyxZQUFZLEdBQUcsaUNBQWlDLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQztRQUNqSCxDQUFDLEVBQUE7O0lBbENELENBQUM7Ozs7SUFvQ0QsZ0RBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN0QixDQUFDOztnQkE5RUYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSw2QkFBNkI7b0JBQ3ZDLDA1Q0FBc0Q7O2lCQUV2RDs7OztnQkFuQk8sZUFBZTs7OzRCQXlCcEIsS0FBSzt5QkFLTCxLQUFLO2lDQUtMLEtBQUs7OEJBS0wsS0FBSzs0QkFPTCxNQUFNOztJQWdEVCxvQ0FBQztDQUFBLEFBaEZELENBTW1ELGlCQUFpQixHQTBFbkU7U0ExRVksNkJBQTZCOzs7Ozs7SUFJeEMsa0RBQTJCOzs7OztJQUszQiwrQ0FBMEI7Ozs7O0lBSzFCLHVEQUFpQzs7Ozs7SUFLakMsb0RBQXNGOzs7Ozs7SUFPdEYsa0RBQTJFOztJQUUzRSxxREFBa0Q7O0lBRWxELHFEQUFxQjs7SUFNckIsMkRBSUM7O0lBRUQsMERBR0M7O0lBRUQsZ0RBcUJDOzs7OztJQXBDVyxpREFBbUMiLCJzb3VyY2VzQ29udGVudCI6WyJcblxuaW1wb3J0IHtDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0LCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtMaXZlQXBwc1NlcnZpY2V9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2xpdmUtYXBwcy5zZXJ2aWNlJztcbmltcG9ydCB7Q2FzZUluZm8sIENhc2VUeXBlLCBDYXNlVHlwZXNMaXN0fSBmcm9tICcuLi8uLi9tb2RlbHMvbGl2ZWFwcHNkYXRhJztcbmltcG9ydCB7bWFwLCB0YWtlLCB0YWtlVW50aWx9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7U3ViamVjdH0gZnJvbSAncnhqcyc7XG5pbXBvcnQge0xpdmVBcHBzQ29tcG9uZW50fSBmcm9tICcuLi9saXZlLWFwcHMtY29tcG9uZW50L2xpdmUtYXBwcy1jb21wb25lbnQuY29tcG9uZW50JztcblxuXG4vKipcbiAqIExpc3RzIGxpdmUgYXBwcyBhcHBsaWNhdGlvbnMgaW4gZHJvcCBkb3duIGxpc3QgYWxsb3dpbmcgc2VsZWN0aW9uIG9mIGFwcFxuICpcbiAqICFbYWx0LXRleHRdKC4uL2xpdmUtYXBwcy1hcHBsaWNhdGlvbnMucG5nIFwiSW1hZ2VcIilcbiAqXG4gKkBleGFtcGxlIDx0Y2xhLWxpdmUtYXBwcy1hcHBsaWNhdGlvbnM+PC90Y2xhLWxpdmUtYXBwcy1hcHBsaWNhdGlvbnM+XG4gKi9cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGNsYS1saXZlLWFwcHMtYXBwbGljYXRpb25zJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xpdmUtYXBwcy1hcHBsaWNhdGlvbnMuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9saXZlLWFwcHMtYXBwbGljYXRpb25zLmNvbXBvbmVudC5jc3MnXVxufSlcblxuZXhwb3J0IGNsYXNzIExpdmVBcHBzQXBwbGljYXRpb25zQ29tcG9uZW50IGV4dGVuZHMgTGl2ZUFwcHNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAvKipcbiAgICogc2FuZGJveElkIC0gdGhpcyBjb21lcyBmcm9tIGNsYWltcyByZXNvbHZlclxuICAgKi9cbiAgQElucHV0KCkgc2FuZGJveElkOiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFRoZSBsaXN0IG9mIExBIEFwcGxpY2F0aW9uIElEcyB5b3Ugd2FudCB0byBoYW5kbGVcbiAgICovXG4gIEBJbnB1dCgpIGFwcElkczogc3RyaW5nW107XG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgdG8gYXV0byBzZWxlY3QgdGhlIGZpcnN0IGFwcCBpbiBkcm9wZG93biBzZWxlY3RvciAoZWcgc2VhcmNoKVxuICAgKi9cbiAgQElucHV0KCkgc2VsZWN0Rmlyc3RBcHA6IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIEFwcGxpY2F0aW9uIHNlbGVjdGVkIGZyb20gZHJvcGRvd24gKG91dHB1dClcbiAgICovXG4gIEBJbnB1dCgpIHNlbGVjdGVkQXBwOiBDYXNlVHlwZSA9IHRoaXMuc2VsZWN0ZWRBcHAgPyB0aGlzLnNlbGVjdGVkQXBwIDogbmV3IENhc2VUeXBlKCk7XG5cblxuICAvKipcbiAgICogfmV2ZW50IHNlbGVjdGlvbiA6IFZhbHVlIHNlbGVjdGVkIGluIGNoaWxkIGNvbXBvbmVudFxuICAgKiB+cGF5bG9hZCBDYXNlVHlwZSA6IHR5cGUgdmFyaWVzLiAgYnV0IGlzIHdoZW4gc29tZXRoaW5nIGlzIHNlbGVjdGVkIGluIGEgZHJvcCBkb3duIGl0IGlzIHBhc3NlZCBiYWNrIHRvIHRoZSBjYWxsZXJcbiAgICovXG4gIEBPdXRwdXQoKSBzZWxlY3Rpb246IEV2ZW50RW1pdHRlcjxDYXNlVHlwZT4gPSBuZXcgRXZlbnRFbWl0dGVyPENhc2VUeXBlPigpO1xuXG4gIGFwcGxpY2F0aW9uczogQ2FzZVR5cGVzTGlzdCA9IG5ldyBDYXNlVHlwZXNMaXN0KCk7XG4gIC8vIHNlbGVjdGVkQXBwOiBDYXNlVHlwZSA9IG5ldyBDYXNlVHlwZSgpO1xuICBlcnJvck1lc3NhZ2U6IHN0cmluZztcblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgbGl2ZWFwcHM6IExpdmVBcHBzU2VydmljZSkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBjaGFuZ2VBcHBTZWxlY3Rpb24gPSAoYXBwU2VsZWN0ZWQ6IENhc2VUeXBlKSA9PiB7XG4gICAgdGhpcy5zZWxlY3RlZEFwcCA9IHRoaXMuYXBwbGljYXRpb25zLmNhc2V0eXBlcy5maW5kKChjYXNldHlwZSkgPT4ge1xuICAgICAgcmV0dXJuIGNhc2V0eXBlLmFwcGxpY2F0aW9uSWQgPT09IGFwcFNlbGVjdGVkLmFwcGxpY2F0aW9uSWQ7XG4gICAgfSk7XG4gIH1cblxuICBzZWxlY3RBcHBsaWNhdGlvbiA9IChzZWxlY3Rpb25FdmVudCkgPT4ge1xuICAgIHRoaXMuc2VsZWN0ZWRBcHAgPSBzZWxlY3Rpb25FdmVudC5zb3VyY2UudmFsdWU7XG4gICAgdGhpcy5zZWxlY3Rpb24uZW1pdChzZWxlY3Rpb25FdmVudC5zb3VyY2UudmFsdWUpO1xuICB9XG5cbiAgcHVibGljIHJlZnJlc2ggPSAoYnlwYXNzQ2FjaGU6IGJvb2xlYW4pID0+IHtcbiAgICB0aGlzLmxpdmVhcHBzLmdldEFwcGxpY2F0aW9ucyh0aGlzLnNhbmRib3hJZCwgdGhpcy5hcHBJZHMsIDEwMCwgYnlwYXNzQ2FjaGUpXG4gICAgICAucGlwZShcbiAgICAgICAgdGFrZSgxKSxcbiAgICAgICAgdGFrZVVudGlsKHRoaXMuX2Rlc3Ryb3llZCQpLFxuICAgICAgICBtYXAoYXBwbGljYXRpb25MaXN0ID0+IHtcbiAgICAgICAgICB0aGlzLmFwcGxpY2F0aW9ucyA9IGFwcGxpY2F0aW9uTGlzdDtcbiAgICAgICAgICBpZiAodGhpcy5zZWxlY3RlZEFwcC5hcHBsaWNhdGlvbklkKSB7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdGVkQXBwID0gYXBwbGljYXRpb25MaXN0LmNhc2V0eXBlcy5maW5kKChjYXNldHlwZSkgPT4ge1xuICAgICAgICAgICAgICByZXR1cm4gY2FzZXR5cGUuYXBwbGljYXRpb25JZCA9PT0gdGhpcy5zZWxlY3RlZEFwcC5hcHBsaWNhdGlvbklkO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAvLyB0aGlzLnNlbGVjdGlvbi5lbWl0KHRoaXMuc2VsZWN0ZWRBcHApO1xuICAgICAgICAgIH0gZWxzZVxuICAgICAgICAgIC8vIHNlbGVjdCBmaXJzdCBhcyBkZWZhdWx0XG4gICAgICAgICAgICBpZiAoYXBwbGljYXRpb25MaXN0LmNhc2V0eXBlcy5sZW5ndGggPiAwICYmIHRoaXMuc2VsZWN0Rmlyc3RBcHApIHtcbiAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZEFwcCA9IGFwcGxpY2F0aW9uTGlzdC5jYXNldHlwZXNbMF07XG4gICAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uLmVtaXQoYXBwbGljYXRpb25MaXN0LmNhc2V0eXBlc1swXSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgKVxuICAgICAgLnN1YnNjcmliZShudWxsLCBlcnJvciA9PiB7IHRoaXMuZXJyb3JNZXNzYWdlID0gJ0Vycm9yIHJldHJpZXZpbmcgYXBwbGljYXRpb25zOiAnICsgZXJyb3IuZXJyb3IuZXJyb3JNc2c7IH0pO1xuICB9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5yZWZyZXNoKGZhbHNlKTtcbiAgfVxuXG59XG4iXX0=