/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { LiveAppsService } from '../../services/live-apps.service';
import { CaseType, CaseTypesList } from '../../models/liveappsdata';
import { take, takeUntil } from 'rxjs/operators';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
/**
 * Lists live apps applications in drop down list allowing selection of app
 *
 * ![alt-text](../live-apps-applications.png "Image")
 *
 * \@example <tcla-live-apps-applications></tcla-live-apps-applications>
 */
var LiveAppsApplicationsComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LiveAppsApplicationsComponent, _super);
    function LiveAppsApplicationsComponent(liveapps) {
        var _this = _super.call(this) || this;
        _this.liveapps = liveapps;
        /**
         * Application selected from dropdown (output)
         */
        _this.selectedApp = _this.selectedApp ? _this.selectedApp : new CaseType();
        /**
         * ~event selection : Value selected in child component
         * ~payload CaseType : type varies.  but is when something is selected in a drop down it is passed back to the caller
         */
        _this.selection = new EventEmitter();
        _this.applications = new CaseTypesList();
        _this.changeAppSelection = (/**
         * @param {?} appSelected
         * @return {?}
         */
        function (appSelected) {
            _this.selectedApp = _this.applications.casetypes.find((/**
             * @param {?} casetype
             * @return {?}
             */
            function (casetype) {
                return casetype.applicationId === appSelected.applicationId;
            }));
        });
        _this.selectApplication = (/**
         * @param {?} selectionEvent
         * @return {?}
         */
        function (selectionEvent) {
            _this.selectedApp = selectionEvent.source.value;
            _this.selection.emit(selectionEvent.source.value);
        });
        _this.refresh = (/**
         * @param {?} bypassCache
         * @return {?}
         */
        function (bypassCache) {
            _this.liveapps.getApplications(_this.sandboxId, _this.appIds, 100, bypassCache)
                .pipe(take(1), takeUntil(_this._destroyed$))
                .subscribe((/**
             * @param {?} applicationList
             * @return {?}
             */
            function (applicationList) {
                _this.applications = applicationList;
                if (_this.selectedApp.applicationId) {
                    _this.selectedApp = applicationList.casetypes.find((/**
                     * @param {?} casetype
                     * @return {?}
                     */
                    function (casetype) {
                        return casetype.applicationId === _this.selectedApp.applicationId;
                    }));
                    // this.selection.emit(this.selectedApp);
                }
                else 
                // select first as default
                if (applicationList.casetypes.length > 0 && _this.selectFirstApp) {
                    _this.selectedApp = applicationList.casetypes[0];
                    _this.selection.emit(applicationList.casetypes[0]);
                }
            }), (/**
             * @param {?} error
             * @return {?}
             */
            function (error) { _this.errorMessage = 'Error retrieving applications: ' + error.error.errorMsg; }));
        });
        return _this;
    }
    /**
     * @return {?}
     */
    LiveAppsApplicationsComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.refresh(false);
    };
    LiveAppsApplicationsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tcla-live-apps-applications',
                    template: "<div class=\"tcs-application-selector\" fxFlex style=\"margin-left: 10px;\">\n    <mat-label></mat-label>\n    <mat-select *ngIf=\"selectedApp\" class=\"tcs-application-selector-option\" [disableOptionCentering]=\"true\" placeholder=\"Application\" [(value)]=\"selectedApp\" (selectionChange)=\"selectApplication($event)\" matTooltip=\"{{selectedApp.applicationName}}\" matTooltipShowDelay=\"1000\" matTooltipPosition=\"below\">\n      <mat-option *ngFor=\"let application of applications.casetypes\" [value]=\"application\">\n        {{application.label | ellipsis : 20}}\n      </mat-option>\n    </mat-select>\n</div>\n\n\n\n<!--div *ngIf=\"errorMessage\">{{errorMessage}}</div>\n<div *ngIf=\"applications\" class=\"la-applications-div\" fxLayoutAlign=\"space-around start\">\n  <div class=\"la-applications-card\" fxLayout=\"column\">\n    <h3>Select application:</h3>\n    <div class=\"la-application-selection\">\n      <div class=\"la-available-sub\" (click)=\"selectApplication(application)\" *ngFor=\"let application of applications.casetypes\">\n        <div class=\"la-application-name\">{{application.applicationName}}</div>\n        <div fxLayout=\"column\" class=\"la-application-selection-dtl\" fxLayoutAlign=\"start start\">\n          <div>Application Id: {{application.applicationId}}</div>\n          <div>Type Id: {{application.id}}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div-->\n",
                    styles: ["::ng-deep .tcs-application-selector .mat-form-field-underline{display:none}:host ::ng-deep .mat-select-value{min-width:100px;max-width:100%;width:auto}.la-applications-div{margin-top:50px}.la-applications-card{width:500px}.la-available-sub:hover{box-shadow:0 7px 14px 0 rgba(0,0,0,.3);-webkit-transition:.2s ease-in-out;transition:.2s ease-in-out;cursor:pointer}.la-available-sub{border:1px solid #dedede;border-radius:4px;box-shadow:0 1px 4px 0 rgba(0,0,0,.1);padding:20px 31px 31px;margin-top:5px;margin-bottom:5px}.la-application-name{font-size:18px;font-weight:700}:host ::ng-deep .tcs-application-selector-option .mat-select-value span{font-family:Source Sans Pro;font-size:16px;font-weight:400;font-style:normal;font-stretch:normal;line-height:1.5;letter-spacing:.3px;color:#0081cb}:host ::ng-deep .tcs-application-selector-option .mat-select-arrow-wrapper div{color:#0081cb}"]
                }] }
    ];
    /** @nocollapse */
    LiveAppsApplicationsComponent.ctorParameters = function () { return [
        { type: LiveAppsService }
    ]; };
    LiveAppsApplicationsComponent.propDecorators = {
        sandboxId: [{ type: Input }],
        appIds: [{ type: Input }],
        selectFirstApp: [{ type: Input }],
        selectedApp: [{ type: Input }],
        selection: [{ type: Output }]
    };
    return LiveAppsApplicationsComponent;
}(LiveAppsComponent));
export { LiveAppsApplicationsComponent };
if (false) {
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsApplicationsComponent.prototype.sandboxId;
    /**
     * The list of LA Application IDs you want to handle
     * @type {?}
     */
    LiveAppsApplicationsComponent.prototype.appIds;
    /**
     * Whether to auto select the first app in dropdown selector (eg search)
     * @type {?}
     */
    LiveAppsApplicationsComponent.prototype.selectFirstApp;
    /**
     * Application selected from dropdown (output)
     * @type {?}
     */
    LiveAppsApplicationsComponent.prototype.selectedApp;
    /**
     * ~event selection : Value selected in child component
     * ~payload CaseType : type varies.  but is when something is selected in a drop down it is passed back to the caller
     * @type {?}
     */
    LiveAppsApplicationsComponent.prototype.selection;
    /** @type {?} */
    LiveAppsApplicationsComponent.prototype.applications;
    /** @type {?} */
    LiveAppsApplicationsComponent.prototype.errorMessage;
    /** @type {?} */
    LiveAppsApplicationsComponent.prototype.changeAppSelection;
    /** @type {?} */
    LiveAppsApplicationsComponent.prototype.selectApplication;
    /** @type {?} */
    LiveAppsApplicationsComponent.prototype.refresh;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsApplicationsComponent.prototype.liveapps;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLWFwcGxpY2F0aW9ucy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGliY28tdGNzdGsvdGMtbGl2ZWFwcHMtbGliLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvbGl2ZS1hcHBzLWFwcGxpY2F0aW9ucy9saXZlLWFwcHMtYXBwbGljYXRpb25zLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUVBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBcUIsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hGLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxrQ0FBa0MsQ0FBQztBQUNqRSxPQUFPLEVBQVcsUUFBUSxFQUFFLGFBQWEsRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBQzVFLE9BQU8sRUFBTSxJQUFJLEVBQUUsU0FBUyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFcEQsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sc0RBQXNELENBQUM7Ozs7Ozs7O0FBV3ZGO0lBTW1ELHlEQUFpQjtJQWdDbEUsdUNBQXNCLFFBQXlCO1FBQS9DLFlBQ0UsaUJBQU8sU0FDUjtRQUZxQixjQUFRLEdBQVIsUUFBUSxDQUFpQjs7OztRQWJ0QyxpQkFBVyxHQUFhLEtBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLEtBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLElBQUksUUFBUSxFQUFFLENBQUM7Ozs7O1FBTzVFLGVBQVMsR0FBMkIsSUFBSSxZQUFZLEVBQVksQ0FBQztRQUUzRSxrQkFBWSxHQUFrQixJQUFJLGFBQWEsRUFBRSxDQUFDO1FBUWxELHdCQUFrQjs7OztRQUFHLFVBQUMsV0FBcUI7WUFDekMsS0FBSSxDQUFDLFdBQVcsR0FBRyxLQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxJQUFJOzs7O1lBQUMsVUFBQyxRQUFRO2dCQUMzRCxPQUFPLFFBQVEsQ0FBQyxhQUFhLEtBQUssV0FBVyxDQUFDLGFBQWEsQ0FBQztZQUM5RCxDQUFDLEVBQUMsQ0FBQztRQUNMLENBQUMsRUFBQTtRQUVELHVCQUFpQjs7OztRQUFHLFVBQUMsY0FBYztZQUNqQyxLQUFJLENBQUMsV0FBVyxHQUFHLGNBQWMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDO1lBQy9DLEtBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDbkQsQ0FBQyxFQUFBO1FBRU0sYUFBTzs7OztRQUFHLFVBQUMsV0FBb0I7WUFDcEMsS0FBSSxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsS0FBSSxDQUFDLFNBQVMsRUFBRSxLQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxXQUFXLENBQUM7aUJBQ3pFLElBQUksQ0FDSCxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQ1AsU0FBUyxDQUFDLEtBQUksQ0FBQyxXQUFXLENBQUMsQ0FDNUI7aUJBQ0EsU0FBUzs7OztZQUFDLFVBQUEsZUFBZTtnQkFDeEIsS0FBSSxDQUFDLFlBQVksR0FBRyxlQUFlLENBQUM7Z0JBQ3BDLElBQUksS0FBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLEVBQUU7b0JBQ2xDLEtBQUksQ0FBQyxXQUFXLEdBQUcsZUFBZSxDQUFDLFNBQVMsQ0FBQyxJQUFJOzs7O29CQUFDLFVBQUMsUUFBUTt3QkFDekQsT0FBTyxRQUFRLENBQUMsYUFBYSxLQUFLLEtBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDO29CQUNuRSxDQUFDLEVBQUMsQ0FBQztvQkFDSCx5Q0FBeUM7aUJBQzFDOztnQkFDRCwwQkFBMEI7Z0JBQzFCLElBQUksZUFBZSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxJQUFJLEtBQUksQ0FBQyxjQUFjLEVBQUU7b0JBQy9ELEtBQUksQ0FBQyxXQUFXLEdBQUcsZUFBZSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDaEQsS0FBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2lCQUNuRDtZQUNILENBQUM7Ozs7WUFBRSxVQUFBLEtBQUssSUFBTSxLQUFJLENBQUMsWUFBWSxHQUFHLGlDQUFpQyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUM7UUFDbkcsQ0FBQyxFQUFBOztJQWpDRCxDQUFDOzs7O0lBbUNELGdEQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdEIsQ0FBQzs7Z0JBN0VGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsNkJBQTZCO29CQUN2QywwNUNBQXNEOztpQkFFdkQ7Ozs7Z0JBbkJPLGVBQWU7Ozs0QkF5QnBCLEtBQUs7eUJBS0wsS0FBSztpQ0FLTCxLQUFLOzhCQUtMLEtBQUs7NEJBT0wsTUFBTTs7SUErQ1Qsb0NBQUM7Q0FBQSxBQS9FRCxDQU1tRCxpQkFBaUIsR0F5RW5FO1NBekVZLDZCQUE2Qjs7Ozs7O0lBSXhDLGtEQUEyQjs7Ozs7SUFLM0IsK0NBQTBCOzs7OztJQUsxQix1REFBaUM7Ozs7O0lBS2pDLG9EQUFzRjs7Ozs7O0lBT3RGLGtEQUEyRTs7SUFFM0UscURBQWtEOztJQUVsRCxxREFBcUI7O0lBTXJCLDJEQUlDOztJQUVELDBEQUdDOztJQUVELGdEQW9CQzs7Ozs7SUFuQ1csaURBQW1DIiwic291cmNlc0NvbnRlbnQiOlsiXG5cbmltcG9ydCB7Q29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCwgT3V0cHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7TGl2ZUFwcHNTZXJ2aWNlfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9saXZlLWFwcHMuc2VydmljZSc7XG5pbXBvcnQge0Nhc2VJbmZvLCBDYXNlVHlwZSwgQ2FzZVR5cGVzTGlzdH0gZnJvbSAnLi4vLi4vbW9kZWxzL2xpdmVhcHBzZGF0YSc7XG5pbXBvcnQge21hcCwgdGFrZSwgdGFrZVVudGlsfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQge1N1YmplY3R9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtMaXZlQXBwc0NvbXBvbmVudH0gZnJvbSAnLi4vbGl2ZS1hcHBzLWNvbXBvbmVudC9saXZlLWFwcHMtY29tcG9uZW50LmNvbXBvbmVudCc7XG5cblxuLyoqXG4gKiBMaXN0cyBsaXZlIGFwcHMgYXBwbGljYXRpb25zIGluIGRyb3AgZG93biBsaXN0IGFsbG93aW5nIHNlbGVjdGlvbiBvZiBhcHBcbiAqXG4gKiAhW2FsdC10ZXh0XSguLi9saXZlLWFwcHMtYXBwbGljYXRpb25zLnBuZyBcIkltYWdlXCIpXG4gKlxuICpAZXhhbXBsZSA8dGNsYS1saXZlLWFwcHMtYXBwbGljYXRpb25zPjwvdGNsYS1saXZlLWFwcHMtYXBwbGljYXRpb25zPlxuICovXG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RjbGEtbGl2ZS1hcHBzLWFwcGxpY2F0aW9ucycsXG4gIHRlbXBsYXRlVXJsOiAnLi9saXZlLWFwcHMtYXBwbGljYXRpb25zLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbGl2ZS1hcHBzLWFwcGxpY2F0aW9ucy5jb21wb25lbnQuY3NzJ11cbn0pXG5cbmV4cG9ydCBjbGFzcyBMaXZlQXBwc0FwcGxpY2F0aW9uc0NvbXBvbmVudCBleHRlbmRzIExpdmVBcHBzQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgLyoqXG4gICAqIHNhbmRib3hJZCAtIHRoaXMgY29tZXMgZnJvbSBjbGFpbXMgcmVzb2x2ZXJcbiAgICovXG4gIEBJbnB1dCgpIHNhbmRib3hJZDogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBUaGUgbGlzdCBvZiBMQSBBcHBsaWNhdGlvbiBJRHMgeW91IHdhbnQgdG8gaGFuZGxlXG4gICAqL1xuICBASW5wdXQoKSBhcHBJZHM6IHN0cmluZ1tdO1xuXG4gIC8qKlxuICAgKiBXaGV0aGVyIHRvIGF1dG8gc2VsZWN0IHRoZSBmaXJzdCBhcHAgaW4gZHJvcGRvd24gc2VsZWN0b3IgKGVnIHNlYXJjaClcbiAgICovXG4gIEBJbnB1dCgpIHNlbGVjdEZpcnN0QXBwOiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBBcHBsaWNhdGlvbiBzZWxlY3RlZCBmcm9tIGRyb3Bkb3duIChvdXRwdXQpXG4gICAqL1xuICBASW5wdXQoKSBzZWxlY3RlZEFwcDogQ2FzZVR5cGUgPSB0aGlzLnNlbGVjdGVkQXBwID8gdGhpcy5zZWxlY3RlZEFwcCA6IG5ldyBDYXNlVHlwZSgpO1xuXG5cbiAgLyoqXG4gICAqIH5ldmVudCBzZWxlY3Rpb24gOiBWYWx1ZSBzZWxlY3RlZCBpbiBjaGlsZCBjb21wb25lbnRcbiAgICogfnBheWxvYWQgQ2FzZVR5cGUgOiB0eXBlIHZhcmllcy4gIGJ1dCBpcyB3aGVuIHNvbWV0aGluZyBpcyBzZWxlY3RlZCBpbiBhIGRyb3AgZG93biBpdCBpcyBwYXNzZWQgYmFjayB0byB0aGUgY2FsbGVyXG4gICAqL1xuICBAT3V0cHV0KCkgc2VsZWN0aW9uOiBFdmVudEVtaXR0ZXI8Q2FzZVR5cGU+ID0gbmV3IEV2ZW50RW1pdHRlcjxDYXNlVHlwZT4oKTtcblxuICBhcHBsaWNhdGlvbnM6IENhc2VUeXBlc0xpc3QgPSBuZXcgQ2FzZVR5cGVzTGlzdCgpO1xuICAvLyBzZWxlY3RlZEFwcDogQ2FzZVR5cGUgPSBuZXcgQ2FzZVR5cGUoKTtcbiAgZXJyb3JNZXNzYWdlOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGxpdmVhcHBzOiBMaXZlQXBwc1NlcnZpY2UpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgY2hhbmdlQXBwU2VsZWN0aW9uID0gKGFwcFNlbGVjdGVkOiBDYXNlVHlwZSkgPT4ge1xuICAgIHRoaXMuc2VsZWN0ZWRBcHAgPSB0aGlzLmFwcGxpY2F0aW9ucy5jYXNldHlwZXMuZmluZCgoY2FzZXR5cGUpID0+IHtcbiAgICAgIHJldHVybiBjYXNldHlwZS5hcHBsaWNhdGlvbklkID09PSBhcHBTZWxlY3RlZC5hcHBsaWNhdGlvbklkO1xuICAgIH0pO1xuICB9XG5cbiAgc2VsZWN0QXBwbGljYXRpb24gPSAoc2VsZWN0aW9uRXZlbnQpID0+IHtcbiAgICB0aGlzLnNlbGVjdGVkQXBwID0gc2VsZWN0aW9uRXZlbnQuc291cmNlLnZhbHVlO1xuICAgIHRoaXMuc2VsZWN0aW9uLmVtaXQoc2VsZWN0aW9uRXZlbnQuc291cmNlLnZhbHVlKTtcbiAgfVxuXG4gIHB1YmxpYyByZWZyZXNoID0gKGJ5cGFzc0NhY2hlOiBib29sZWFuKSA9PiB7XG4gICAgdGhpcy5saXZlYXBwcy5nZXRBcHBsaWNhdGlvbnModGhpcy5zYW5kYm94SWQsIHRoaXMuYXBwSWRzLCAxMDAsIGJ5cGFzc0NhY2hlKVxuICAgICAgLnBpcGUoXG4gICAgICAgIHRha2UoMSksXG4gICAgICAgIHRha2VVbnRpbCh0aGlzLl9kZXN0cm95ZWQkKVxuICAgICAgKVxuICAgICAgLnN1YnNjcmliZShhcHBsaWNhdGlvbkxpc3QgPT4ge1xuICAgICAgICB0aGlzLmFwcGxpY2F0aW9ucyA9IGFwcGxpY2F0aW9uTGlzdDtcbiAgICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRBcHAuYXBwbGljYXRpb25JZCkge1xuICAgICAgICAgIHRoaXMuc2VsZWN0ZWRBcHAgPSBhcHBsaWNhdGlvbkxpc3QuY2FzZXR5cGVzLmZpbmQoKGNhc2V0eXBlKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gY2FzZXR5cGUuYXBwbGljYXRpb25JZCA9PT0gdGhpcy5zZWxlY3RlZEFwcC5hcHBsaWNhdGlvbklkO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIC8vIHRoaXMuc2VsZWN0aW9uLmVtaXQodGhpcy5zZWxlY3RlZEFwcCk7XG4gICAgICAgIH0gZWxzZVxuICAgICAgICAvLyBzZWxlY3QgZmlyc3QgYXMgZGVmYXVsdFxuICAgICAgICBpZiAoYXBwbGljYXRpb25MaXN0LmNhc2V0eXBlcy5sZW5ndGggPiAwICYmIHRoaXMuc2VsZWN0Rmlyc3RBcHApIHtcbiAgICAgICAgICB0aGlzLnNlbGVjdGVkQXBwID0gYXBwbGljYXRpb25MaXN0LmNhc2V0eXBlc1swXTtcbiAgICAgICAgICB0aGlzLnNlbGVjdGlvbi5lbWl0KGFwcGxpY2F0aW9uTGlzdC5jYXNldHlwZXNbMF0pO1xuICAgICAgICB9XG4gICAgICB9LCBlcnJvciA9PiB7IHRoaXMuZXJyb3JNZXNzYWdlID0gJ0Vycm9yIHJldHJpZXZpbmcgYXBwbGljYXRpb25zOiAnICsgZXJyb3IuZXJyb3IuZXJyb3JNc2c7IH0pO1xuICB9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5yZWZyZXNoKGZhbHNlKTtcbiAgfVxuXG59XG4iXX0=