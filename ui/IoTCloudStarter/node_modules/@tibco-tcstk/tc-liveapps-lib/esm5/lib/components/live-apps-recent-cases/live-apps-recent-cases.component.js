/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { LiveAppsService } from '../../services/live-apps.service';
import { map, take, takeUntil } from 'rxjs/operators';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
/**
 * Recent cases widget, this Component list recent visited Cases.
 *
 * ![alt-text](../live-apps-recent-cases.png "")
 *
 * \@example <tcla-live-apps-recent-cases></tcla-live-apps-recent-cases>
 */
var LiveAppsRecentCasesComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LiveAppsRecentCasesComponent, _super);
    function LiveAppsRecentCasesComponent(liveapps) {
        var _this = _super.call(this) || this;
        _this.liveapps = liveapps;
        /**
         * case card format - list, card, miniCard, staticList (no click event)
         */
        _this.displayType = _this.displayType ? _this.displayType : 'miniCard'; // miniCard, card, list
        // miniCard, card, list
        /**
         * Whether to show the header bar in the widget - eg. favorites on home page (contains icon etc) - if off icons still appear without bar
         */
        _this.showHeader = _this.showHeader ? _this.showHeader : true;
        /**
         * ~event clickCase : Case clicked
         * ~payload CaseRoute : CaseRoute object output when case is clicked so calling component can route accordingly - ie. route to case
         */
        _this.clickCase = new EventEmitter();
        _this.clickCaseAction = (/**
         * @param {?} caseRoute
         * @return {?}
         */
        function (caseRoute) {
            _this.clickCase.emit(caseRoute);
        });
        _this.refresh = (/**
         * @return {?}
         */
        function () {
            _this.recentCases = [];
            _this.liveapps.getRecentCases(_this.uiAppId, _this.sandboxId)
                .pipe(take(1), takeUntil(_this._destroyed$), map((/**
             * @param {?} recentCases
             * @return {?}
             */
            function (recentCases) {
                _this.recentCases = recentCases.caseRefs || [];
            }))).subscribe(null, (/**
             * @param {?} error
             * @return {?}
             */
            function (error) { _this.errorMessage = 'Error retrieving recent cases: ' + error.error.errorMsg; }));
        });
        _this.clearRecentCases = (/**
         * @return {?}
         */
        function () {
            // -1 will clear recent cases
            _this.liveapps.setRecentCase('-1', _this.uiAppId, _this.sandboxId);
            _this.recentCases = [];
        });
        _this.handleDeleted = (/**
         * @param {?} caseRef
         * @return {?}
         */
        function (caseRef) {
            _this.recentCases.splice(_this.recentCases.indexOf(caseRef), 1);
            _this.liveapps.unsetRecentCase(caseRef, _this.uiAppId, _this.sandboxId);
        });
        return _this;
    }
    /**
     * @return {?}
     */
    LiveAppsRecentCasesComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.refresh();
    };
    LiveAppsRecentCasesComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tcla-live-apps-recent-cases',
                    template: "<div class=\"tcs-case-recent-box\" fxLayout=\"column\" fxFill>\n  <div *ngIf=\"showHeader\" class=\"tcs-case-recent-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div fxLayoutAlign=\"start center\">\n      <mat-icon class=\"tcs-icon tcs-recent-icon\" svgIcon=\"tcs-recent-icon\"></mat-icon>\n      <div class=\"tcs-case-recent-header-text\">Recent</div>\n    </div>\n    <mat-icon (click)=\"clearRecentCases()\" class=\"tcs-icon tcs-icon-active tcs-clear-recent-icon\" svgIcon=\"tcs-clear-icon\" matTooltip=\"Clear Recent Cases\" matTooltipPosition=\"left\" matTooltipShowDelay=\"1000\"></mat-icon>\n  </div>\n  <div *ngIf=\"!showHeader\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n    <mat-icon style=\"margin: 5px\" (click)=\"clearRecentCases()\" class=\"tcs-icon tcs-icon-active tcs-clear-recent-icon\" svgIcon=\"tcs-clear-icon\" matTooltip=\"Clear Recent Cases\" matTooltipPosition=\"left\" matTooltipShowDelay=\"1000\"></mat-icon>\n  </div>\n  <div *ngIf=\"recentCases.length > 0\"class=\"tcs-case-recent-flow-list\" fxLayout=\"column\" fxLayout=\"row wrap\">\n    <div class=\"tcs-case-recent-item-box\" *ngFor=\"let case of recentCases\" fxFlex>\n      <tcla-live-apps-case-summary [uiAppId]=\"uiAppId\" [typeBar]=\"true\" [borderCard]=\"false\" [displayType]=\"displayType\" [sandboxId]=\"sandboxId\" [caseRef]=\"case\" (clickCase)=\"clickCaseAction($event)\" (deleted)=\"handleDeleted($event)\"></tcla-live-apps-case-summary>\n      <div class=\"tcs-case-recent-line\"></div>\n    </div>\n  </div>\n  <div *ngIf=\"!(recentCases.length > 0)\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"10px\" style=\"margin-top: 20px;\">\n    <mat-icon [svgIcon]=\"'ic-no-cases-icon'\" style=\"height: 48px; width: 48px;\"></mat-icon>\n    <div style=\"height: 100%\" fxLayoutAlign=\"start center\">\n      <span class=\"tcs-no-item-text\">No cases found</span>\n    </div>\n  </div>\n</div>\n",
                    styles: [".tcs-case-recent-box{border-radius:3px;box-shadow:0 2px 8px 0 #dedede;background-color:#fff}.tcs-case-recent-header{min-height:40px;border-radius:3px 3px 0 0;box-shadow:0 1px 2px 0 #dedede;padding-left:20px;padding-right:20px}.tcs-case-recent-header-text{font-family:Source Sans Pro;font-size:18px;font-weight:600;font-style:normal;font-stretch:normal;line-height:1.5;letter-spacing:.3px;text-align:left;color:#000;margin-left:10px}.tcs-case-recent-flow-list{margin:24px;overflow-y:auto}.tcs-case-recent-item-box{max-width:288px;margin:3px 5px 10px}.tcs-icon.tcs-icon-active:hover{cursor:pointer}:host ::ng-deep .tcs-icon.tcs-icon-active:hover .svg-content{fill:#0081cb}.tcs-case-recent-line{padding:0;margin:4px 5px 0;border-bottom:1.1px solid #f4f4f4}.tcs-no-item-text{font-family:Source Sans Pro;font-size:16px;font-weight:400;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;color:#b6b6b6}"]
                }] }
    ];
    /** @nocollapse */
    LiveAppsRecentCasesComponent.ctorParameters = function () { return [
        { type: LiveAppsService }
    ]; };
    LiveAppsRecentCasesComponent.propDecorators = {
        sandboxId: [{ type: Input }],
        uiAppId: [{ type: Input }],
        displayType: [{ type: Input }],
        showHeader: [{ type: Input }],
        clickCase: [{ type: Output }]
    };
    return LiveAppsRecentCasesComponent;
}(LiveAppsComponent));
export { LiveAppsRecentCasesComponent };
if (false) {
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsRecentCasesComponent.prototype.sandboxId;
    /**
     * The Application ID of the UI (should ideally be unique as it is shared state key)
     * @type {?}
     */
    LiveAppsRecentCasesComponent.prototype.uiAppId;
    /**
     * case card format - list, card, miniCard, staticList (no click event)
     * @type {?}
     */
    LiveAppsRecentCasesComponent.prototype.displayType;
    /**
     * Whether to show the header bar in the widget - eg. favorites on home page (contains icon etc) - if off icons still appear without bar
     * @type {?}
     */
    LiveAppsRecentCasesComponent.prototype.showHeader;
    /**
     * ~event clickCase : Case clicked
     * ~payload CaseRoute : CaseRoute object output when case is clicked so calling component can route accordingly - ie. route to case
     * @type {?}
     */
    LiveAppsRecentCasesComponent.prototype.clickCase;
    /** @type {?} */
    LiveAppsRecentCasesComponent.prototype.recentCases;
    /** @type {?} */
    LiveAppsRecentCasesComponent.prototype.errorMessage;
    /** @type {?} */
    LiveAppsRecentCasesComponent.prototype.clickCaseAction;
    /** @type {?} */
    LiveAppsRecentCasesComponent.prototype.refresh;
    /** @type {?} */
    LiveAppsRecentCasesComponent.prototype.clearRecentCases;
    /** @type {?} */
    LiveAppsRecentCasesComponent.prototype.handleDeleted;
    /**
     * @type {?}
     * @private
     */
    LiveAppsRecentCasesComponent.prototype.liveapps;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLXJlY2VudC1jYXNlcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGliY28tdGNzdGsvdGMtbGl2ZWFwcHMtbGliLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvbGl2ZS1hcHBzLXJlY2VudC1jYXNlcy9saXZlLWFwcHMtcmVjZW50LWNhc2VzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBcUIsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hGLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxrQ0FBa0MsQ0FBQztBQUVqRSxPQUFPLEVBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUVwRCxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxzREFBc0QsQ0FBQzs7Ozs7Ozs7QUFTdkY7SUFLa0Qsd0RBQWlCO0lBMERqRSxzQ0FBb0IsUUFBeUI7UUFBN0MsWUFDRSxpQkFBTyxTQUNSO1FBRm1CLGNBQVEsR0FBUixRQUFRLENBQWlCOzs7O1FBNUNwQyxpQkFBVyxHQUFXLEtBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLEtBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLHVCQUF1Qjs7Ozs7UUFJL0YsZ0JBQVUsR0FBWSxLQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxLQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7Ozs7O1FBTTlELGVBQVMsR0FBNEIsSUFBSSxZQUFZLEVBQWEsQ0FBQztRQU10RSxxQkFBZTs7OztRQUFHLFVBQUMsU0FBb0I7WUFDNUMsS0FBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDakMsQ0FBQyxFQUFBO1FBRU0sYUFBTzs7O1FBQUc7WUFDZixLQUFJLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQztZQUN0QixLQUFJLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxLQUFJLENBQUMsT0FBTyxFQUFFLEtBQUksQ0FBQyxTQUFTLENBQUM7aUJBQ3ZELElBQUksQ0FDSCxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQ1AsU0FBUyxDQUFDLEtBQUksQ0FBQyxXQUFXLENBQUMsRUFDM0IsR0FBRzs7OztZQUFDLFVBQUEsV0FBVztnQkFDYixLQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQyxRQUFRLElBQUksRUFBRSxDQUFDO1lBQ2hELENBQUMsRUFBQyxDQUNILENBQUMsU0FBUyxDQUNYLElBQUk7Ozs7WUFBRSxVQUFBLEtBQUssSUFBTSxLQUFJLENBQUMsWUFBWSxHQUFHLGlDQUFpQyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUM7UUFDdEcsQ0FBQyxFQUFBO1FBRU0sc0JBQWdCOzs7UUFBRztZQUN4Qiw2QkFBNkI7WUFDN0IsS0FBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLEtBQUksQ0FBQyxPQUFPLEVBQUUsS0FBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQ2hFLEtBQUksQ0FBQyxXQUFXLEdBQUcsRUFBRSxDQUFDO1FBQ3hCLENBQUMsRUFBQTtRQUVNLG1CQUFhOzs7O1FBQUcsVUFBQyxPQUFlO1lBQ3JDLEtBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLEtBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQzlELEtBQUksQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLE9BQU8sRUFBRSxLQUFJLENBQUMsT0FBTyxFQUFFLEtBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUN2RSxDQUFDLEVBQUE7O0lBSUQsQ0FBQzs7OztJQUVELCtDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNqQixDQUFDOztnQkFyRUYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSw2QkFBNkI7b0JBQ3ZDLDA1REFBc0Q7O2lCQUV2RDs7OztnQkFqQk8sZUFBZTs7OzRCQXNCcEIsS0FBSzswQkFLTCxLQUFLOzhCQUtMLEtBQUs7NkJBSUwsS0FBSzs0QkFNTCxNQUFNOztJQTBDVCxtQ0FBQztDQUFBLEFBdkVELENBS2tELGlCQUFpQixHQWtFbEU7U0FsRVksNEJBQTRCOzs7Ozs7SUFJdkMsaURBQTJCOzs7OztJQUszQiwrQ0FBeUI7Ozs7O0lBS3pCLG1EQUFnRjs7Ozs7SUFJaEYsa0RBQXdFOzs7Ozs7SUFNeEUsaURBQTZFOztJQUc3RSxtREFBNkI7O0lBQzdCLG9EQUE0Qjs7SUFFNUIsdURBRUM7O0lBRUQsK0NBV0M7O0lBRUQsd0RBSUM7O0lBRUQscURBR0M7Ozs7O0lBRVcsZ0RBQWlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0LCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtMaXZlQXBwc1NlcnZpY2V9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2xpdmUtYXBwcy5zZXJ2aWNlJztcbmltcG9ydCB7U3ViamVjdH0gZnJvbSAncnhqcyc7XG5pbXBvcnQge21hcCwgdGFrZSwgdGFrZVVudGlsfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQge0Nhc2VMaXN0LCBDYXNlUm91dGV9IGZyb20gJy4uLy4uL21vZGVscy9saXZlYXBwc2RhdGEnO1xuaW1wb3J0IHtMaXZlQXBwc0NvbXBvbmVudH0gZnJvbSAnLi4vbGl2ZS1hcHBzLWNvbXBvbmVudC9saXZlLWFwcHMtY29tcG9uZW50LmNvbXBvbmVudCc7XG5cbi8qKlxuICogUmVjZW50IGNhc2VzIHdpZGdldCwgdGhpcyBDb21wb25lbnQgbGlzdCByZWNlbnQgdmlzaXRlZCBDYXNlcy5cbiAqXG4gKiAhW2FsdC10ZXh0XSguLi9saXZlLWFwcHMtcmVjZW50LWNhc2VzLnBuZyBcIlwiKVxuICpcbiAqQGV4YW1wbGUgPHRjbGEtbGl2ZS1hcHBzLXJlY2VudC1jYXNlcz48L3RjbGEtbGl2ZS1hcHBzLXJlY2VudC1jYXNlcz5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGNsYS1saXZlLWFwcHMtcmVjZW50LWNhc2VzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xpdmUtYXBwcy1yZWNlbnQtY2FzZXMuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9saXZlLWFwcHMtcmVjZW50LWNhc2VzLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBMaXZlQXBwc1JlY2VudENhc2VzQ29tcG9uZW50IGV4dGVuZHMgTGl2ZUFwcHNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAvKipcbiAgICogc2FuZGJveElkIC0gdGhpcyBjb21lcyBmcm9tIGNsYWltcyByZXNvbHZlclxuICAgKi9cbiAgQElucHV0KCkgc2FuZGJveElkOiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFRoZSBBcHBsaWNhdGlvbiBJRCBvZiB0aGUgVUkgKHNob3VsZCBpZGVhbGx5IGJlIHVuaXF1ZSBhcyBpdCBpcyBzaGFyZWQgc3RhdGUga2V5KVxuICAgKi9cbiAgQElucHV0KCkgdWlBcHBJZDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBjYXNlIGNhcmQgZm9ybWF0IC0gbGlzdCwgY2FyZCwgbWluaUNhcmQsIHN0YXRpY0xpc3QgKG5vIGNsaWNrIGV2ZW50KVxuICAgKi9cbiAgQElucHV0KCkgZGlzcGxheVR5cGU6IHN0cmluZyA9IHRoaXMuZGlzcGxheVR5cGUgPyB0aGlzLmRpc3BsYXlUeXBlIDogJ21pbmlDYXJkJzsgLy8gbWluaUNhcmQsIGNhcmQsIGxpc3RcbiAgLyoqXG4gICAqIFdoZXRoZXIgdG8gc2hvdyB0aGUgaGVhZGVyIGJhciBpbiB0aGUgd2lkZ2V0IC0gZWcuIGZhdm9yaXRlcyBvbiBob21lIHBhZ2UgKGNvbnRhaW5zIGljb24gZXRjKSAtIGlmIG9mZiBpY29ucyBzdGlsbCBhcHBlYXIgd2l0aG91dCBiYXJcbiAgICovXG4gIEBJbnB1dCgpIHNob3dIZWFkZXI6IGJvb2xlYW4gPSB0aGlzLnNob3dIZWFkZXIgPyB0aGlzLnNob3dIZWFkZXIgOiB0cnVlO1xuXG4gIC8qKlxuICAgKiB+ZXZlbnQgY2xpY2tDYXNlIDogQ2FzZSBjbGlja2VkXG4gICAqIH5wYXlsb2FkIENhc2VSb3V0ZSA6IENhc2VSb3V0ZSBvYmplY3Qgb3V0cHV0IHdoZW4gY2FzZSBpcyBjbGlja2VkIHNvIGNhbGxpbmcgY29tcG9uZW50IGNhbiByb3V0ZSBhY2NvcmRpbmdseSAtIGllLiByb3V0ZSB0byBjYXNlXG4gICAqL1xuICBAT3V0cHV0KCkgY2xpY2tDYXNlOiBFdmVudEVtaXR0ZXI8Q2FzZVJvdXRlPiA9IG5ldyBFdmVudEVtaXR0ZXI8Q2FzZVJvdXRlPigpO1xuXG5cbiAgcHVibGljIHJlY2VudENhc2VzOiBzdHJpbmdbXTtcbiAgcHVibGljIGVycm9yTWVzc2FnZTogc3RyaW5nO1xuXG4gIHB1YmxpYyBjbGlja0Nhc2VBY3Rpb24gPSAoY2FzZVJvdXRlOiBDYXNlUm91dGUpID0+IHtcbiAgICB0aGlzLmNsaWNrQ2FzZS5lbWl0KGNhc2VSb3V0ZSk7XG4gIH1cblxuICBwdWJsaWMgcmVmcmVzaCA9ICgpID0+IHtcbiAgICB0aGlzLnJlY2VudENhc2VzID0gW107XG4gICAgdGhpcy5saXZlYXBwcy5nZXRSZWNlbnRDYXNlcyh0aGlzLnVpQXBwSWQsIHRoaXMuc2FuZGJveElkKVxuICAgICAgLnBpcGUoXG4gICAgICAgIHRha2UoMSksXG4gICAgICAgIHRha2VVbnRpbCh0aGlzLl9kZXN0cm95ZWQkKSxcbiAgICAgICAgbWFwKHJlY2VudENhc2VzID0+IHtcbiAgICAgICAgICB0aGlzLnJlY2VudENhc2VzID0gcmVjZW50Q2FzZXMuY2FzZVJlZnMgfHwgW107XG4gICAgICAgIH0pXG4gICAgICApLnN1YnNjcmliZShcbiAgICAgIG51bGwsIGVycm9yID0+IHsgdGhpcy5lcnJvck1lc3NhZ2UgPSAnRXJyb3IgcmV0cmlldmluZyByZWNlbnQgY2FzZXM6ICcgKyBlcnJvci5lcnJvci5lcnJvck1zZzsgfSk7XG4gIH1cblxuICBwdWJsaWMgY2xlYXJSZWNlbnRDYXNlcyA9ICgpID0+IHtcbiAgICAvLyAtMSB3aWxsIGNsZWFyIHJlY2VudCBjYXNlc1xuICAgIHRoaXMubGl2ZWFwcHMuc2V0UmVjZW50Q2FzZSgnLTEnLCB0aGlzLnVpQXBwSWQsIHRoaXMuc2FuZGJveElkKTtcbiAgICB0aGlzLnJlY2VudENhc2VzID0gW107XG4gIH1cblxuICBwdWJsaWMgaGFuZGxlRGVsZXRlZCA9IChjYXNlUmVmOiBzdHJpbmcpID0+IHtcbiAgICB0aGlzLnJlY2VudENhc2VzLnNwbGljZSh0aGlzLnJlY2VudENhc2VzLmluZGV4T2YoY2FzZVJlZiksIDEpO1xuICAgIHRoaXMubGl2ZWFwcHMudW5zZXRSZWNlbnRDYXNlKGNhc2VSZWYsIHRoaXMudWlBcHBJZCwgdGhpcy5zYW5kYm94SWQpO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBsaXZlYXBwczogTGl2ZUFwcHNTZXJ2aWNlKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMucmVmcmVzaCgpO1xuICB9XG5cbn1cbiJdfQ==