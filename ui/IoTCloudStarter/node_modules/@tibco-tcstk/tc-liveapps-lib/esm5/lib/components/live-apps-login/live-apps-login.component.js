/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
// Note: This may move to the core library
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { LoginContext } from '../../models/liveappsdata';
import { LoginPrefill } from '@tibco-tcstk/tc-core-lib';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
/**
 * Component perform a Login in case there is no valid Session yet.
 *
 * If the user is not logged in the login component will be displayed automatically.
 *
 * ![alt-text](../Login.png "Image")
 */
var LiveAppsLoginComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LiveAppsLoginComponent, _super);
    function LiveAppsLoginComponent() {
        var _this = _super.call(this) || this;
        _this.loginContext = new EventEmitter();
        // run when logged in
        _this.handleLoggedIn = (/**
         * @param {?} loginInfo
         * @return {?}
         */
        function (loginInfo) {
            sessionStorage.setItem('loggedIn', Date.now().toString());
            // emit useful details about the login and session/claims
            _this.loginContext.emit(new LoginContext().deserialize({
                authInfo: loginInfo.authInfo,
                accessToken: loginInfo.accessToken
            }));
        });
        return _this;
    }
    LiveAppsLoginComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tcla-live-apps-login',
                    template: "<tc-tibco-cloud-login fxFill (loggedIn)=\"handleLoggedIn($event)\" [loginPrefill]=\"loginPrefill\"></tc-tibco-cloud-login>\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    LiveAppsLoginComponent.ctorParameters = function () { return []; };
    LiveAppsLoginComponent.propDecorators = {
        loginContext: [{ type: Output }],
        loginPrefill: [{ type: Input }]
    };
    return LiveAppsLoginComponent;
}(LiveAppsComponent));
export { LiveAppsLoginComponent };
if (false) {
    /** @type {?} */
    LiveAppsLoginComponent.prototype.loginContext;
    /** @type {?} */
    LiveAppsLoginComponent.prototype.loginPrefill;
    /** @type {?} */
    LiveAppsLoginComponent.prototype.handleLoggedIn;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLWxvZ2luLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0aWJjby10Y3N0ay90Yy1saXZlYXBwcy1saWIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9saXZlLWFwcHMtbG9naW4vbGl2ZS1hcHBzLWxvZ2luLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFFQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3JFLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUN2RCxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFFdEQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sc0RBQXNELENBQUM7Ozs7Ozs7O0FBU3pGO0lBSzRDLGtEQUFpQjtJQUszRDtRQUFBLFlBQ0UsaUJBQU8sU0FDUjtRQUxTLGtCQUFZLEdBQStCLElBQUksWUFBWSxFQUFnQixDQUFDOztRQVF0RixvQkFBYzs7OztRQUFHLFVBQUMsU0FBUztZQUN6QixjQUFjLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztZQUUxRCx5REFBeUQ7WUFDekQsS0FBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxZQUFZLEVBQUUsQ0FBQyxXQUFXLENBQ2pEO2dCQUNFLFFBQVEsRUFBRSxTQUFTLENBQUMsUUFBUTtnQkFDNUIsV0FBVyxFQUFFLFNBQVMsQ0FBQyxXQUFXO2FBQ25DLENBQUMsQ0FBQyxDQUFDO1FBQ1YsQ0FBQyxFQUFBOztJQVpELENBQUM7O2dCQVpGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsc0JBQXNCO29CQUNoQyx3SUFBK0M7O2lCQUVoRDs7Ozs7K0JBR0UsTUFBTTsrQkFDTixLQUFLOztJQWtCUiw2QkFBQztDQUFBLEFBMUJELENBSzRDLGlCQUFpQixHQXFCNUQ7U0FyQlksc0JBQXNCOzs7SUFFakMsOENBQXNGOztJQUN0Riw4Q0FBb0M7O0lBT3BDLGdEQVNDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTm90ZTogVGhpcyBtYXkgbW92ZSB0byB0aGUgY29yZSBsaWJyYXJ5XG5cbmltcG9ydCB7Q29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtMb2dpbkNvbnRleHR9IGZyb20gJy4uLy4uL21vZGVscy9saXZlYXBwc2RhdGEnO1xuaW1wb3J0IHtMb2dpblByZWZpbGx9IGZyb20gJ0B0aWJjby10Y3N0ay90Yy1jb3JlLWxpYic7XG5pbXBvcnQge0xpdmVBcHBzU2VydmljZX0gZnJvbSAnLi4vLi4vc2VydmljZXMvbGl2ZS1hcHBzLnNlcnZpY2UnO1xuaW1wb3J0IHsgTGl2ZUFwcHNDb21wb25lbnQgfSBmcm9tICcuLi9saXZlLWFwcHMtY29tcG9uZW50L2xpdmUtYXBwcy1jb21wb25lbnQuY29tcG9uZW50JztcblxuLyoqXG4gKiBDb21wb25lbnQgcGVyZm9ybSBhIExvZ2luIGluIGNhc2UgdGhlcmUgaXMgbm8gdmFsaWQgU2Vzc2lvbiB5ZXQuXG4gKlxuICogSWYgdGhlIHVzZXIgaXMgbm90IGxvZ2dlZCBpbiB0aGUgbG9naW4gY29tcG9uZW50IHdpbGwgYmUgZGlzcGxheWVkIGF1dG9tYXRpY2FsbHkuXG4gKlxuICogIVthbHQtdGV4dF0oLi4vTG9naW4ucG5nIFwiSW1hZ2VcIilcbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGNsYS1saXZlLWFwcHMtbG9naW4nLFxuICB0ZW1wbGF0ZVVybDogJy4vbGl2ZS1hcHBzLWxvZ2luLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbGl2ZS1hcHBzLWxvZ2luLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBMaXZlQXBwc0xvZ2luQ29tcG9uZW50IGV4dGVuZHMgTGl2ZUFwcHNDb21wb25lbnQge1xuXG4gIEBPdXRwdXQoKSBsb2dpbkNvbnRleHQ6IEV2ZW50RW1pdHRlcjxMb2dpbkNvbnRleHQ+ID0gbmV3IEV2ZW50RW1pdHRlcjxMb2dpbkNvbnRleHQ+KCk7XG4gIEBJbnB1dCgpIGxvZ2luUHJlZmlsbDogTG9naW5QcmVmaWxsO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICAvLyBydW4gd2hlbiBsb2dnZWQgaW5cbiAgaGFuZGxlTG9nZ2VkSW4gPSAobG9naW5JbmZvKSA9PiB7XG4gICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnbG9nZ2VkSW4nLCBEYXRlLm5vdygpLnRvU3RyaW5nKCkpO1xuXG4gICAgLy8gZW1pdCB1c2VmdWwgZGV0YWlscyBhYm91dCB0aGUgbG9naW4gYW5kIHNlc3Npb24vY2xhaW1zXG4gICAgdGhpcy5sb2dpbkNvbnRleHQuZW1pdChuZXcgTG9naW5Db250ZXh0KCkuZGVzZXJpYWxpemUoXG4gICAgICAgIHtcbiAgICAgICAgICBhdXRoSW5mbzogbG9naW5JbmZvLmF1dGhJbmZvLFxuICAgICAgICAgIGFjY2Vzc1Rva2VuOiBsb2dpbkluZm8uYWNjZXNzVG9rZW5cbiAgICAgICAgfSkpO1xuICB9XG5cbn1cbiJdfQ==