/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NoteThread = /** @class */ (function () {
    function NoteThread(threadId, showReplies, showNewReply, editMode, newReply, thread, note) {
        this.threadId = threadId;
        this.showReplies = showReplies;
        this.showNewReply = showNewReply;
        this.editMode = editMode;
        this.newReply = newReply;
        this.thread = thread;
        this.note = note;
    }
    return NoteThread;
}());
export { NoteThread };
if (false) {
    /** @type {?} */
    NoteThread.prototype.threadId;
    /** @type {?} */
    NoteThread.prototype.showReplies;
    /** @type {?} */
    NoteThread.prototype.showNewReply;
    /** @type {?} */
    NoteThread.prototype.editMode;
    /** @type {?} */
    NoteThread.prototype.newReply;
    /** @type {?} */
    NoteThread.prototype.thread;
    /** @type {?} */
    NoteThread.prototype.note;
}
var CaseRoute = /** @class */ (function () {
    function CaseRoute() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    CaseRoute.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return CaseRoute;
}());
export { CaseRoute };
if (false) {
    /** @type {?} */
    CaseRoute.prototype.caseRef;
    /** @type {?} */
    CaseRoute.prototype.appId;
    /** @type {?} */
    CaseRoute.prototype.typeId;
}
var NotificationCollection = /** @class */ (function () {
    function NotificationCollection(collectionName, lifecycledWithType, lifecycledWithId) {
        this.collectionName = collectionName;
        this.lifecycledWithType = lifecycledWithType;
        this.lifecycledWithId = lifecycledWithId;
    }
    return NotificationCollection;
}());
export { NotificationCollection };
if (false) {
    /** @type {?} */
    NotificationCollection.prototype.collectionName;
    /** @type {?} */
    NotificationCollection.prototype.lifecycledWithType;
    /** @type {?} */
    NotificationCollection.prototype.lifecycledWithId;
}
var Notification = /** @class */ (function () {
    function Notification() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    Notification.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return Notification;
}());
export { Notification };
if (false) {
    /** @type {?} */
    Notification.prototype.entityId;
    /** @type {?} */
    Notification.prototype.entityName;
    /** @type {?} */
    Notification.prototype.entityType;
    /** @type {?} */
    Notification.prototype.id;
    /** @type {?} */
    Notification.prototype.notifyCollection;
    /** @type {?} */
    Notification.prototype.notifyOnAllReplies;
    /** @type {?} */
    Notification.prototype.notifyOnUpdate;
    /** @type {?} */
    Notification.prototype.threadId;
    /** @type {?} */
    Notification.prototype.topicId;
    /** @type {?} */
    Notification.prototype.type;
}
var NotificationList = /** @class */ (function () {
    function NotificationList() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    NotificationList.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        (/** @type {?} */ (this)).notifications = [];
        Object.assign((/** @type {?} */ (this)).notifications, input);
        return (/** @type {?} */ (this));
    };
    return NotificationList;
}());
export { NotificationList };
if (false) {
    /** @type {?} */
    NotificationList.prototype.notifications;
}
var ThreadList = /** @class */ (function () {
    function ThreadList() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    ThreadList.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        (/** @type {?} */ (this)).threads = [];
        Object.assign((/** @type {?} */ (this)).threads, input);
        return (/** @type {?} */ (this));
    };
    return ThreadList;
}());
export { ThreadList };
if (false) {
    /** @type {?} */
    ThreadList.prototype.threads;
}
var Metadata = /** @class */ (function () {
    function Metadata(createdBy, creationTimestamp, createdByDetails, modifiedBy, modificationTimestamp, modifiedByDetails, lock, lockType, lockedBy, msLockExpiry, msSystemTime, markedForPurge, applicationId, applicationLabel, typeId, stateColor, stateIcon, caseTypeColor, caseTypeIcon, useCaseTypeColor) {
        this.createdBy = createdBy;
        this.creationTimestamp = creationTimestamp;
        this.createdByDetails = createdByDetails;
        this.modifiedBy = modifiedBy;
        this.modificationTimestamp = modificationTimestamp;
        this.modifiedByDetails = modifiedByDetails;
        this.lock = lock;
        this.lockType = lockType;
        this.lockedBy = lockedBy;
        this.msLockExpiry = msLockExpiry;
        this.msSystemTime = msSystemTime;
        this.markedForPurge = markedForPurge;
        this.applicationId = applicationId;
        this.applicationLabel = applicationLabel;
        this.typeId = typeId;
        this.stateColor = stateColor;
        this.stateIcon = stateIcon;
        this.caseTypeColor = caseTypeColor;
        this.caseTypeIcon = caseTypeIcon;
        this.useCaseTypeColor = useCaseTypeColor;
    }
    return Metadata;
}());
export { Metadata };
if (false) {
    /** @type {?} */
    Metadata.prototype.createdBy;
    /** @type {?} */
    Metadata.prototype.creationTimestamp;
    /** @type {?} */
    Metadata.prototype.createdByDetails;
    /** @type {?} */
    Metadata.prototype.modifiedBy;
    /** @type {?} */
    Metadata.prototype.modificationTimestamp;
    /** @type {?} */
    Metadata.prototype.modifiedByDetails;
    /** @type {?} */
    Metadata.prototype.lock;
    /** @type {?} */
    Metadata.prototype.lockType;
    /** @type {?} */
    Metadata.prototype.lockedBy;
    /** @type {?} */
    Metadata.prototype.msLockExpiry;
    /** @type {?} */
    Metadata.prototype.msSystemTime;
    /** @type {?} */
    Metadata.prototype.markedForPurge;
    /** @type {?} */
    Metadata.prototype.applicationId;
    /** @type {?} */
    Metadata.prototype.applicationLabel;
    /** @type {?} */
    Metadata.prototype.typeId;
    /** @type {?} */
    Metadata.prototype.stateColor;
    /** @type {?} */
    Metadata.prototype.stateIcon;
    /** @type {?} */
    Metadata.prototype.caseTypeColor;
    /** @type {?} */
    Metadata.prototype.caseTypeIcon;
    /** @type {?} */
    Metadata.prototype.useCaseTypeColor;
}
var CaseTypeState = /** @class */ (function () {
    function CaseTypeState() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    CaseTypeState.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return CaseTypeState;
}());
export { CaseTypeState };
if (false) {
    /** @type {?} */
    CaseTypeState.prototype.id;
    /** @type {?} */
    CaseTypeState.prototype.label;
    /** @type {?} */
    CaseTypeState.prototype.value;
    /** @type {?} */
    CaseTypeState.prototype.isTerminal;
}
var CaseTypeStatesListList = /** @class */ (function () {
    function CaseTypeStatesListList() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    CaseTypeStatesListList.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        (/** @type {?} */ (this)).casetypes = [];
        Object.assign((/** @type {?} */ (this)).casetypes, input);
        return (/** @type {?} */ (this));
    };
    return CaseTypeStatesListList;
}());
export { CaseTypeStatesListList };
if (false) {
    /** @type {?} */
    CaseTypeStatesListList.prototype.casetypes;
}
var CaseTypeStatesList = /** @class */ (function () {
    function CaseTypeStatesList() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    CaseTypeStatesList.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        (/** @type {?} */ (this)).states = [];
        Object.assign((/** @type {?} */ (this)).states, input);
        return (/** @type {?} */ (this));
    };
    return CaseTypeStatesList;
}());
export { CaseTypeStatesList };
if (false) {
    /** @type {?} */
    CaseTypeStatesList.prototype.states;
}
var CaseInfo = /** @class */ (function () {
    function CaseInfo() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    CaseInfo.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        (/** @type {?} */ (this)).summaryObj = (/** @type {?} */ (this)).summary ? JSON.parse((/** @type {?} */ (this)).summary) : undefined;
        (/** @type {?} */ (this)).casedataObj = (/** @type {?} */ (this)).casedata ? JSON.parse((/** @type {?} */ (this)).casedata) : undefined;
        (/** @type {?} */ (this)).untaggedCasedataObj = (/** @type {?} */ (this)).untaggedCasedata ? JSON.parse((/** @type {?} */ (this)).untaggedCasedata) : undefined;
        return (/** @type {?} */ (this));
    };
    return CaseInfo;
}());
export { CaseInfo };
if (false) {
    /** @type {?} */
    CaseInfo.prototype.deleted;
    /** @type {?} */
    CaseInfo.prototype.caseReference;
    /** @type {?} */
    CaseInfo.prototype.untaggedCasedata;
    /** @type {?} */
    CaseInfo.prototype.untaggedCasedataObj;
    /** @type {?} */
    CaseInfo.prototype.casedata;
    /** @type {?} */
    CaseInfo.prototype.casedataObj;
    /** @type {?} */
    CaseInfo.prototype.summary;
    /** @type {?} */
    CaseInfo.prototype.summaryObj;
    /** @type {?} */
    CaseInfo.prototype.metadata;
}
var CaseInfoList = /** @class */ (function () {
    function CaseInfoList() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    CaseInfoList.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        (/** @type {?} */ (this)).caseinfos = [];
        Object.assign((/** @type {?} */ (this)).caseinfos, input);
        (/** @type {?} */ (this)).caseinfos.forEach((/**
         * @param {?} caseinfo
         * @return {?}
         */
        function (caseinfo) {
            if (caseinfo.summary) {
                caseinfo.summaryObj = JSON.parse(caseinfo.summary);
            }
            if (caseinfo.casedata) {
                caseinfo.casedataObj = JSON.parse(caseinfo.casedata);
            }
        }));
        return (/** @type {?} */ (this));
    };
    return CaseInfoList;
}());
export { CaseInfoList };
if (false) {
    /** @type {?} */
    CaseInfoList.prototype.caseinfos;
    /** @type {?} */
    CaseInfoList.prototype.casecount;
}
var CaseAttribute = /** @class */ (function () {
    function CaseAttribute() {
    }
    return CaseAttribute;
}());
export { CaseAttribute };
if (false) {
    /** @type {?} */
    CaseAttribute.prototype.isIdentifier;
    /** @type {?} */
    CaseAttribute.prototype.isMandatory;
    /** @type {?} */
    CaseAttribute.prototype.isStructuredType;
    /** @type {?} */
    CaseAttribute.prototype.label;
    /** @type {?} */
    CaseAttribute.prototype.name;
    /** @type {?} */
    CaseAttribute.prototype.type;
    /** @type {?} */
    CaseAttribute.prototype.maximum;
    /** @type {?} */
    CaseAttribute.prototype.minimum;
}
var JsonSchema = /** @class */ (function () {
    function JsonSchema() {
    }
    return JsonSchema;
}());
export { JsonSchema };
if (false) {
    /** @type {?} */
    JsonSchema.prototype.$schema;
    /** @type {?} */
    JsonSchema.prototype.definitions;
    /** @type {?} */
    JsonSchema.prototype.properties;
    /** @type {?} */
    JsonSchema.prototype.type;
    /** @type {?} */
    JsonSchema.prototype.required;
}
var Process = /** @class */ (function () {
    function Process() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    Process.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return Process;
}());
export { Process };
if (false) {
    /** @type {?} */
    Process.prototype.jsonSchema;
    /** @type {?} */
    Process.prototype.name;
    /** @type {?} */
    Process.prototype.id;
    /** @type {?} */
    Process.prototype.unsupportedForm;
}
var ProcessId = /** @class */ (function () {
    function ProcessId() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    ProcessId.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return ProcessId;
}());
export { ProcessId };
if (false) {
    /** @type {?} */
    ProcessId.prototype.caseIdentifier;
    /** @type {?} */
    ProcessId.prototype.caseReference;
}
var CaseType = /** @class */ (function () {
    function CaseType() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    CaseType.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return CaseType;
}());
export { CaseType };
if (false) {
    /** @type {?} */
    CaseType.prototype.actions;
    /** @type {?} */
    CaseType.prototype.applicationId;
    /** @type {?} */
    CaseType.prototype.applicationInternalName;
    /** @type {?} */
    CaseType.prototype.applicationName;
    /** @type {?} */
    CaseType.prototype.attributes;
    /** @type {?} */
    CaseType.prototype.creators;
    /** @type {?} */
    CaseType.prototype.id;
    /** @type {?} */
    CaseType.prototype.isCase;
    /** @type {?} */
    CaseType.prototype.label;
    /** @type {?} */
    CaseType.prototype.name;
    /** @type {?} */
    CaseType.prototype.jsonSchema;
}
var CaseTypesList = /** @class */ (function () {
    function CaseTypesList() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    CaseTypesList.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        (/** @type {?} */ (this)).casetypes = [];
        Object.assign((/** @type {?} */ (this)).casetypes, input);
        return (/** @type {?} */ (this));
    };
    return CaseTypesList;
}());
export { CaseTypesList };
if (false) {
    /** @type {?} */
    CaseTypesList.prototype.casetypes;
}
var CaseAction = /** @class */ (function () {
    function CaseAction() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    CaseAction.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return CaseAction;
}());
export { CaseAction };
if (false) {
    /** @type {?} */
    CaseAction.prototype.activityName;
    /** @type {?} */
    CaseAction.prototype.applicationId;
    /** @type {?} */
    CaseAction.prototype.applicationName;
    /** @type {?} */
    CaseAction.prototype.availableInStates;
    /** @type {?} */
    CaseAction.prototype.chatBotEnabled;
    /** @type {?} */
    CaseAction.prototype.id;
    /** @type {?} */
    CaseAction.prototype.label;
    /** @type {?} */
    CaseAction.prototype.name;
    /** @type {?} */
    CaseAction.prototype.noData;
    /** @type {?} */
    CaseAction.prototype.performerPaths;
    /** @type {?} */
    CaseAction.prototype.roles;
    /** @type {?} */
    CaseAction.prototype.version;
    /** @type {?} */
    CaseAction.prototype.process;
}
var CaseActionsList = /** @class */ (function () {
    function CaseActionsList() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    CaseActionsList.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        (/** @type {?} */ (this)).actions = [];
        Object.assign((/** @type {?} */ (this)).actions, input);
        return (/** @type {?} */ (this));
    };
    return CaseActionsList;
}());
export { CaseActionsList };
if (false) {
    /** @type {?} */
    CaseActionsList.prototype.actions;
}
var CaseCreator = /** @class */ (function () {
    function CaseCreator() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    CaseCreator.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return CaseCreator;
}());
export { CaseCreator };
if (false) {
    /** @type {?} */
    CaseCreator.prototype.activityName;
    /** @type {?} */
    CaseCreator.prototype.applicationId;
    /** @type {?} */
    CaseCreator.prototype.applicationName;
    /** @type {?} */
    CaseCreator.prototype.chatBotEnabled;
    /** @type {?} */
    CaseCreator.prototype.id;
    /** @type {?} */
    CaseCreator.prototype.label;
    /** @type {?} */
    CaseCreator.prototype.name;
    /** @type {?} */
    CaseCreator.prototype.roles;
    /** @type {?} */
    CaseCreator.prototype.version;
    /** @type {?} */
    CaseCreator.prototype.process;
}
var CaseCreatorsList = /** @class */ (function () {
    function CaseCreatorsList() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    CaseCreatorsList.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        (/** @type {?} */ (this)).creators = [];
        Object.assign((/** @type {?} */ (this)).creators, input);
        return (/** @type {?} */ (this));
    };
    return CaseCreatorsList;
}());
export { CaseCreatorsList };
if (false) {
    /** @type {?} */
    CaseCreatorsList.prototype.creators;
}
var CaseList = /** @class */ (function () {
    function CaseList() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    CaseList.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        (/** @type {?} */ (this)).uniqueKey = input.uniqueKey;
        (/** @type {?} */ (this)).maxSize = input.maxSize;
        (/** @type {?} */ (this)).caseRefs = [];
        Object.assign((/** @type {?} */ (this)).caseRefs, input.caseRefs);
        return (/** @type {?} */ (this));
    };
    return CaseList;
}());
export { CaseList };
if (false) {
    /** @type {?} */
    CaseList.prototype.uniqueKey;
    /** @type {?} */
    CaseList.prototype.maxSize;
    /** @type {?} */
    CaseList.prototype.caseRefs;
}
var ApiResponseText = /** @class */ (function () {
    function ApiResponseText() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    ApiResponseText.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return ApiResponseText;
}());
export { ApiResponseText };
if (false) {
    /** @type {?} */
    ApiResponseText.prototype.message;
}
var ApiResponseError = /** @class */ (function () {
    function ApiResponseError() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    ApiResponseError.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return ApiResponseError;
}());
export { ApiResponseError };
if (false) {
    /** @type {?} */
    ApiResponseError.prototype.errorMsg;
    /** @type {?} */
    ApiResponseError.prototype.errorCode;
    /** @type {?} */
    ApiResponseError.prototype.contextAttributes;
}
var UserInfo = /** @class */ (function () {
    function UserInfo() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    UserInfo.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return UserInfo;
}());
export { UserInfo };
if (false) {
    /** @type {?} */
    UserInfo.prototype.externalId;
    /** @type {?} */
    UserInfo.prototype.firstName;
    /** @type {?} */
    UserInfo.prototype.lastName;
    /** @type {?} */
    UserInfo.prototype.username;
    /** @type {?} */
    UserInfo.prototype.email;
    /** @type {?} */
    UserInfo.prototype.type;
    /** @type {?} */
    UserInfo.prototype.id;
}
var NotesRole = /** @class */ (function () {
    function NotesRole() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    NotesRole.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return NotesRole;
}());
export { NotesRole };
if (false) {
    /** @type {?} */
    NotesRole.prototype.entityId;
    /** @type {?} */
    NotesRole.prototype.entityName;
    /** @type {?} */
    NotesRole.prototype.entityType;
    /** @type {?} */
    NotesRole.prototype.id;
    /** @type {?} */
    NotesRole.prototype.role;
    /** @type {?} */
    NotesRole.prototype.threadId;
}
var Thread = /** @class */ (function () {
    function Thread() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    Thread.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return Thread;
}());
export { Thread };
if (false) {
    /** @type {?} */
    Thread.prototype.acceptedStatusCount;
    /** @type {?} */
    Thread.prototype.actionDate;
    /** @type {?} */
    Thread.prototype.actionId;
    /** @type {?} */
    Thread.prototype.actionType;
    /** @type {?} */
    Thread.prototype.answerNoteCount;
    /** @type {?} */
    Thread.prototype.answeredStatusCount;
    /** @type {?} */
    Thread.prototype.createdById;
    /** @type {?} */
    Thread.prototype.createdByName;
    /** @type {?} */
    Thread.prototype.createdDate;
    /** @type {?} */
    Thread.prototype.id;
    /** @type {?} */
    Thread.prototype.informationalNoteCount;
    /** @type {?} */
    Thread.prototype.isAbandoned;
    /** @type {?} */
    Thread.prototype.isLocked;
    /** @type {?} */
    Thread.prototype.isOrphaned;
    /** @type {?} */
    Thread.prototype.issueNoteCount;
    /** @type {?} */
    Thread.prototype.lifecycledWithId;
    /** @type {?} */
    Thread.prototype.lifecycledWithType;
    /** @type {?} */
    Thread.prototype.modifiedById;
    /** @type {?} */
    Thread.prototype.modifiedByName;
    /** @type {?} */
    Thread.prototype.modifiedDate;
    /** @type {?} */
    Thread.prototype.questionNoteCount;
    /** @type {?} */
    Thread.prototype.relatedItemCollection;
    /** @type {?} */
    Thread.prototype.relatedItemId;
    /** @type {?} */
    Thread.prototype.relatedItemType;
    /** @type {?} */
    Thread.prototype.resolutionNoteCount;
    /** @type {?} */
    Thread.prototype.resolvedStatusCount;
    /** @type {?} */
    Thread.prototype.roles;
    /** @type {?} */
    Thread.prototype.status;
    /** @type {?} */
    Thread.prototype.topLevelNoteId;
    /** @type {?} */
    Thread.prototype.topicId;
    /** @type {?} */
    Thread.prototype.totalCount;
    /** @type {?} */
    Thread.prototype.unacceptedStatusCount;
    /** @type {?} */
    Thread.prototype.unansweredStatusCount;
    /** @type {?} */
    Thread.prototype.unclassifiedStatusCount;
    /** @type {?} */
    Thread.prototype.unresolvedStatusCount;
}
var Note = /** @class */ (function () {
    function Note() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    Note.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return Note;
}());
export { Note };
if (false) {
    /** @type {?} */
    Note.prototype.attributes;
    /** @type {?} */
    Note.prototype.createdById;
    /** @type {?} */
    Note.prototype.createdByName;
    /** @type {?} */
    Note.prototype.createdDate;
    /** @type {?} */
    Note.prototype.descendantModifiedDate;
    /** @type {?} */
    Note.prototype.id;
    /** @type {?} */
    Note.prototype.isDescendantNewOrModified;
    /** @type {?} */
    Note.prototype.isHidden;
    /** @type {?} */
    Note.prototype.isModified;
    /** @type {?} */
    Note.prototype.isNew;
    /** @type {?} */
    Note.prototype.level;
    /** @type {?} */
    Note.prototype.modifiedByName;
    /** @type {?} */
    Note.prototype.modifiedDate;
    /** @type {?} */
    Note.prototype.notificationLabel;
    /** @type {?} */
    Note.prototype.notificationUrl;
    /** @type {?} */
    Note.prototype.parentId;
    /** @type {?} */
    Note.prototype.relatedItemCollection;
    /** @type {?} */
    Note.prototype.relatedItemId;
    /** @type {?} */
    Note.prototype.relatedItemType;
    /** @type {?} */
    Note.prototype.replyAcceptedId;
    /** @type {?} */
    Note.prototype.replyCount;
    /** @type {?} */
    Note.prototype.replyDate;
    /** @type {?} */
    Note.prototype.status;
    /** @type {?} */
    Note.prototype.text;
    /** @type {?} */
    Note.prototype.thread;
    /** @type {?} */
    Note.prototype.threadId;
    /** @type {?} */
    Note.prototype.title;
    /** @type {?} */
    Note.prototype.topicId;
    /** @type {?} */
    Note.prototype.type;
    /** @type {?} */
    Note.prototype.editMode;
}
var NotesList = /** @class */ (function () {
    function NotesList() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    NotesList.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        (/** @type {?} */ (this)).notes = [];
        Object.assign((/** @type {?} */ (this)).notes, input);
        return (/** @type {?} */ (this));
    };
    return NotesList;
}());
export { NotesList };
if (false) {
    /** @type {?} */
    NotesList.prototype.notes;
}
var IconMap = /** @class */ (function () {
    function IconMap(isCaseType, state, fill, icon) {
        this.isCaseType = isCaseType;
        this.state = state;
        this.fill = fill;
        this.icon = icon;
    }
    return IconMap;
}());
export { IconMap };
if (false) {
    /** @type {?} */
    IconMap.prototype.isCaseType;
    /** @type {?} */
    IconMap.prototype.state;
    /** @type {?} */
    IconMap.prototype.fill;
    /** @type {?} */
    IconMap.prototype.icon;
}
var CardConfig = /** @class */ (function () {
    function CardConfig() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    CardConfig.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        // this.stateMap = [];
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return CardConfig;
}());
export { CardConfig };
if (false) {
    /** @type {?} */
    CardConfig.prototype.id;
    /** @type {?} */
    CardConfig.prototype.useCaseTypeColor;
    /** @type {?} */
    CardConfig.prototype.stateMap;
}
var LoginContext = /** @class */ (function () {
    function LoginContext() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    LoginContext.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return LoginContext;
}());
export { LoginContext };
if (false) {
    /** @type {?} */
    LoginContext.prototype.authInfo;
    /** @type {?} */
    LoginContext.prototype.accessToken;
}
var CaseSearchResults = /** @class */ (function () {
    function CaseSearchResults() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    CaseSearchResults.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return CaseSearchResults;
}());
export { CaseSearchResults };
if (false) {
    /** @type {?} */
    CaseSearchResults.prototype.caserefs;
    /** @type {?} */
    CaseSearchResults.prototype.searchString;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZWFwcHNkYXRhLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpYmNvLXRjc3RrL3RjLWxpdmVhcHBzLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9tb2RlbHMvbGl2ZWFwcHNkYXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQTtJQUNFLG9CQUFtQixRQUFnQixFQUNoQixXQUFvQixFQUNwQixZQUFxQixFQUNyQixRQUFpQixFQUNqQixRQUFhLEVBQ2IsTUFBYyxFQUNkLElBQVU7UUFOVixhQUFRLEdBQVIsUUFBUSxDQUFRO1FBQ2hCLGdCQUFXLEdBQVgsV0FBVyxDQUFTO1FBQ3BCLGlCQUFZLEdBQVosWUFBWSxDQUFTO1FBQ3JCLGFBQVEsR0FBUixRQUFRLENBQVM7UUFDakIsYUFBUSxHQUFSLFFBQVEsQ0FBSztRQUNiLFdBQU0sR0FBTixNQUFNLENBQVE7UUFDZCxTQUFJLEdBQUosSUFBSSxDQUFNO0lBRTdCLENBQUM7SUFDSCxpQkFBQztBQUFELENBQUMsQUFWRCxJQVVDOzs7O0lBVGEsOEJBQXVCOztJQUN2QixpQ0FBMkI7O0lBQzNCLGtDQUE0Qjs7SUFDNUIsOEJBQXdCOztJQUN4Qiw4QkFBb0I7O0lBQ3BCLDRCQUFxQjs7SUFDckIsMEJBQWlCOztBQUsvQjtJQUFBO0lBUUEsQ0FBQzs7Ozs7OztJQUpDLCtCQUFXOzs7Ozs7SUFBWCxVQUFZLEtBQVU7UUFDcEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxtQkFBQSxJQUFJLEVBQUEsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUMzQixPQUFPLG1CQUFBLElBQUksRUFBQSxDQUFDO0lBQ2QsQ0FBQztJQUNILGdCQUFDO0FBQUQsQ0FBQyxBQVJELElBUUM7Ozs7SUFQQyw0QkFBdUI7O0lBQ3ZCLDBCQUFxQjs7SUFDckIsMkJBQXNCOztBQU94QjtJQUNFLGdDQUNTLGNBQXNCLEVBQ3RCLGtCQUEwQixFQUMxQixnQkFBd0I7UUFGeEIsbUJBQWMsR0FBZCxjQUFjLENBQVE7UUFDdEIsdUJBQWtCLEdBQWxC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bnRlbnQiOlsiaW1wb3J0IHtBY2Nlc3NUb2tlbiwgQXV0aEluZm8sIERlc2VyaWFsaXphYmxlLCBDbGFpbX0gZnJvbSAnQHRpYmNvLXRjc3RrL3RjLWNvcmUtbGliJztcblxuZXhwb3J0IGNsYXNzIE5vdGVUaHJlYWQge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgdGhyZWFkSWQ6IHN0cmluZyxcbiAgICAgICAgICAgICAgcHVibGljIHNob3dSZXBsaWVzOiBib29sZWFuLFxuICAgICAgICAgICAgICBwdWJsaWMgc2hvd05ld1JlcGx5OiBib29sZWFuLFxuICAgICAgICAgICAgICBwdWJsaWMgZWRpdE1vZGU6IGJvb2xlYW4sXG4gICAgICAgICAgICAgIHB1YmxpYyBuZXdSZXBseTogYW55LFxuICAgICAgICAgICAgICBwdWJsaWMgdGhyZWFkOiBOb3RlW10sXG4gICAgICAgICAgICAgIHB1YmxpYyBub3RlOiBOb3RlXG4gICkge1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBDYXNlUm91dGUge1xuICBwdWJsaWMgY2FzZVJlZjogc3RyaW5nO1xuICBwdWJsaWMgYXBwSWQ6IHN0cmluZztcbiAgcHVibGljIHR5cGVJZDogc3RyaW5nO1xuICBkZXNlcmlhbGl6ZShpbnB1dDogYW55KTogdGhpcyB7XG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLCBpbnB1dCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIE5vdGlmaWNhdGlvbkNvbGxlY3Rpb24ge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgY29sbGVjdGlvbk5hbWU6IHN0cmluZyxcbiAgICBwdWJsaWMgbGlmZWN5Y2xlZFdpdGhUeXBlOiBzdHJpbmcsXG4gICAgcHVibGljIGxpZmVjeWNsZWRXaXRoSWQ6IHN0cmluZ1xuICApIHsgfVxufVxuXG5leHBvcnQgY2xhc3MgTm90aWZpY2F0aW9uIGltcGxlbWVudHMgRGVzZXJpYWxpemFibGUge1xuICBlbnRpdHlJZDogc3RyaW5nO1xuICBlbnRpdHlOYW1lOiBzdHJpbmc7XG4gIGVudGl0eVR5cGU6IHN0cmluZztcbiAgaWQ6IHN0cmluZztcbiAgbm90aWZ5Q29sbGVjdGlvbjogTm90aWZpY2F0aW9uQ29sbGVjdGlvbjtcbiAgbm90aWZ5T25BbGxSZXBsaWVzOiBib29sZWFuO1xuICBub3RpZnlPblVwZGF0ZTogYm9vbGVhbjtcbiAgdGhyZWFkSWQ6IHN0cmluZztcbiAgdG9waWNJZDogc3RyaW5nO1xuICB0eXBlOiBzdHJpbmc7XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpOiB0aGlzIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgTm90aWZpY2F0aW9uTGlzdCBpbXBsZW1lbnRzIERlc2VyaWFsaXphYmxlIHtcbiAgbm90aWZpY2F0aW9uczogTm90aWZpY2F0aW9uW107XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpOiB0aGlzIHtcbiAgICB0aGlzLm5vdGlmaWNhdGlvbnMgPSBbXTtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMubm90aWZpY2F0aW9ucywgaW5wdXQpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBUaHJlYWRMaXN0IGltcGxlbWVudHMgRGVzZXJpYWxpemFibGUge1xuICB0aHJlYWRzOiBOb3RlVGhyZWFkW107XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpOiB0aGlzIHtcbiAgICB0aGlzLnRocmVhZHMgPSBbXTtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMudGhyZWFkcywgaW5wdXQpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBNZXRhZGF0YSB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBjcmVhdGVkQnk6XHRzdHJpbmcsXG4gICAgICAgICAgICAgIHB1YmxpYyBjcmVhdGlvblRpbWVzdGFtcDpcdHN0cmluZyxcbiAgICAgICAgICAgICAgcHVibGljIGNyZWF0ZWRCeURldGFpbHM6IFVzZXJJbmZvLFxuICAgICAgICAgICAgICBwdWJsaWMgbW9kaWZpZWRCeTpcdHN0cmluZyxcbiAgICAgICAgICAgICAgcHVibGljIG1vZGlmaWNhdGlvblRpbWVzdGFtcDpcdHN0cmluZyxcbiAgICAgICAgICAgICAgcHVibGljIG1vZGlmaWVkQnlEZXRhaWxzOiBVc2VySW5mbyxcbiAgICAgICAgICAgICAgcHVibGljIGxvY2s6XHRib29sZWFuLFxuICAgICAgICAgICAgICBwdWJsaWMgbG9ja1R5cGU6XHRzdHJpbmcsXG4gICAgICAgICAgICAgIHB1YmxpYyBsb2NrZWRCeTpcdHN0cmluZyxcbiAgICAgICAgICAgICAgcHVibGljIG1zTG9ja0V4cGlyeTpcdHN0cmluZyxcbiAgICAgICAgICAgICAgcHVibGljIG1zU3lzdGVtVGltZTpcdHN0cmluZyxcbiAgICAgICAgICAgICAgcHVibGljIG1hcmtlZEZvclB1cmdlOiBib29sZWFuLFxuICAgICAgICAgICAgICBwdWJsaWMgYXBwbGljYXRpb25JZDpcdHN0cmluZyxcbiAgICAgICAgICAgICAgcHVibGljIGFwcGxpY2F0aW9uTGFiZWw6IHN0cmluZyxcbiAgICAgICAgICAgICAgcHVibGljIHR5cGVJZDogc3RyaW5nLFxuICAgICAgICAgICAgICBwdWJsaWMgc3RhdGVDb2xvcjogc3RyaW5nLFxuICAgICAgICAgICAgICBwdWJsaWMgc3RhdGVJY29uOiBzdHJpbmcsXG4gICAgICAgICAgICAgIHB1YmxpYyBjYXNlVHlwZUNvbG9yOiBzdHJpbmcsXG4gICAgICAgICAgICAgIHB1YmxpYyBjYXNlVHlwZUljb246IHN0cmluZyxcbiAgICAgICAgICAgICAgcHVibGljIHVzZUNhc2VUeXBlQ29sb3I6IGJvb2xlYW5cbiAgICAgICAgICAgICkge1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBDYXNlVHlwZVN0YXRlIGltcGxlbWVudHMgRGVzZXJpYWxpemFibGUge1xuICBpZDogc3RyaW5nO1xuICBsYWJlbDogc3RyaW5nO1xuICB2YWx1ZTogc3RyaW5nO1xuICBpc1Rlcm1pbmFsOiBib29sZWFuO1xuICBkZXNlcmlhbGl6ZShpbnB1dDogYW55KTogdGhpcyB7XG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLCBpbnB1dCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENhc2VUeXBlU3RhdGVzTGlzdExpc3QgaW1wbGVtZW50cyAgRGVzZXJpYWxpemFibGUge1xuICBjYXNldHlwZXM6IENhc2VUeXBlU3RhdGVzTGlzdFtdO1xuICBkZXNlcmlhbGl6ZShpbnB1dDogYW55KTogdGhpcyB7XG4gICAgdGhpcy5jYXNldHlwZXMgPSBbXTtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMuY2FzZXR5cGVzLCBpbnB1dCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENhc2VUeXBlU3RhdGVzTGlzdCBpbXBsZW1lbnRzIERlc2VyaWFsaXphYmxlIHtcbiAgc3RhdGVzOiBDYXNlVHlwZVN0YXRlW107XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpOiB0aGlzIHtcbiAgICB0aGlzLnN0YXRlcyA9IFtdO1xuICAgIE9iamVjdC5hc3NpZ24odGhpcy5zdGF0ZXMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ2FzZUluZm8gaW1wbGVtZW50cyBEZXNlcmlhbGl6YWJsZSB7XG4gICAgZGVsZXRlZDogYm9vbGVhbjtcbiAgICBjYXNlUmVmZXJlbmNlOiBzdHJpbmc7XG4gICAgdW50YWdnZWRDYXNlZGF0YTogc3RyaW5nO1xuICAgIHVudGFnZ2VkQ2FzZWRhdGFPYmo6IGFueTtcbiAgICBjYXNlZGF0YTogc3RyaW5nO1xuICAgIGNhc2VkYXRhT2JqOiBhbnk7XG4gICAgc3VtbWFyeTogIHN0cmluZztcbiAgICBzdW1tYXJ5T2JqOiBhbnk7XG4gICAgbWV0YWRhdGE6IE1ldGFkYXRhO1xuICAgIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpOiB0aGlzIHtcbiAgICAgIE9iamVjdC5hc3NpZ24odGhpcywgaW5wdXQpO1xuICAgICAgdGhpcy5zdW1tYXJ5T2JqID0gdGhpcy5zdW1tYXJ5ID8gSlNPTi5wYXJzZSh0aGlzLnN1bW1hcnkpIDogdW5kZWZpbmVkO1xuICAgICAgdGhpcy5jYXNlZGF0YU9iaiA9IHRoaXMuY2FzZWRhdGEgPyBKU09OLnBhcnNlKHRoaXMuY2FzZWRhdGEpIDogdW5kZWZpbmVkO1xuICAgICAgdGhpcy51bnRhZ2dlZENhc2VkYXRhT2JqID0gdGhpcy51bnRhZ2dlZENhc2VkYXRhID8gSlNPTi5wYXJzZSh0aGlzLnVudGFnZ2VkQ2FzZWRhdGEpIDogdW5kZWZpbmVkO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ2FzZUluZm9MaXN0IGltcGxlbWVudHMgRGVzZXJpYWxpemFibGUge1xuXG4gIGNhc2VpbmZvczogQ2FzZUluZm9bXTtcbiAgY2FzZWNvdW50OiBzdHJpbmc7XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpOiB0aGlzIHtcbiAgICB0aGlzLmNhc2VpbmZvcyA9IFtdO1xuICAgIE9iamVjdC5hc3NpZ24odGhpcy5jYXNlaW5mb3MsIGlucHV0KTtcbiAgICB0aGlzLmNhc2VpbmZvcy5mb3JFYWNoKGZ1bmN0aW9uKGNhc2VpbmZvKSB7XG4gICAgICBpZiAoY2FzZWluZm8uc3VtbWFyeSkgeyBjYXNlaW5mby5zdW1tYXJ5T2JqID0gSlNPTi5wYXJzZShjYXNlaW5mby5zdW1tYXJ5KTsgfVxuICAgICAgaWYgKGNhc2VpbmZvLmNhc2VkYXRhKSB7IGNhc2VpbmZvLmNhc2VkYXRhT2JqID0gSlNPTi5wYXJzZShjYXNlaW5mby5jYXNlZGF0YSk7IH1cbiAgICB9KVxuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBDYXNlQXR0cmlidXRlIHtcbiAgaXNJZGVudGlmaWVyOiBib29sZWFuO1xuICBpc01hbmRhdG9yeTogYm9vbGVhbjtcbiAgaXNTdHJ1Y3R1cmVkVHlwZTogdHJ1ZTtcbiAgbGFiZWw6IHN0cmluZztcbiAgbmFtZTogc3RyaW5nO1xuICB0eXBlOiBzdHJpbmc7XG4gIG1heGltdW06IG51bWJlcjtcbiAgbWluaW11bTogbnVtYmVyO1xufVxuXG5leHBvcnQgY2xhc3MgSnNvblNjaGVtYSB7XG4gICRzY2hlbWE6IHN0cmluZztcbiAgZGVmaW5pdGlvbnM6IGFueVtdO1xuICBwcm9wZXJ0aWVzOiBhbnlbXTtcbiAgdHlwZTogc3RyaW5nO1xuICByZXF1aXJlZDogc3RyaW5nW107XG59XG5cbmV4cG9ydCBjbGFzcyBQcm9jZXNzIHtcbiAganNvblNjaGVtYTogSnNvblNjaGVtYTtcbiAgbmFtZTogc3RyaW5nO1xuICBpZDogc3RyaW5nO1xuICB1bnN1cHBvcnRlZEZvcm06IGJvb2xlYW47XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpOiB0aGlzIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgUHJvY2Vzc0lkIHtcbiAgY2FzZUlkZW50aWZpZXI6IHN0cmluZztcbiAgY2FzZVJlZmVyZW5jZTogc3RyaW5nO1xuICBkZXNlcmlhbGl6ZShpbnB1dDogYW55KTogdGhpcyB7XG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLCBpbnB1dCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cblxuXG5leHBvcnQgY2xhc3MgQ2FzZVR5cGUge1xuICBhY3Rpb25zOiBQcm9jZXNzW107XG4gIGFwcGxpY2F0aW9uSWQ6IHN0cmluZztcbiAgYXBwbGljYXRpb25JbnRlcm5hbE5hbWU6IHN0cmluZztcbiAgYXBwbGljYXRpb25OYW1lOiBhbnk7XG4gIGF0dHJpYnV0ZXM6IENhc2VBdHRyaWJ1dGVbXTtcbiAgY3JlYXRvcnM6IFByb2Nlc3NbXTtcbiAgaWQ6ICBzdHJpbmc7XG4gIGlzQ2FzZTogYm9vbGVhblxuICBsYWJlbDogYW55O1xuICBuYW1lOiBzdHJpbmc7XG4gIGpzb25TY2hlbWE6IEpzb25TY2hlbWE7XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpOiB0aGlzIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ2FzZVR5cGVzTGlzdCBpbXBsZW1lbnRzIERlc2VyaWFsaXphYmxlIHtcbiAgY2FzZXR5cGVzOiBDYXNlVHlwZVtdO1xuICBkZXNlcmlhbGl6ZShpbnB1dDogYW55KTogdGhpcyB7XG4gICAgdGhpcy5jYXNldHlwZXMgPSBbXTtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMuY2FzZXR5cGVzLCBpbnB1dCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENhc2VBY3Rpb24gaW1wbGVtZW50cyBEZXNlcmlhbGl6YWJsZSB7XG4gIGFjdGl2aXR5TmFtZTogc3RyaW5nO1xuICBhcHBsaWNhdGlvbklkOiBzdHJpbmc7XG4gIGFwcGxpY2F0aW9uTmFtZTogc3RyaW5nO1xuICBhdmFpbGFibGVJblN0YXRlczogc3RyaW5nW107XG4gIGNoYXRCb3RFbmFibGVkOiBib29sZWFuO1xuICBpZDogc3RyaW5nO1xuICBsYWJlbDogc3RyaW5nO1xuICBuYW1lOiBzdHJpbmc7XG4gIG5vRGF0YTogYm9vbGVhbjtcbiAgcGVyZm9ybWVyUGF0aHM6IHN0cmluZ1tdO1xuICByb2xlczogc3RyaW5nW107XG4gIHZlcnNpb246IG51bWJlcjtcbiAgcHJvY2VzczogUHJvY2VzcztcbiAgZGVzZXJpYWxpemUoaW5wdXQ6IGFueSk6IHRoaXMge1xuICAgIE9iamVjdC5hc3NpZ24odGhpcywgaW5wdXQpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBDYXNlQWN0aW9uc0xpc3QgaW1wbGVtZW50cyBEZXNlcmlhbGl6YWJsZSB7XG4gIGFjdGlvbnM6IENhc2VBY3Rpb25bXTtcbiAgZGVzZXJpYWxpemUoaW5wdXQ6IGFueSk6IHRoaXMge1xuICAgIHRoaXMuYWN0aW9ucyA9IFtdO1xuICAgIE9iamVjdC5hc3NpZ24odGhpcy5hY3Rpb25zLCBpbnB1dCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENhc2VDcmVhdG9yIGltcGxlbWVudHMgRGVzZXJpYWxpemFibGUge1xuICBhY3Rpdml0eU5hbWU6IHN0cmluZztcbiAgYXBwbGljYXRpb25JZDogc3RyaW5nO1xuICBhcHBsaWNhdGlvbk5hbWU6IHN0cmluZztcbiAgY2hhdEJvdEVuYWJsZWQ6IGJvb2xlYW47XG4gIGlkOiBzdHJpbmc7XG4gIGxhYmVsOiBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbiAgcm9sZXM6IHN0cmluZ1tdO1xuICB2ZXJzaW9uOiBudW1iZXI7XG4gIHByb2Nlc3M6IFByb2Nlc3M7XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpOiB0aGlzIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ2FzZUNyZWF0b3JzTGlzdCBpbXBsZW1lbnRzIERlc2VyaWFsaXphYmxlIHtcbiAgY3JlYXRvcnM6IENhc2VDcmVhdG9yW107XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpOiB0aGlzIHtcbiAgICB0aGlzLmNyZWF0b3JzID0gW107XG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLmNyZWF0b3JzLCBpbnB1dCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENhc2VMaXN0IGltcGxlbWVudHMgRGVzZXJpYWxpemFibGUge1xuICB1bmlxdWVLZXk6IHN0cmluZztcbiAgbWF4U2l6ZTogbnVtYmVyO1xuICBjYXNlUmVmczogc3RyaW5nW107XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpOiB0aGlzIHtcbiAgICB0aGlzLnVuaXF1ZUtleSA9IGlucHV0LnVuaXF1ZUtleTtcbiAgICB0aGlzLm1heFNpemUgPSBpbnB1dC5tYXhTaXplO1xuICAgIHRoaXMuY2FzZVJlZnMgPSBbXTtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMuY2FzZVJlZnMsIGlucHV0LmNhc2VSZWZzKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQXBpUmVzcG9uc2VUZXh0IGltcGxlbWVudHMgRGVzZXJpYWxpemFibGUge1xuICBtZXNzYWdlOiBzdHJpbmc7XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQXBpUmVzcG9uc2VFcnJvciBpbXBsZW1lbnRzIERlc2VyaWFsaXphYmxlIHtcbiAgZXJyb3JNc2c6IHN0cmluZztcbiAgZXJyb3JDb2RlOiBzdHJpbmc7XG4gIGNvbnRleHRBdHRyaWJ1dGVzOiBzdHJpbmdbXTtcbiAgZGVzZXJpYWxpemUoaW5wdXQ6IGFueSk6IHRoaXMge1xuICAgIE9iamVjdC5hc3NpZ24odGhpcywgaW5wdXQpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBVc2VySW5mbyBpbXBsZW1lbnRzIERlc2VyaWFsaXphYmxlIHtcbiAgZXh0ZXJuYWxJZDogc3RyaW5nO1xuICBmaXJzdE5hbWU6IHN0cmluZztcbiAgbGFzdE5hbWU6IHN0cmluZztcbiAgdXNlcm5hbWU6IHN0cmluZztcbiAgZW1haWw6IHN0cmluZztcbiAgdHlwZTogc3RyaW5nO1xuICBpZDogc3RyaW5nO1xuICBkZXNlcmlhbGl6ZShpbnB1dDogYW55KSB7XG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLCBpbnB1dCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIE5vdGVzUm9sZSBpbXBsZW1lbnRzIERlc2VyaWFsaXphYmxlIHtcbiAgZW50aXR5SWQ6IHN0cmluZztcbiAgZW50aXR5TmFtZTogc3RyaW5nO1xuICBlbnRpdHlUeXBlOiBzdHJpbmc7XG4gIGlkOiBzdHJpbmc7XG4gIHJvbGU6IHN0cmluZztcbiAgdGhyZWFkSWQ6IHN0cmluZztcbiAgZGVzZXJpYWxpemUoaW5wdXQ6IGFueSkge1xuICAgIE9iamVjdC5hc3NpZ24odGhpcywgaW5wdXQpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBUaHJlYWQgaW1wbGVtZW50cyBEZXNlcmlhbGl6YWJsZSB7XG4gIGFjY2VwdGVkU3RhdHVzQ291bnQ6IG51bWJlcjtcbiAgYWN0aW9uRGF0ZTogbnVtYmVyO1xuICBhY3Rpb25JZDogc3RyaW5nO1xuICBhY3Rpb25UeXBlOiBzdHJpbmc7XG4gIGFuc3dlck5vdGVDb3VudDogbnVtYmVyO1xuICBhbnN3ZXJlZFN0YXR1c0NvdW50OiBudW1iZXI7XG4gIGNyZWF0ZWRCeUlkOiBzdHJpbmc7XG4gIGNyZWF0ZWRCeU5hbWU6IHN0cmluZztcbiAgY3JlYXRlZERhdGU6IG51bWJlcjtcbiAgaWQ6IHN0cmluZztcbiAgaW5mb3JtYXRpb25hbE5vdGVDb3VudDogbnVtYmVyO1xuICBpc0FiYW5kb25lZDogYm9vbGVhbjtcbiAgaXNMb2NrZWQ6IGJvb2xlYW47XG4gIGlzT3JwaGFuZWQ6IGJvb2xlYW47XG4gIGlzc3VlTm90ZUNvdW50OiBudW1iZXI7XG4gIGxpZmVjeWNsZWRXaXRoSWQ6IGJvb2xlYW47XG4gIGxpZmVjeWNsZWRXaXRoVHlwZTogYm9vbGVhbjtcbiAgbW9kaWZpZWRCeUlkOiBzdHJpbmc7XG4gIG1vZGlmaWVkQnlOYW1lOiBzdHJpbmc7XG4gIG1vZGlmaWVkRGF0ZTogbnVtYmVyO1xuICBxdWVzdGlvbk5vdGVDb3VudDogbnVtYmVyO1xuICByZWxhdGVkSXRlbUNvbGxlY3Rpb246IHN0cmluZ1tdO1xuICByZWxhdGVkSXRlbUlkOiBzdHJpbmc7XG4gIHJlbGF0ZWRJdGVtVHlwZTogc3RyaW5nO1xuICByZXNvbHV0aW9uTm90ZUNvdW50OiBudW1iZXI7XG4gIHJlc29sdmVkU3RhdHVzQ291bnQ6IG51bWJlcjtcbiAgcm9sZXM6IE5vdGVzUm9sZVtdO1xuICBzdGF0dXM6IHN0cmluZztcbiAgdG9wTGV2ZWxOb3RlSWQ6IHN0cmluZztcbiAgdG9waWNJZDogc3RyaW5nO1xuICB0b3RhbENvdW50OiBudW1iZXI7XG4gIHVuYWNjZXB0ZWRTdGF0dXNDb3VudDogbnVtYmVyO1xuICB1bmFuc3dlcmVkU3RhdHVzQ291bnQ6IG51bWJlcjtcbiAgdW5jbGFzc2lmaWVkU3RhdHVzQ291bnQ6IG51bWJlcjtcbiAgdW5yZXNvbHZlZFN0YXR1c0NvdW50OiBudW1iZXI7XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgTm90ZSBpbXBsZW1lbnRzIERlc2VyaWFsaXphYmxlIHtcbiAgYXR0cmlidXRlczogc3RyaW5nW107XG4gIGNyZWF0ZWRCeUlkOiBzdHJpbmc7XG4gIGNyZWF0ZWRCeU5hbWU6IHN0cmluZztcbiAgY3JlYXRlZERhdGU6IG51bWJlcjtcbiAgZGVzY2VuZGFudE1vZGlmaWVkRGF0ZTogbnVtYmVyO1xuICBpZDogc3RyaW5nO1xuICBpc0Rlc2NlbmRhbnROZXdPck1vZGlmaWVkOiBib29sZWFuO1xuICBpc0hpZGRlbjogYm9vbGVhbjtcbiAgaXNNb2RpZmllZDogYm9vbGVhbjtcbiAgaXNOZXc6IGJvb2xlYW47XG4gIGxldmVsOiBudW1iZXI7XG4gIG1vZGlmaWVkQnlOYW1lOiBzdHJpbmc7XG4gIG1vZGlmaWVkRGF0ZTogbnVtYmVyO1xuICBub3RpZmljYXRpb25MYWJlbDogc3RyaW5nO1xuICBub3RpZmljYXRpb25Vcmw6IHN0cmluZztcbiAgcGFyZW50SWQ6IHN0cmluZztcbiAgcmVsYXRlZEl0ZW1Db2xsZWN0aW9uOiBzdHJpbmdbXTtcbiAgcmVsYXRlZEl0ZW1JZDogc3RyaW5nO1xuICByZWxhdGVkSXRlbVR5cGU6IHN0cmluZztcbiAgcmVwbHlBY2NlcHRlZElkOiBzdHJpbmc7XG4gIHJlcGx5Q291bnQ6IG51bWJlcjtcbiAgcmVwbHlEYXRlOiBudW1iZXI7XG4gIHN0YXR1czogc3RyaW5nO1xuICB0ZXh0OiBzdHJpbmc7XG4gIHRocmVhZDogVGhyZWFkO1xuICB0aHJlYWRJZDogc3RyaW5nO1xuICB0aXRsZTogc3RyaW5nO1xuICB0b3BpY0lkOiBzdHJpbmc7XG4gIHR5cGU6IHN0cmluZztcbiAgZWRpdE1vZGU6IGJvb2xlYW47XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgTm90ZXNMaXN0IGltcGxlbWVudHMgRGVzZXJpYWxpemFibGUge1xuICBub3RlczogTm90ZVtdO1xuICBkZXNlcmlhbGl6ZShpbnB1dDogYW55KTogdGhpcyB7XG4gICAgdGhpcy5ub3RlcyA9IFtdO1xuICAgIE9iamVjdC5hc3NpZ24odGhpcy5ub3RlcywgaW5wdXQpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBJY29uTWFwIHtcbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIGlzQ2FzZVR5cGU6IGJvb2xlYW4sXG4gICAgcHVibGljIHN0YXRlOiBzdHJpbmcsXG4gICAgcHVibGljIGZpbGw6IHN0cmluZyxcbiAgICBwdWJsaWMgaWNvbjogc3RyaW5nXG4gICkge31cbn1cblxuZXhwb3J0IGNsYXNzIENhcmRDb25maWcgaW1wbGVtZW50cyBEZXNlcmlhbGl6YWJsZSB7XG4gIGlkOiBzdHJpbmc7XG4gIHVzZUNhc2VUeXBlQ29sb3I6IGJvb2xlYW47XG4gIHN0YXRlTWFwOiBJY29uTWFwW107XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpOiB0aGlzIHtcbiAgICAvLyB0aGlzLnN0YXRlTWFwID0gW107XG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLCBpbnB1dCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIExvZ2luQ29udGV4dCBpbXBsZW1lbnRzIERlc2VyaWFsaXphYmxlIHtcbiAgYXV0aEluZm86IEF1dGhJbmZvO1xuICBhY2Nlc3NUb2tlbjogQWNjZXNzVG9rZW47XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ2FzZVNlYXJjaFJlc3VsdHMgaW1wbGVtZW50cyBEZXNlcmlhbGl6YWJsZSB7XG4gIGNhc2VyZWZzOiBzdHJpbmdbXTtcbiAgc2VhcmNoU3RyaW5nOiBzdHJpbmc7XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuIl19