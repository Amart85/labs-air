/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var StateAuditEvent = /** @class */ (function () {
    function StateAuditEvent() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    StateAuditEvent.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return StateAuditEvent;
}());
export { StateAuditEvent };
if (false) {
    /** @type {?} */
    StateAuditEvent.prototype.caseState;
    /** @type {?} */
    StateAuditEvent.prototype.type;
    /** @type {?} */
    StateAuditEvent.prototype.phaseLabel;
    /** @type {?} */
    StateAuditEvent.prototype.previousPhaseLabel;
    /** @type {?} */
    StateAuditEvent.prototype.messageId;
    /** @type {?} */
    StateAuditEvent.prototype.principalName;
    /** @type {?} */
    StateAuditEvent.prototype.creationTime;
    /** @type {?} */
    StateAuditEvent.prototype.isTerminal;
}
var StateAuditEventList = /** @class */ (function () {
    function StateAuditEventList() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    StateAuditEventList.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        (/** @type {?} */ (this)).auditEvents = [];
        Object.assign((/** @type {?} */ (this)).auditEvents, input);
        return (/** @type {?} */ (this));
    };
    return StateAuditEventList;
}());
export { StateAuditEventList };
if (false) {
    /** @type {?} */
    StateAuditEventList.prototype.auditEvents;
}
var StateTrackerData = /** @class */ (function () {
    function StateTrackerData() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    StateTrackerData.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return StateTrackerData;
}());
export { StateTrackerData };
if (false) {
    /** @type {?} */
    StateTrackerData.prototype.possibleStates;
    /** @type {?} */
    StateTrackerData.prototype.currentState;
    /** @type {?} */
    StateTrackerData.prototype.phase;
    /** @type {?} */
    StateTrackerData.prototype.caseAudit;
}
var TrackerState = /** @class */ (function () {
    function TrackerState() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    TrackerState.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return TrackerState;
}());
export { TrackerState };
if (false) {
    /** @type {?} */
    TrackerState.prototype.name;
    /** @type {?} */
    TrackerState.prototype.label;
    /** @type {?} */
    TrackerState.prototype.phase;
    /** @type {?} */
    TrackerState.prototype.previousPhase;
    /** @type {?} */
    TrackerState.prototype.isTerminal;
    /** @type {?} */
    TrackerState.prototype.status;
    /** @type {?} */
    TrackerState.prototype.user;
    /** @type {?} */
    TrackerState.prototype.changed;
}
var StateTracker = /** @class */ (function () {
    function StateTracker() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    StateTracker.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        (/** @type {?} */ (this)).states = [];
        Object.assign((/** @type {?} */ (this)).states, input);
        return (/** @type {?} */ (this));
    };
    return StateTracker;
}());
export { StateTracker };
if (false) {
    /** @type {?} */
    StateTracker.prototype.states;
    /** @type {?} */
    StateTracker.prototype.valid;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGMtY2FzZS1zdGF0ZXMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGliY28tdGNzdGsvdGMtbGl2ZWFwcHMtbGliLyIsInNvdXJjZXMiOlsibGliL21vZGVscy90Yy1jYXNlLXN0YXRlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBSUE7SUFBQTtJQWFBLENBQUM7Ozs7Ozs7SUFKQyxxQ0FBVzs7Ozs7O0lBQVgsVUFBWSxLQUFVO1FBQ3BCLE1BQU0sQ0FBQyxNQUFNLENBQUMsbUJBQUEsSUFBSSxFQUFBLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDM0IsT0FBTyxtQkFBQSxJQUFJLEVBQUEsQ0FBQztJQUNkLENBQUM7SUFDSCxzQkFBQztBQUFELENBQUMsQUFiRCxJQWFDOzs7O0lBWkMsb0NBQStCOztJQUMvQiwrQkFBMEI7O0lBQzFCLHFDQUFnQzs7SUFDaEMsNkNBQXdDOztJQUN4QyxvQ0FBK0I7O0lBQy9CLHdDQUFtQzs7SUFDbkMsdUNBQWtDOztJQUNsQyxxQ0FBb0I7O0FBT3RCO0lBQUE7SUFPQSxDQUFDOzs7Ozs7O0lBTEMseUNBQVc7Ozs7OztJQUFYLFVBQVksS0FBVTtRQUNwQixtQkFBQSxJQUFJLEVBQUEsQ0FBQyxXQUFXLEdBQUcsRUFBRSxDQUFDO1FBQ3RCLE1BQU0sQ0FBQyxNQUFNLENBQUMsbUJBQUEsSUFBSSxFQUFBLENBQUMsV0FBVyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ3ZDLE9BQU8sbUJBQUEsSUFBSSxFQUFBLENBQUM7SUFDZCxDQUFDO0lBQ0gsMEJBQUM7QUFBRCxDQUFDLEFBUEQsSUFPQzs7OztJQU5DLDBDQUErQjs7QUFRakM7SUFBQTtJQVNBLENBQUM7Ozs7Ozs7SUFKQyxzQ0FBVzs7Ozs7O0lBQVgsVUFBWSxLQUFVO1FBQ3BCLE1BQU0sQ0FBQyxNQUFNLENBQUMsbUJBQUEsSUFBSSxFQUFBLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDM0IsT0FBTyxtQkFBQSxJQUFJLEVBQUEsQ0FBQztJQUNkLENBQUM7SUFDSCx1QkFBQztBQUFELENBQUMsQUFURCxJQVNDOzs7O0lBUkMsMENBQW1DOztJQUNuQyx3Q0FBcUI7O0lBQ3JCLGlDQUFjOztJQUNkLHFDQUE2Qjs7QUFPL0I7SUFBQTtJQWFBLENBQUM7Ozs7Ozs7SUFKQyxrQ0FBVzs7Ozs7O0lBQVgsVUFBWSxLQUFVO1FBQ3BCLE1BQU0sQ0FBQyxNQUFNLENBQUMsbUJBQUEsSUFBSSxFQUFBLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDM0IsT0FBTyxtQkFBQSxJQUFJLEVBQUEsQ0FBQztJQUNkLENBQUM7SUFDSCxtQkFBQztBQUFELENBQUMsQUFiRCxJQWFDOzs7O0lBWkMsNEJBQWE7O0lBQ2IsNkJBQWM7O0lBQ2QsNkJBQWM7O0lBQ2QscUNBQXNCOztJQUN0QixrQ0FBb0I7O0lBQ3BCLDhCQUFlOztJQUNmLDRCQUFhOztJQUNiLCtCQUFnQjs7QUFPbEI7SUFBQTtJQVFBLENBQUM7Ozs7Ozs7SUFMQyxrQ0FBVzs7Ozs7O0lBQVgsVUFBWSxLQUFVO1FBQ3BCLG1CQUFBLElBQUksRUFBQSxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUM7UUFDakIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxtQkFBQSxJQUFJLEVBQUEsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDbEMsT0FBTyxtQkFBQSxJQUFJLEVBQUEsQ0FBQztJQUNkLENBQUM7SUFDSCxtQkFBQztBQUFELENBQUMsQUFSRCxJQVFDOzs7O0lBUEMsOEJBQXVCOztJQUN2Qiw2QkFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGVzZXJpYWxpemFibGV9IGZyb20gJ0B0aWJjby10Y3N0ay90Yy1jb3JlLWxpYic7XG5pbXBvcnQge0Nhc2VUeXBlU3RhdGVzTGlzdH0gZnJvbSAnLi9saXZlYXBwc2RhdGEnO1xuaW1wb3J0IHtBdWRpdEV2ZW50QXR0cmlidXRlLCBBdWRpdEV2ZW50TGlzdH0gZnJvbSAnLi90Yy1jYXNlLWF1ZGl0JztcblxuZXhwb3J0IGNsYXNzIFN0YXRlQXVkaXRFdmVudCBpbXBsZW1lbnRzIERlc2VyaWFsaXphYmxlIHtcbiAgY2FzZVN0YXRlOiBBdWRpdEV2ZW50QXR0cmlidXRlO1xuICB0eXBlOiBBdWRpdEV2ZW50QXR0cmlidXRlO1xuICBwaGFzZUxhYmVsOiBBdWRpdEV2ZW50QXR0cmlidXRlO1xuICBwcmV2aW91c1BoYXNlTGFiZWw6IEF1ZGl0RXZlbnRBdHRyaWJ1dGU7XG4gIG1lc3NhZ2VJZDogQXVkaXRFdmVudEF0dHJpYnV0ZTtcbiAgcHJpbmNpcGFsTmFtZTogQXVkaXRFdmVudEF0dHJpYnV0ZTtcbiAgY3JlYXRpb25UaW1lOiBBdWRpdEV2ZW50QXR0cmlidXRlO1xuICBpc1Rlcm1pbmFsOiBib29sZWFuO1xuICBkZXNlcmlhbGl6ZShpbnB1dDogYW55KSB7XG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLCBpbnB1dCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFN0YXRlQXVkaXRFdmVudExpc3QgaW1wbGVtZW50cyBEZXNlcmlhbGl6YWJsZSB7XG4gIGF1ZGl0RXZlbnRzOiBTdGF0ZUF1ZGl0RXZlbnRbXTtcbiAgZGVzZXJpYWxpemUoaW5wdXQ6IGFueSkge1xuICAgIHRoaXMuYXVkaXRFdmVudHMgPSBbXTtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMuYXVkaXRFdmVudHMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgU3RhdGVUcmFja2VyRGF0YSBpbXBsZW1lbnRzIERlc2VyaWFsaXphYmxlIHtcbiAgcG9zc2libGVTdGF0ZXM6IENhc2VUeXBlU3RhdGVzTGlzdDtcbiAgY3VycmVudFN0YXRlOiBzdHJpbmc7XG4gIHBoYXNlOiBzdHJpbmc7XG4gIGNhc2VBdWRpdDogU3RhdGVBdWRpdEV2ZW50W107XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgVHJhY2tlclN0YXRlIGltcGxlbWVudHMgRGVzZXJpYWxpemFibGUge1xuICBuYW1lOiBzdHJpbmc7XG4gIGxhYmVsOiBzdHJpbmc7XG4gIHBoYXNlOiBzdHJpbmc7XG4gIHByZXZpb3VzUGhhc2U6IHN0cmluZztcbiAgaXNUZXJtaW5hbDogYm9vbGVhbjtcbiAgc3RhdHVzOiBzdHJpbmc7XG4gIHVzZXI6IHN0cmluZztcbiAgY2hhbmdlZDogc3RyaW5nO1xuICBkZXNlcmlhbGl6ZShpbnB1dDogYW55KSB7XG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLCBpbnB1dCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFN0YXRlVHJhY2tlciBpbXBsZW1lbnRzIERlc2VyaWFsaXphYmxlIHtcbiAgc3RhdGVzOiBUcmFja2VyU3RhdGVbXTtcbiAgdmFsaWQ6IGJvb2xlYW47XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpIHtcbiAgICB0aGlzLnN0YXRlcyA9IFtdO1xuICAgIE9iamVjdC5hc3NpZ24odGhpcy5zdGF0ZXMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuIl19