/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var CaseTypeReportRecordInfo = /** @class */ (function () {
    function CaseTypeReportRecordInfo() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    CaseTypeReportRecordInfo.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return CaseTypeReportRecordInfo;
}());
export { CaseTypeReportRecordInfo };
if (false) {
    /** @type {?} */
    CaseTypeReportRecordInfo.prototype.id;
    /** @type {?} */
    CaseTypeReportRecordInfo.prototype.label;
    /** @type {?} */
    CaseTypeReportRecordInfo.prototype.name;
    /** @type {?} */
    CaseTypeReportRecordInfo.prototype.color;
}
var CaseTypeReportRecord = /** @class */ (function () {
    function CaseTypeReportRecord() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    CaseTypeReportRecord.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return CaseTypeReportRecord;
}());
export { CaseTypeReportRecord };
if (false) {
    /** @type {?} */
    CaseTypeReportRecord.prototype.activeStateCaseCount;
    /** @type {?} */
    CaseTypeReportRecord.prototype.applicationId;
    /** @type {?} */
    CaseTypeReportRecord.prototype.terminalStateCaseCount;
    /** @type {?} */
    CaseTypeReportRecord.prototype.incTerminal;
    /** @type {?} */
    CaseTypeReportRecord.prototype.caseTypeInfo;
}
var CaseTypesReport = /** @class */ (function () {
    function CaseTypesReport() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    CaseTypesReport.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return CaseTypesReport;
}());
export { CaseTypesReport };
if (false) {
    /** @type {?} */
    CaseTypesReport.prototype.caseTypes;
}
var CaseTypeStateReportStateInfo = /** @class */ (function () {
    function CaseTypeStateReportStateInfo() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    CaseTypeStateReportStateInfo.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return CaseTypeStateReportStateInfo;
}());
export { CaseTypeStateReportStateInfo };
if (false) {
    /** @type {?} */
    CaseTypeStateReportStateInfo.prototype.id;
    /** @type {?} */
    CaseTypeStateReportStateInfo.prototype.label;
    /** @type {?} */
    CaseTypeStateReportStateInfo.prototype.value;
    /** @type {?} */
    CaseTypeStateReportStateInfo.prototype.color;
    /** @type {?} */
    CaseTypeStateReportStateInfo.prototype.isTerminal;
}
var CaseTypeStateReportRecord = /** @class */ (function () {
    function CaseTypeStateReportRecord() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    CaseTypeStateReportRecord.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return CaseTypeStateReportRecord;
}());
export { CaseTypeStateReportRecord };
if (false) {
    /** @type {?} */
    CaseTypeStateReportRecord.prototype.caseCount;
    /** @type {?} */
    CaseTypeStateReportRecord.prototype.stateInfo;
}
var CaseTypeStateReport = /** @class */ (function () {
    function CaseTypeStateReport() {
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    CaseTypeStateReport.prototype.deserialize = /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    function (input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    };
    return CaseTypeStateReport;
}());
export { CaseTypeStateReport };
if (false) {
    /** @type {?} */
    CaseTypeStateReport.prototype.caseStates;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGMtbGl2ZS1hcHBzLXJlcG9ydGluZy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0aWJjby10Y3N0ay90Yy1saXZlYXBwcy1saWIvIiwic291cmNlcyI6WyJsaWIvbW9kZWxzL3RjLWxpdmUtYXBwcy1yZXBvcnRpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBO0lBQUE7SUFTQSxDQUFDOzs7Ozs7O0lBSkMsOENBQVc7Ozs7OztJQUFYLFVBQVksS0FBVTtRQUNwQixNQUFNLENBQUMsTUFBTSxDQUFDLG1CQUFBLElBQUksRUFBQSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzNCLE9BQU8sbUJBQUEsSUFBSSxFQUFBLENBQUM7SUFDZCxDQUFDO0lBQ0gsK0JBQUM7QUFBRCxDQUFDLEFBVEQsSUFTQzs7OztJQVJDLHNDQUFXOztJQUNYLHlDQUFjOztJQUNkLHdDQUFhOztJQUNiLHlDQUFjOztBQU9oQjtJQUFBO0lBVUEsQ0FBQzs7Ozs7OztJQUpDLDBDQUFXOzs7Ozs7SUFBWCxVQUFZLEtBQVU7UUFDcEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxtQkFBQSxJQUFJLEVBQUEsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUMzQixPQUFPLG1CQUFBLElBQUksRUFBQSxDQUFDO0lBQ2QsQ0FBQztJQUNILDJCQUFDO0FBQUQsQ0FBQyxBQVZELElBVUM7Ozs7SUFUQyxvREFBNkI7O0lBQzdCLDZDQUFzQjs7SUFDdEIsc0RBQStCOztJQUMvQiwyQ0FBcUI7O0lBQ3JCLDRDQUF1Qzs7QUFPekM7SUFBQTtJQU1BLENBQUM7Ozs7Ozs7SUFKQyxxQ0FBVzs7Ozs7O0lBQVgsVUFBWSxLQUFVO1FBQ3BCLE1BQU0sQ0FBQyxNQUFNLENBQUMsbUJBQUEsSUFBSSxFQUFBLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDM0IsT0FBTyxtQkFBQSxJQUFJLEVBQUEsQ0FBQztJQUNkLENBQUM7SUFDSCxzQkFBQztBQUFELENBQUMsQUFORCxJQU1DOzs7O0lBTEMsb0NBQWtDOztBQU9wQztJQUFBO0lBVUEsQ0FBQzs7Ozs7OztJQUpDLGtEQUFXOzs7Ozs7SUFBWCxVQUFZLEtBQVU7UUFDcEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxtQkFBQSxJQUFJLEVBQUEsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUMzQixPQUFPLG1CQUFBLElBQUksRUFBQSxDQUFDO0lBQ2QsQ0FBQztJQUNILG1DQUFDO0FBQUQsQ0FBQyxBQVZELElBVUM7Ozs7SUFUQywwQ0FBVzs7SUFDWCw2Q0FBYzs7SUFDZCw2Q0FBYzs7SUFDZCw2Q0FBYzs7SUFDZCxrREFBb0I7O0FBT3RCO0lBQUE7SUFPQSxDQUFDOzs7Ozs7O0lBSkMsK0NBQVc7Ozs7OztJQUFYLFVBQVksS0FBVTtRQUNwQixNQUFNLENBQUMsTUFBTSxDQUFDLG1CQUFBLElBQUksRUFBQSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzNCLE9BQU8sbUJBQUEsSUFBSSxFQUFBLENBQUM7SUFDZCxDQUFDO0lBQ0gsZ0NBQUM7QUFBRCxDQUFDLEFBUEQsSUFPQzs7OztJQU5DLDhDQUFrQjs7SUFDbEIsOENBQXdDOztBQU8xQztJQUFBO0lBTUEsQ0FBQzs7Ozs7OztJQUpDLHlDQUFXOzs7Ozs7SUFBWCxVQUFZLEtBQVU7UUFDcEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxtQkFBQSxJQUFJLEVBQUEsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUMzQixPQUFPLG1CQUFBLElBQUksRUFBQSxDQUFDO0lBQ2QsQ0FBQztJQUNILDBCQUFDO0FBQUQsQ0FBQyxBQU5ELElBTUM7Ozs7SUFMQyx5Q0FBd0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Rlc2VyaWFsaXphYmxlfSBmcm9tICdAdGliY28tdGNzdGsvdGMtY29yZS1saWInO1xuXG5leHBvcnQgY2xhc3MgQ2FzZVR5cGVSZXBvcnRSZWNvcmRJbmZvIGltcGxlbWVudHMgRGVzZXJpYWxpemFibGUge1xuICBpZDogc3RyaW5nO1xuICBsYWJlbDogc3RyaW5nO1xuICBuYW1lOiBzdHJpbmc7XG4gIGNvbG9yOiBzdHJpbmc7XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ2FzZVR5cGVSZXBvcnRSZWNvcmQgaW1wbGVtZW50cyBEZXNlcmlhbGl6YWJsZSB7XG4gIGFjdGl2ZVN0YXRlQ2FzZUNvdW50OiBudW1iZXI7XG4gIGFwcGxpY2F0aW9uSWQ6IHN0cmluZztcbiAgdGVybWluYWxTdGF0ZUNhc2VDb3VudDogbnVtYmVyO1xuICBpbmNUZXJtaW5hbDogYm9vbGVhbjtcbiAgY2FzZVR5cGVJbmZvOiBDYXNlVHlwZVJlcG9ydFJlY29yZEluZm87XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ2FzZVR5cGVzUmVwb3J0IGltcGxlbWVudHMgRGVzZXJpYWxpemFibGUge1xuICBjYXNlVHlwZXM6IENhc2VUeXBlUmVwb3J0UmVjb3JkW107XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ2FzZVR5cGVTdGF0ZVJlcG9ydFN0YXRlSW5mbyBpbXBsZW1lbnRzIERlc2VyaWFsaXphYmxlIHtcbiAgaWQ6IHN0cmluZztcbiAgbGFiZWw6IHN0cmluZztcbiAgdmFsdWU6IHN0cmluZztcbiAgY29sb3I6IHN0cmluZztcbiAgaXNUZXJtaW5hbDogYm9vbGVhbjtcbiAgZGVzZXJpYWxpemUoaW5wdXQ6IGFueSkge1xuICAgIE9iamVjdC5hc3NpZ24odGhpcywgaW5wdXQpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBDYXNlVHlwZVN0YXRlUmVwb3J0UmVjb3JkIGltcGxlbWVudHMgIERlc2VyaWFsaXphYmxlIHtcbiAgY2FzZUNvdW50OiBudW1iZXI7XG4gIHN0YXRlSW5mbzogQ2FzZVR5cGVTdGF0ZVJlcG9ydFN0YXRlSW5mbztcbiAgZGVzZXJpYWxpemUoaW5wdXQ6IGFueSkge1xuICAgIE9iamVjdC5hc3NpZ24odGhpcywgaW5wdXQpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBDYXNlVHlwZVN0YXRlUmVwb3J0IGltcGxlbWVudHMgRGVzZXJpYWxpemFibGUge1xuICBjYXNlU3RhdGVzOiBDYXNlVHlwZVN0YXRlUmVwb3J0UmVjb3JkW107XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuIl19