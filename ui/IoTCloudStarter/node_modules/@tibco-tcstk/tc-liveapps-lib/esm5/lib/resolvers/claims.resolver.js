/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { LiveAppsService } from '../services/live-apps.service';
import { map } from 'rxjs/operators';
var ClaimsResolver = /** @class */ (function () {
    function ClaimsResolver(liveapps) {
        this.liveapps = liveapps;
    }
    /**
     * @return {?}
     */
    ClaimsResolver.prototype.resolve = /**
     * @return {?}
     */
    function () {
        // note claims will be cached at http level
        // logout required to update them anyway
        // note claims will be cached at http level
        // logout required to update them anyway
        /** @type {?} */
        var claims = this.liveapps.getClaims()
            .pipe(map((/**
         * @param {?} claim
         * @return {?}
         */
        function (claim) {
            claim.sandboxes.forEach((/**
             * @param {?} sandbox
             * @return {?}
             */
            function (sandbox) {
                if (sandbox.type === 'Production') {
                    claim.primaryProductionSandbox = sandbox;
                }
            }));
            return claim;
        })));
        return claims;
    };
    ClaimsResolver.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    ClaimsResolver.ctorParameters = function () { return [
        { type: LiveAppsService }
    ]; };
    return ClaimsResolver;
}());
export { ClaimsResolver };
if (false) {
    /** @type {?} */
    ClaimsResolver.prototype.liveapps;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xhaW1zLnJlc29sdmVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpYmNvLXRjc3RrL3RjLWxpdmVhcHBzLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9yZXNvbHZlcnMvY2xhaW1zLnJlc29sdmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRzNDLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSwrQkFBK0IsQ0FBQztBQUU5RCxPQUFPLEVBQUMsR0FBRyxFQUFXLE1BQU0sZ0JBQWdCLENBQUM7QUFFN0M7SUFHRSx3QkFBbUIsUUFBeUI7UUFBekIsYUFBUSxHQUFSLFFBQVEsQ0FBaUI7SUFBRyxDQUFDOzs7O0lBRWhELGdDQUFPOzs7SUFBUDtRQUVFLDJDQUEyQztRQUMzQyx3Q0FBd0M7Ozs7WUFFbEMsTUFBTSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxFQUFFO2FBQ3JDLElBQUksQ0FDSCxHQUFHOzs7O1FBQUMsVUFBQSxLQUFLO1lBQ1AsS0FBSyxDQUFDLFNBQVMsQ0FBQyxPQUFPOzs7O1lBQUMsVUFBQSxPQUFPO2dCQUM3QixJQUFJLE9BQU8sQ0FBQyxJQUFJLEtBQUssWUFBWSxFQUFFO29CQUNqQyxLQUFLLENBQUMsd0JBQXdCLEdBQUcsT0FBTyxDQUFDO2lCQUMxQztZQUNILENBQUMsRUFBQyxDQUFDO1lBQ0gsT0FBTyxLQUFLLENBQUM7UUFDZixDQUFDLEVBQUMsQ0FDSDtRQUVILE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7O2dCQXZCRixVQUFVOzs7O2dCQUpILGVBQWU7O0lBNkJ2QixxQkFBQztDQUFBLEFBekJELElBeUJDO1NBeEJZLGNBQWM7OztJQUViLGtDQUFnQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJlc29sdmUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgb2YgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7TGl2ZUFwcHNTZXJ2aWNlfSBmcm9tICcuLi9zZXJ2aWNlcy9saXZlLWFwcHMuc2VydmljZSc7XG5pbXBvcnQge0NsYWltfSBmcm9tICdAdGliY28tdGNzdGsvdGMtY29yZS1saWInO1xuaW1wb3J0IHttYXAsIG1lcmdlTWFwfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBDbGFpbXNSZXNvbHZlciBpbXBsZW1lbnRzIFJlc29sdmU8T2JzZXJ2YWJsZTxDbGFpbT4+IHtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgbGl2ZWFwcHM6IExpdmVBcHBzU2VydmljZSkge31cblxuICByZXNvbHZlKCk6IE9ic2VydmFibGU8Q2xhaW0+IHtcblxuICAgIC8vIG5vdGUgY2xhaW1zIHdpbGwgYmUgY2FjaGVkIGF0IGh0dHAgbGV2ZWxcbiAgICAvLyBsb2dvdXQgcmVxdWlyZWQgdG8gdXBkYXRlIHRoZW0gYW55d2F5XG5cbiAgICBjb25zdCBjbGFpbXMgPSB0aGlzLmxpdmVhcHBzLmdldENsYWltcygpXG4gICAgICAucGlwZShcbiAgICAgICAgbWFwKGNsYWltID0+IHtcbiAgICAgICAgICBjbGFpbS5zYW5kYm94ZXMuZm9yRWFjaChzYW5kYm94ID0+IHtcbiAgICAgICAgICAgIGlmIChzYW5kYm94LnR5cGUgPT09ICdQcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgICBjbGFpbS5wcmltYXJ5UHJvZHVjdGlvblNhbmRib3ggPSBzYW5kYm94O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICAgIHJldHVybiBjbGFpbTtcbiAgICAgICAgfSlcbiAgICAgICk7XG5cbiAgICByZXR1cm4gY2xhaW1zO1xuICB9XG5cbn1cbiJdfQ==