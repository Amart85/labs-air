{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@tibco-tcstk/tc-liveapps-lib/lib/models/liveappsdata.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/models/tc-groups-data.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/services/live-apps.service.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-component/live-apps-component.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-applications/live-apps-applications.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-case-search/live-apps-case-search.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-case-list/live-apps-case-list.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/models/tc-case-card-config.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/services/tc-case-card-config.service.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-state-icon/live-apps-state-icon.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-case-summary/live-apps-case-summary.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-notes/live-apps-notes.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/models/tc-document.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/services/tc-document.service.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-documents/live-apps-documents.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/models/tc-case-data.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/services/tc-case-data.service.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/models/tc-case-states.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/services/tc-case-states.service.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-case-states/live-apps-case-states.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-application-configuration/live-apps-application-configuration.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-favorite-cases/live-apps-favorite-cases.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/models/tc-case-audit.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/services/tc-case-audit.service.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-case-audit/live-apps-case-audit.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-case-data/live-apps-case-data.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/models/tc-case-processes.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/services/tc-case-processes.service.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-case-actions/live-apps-case-actions.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-recent-cases/live-apps-recent-cases.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-case-state-audit/live-apps-case-state-audit.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-notes-editor/live-apps-notes-editor.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-login/live-apps-login.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-search-widget/live-apps-search-widget.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-case-creator/live-apps-case-creator.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-creator-selector/live-apps-creator-selector.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-creators/live-apps-creators.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-case-action/live-apps-case-action.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-actions/live-apps-actions.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/resolvers/claims.resolver.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/guards/case.guard.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-case-data-display/live-apps-case-data-display.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/services/tc-roles-service.ts.service.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-case-cockpit/live-apps-case-cockpit.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-milestone/live-apps-milestone.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-app-configuration-widget/live-apps-app-configuration-widget.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-case-creator-widget/live-apps-case-creator-widget.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/models/tc-case-creator.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-creator-dialog/live-apps-creator-dialog.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/models/tc-live-apps-reporting.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/services/tc-live-apps-reporting.service.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-active-cases-report/live-apps-active-cases-report.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-active-cases-for-type-report/live-apps-active-cases-for-type-report.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-active-cases-widget/live-apps-active-cases-widget.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-home-cockpit/live-apps-home-cockpit.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/models/tc-liveapps-config.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/services/tc-live-apps-config.service.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-application-list/live-apps-application-list.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-application-create-button/live-apps-application-create-button.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-settings/live-apps-settings.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-settings-summary-cards/live-apps-settings-summary-cards.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-settings-recent-cases/live-apps-settings-recent-cases.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-settings-roles/live-apps-settings-roles.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-role-switcher/live-apps-role-switcher.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-case-creators/live-apps-case-creators.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/pipes/audit.pipe.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-case-actions-list/live-apps-case-actions-list.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-document-viewer/live-apps-document-viewer.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/components/live-apps-landing-page/live-apps-landing-page.component.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/resolvers/roles.resolver.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/guards/role.guard.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/tc-liveapps-lib.module.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/resolvers/liveapps-config.resolver.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/resolvers/la-config.resolver.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/resolvers/groups.resolver.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/resolvers/all-groups.resolver.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/resolvers/all-roles.resolver.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/resolvers/case-data.resolver.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/resolvers/access.resolver.ts","ng://@tibco-tcstk/tc-liveapps-lib/lib/resolvers/role-active.resolver.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","NoteThread","threadId","showReplies","showNewReply","editMode","newReply","thread","note","CaseRoute","deserialize","input","assign","collectionName","lifecycledWithType","lifecycledWithId","Notification","NotificationList","notifications","ThreadList","threads","createdBy","creationTimestamp","createdByDetails","modifiedBy","modificationTimestamp","modifiedByDetails","lock","lockType","lockedBy","msLockExpiry","msSystemTime","markedForPurge","applicationId","applicationLabel","typeId","stateColor","stateIcon","caseTypeColor","caseTypeIcon","useCaseTypeColor","CaseTypeState","CaseTypeStatesListList","casetypes","CaseTypeStatesList","states","CaseInfo","summaryObj","summary","JSON","parse","undefined","casedataObj","casedata","untaggedCasedataObj","untaggedCasedata","CaseInfoList","caseinfos","forEach","caseinfo","Process","ProcessId","CaseType","CaseTypesList","CaseAction","CaseActionsList","actions","CaseCreator","CaseCreatorsList","creators","CaseList","uniqueKey","maxSize","caseRefs","ApiResponseText","ApiResponseError","UserInfo","NotesRole","Thread","Note","NotesList","notes","isCaseType","state","fill","icon","CardConfig","LoginContext","CaseSearchResults","Group","Groups","Roles","RouteAccessControlConfig","LiveAppsService","http","location","sharedStateService","claimsCacheMap","Map","userInfoCacheMap","caseTypesCacheMap","iconSVGTextCacheMap","getSandboxes","get","pipe","tap","val","sessionStorage","setItem","Date","now","toString","map","sandboxList","SandboxList","getApplications","sandboxId","appIds","top","useCache","headers","url","length","HttpHeaders","set","tmpCaseTypes","filteredCaseTypes_1","ctype","id","getClaims","claim","Claim","getCases","appId","skip","getCasesCount","casecount","getCaseByRef","caseRef","getCase","caseSearch","terms","stateId","_this","debounceTime","distinctUntilChanged","switchMap","term","caseSearchEntries","force","caserefs","caseReference","searchString","getCaseTypes","getCaseTypeSchema","getCaseTypeStates","casetypestates","casetype","getCaseTypeBasicInfo","cacheEntry$","getCaseTypeBasicInfoCached","shareReplay","requestedType","clearFromIconSVGTextCache","delete","getIconSVGText","substr","getIconSVGTextCache","responseType","updateCasesRecord","casesContent","toggle","sharedStateContent","SharedStateContent","casesRec","json","existing","indexOf","splice","unshift","pop","TcCoreCommonFunctions","escapeString","stringify","newCasesRecord","getRecentCases","uiAppId","ssName","getSSCasesList","getSharedState","sharedStateList","sharedStateEntries","content","unsetRecentCase","setCasesRecord","setRecentCase","casesEntry","updateSharedState","subscribe","createSharedState","console","log","getFavoriteCases","setFavoriteCase","isFavoriteCase","caselist","runProcess","processId","data","body","bodyStr","post","response","getUserInfo","userId","getUserCached","userinfo","getThreads","relatedItemType","itemTypeId","returnedNotes","threadList","level","noteThread_1","threadNote","getNotesForCollections","collectionIds","deleteAllNotes","updateNote","noteId","put","result","createNote","uiAppSource","relatedItemId","notificationLabel","notificationUrl","title","noteText","attributes","text","relatedItemCollection","roles","Number","getNote","getThread","createReplyNote","originalNote","reply","subscribeToNotes","relatedTypeId","topicId","notifyCollection","unsubscribeToNotes","getNotifications","deleteNote","getGroups","groups","getGroupMemberships","Injectable","args","providedIn","HttpClient","Location","TcSharedStateService","LiveAppsComponent","_destroyed$","Subject","ngOnDestroy","Component","selector","template","LiveAppsApplicationsComponent","_super","liveapps","selectedApp","selection","EventEmitter","applications","changeAppSelection","appSelected","find","selectApplication","selectionEvent","source","emit","refresh","bypassCache","take","takeUntil","applicationList","selectFirstApp","errorMessage","errorMsg","tslib_1.__extends","ngOnInit","Input","Output","LiveAppsCaseSearchComponent","foundRefs","forcedSearch","applicationsComponent","setCaseType","caseType","doSearch","setSelectedStateId","stateLabel","selectedStateId","selectedStateLabel","handleSearchAppSelection","application","clearResults","forceSearch","searchBox","nativeElement","results","searchTerm$","searchValue","asObservable","ViewChild","static","LiveAppsCaseListComponent","clickCase","clearMatches","clickCaseAction","caseRoute","clearMatchingCases","CaseCardConfig","StateColorMapRec","StateColorMap","DEFAULT_COLORS","DEFAULT_TYPE_COLOR","DEFAULT_STATE_COLOR","GENERIC_STATE_ICON_SVG","GENERIC_CASETYPE_ICON_SVG","TcCaseCardConfigService","liveAppsService","createCardConfig","updateCardConfig","config","entry","SharedStateEntry","name","type","ssList","SharedStateList","createNewCardConfig","caseTypeId","defaultCaseTypeColor","defaultCaseTypeIcon","defaultStateColor","defaultStateIcon","mergeMap","stateMap","IconMap","newCardConfig","getCardConfig","newcard","cardConfig","getCaseCardConfig","states$","cardConfig$","of","updateCaseCardConfig","updatedConfig","cardconfig","flushCache","ssresult","getStateColorInfo","stateColorMap_1","stateColorRecs","stateMapRec","stateColorMapRec","color","getColorForState","stateRec","parseCaseInfo","creatorInfo$","modifiedInfo$","forkJoinArray","metadata","label","stateConfig","forkJoin","resultArr","getCaseWithSummary","caseinf","catchError","err","errorCode","deleted","throwError","LiveAppsStateIconComponent","sanitizer","svgcontents","refillSVG","updatedsvg","replace","newval","bypassSecurityTrustHtml","iconSVG","slice","prepareUrlForStaticResource","ngOnChanges","changes","iconPath","currentValue","previousValue","DomSanitizer","LiveAppsCaseSummaryComponent","caseCardConfigService","restylePreview","stateIconComponent","restylePreviewCaseType","caseTypeIconComponent","configMode","summaryKeys","keys","summaryValues","values","configModeIcon","configModeColor","configModeCaseTypeColor","configModeCaseTypeIcon","configModeAppTypeLabel","isFirstChange","LiveAppsNotesComponent","buttonsHelper","showHeader","newNote","end","toolbarButtons","getBatch","filteredEvents","filter","x","every","y","concat","toggleReplies","toggleNewReply","createReply","replyText","newNoteId","createThread","createToolbarButtons","subscribed","createButton","setupNotificationButtons","buttons","updateButtons","updateButtonDef","updatedToolbarButtons","updatedButton","idx","findIndex","item","handleToolbarButtonEvent","unsubscribe","recreateButtonsForNotifications","editNote","updatedText","TcButtonsHelperService","DocumentAction","Document","DocumentList","documents","OrgFolder","DocTags","TcDocumentService","createOrgFolder","getOrgFolder","options","flatMap","newOrgFolder","initOrgFolder","orgFolderResp","message","listDocuments","folderType","folderId","docs","docList","parseDocument","document","splitDocName","split","extension","fileIcon","getIcon","fileSize","fileSizeToHuman","size","author","authorDetails","lastModifiedBy","lastModifiedByDetails","deleteDocument","documentName","getUrlForDocument","docId","docVersion","downloadDocument","Content-Type","uploadDocument","fileToUpload","fileName","description","accept","filename","enctype","formData","FormData","append","reportProgress","observe","LiveAppsDocumentsComponent","documentsService","dialog","customActionClicked","customActionClick","action","documentslist","doc","removeDocument","viewDocument","open","LiveAppsDocumentViewerDialogComponent","width","height","afterClosed","artifactVersion","downloadURL","window","URL","createObjectURL","link","createElement","href","download","click","attachFile","files","uploadMessage","setFileDescription","fileDescription","uploadFile","uploadProgress","HttpEventType","UploadProgress","Math","round","loaded","total","setTimeout","openDialog","dialogRef","LiveAppsDocumentUploadDialogComponent","componentInstance","fileevent","$e","file","MatDialog","close","onNoClick","MatDialogRef","Inject","MAT_DIALOG_DATA","CaseInfoWithSchema","PurgeResult","TcCaseDataService","getCaseState","purgeAllCases","getCaseWithSchema","caseSchema","typesList","cType","caseData","zip","caseInfoArray","caseInfo","jsonSchema","applicationName","applicationInternalName","StateAuditEventList","auditEvents","StateTrackerData","TrackerState","StateTracker","MILESTONE_SVG","END_SECTION_COMPLETED_SVG","END_SECTION_INPROGESS_SVG","END_SECTION_PENDING_SVG","FIRST_SECTION_COMPLETED_SVG","FIRST_SECTION_INPROGRESS_SVG","FIRST_SECTION_PENDING_SVG","MIDDLE_SECTION_COMPLETED_SVG","MIDDLE_SECTION_INPROGRESS_SVG","MIDDLE_SECTION_PENDING_SVG","TcCaseStatesService","caseDataService","getTrackerData","caseState$","possibleStates$","stateAudit$","getCaseStateAudit","possibleStates","currentState","caseAudit","buildTracker","trackerData","tracker","valid","trackerState","phase","previousPhase","isTerminal","reversedEvents","reverse","thisEvent","auditEvent","caseState","origIdx","status","user","principalName","changed","creationTime","phaseLabel","previousPhaseLabel","getTracker","getCaseStateAuditWithTerminal","caseStateAudit$","caseStateAudit","foundState","caseaudit","getMilestoneSectionSvg","labelClass","bgClass","svgFileName","toUpperCase","LiveAppsCaseStatesComponent","caseStatesService","durationSince","getToolTipText","toolTipText","transform","DurationSincePipe","LiveAppsApplicationConfigurationComponent","configChanged","DEFAULT_CASE_TYPE_ICON","DEFAULT_CASE_TYPE_COLOR","DEFAULT_CASE_STATE_ICON","DEFAULT_CASE_STATE_COLOR","DEFAULT_COLOR_PALETTE","getConfigForState","reqIconMap","caseCardConfig","getConfigForCaseType","updateIconMap","foundMap","handleCaseTypeColorToggleChange","checked","caseSummaryComponent","comp","selectedStateConfig","setFill","stateIconComponents","setCaseTypeFill","selectState","setNewStateIcon","setNewCaseTypeIcon","appTypeLabel","selectedCaseTypeConfig","caseTypeRec","LiveAppsStateIconUploadDialogComponent","isStateIcon","dlUrl_1","ViewChildren","LiveAppsFavoriteCasesComponent","displayType","favoriteCases","clearFavoriteCases","handleDeleted","AuditEventList","auditevents","TcCaseAuditService","getCaseAudit","startAt","LiveAppsCaseAuditComponent","caseAuditService","startat","getAuditEvents","auditeventlist","key","getNextBatch","event","LiveAppsCaseDataComponent","customDataId","schema","formRef","LaProcessSelection","appSchema","caseIdAttribute","process","ref","TcCaseProcessesService","getCaseIDAttributeName","caseIdAttrib","attribute","isIdentifier","createLaProcessSelection","creator","processSelection","actionDef","JsonSchema","properties","$schema","creatorDef","getCaseActionsForCaseRef","getCaseActions","caseactions","caList","String","getCaseCreators","casecreators","ccList","getProcessDetails","LiveAppsCaseActionsComponent","caseProcessesService","maxActions","actionClicked","disabled","toggleEnable","selectAction","processDetails","processSchema","LiveAppsRecentCasesComponent","recentCases","clearRecentCases","LiveAppsCaseStateAuditComponent","LiveAppsNotesEditorComponent","isReply","noteSubmitted","submitNote","LiveAppsLoginComponent","loginContext","handleLoggedIn","loginInfo","authInfo","accessToken","LiveAppsSearchWidgetComponent","caseSelected","matchedRefs","handleSearchResults","handleClearMatches","caseSearchComponent","searchCasesByState","LiveAppsCaseCreatorComponent","caseChanged","handleSubmit","caseIdentifier","processResponse","layout","success","defaultOptions","appearance","dataOverride","LiveAppsCreatorSelectorComponent","creatorSelection","selectProcess","reset","creatorSelector","caseCreatorList","LiveAppsCreatorsComponent","caseCreated","handleCreatorSelection","selectedProcess","LiveAppsCaseActionComponent","lasvc","getCaseData","originalData","_a","caseTypeName","getMainCaseTypeFromSchema","_b","LiveAppsActionsComponent","caseActioned","handleActionCompleted","actionSelector","handleActionClicked","selectedAction","ClaimsResolver","resolve","sandboxes","sandbox","primaryProductionSandbox","CaseGuard","router","canActivate","route","path","claims","navigate","Router","LiveAppsCaseDataDisplayComponent","DEFAULT_CASE_DATA_LAYOUT","condition","readonly","validateOnRender","TcRolesService","currentRole","hasRoleAccess","roleReq","role","hasButtonAccess","buttonId","access","reqRole","buttonRec","requiredRoleId","amIConfigurator","configuration","getCurrentRole","setCurrentRole","checkRole","roleId","checkButton","LiveAppsCaseCockpitComponent","rolesService","showNotes","showDocuments","showStates","showAudit","routeAction","incConfigButton","incFavButton","incRefreshButton","incHomeButton","dataTabActive","actionTabActive","configButton","favButton","isFavorite","refreshButton","homeButton","toggleFavorite","RouteAction","handleActionSelection","actionSelection","caseActionsComponent","actionTabCreated","dataTabGroups","selectedIndex","_tabs","actionTabId","handleCancelAction","handleDataTabChanged","tabNumber","dataTabId","caseDataComponent","caseStatesComponent","caseAuditComponent","caseStateAuditComponent","caseDocumentsComponent","caseNotesComponent","updatedFavButton","isNaN","exclRecentAppIds","ngAfterViewInit","matTabGroup","arguments","__spread","inclusiveTabs","toArray","tabsFromNgContent","ContentChildren","LiveAppsMilestoneComponent","isFirst","isLast","milestoneSvg","sectionSVG","LiveAppsAppConfigurationWidgetComponent","handleConfigAppSelection","selectedAppConfig","handleConfigChanged","LiveAppsCaseCreatorWidgetComponent","handleCaseCreation","CaseCreatorSelectionContext","initialData","customFormDefs","LiveAppsCreatorDialogComponent","handleCaseCreated","createdCase","openCase","closeDialog","decorators","CaseTypeReportRecordInfo","CaseTypeReportRecord","CaseTypesReport","CaseTypeStateReportStateInfo","CaseTypeStateReportRecord","CaseTypeStateReport","TcLiveAppsReportingService","caseConfigService","parseCaseTypesReport","report","caseStateColorMaps$","caseTypes","stateColMap","caseTypeInfo","parseCaseStateReport","stateColorInfo","caseStates","stateRecord","stateInfo","getCaseTypesReport","originalResponse","filteredResponse","element","index","array","getCaseTypeStateReport","incTerminal","caseTypeStateReport","LiveAppsActiveCasesReportComponent","reportingService","maxLegendItems","showPercentages","selectedCaseType","renderChart","doughnutChartData","doughnutChartType","chartColors","defaultColors","getCaseCount","totalActiveCaseCount","doughnutChartOptions","responsive","maintainAspectRatio","legend","display","position","padding","left","right","bottom","plugins","doughnutlabel","labels","font","family","weight","datalabels","anchor","backgroundColor","context","dataset","borderColor","borderRadius","borderWidth","dataIndex","formatter","ctx","datasets","chart","sum","reduce","a","initReportDataToChart","reportData","activeCasesArray","colorArray","ct","col","activeStateCaseCount","totalTerminatedCaseCount","terminalStateCaseCount","palCol","random","parseInt","doughnutChartLabels","caseTypesReport","chartClicked","active","_chart","activePoints","getElementAtEvent","clickedElementIndex","_index","chartHovered","BaseChartDirective","LiveAppsActiveCasesForTypeReportComponent","selectedCaseTypeState","casesByStateArray","cs","caseCount","firstChange","LiveAppsActiveCasesWidgetComponent","apply","handleCaseTypeSelected","selected","selectedCaseTypeReport","handleCaseTypeStateSelected","selectedState","clearSelectedCaseType","activeCasesComp","activeCaseTypeComp","LiveAppsHomeCockpitComponent","handleCreatorAppSelection","openCreatorDialog","handleReportCaseTypeSelection","caseTypeReportRecord","selectedCaseTypeReportRecord","handleReportCaseTypeStateSelection","searchComponent","maxWidth","maxHeight","panelClass","favoritesComponent","recentsComponent","collaborationComponent","documentsComponent","activeCasesComponent","caseStartButtonActive","LiveAppsConfig","LiveAppsConfigHolder","TcLiveAppsConfigService","createLiveAppsConfig","liveappsConfig","getLiveAppsConfig","updateLiveAppsConfig","LiveAppsApplicationListComponent","selectedAppIds","appsSelected","appIdsSelected","handleAppSelection","selIds","handleSelectAll","mySelectedOptions","getAppIds","handleDeselectAll","MatSelectionList","LiveAppsApplicationCreateButtonComponent","handleCreateCaseClick","LiveAppsSettingsComponent","liveAppsConfigService","snackBar","LIVE_APPS_URL","handleEditLiveAppClick","runSaveFunction","liveAppsConfig","applicationIds","caseIconsFolderId","documentAppId","collaborationAppId","generalConfig","duration","getLiveAppsConfigService","handleAppIdSelection","snapshot","laConfigHolder","valueOf","ActivatedRoute","MatSnackBar","LiveAppsSettingsSummaryCardsComponent","routeExt","liveAppsConfigServiceExt","LiveAppsSettingsRecentCasesComponent","recentExcludedAppIds","excludeRecentIds","handleExcludeRecentAppIdSelection","LiveAppsSettingsRolesComponent","generalConfigService","deleteRoleFunction","selectedRole","createRoleFunction","TibcoCloudNewElementComponent","resourceType","newRole","RoleAttribute","priority","getRoute","generalConfigHolder","allRoles","allGroups","TcGeneralConfigService","TibcoCloudSettingsGeneralComponent","LiveAppsRoleSwitcherComponent","changeRoleEvent","selectRole","compareObjects","o1","o2","LiveAppsCaseCreatorsComponent","creatorClicked","selectCreator","ParseAuditMessagePipe","param0","param1","Pipe","LiveAppsCaseActionsListComponent","caseActionList","seletedActionId","LiveAppsDocumentViewerComponent","preparedUrl","prepareUrlForNonStaticResource","sanitizedResourceUrl","bypassSecurityTrustResourceUrl","LiveAppsLandingPageComponent","landingPageService","moveHome","navigateURL","activeRoleHolder","getLandingPageForRole","landingPage","subtitle","backgroundImage","backgroundURL","highlights","LandingPageItemConfig","iconURL","homeRoute","TcGeneralLandingPageService","RolesResolver","createRoles","calcRoles","grp","group","generalConfigResolver","GeneralConfigResolver","claiminfo","setSandbox","generalConfig$","groups$","configData","groupData","RoleGuard","DEFAULT_CONFIG_URL","getRouteAccessControlConfig","configContents","getRouteDef","routeAccessConfig","routes","routeRec","routeUrl","routeConfig","hasAccess","routeConfig$","currentRoles$","currentRoles","routeConfigRec","TcLiveappsLibModule","matIconRegistry","domSanitizer","addSvgIconLiteral","forRoot","ngModule","providers","NgModule","declarations","imports","TcCoreLibModule","TcFormsLibModule","HttpClientModule","BrowserModule","BrowserAnimationsModule","MatButtonModule","MatCardModule","MatCheckboxModule","MatListModule","MatFormFieldModule","MatInputModule","MatIconModule","MatSelectModule","MatOptionModule","MatDialogModule","MatMenuModule","MatTooltipModule","MatTabsModule","MatToolbarModule","MatExpansionModule","MatSnackBarModule","ScrollDispatchModule","MatSlideToggleModule","MatProgressBarModule","FormsModule","FlexLayoutModule","ColorPickerModule","ScrollingModule","ReactiveFormsModule","ChartsModule","exports","entryComponents","RequestCacheService","provide","HTTP_INTERCEPTORS","useClass","CachingInterceptor","multi","MatIconRegistry","LiveAppsConfigResolver","tcSharedState","APP_ID_URL","getDefaultAppConfig","getAppId","uiAppIdConfig","UiAppIdConfig","triggerCardConfigFetch","routeSnapshot","defaultAppConfig","newAppConfig","updatedConf","LaConfigResolver","documentService","liveAppsConfigResolver","liveAppsConfigHolder","GroupsResolver","groupinfo","AllGroupsResolver","AllRolesResolver","claims$","CaseDataResolver","params","AccessResolver","ACCESS_CONTROL_CONFIG_URL","accessControl","RoleActiveResolver","tcSharedStateService","httpClient","generalConfigResolver_1","highestRole","prev","current"],"mappings":"g7CAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAGrB,SAASO,EAAUR,EAAGC,GAEzB,SAASQ,IAAOC,KAAKC,YAAcX,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEY,UAAkB,OAANX,EAAaC,OAAOW,OAAOZ,IAAMQ,EAAGG,UAAYX,EAAEW,UAAW,IAAIH,GA2F5E,SAASK,EAAOC,EAAGC,GACtB,IAAIC,EAAsB,mBAAXC,QAAyBH,EAAEG,OAAOC,UACjD,IAAKF,EAAG,OAAOF,EACf,IAAmBK,EAAYC,EAA3BC,EAAIL,EAAEM,KAAKR,GAAOS,EAAK,GAC3B,IACI,WAAc,IAANR,GAAgBA,KAAM,MAAQI,EAAIE,EAAEG,QAAQC,MAAMF,EAAGG,KAAKP,EAAEQ,OAExE,MAAOC,GAASR,EAAI,CAAEQ,MAAOA,GACjC,QACQ,IACQT,IAAMA,EAAEM,OAAST,EAAIK,EAAU,YAAIL,EAAEM,KAAKD,GAE1D,QAAkB,GAAID,EAAG,MAAMA,EAAEQ,OAE7B,OAAOL,ECjIX,IAAAM,EAAA,WAUA,OATE,SAAmBC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GANA3B,KAAAqB,SAAAA,EACArB,KAAAsB,YAAAA,EACAtB,KAAAuB,aAAAA,EACAvB,KAAAwB,SAAAA,EACAxB,KAAAyB,SAAAA,EACAzB,KAAA0B,OAAAA,EACA1B,KAAA2B,KAAAA,GAPrB,gBAYA,SAAAC,KAQA,OAJEA,EAAA1B,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJF,kBAQA,OALE,SACSI,EACAC,EACAC,GAFAlC,KAAAgC,eAAAA,EACAhC,KAAAiC,mBAAAA,EACAjC,KAAAkC,iBAAAA,mBAIX,SAAAC,KAeA,OAJEA,EAAAjC,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJK,kBAEA,SAAAC,KAOA,OALEA,EAAAlC,UAAA2B,YAAA,SAAYC,GAGV,OAFA,KAAKO,cAAgB,GACrB7C,OAAOuC,OAAO,KAAKM,cAAeP,GAClC,MAEJM,kBAEA,SAAAE,KAOA,OALEA,EAAApC,UAAA2B,YAAA,SAAYC,GAGV,OAFA,KAAKS,QAAU,GACf/C,OAAOuC,OAAO,KAAKQ,QAAST,GAC5B,MAEJQ,kBAyBA,OAtBE,SAAmBE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAnBA3D,KAAAwC,UAAAA,EACAxC,KAAAyC,kBAAAA,EACAzC,KAAA0C,iBAAAA,EACA1C,KAAA2C,WAAAA,EACA3C,KAAA4C,sBAAAA,EACA5C,KAAA6C,kBAAAA,EACA7C,KAAA8C,KAAAA,EACA9C,KAAA+C,SAAAA,EACA/C,KAAAgD,SAAAA,EACAhD,KAAAiD,aAAAA,EACAjD,KAAAkD,aAAAA,EACAlD,KAAAmD,eAAAA,EACAnD,KAAAoD,cAAAA,EACApD,KAAAqD,iBAAAA,EACArD,KAAAsD,OAAAA,EACAtD,KAAAuD,WAAAA,EACAvD,KAAAwD,UAAAA,EACAxD,KAAAyD,cAAAA,EACAzD,KAAA0D,aAAAA,EACA1D,KAAA2D,iBAAAA,mBAKrB,SAAAC,KASA,OAJEA,EAAA1D,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJ8B,kBAEA,SAAAC,KAOA,OALEA,EAAA3D,UAAA2B,YAAA,SAAYC,GAGV,OAFA,KAAKgC,UAAY,GACjBtE,OAAOuC,OAAO,KAAK+B,UAAWhC,GAC9B,MAEJ+B,kBAEA,SAAAE,KAOA,OALEA,EAAA7D,UAAA2B,YAAA,SAAYC,GAGV,OAFA,KAAKkC,OAAS,GACdxE,OAAOuC,OAAO,KAAKiC,OAAQlC,GAC3B,MAEJiC,kBAEA,SAAAE,KAiBA,OAPIA,EAAA/D,UAAA2B,YAAA,SAAYC,GAKV,OAJAtC,OAAOuC,OAAM,KAAOD,GACpB,KAAKoC,WAAa,KAAKC,QAAUC,KAAKC,MAAM,KAAKF,SAAWG,UAC5D,KAAKC,YAAc,KAAKC,SAAWJ,KAAKC,MAAM,KAAKG,UAAYF,UAC/D,KAAKG,oBAAsB,KAAKC,iBAAmBN,KAAKC,MAAM,KAAKK,kBAAoBJ,UACvF,MAENL,kBAEA,SAAAU,KAaA,OATEA,EAAAzE,UAAA2B,YAAA,SAAYC,GAOV,OANA,KAAK8C,UAAY,GACjBpF,OAAOuC,OAAO,KAAK6C,UAAW9C,GAC9B,KAAK8C,UAAUC,QAAO,SAAUC,GAC1BA,EAASX,UAAWW,EAASZ,WAAaE,KAAKC,MAAMS,EAASX,UAC9DW,EAASN,WAAYM,EAASP,YAAcH,KAAKC,MAAMS,EAASN,aAEtE,MAEJG,kBAWA,OATA,6BAiBA,OANA,6BAQA,SAAAI,KASA,OAJEA,EAAA7E,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJiD,kBAEA,SAAAC,KAOA,OAJEA,EAAA9E,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJkD,kBAGA,SAAAC,KAgBA,OAJEA,EAAA/E,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJmD,kBAEA,SAAAC,KAOA,OALEA,EAAAhF,UAAA2B,YAAA,SAAYC,GAGV,OAFA,KAAKgC,UAAY,GACjBtE,OAAOuC,OAAO,KAAK+B,UAAWhC,GAC9B,MAEJoD,kBAEA,SAAAC,KAkBA,OAJEA,EAAAjF,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJqD,kBAEA,SAAAC,KAOA,OALEA,EAAAlF,UAAA2B,YAAA,SAAYC,GAGV,OAFA,KAAKuD,QAAU,GACf7F,OAAOuC,OAAO,KAAKsD,QAASvD,GAC5B,MAEJsD,kBAEA,SAAAE,KAeA,OAJEA,EAAApF,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJwD,kBAEA,SAAAC,KAOA,OALEA,EAAArF,UAAA2B,YAAA,SAAYC,GAGV,OAFA,KAAK0D,SAAW,GAChBhG,OAAOuC,OAAO,KAAKyD,SAAU1D,GAC7B,MAEJyD,kBAEA,SAAAE,KAWA,OAPEA,EAAAvF,UAAA2B,YAAA,SAAYC,GAKV,OAJA,KAAK4D,UAAY5D,EAAM4D,UACvB,KAAKC,QAAU7D,EAAM6D,QACrB,KAAKC,SAAW,GAChBpG,OAAOuC,OAAO,KAAK6D,SAAU9D,EAAM8D,UACnC,MAEJH,kBAEA,SAAAI,KAMA,OAJEA,EAAA3F,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJ+D,kBAEA,SAAAC,KAQA,OAJEA,EAAA5F,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJgE,kBAEA,SAAAC,KAYA,OAJEA,EAAA7F,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJiE,kBAEA,SAAAC,KAWA,OAJEA,EAAA9F,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJkE,kBAEA,SAAAC,KAwCA,OAJEA,EAAA/F,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJmE,kBAEA,SAAAC,KAmCA,OAJEA,EAAAhG,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJoE,kBAEA,SAAAC,KAOA,OALEA,EAAAjG,UAAA2B,YAAA,SAAYC,GAGV,OAFA,KAAKsE,MAAQ,GACb5G,OAAOuC,OAAO,KAAKqE,MAAOtE,GAC1B,MAEJqE,kBASA,OANE,SACSE,EACAC,EACAC,EACAC,GAHAxG,KAAAqG,WAAAA,EACArG,KAAAsG,MAAAA,EACAtG,KAAAuG,KAAAA,EACAvG,KAAAwG,KAAAA,mBAIX,SAAAC,KASA,OALEA,EAAAvG,UAAA2B,YAAA,SAAYC,GAGV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJ2E,kBAEA,SAAAC,KAOA,OAJEA,EAAAxG,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJ4E,kBAEA,SAAAC,KAOA,OAJEA,EAAAzG,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJ6E,KCzcAC,GAAA,WAAA,SAAAA,KASA,OAJEA,EAAA1G,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJ8E,EATA,iBAWA,SAAAC,KAMA,OAJEA,EAAA3G,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJ+E,mBAEA,SAAAC,KAMA,OAJEA,EAAA5G,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJgF,mBAKA,OAHA,8BAQA,OAHA,8BAKA,SAAAC,KAOA,OAJEA,EAAA7G,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJiF,KC9CAC,GAAA,WAsEE,SAAAA,EACUC,EAA0BC,EAA4BC,GAAtDnH,KAAAiH,KAAAA,EAA0BjH,KAAAkH,SAAAA,EAA4BlH,KAAAmH,mBAAAA,EANxDnH,KAAAoH,eAAiB,IAAIC,IACrBrH,KAAAsH,iBAAmB,IAAID,IACvBrH,KAAAuH,kBAAoB,IAAIF,IACxBrH,KAAAwH,oBAAsB,IAAIH,WAK3BL,EAAA9G,UAAAuH,aAAP,WAEE,OAAOzH,KAAKiH,KAAKS,IADL,8BAETC,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAAGC,GAAe,OAAA,IAAIC,EAAAA,aAAcxG,YAAYuG,OAGlDpB,EAAA9G,UAAAoI,gBAAP,SAAuBC,EAAmBC,EAAkBC,EAAaC,OAQnEC,EANAC,EAAM,2BAA6BL,EAAY,mBAAkCE,EAcrF,OAZID,GAAUA,EAAOK,OAAS,IAC5BD,EAAMA,EAAM,6BAA+BJ,EAAON,WAAa,wBAK/DS,EADED,GACQ,IAAII,EAAAA,aAAcC,IAAI,gBAAiB,QAEvC,IAAID,EAAAA,YAIT9I,KAAKiH,KAAKS,IAAIkB,EAAK,CAAED,QAAOA,IAChChB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAACrE,GACF,GAAI0E,GAAUA,EAAOK,OAAS,EAAG,KAEzBG,GAAe,IAAI9D,GAAgBrD,YAAYiC,GAC/CmF,GAAoB,IAAI/D,GAAgBrD,YAAa,CAAEiC,UAAW,KAOxE,OALAkF,EAAalF,UAAUe,QAAO,SAACqE,GACZ,MAAbA,EAAMC,IACRF,EAAkBnF,UAAU7C,KAAKiI,KAG9BD,EAEP,OAAO,IAAI/D,GAAgBrD,YAAYiC,OAK1CkD,EAAA9G,UAAAkJ,UAAP,eAEQT,GAAU,IAAIG,EAAAA,aAAcC,IAAI,gBAAiB,QACvD,OAAO/I,KAAKiH,KAAKS,IAFL,0BAEc,CAAEiB,QAASA,IAClChB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAAGkB,GAAS,OAAA,IAAIC,EAAAA,OAAQzH,YAAYwH,OAGtCrC,EAAA9G,UAAAqJ,SAAP,SAAgBhB,EAAmBiB,EAAelG,EAAgBmG,EAAchB,OACxEG,EAAM,2BAAkCL,EAAY,6BACtDiB,EAAQ,kBAAoBlG,EAAS,UAAYmG,EAAO,SAAWhB,EACvE,OAAOzI,KAAKiH,KAAKS,IAAIkB,GAClBjB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAACvD,GAAa,OAAA,IAAID,GAAe9C,YAAY+C,OAG/CoC,EAAA9G,UAAAwJ,cAAP,SAAqBnB,EAAmBiB,EAAelG,OAC/CsF,EAAM,2BAAkCL,EAAY,6BACtDiB,EAAQ,kBAAoBlG,EAAS,eAEzC,OAAOtD,KAAKiH,KAAKS,IAAIkB,GAClBjB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAACwB,GAAa,OAAAA,EAAUzB,eAG1BlB,EAAA9G,UAAA0J,aAAP,SAAoBrB,EAAWsB,OACvBjB,EAAM,kBAAoBiB,EAC5B,aAAetB,EACnB,OAAOvI,KAAKiH,KAAKS,IAAIkB,GAClBjB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAACrD,GAAY,OAAA,IAAIb,GAAWpC,YAAYiD,OAI1CkC,EAAA9G,UAAA4J,QAAP,SAAeD,EAAiBtB,EAAmBiB,EAAelG,OAC1DsF,EAAM,kBAAoBiB,EAAU,cAAqBtB,EAAY,6BACvEiB,EAAQ,kBAAoBlG,EAAS,iBACzC,OAAOtD,KAAKiH,KAAKS,IAAIkB,GAClBjB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAACrD,GAAY,OAAA,IAAIb,GAAWpC,YAAYiD,OAG1CkC,EAAA9G,UAAA6J,WAAP,SAAkBC,EAA2BzB,EAAmBiB,EAAelG,EAAgBmG,EAAchB,EAAawB,GAA1H,IAAAC,EAAAlK,KACE,OAAOgK,EACJrC,KACCwC,EAAAA,aAAa,KACbC,EAAAA,uBACAC,EAAAA,UAAS,SAACC,GAAQ,OAAAJ,EAAKK,kBAAkBD,EAAM/B,EAAWiB,EAAOlG,GAAQ,EAAOmG,EAAMhB,EAAKwB,OAI1FjD,EAAA9G,UAAAqK,kBAAP,SAAyBD,EAAc/B,EAAmBiB,EAAelG,EAAgBkH,EAAgBf,EAAchB,EAAawB,OAC5HrB,EAAM,2BAAkCL,EAAY,6BACpDiB,EAAQ,kBAAoBlG,EAUlC,OATM2G,IACFrB,EAAMA,EAAM,mBAAqBqB,GAEnCrB,EAAMA,EAAM,UAAYa,EAAO,SAAWhB,EACtC,eACA6B,IAAUA,IAASE,KACrB5B,EAAMA,EAAM,YAAc0B,GAGvBtK,KAAKiH,KAAKS,IAAIkB,GAClBjB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAACvD,OACI6F,EAAqB,GAKzB,OAJqB,IAAI9F,GAAe9C,YAAY+C,GACvCA,UAAUC,QAAO,SAACC,GAC7B2F,EAASxJ,KAAK6D,EAAS4F,kBAElB,IAAI/D,GAAoB9E,YAAY,CAAE4I,SAAUA,EAAUE,aAAcL,QAMlFtD,EAAA9G,UAAA0K,aAAP,SAAoBrC,EAAmBiB,EAAef,OAEhDG,EAAM,2BAA6BL,EAAY,0BAAkCE,EAKrF,OAJa,MAATe,IACFZ,EAAMA,EAAM,6BAA+BY,GAGtCxJ,KAAKiH,KAAKS,IAAIkB,GAClBjB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAACrE,GAAa,OAAA,IAAIoB,GAAgBrD,YAAYiC,OAGhDkD,EAAA9G,UAAA2K,kBAAP,SAAyBtC,EAAmBiB,EAAef,OAGrDG,EAAM,2BAA6BL,EAAY,6BAAkCE,EAIrF,OAHa,MAATe,IACFZ,EAAMA,EAAM,6BAA+BY,GAEtCxJ,KAAKiH,KAAKS,IAAIkB,GAClBjB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAACrE,GAAa,OAAA,IAAIoB,GAAgBrD,YAAYiC,OAG9CkD,EAAA9G,UAAA4K,kBAAP,SAAyBvC,EAAmBiB,EAAef,OAEnDG,EAAM,2BAA6BL,EAAY,mBAAmCE,EACzE,MAATe,IACAZ,EAAMA,EAAM,6BAA+BY,OAEzCb,GAAU,IAAIG,EAAAA,aAAcC,IAAI,gBAAiB,QACvD,OAAO/I,KAAKiH,KAAKS,IAAIkB,EAAK,CAAED,QAASA,IAEhChB,KACGC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAAC4C,OAKE/G,EAMJ,OAPqB,IAAIH,GAAyBhC,YAAYkJ,GAEjDjH,UAAUe,QAAO,SAAEmG,GAC1BA,EAAShH,SAAWM,YACtBN,GAAS,IAAID,GAAqBlC,YAAYmJ,EAAShH,WAGpDA,MAKdgD,EAAA9G,UAAA+K,qBAAP,SAA4B1C,EAAmBiB,EAAelG,EAAgBmF,OAExEG,EAAM,2BAA6BL,EAAY,mBAAkCE,EAKrF,GAJa,MAATe,IACFZ,EAAMA,EAAM,6BAA+BY,IAGxCxJ,KAAKuH,kBAAkBG,IAAIkB,GAAM,KAC9BsC,EAAclL,KAAKmL,2BAA2BvC,EAAKtF,GACtDqE,KACCyD,EAAAA,YAAY,IAEhBpL,KAAKuH,kBAAkBwB,IAAIH,EAAKsC,GAElC,OAAOlL,KAAKuH,kBAAkBG,IAAIkB,IAG5B5B,EAAA9G,UAAAiL,2BAAR,SAAmCvC,EAAKtF,OAChCqF,GAAU,IAAIG,EAAAA,aAAcC,IAAI,gBAAiB,QACvD,OAAO/I,KAAKiH,KAAKS,IAAIkB,EAAK,CAAED,QAASA,IAClChB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAACrE,OAEEuH,EAMJ,OAPqC,IAAInG,GAAgBrD,YAAYiC,GAEvDA,UAAUe,QAAO,SAAEmG,GAC3BA,EAAS7B,KAAO7F,IAClB+H,EAAgBL,KAGbK,MAKRrE,EAAA9G,UAAAoL,0BAAP,SAAiC1C,GAC3B5I,KAAKwH,oBAAoBE,IAAIkB,IAC/B5I,KAAKwH,oBAAoB+D,UAAO3C,IAI7B5B,EAAA9G,UAAAsL,eAAP,SAAsB5C,GAKpB,GAHyB,OAArBA,EAAI6C,OAAO,EAAG,KAChB7C,EAAMA,EAAI6C,OAAO,EAAG7C,EAAIC,OAAS,KAE9B7I,KAAKwH,oBAAoBE,IAAIkB,GAAM,KAEhCsC,EAAclL,KAAK0L,oBAAoB9C,GAC1CjB,KACCyD,EAAAA,YAAY,IAEhBpL,KAAKwH,oBAAoBuB,IAAIH,EAAKsC,GAEpC,OAAOlL,KAAKwH,oBAAoBE,IAAIkB,IAG9B5B,EAAA9G,UAAAwL,oBAAR,SAA4B9C,OACpBD,GAAU,IAAIG,EAAAA,aAAcC,IAAI,gBAAiB,QACvD,OAAO/I,KAAKiH,KAAKS,IAAIkB,EAAK,CAAC+C,aAAc,OAAQhD,QAASA,IACvDhB,KACCQ,EAAAA,IAAG,SAACN,GAEA,OADoBA,EAAIK,eAO5BlB,EAAA9G,UAAA0L,kBAAR,SAA0BC,EAAkChC,EAAiBiC,OACrEC,GAAyC,IAAIC,EAAAA,oBAAqBnK,YAAYgK,GAC9EI,EAAqB7H,KAAKC,MAAM0H,EAAmBG,MACrDC,GAAW,EAwBf,MArBgB,OAAZtC,EAEAoC,EAASrG,SAASiD,OAAS,IAEe,IAAxCoD,EAASrG,SAASwG,QAAQvC,KAE5BoC,EAASrG,SAASyG,OAAOJ,EAASrG,SAASwG,QAAQvC,GAAU,GAC7DsC,GAAW,GAERL,IAAuB,IAAbK,IAGbF,EAASrG,SAAS0G,QAAQzC,IAEA,IAAtBoC,EAAStG,SAAkBsG,EAASrG,SAASiD,OAASoD,EAAStG,SAEjEsG,EAASrG,SAAS2G,QAIxBR,EAAmBG,KAAOM,EAAAA,sBAAsBC,aAAarI,KAAKsI,UAAUT,IACrEF,GAGD/E,EAAA9G,UAAAyM,eAAR,SAAuB9C,EAAiBlE,OAChCsG,EAAqB,IAAIxG,EAC/BwG,EAAStG,QAAUA,EAEjBsG,EAASrG,SADK,OAAZiE,EACkB,GAEA,CAACA,GAEvBoC,EAASvG,UAAY,oBACfqG,EAAyC,IAAIC,EAAAA,mBAEnD,OADAD,EAAmBG,KAAOM,EAAAA,sBAAsBC,aAAarI,KAAKsI,UAAUT,IACrEF,GAGF/E,EAAA9G,UAAA0M,eAAP,SAAsBC,EAAiBtE,OAC/BuE,EAASD,EAAU,gDACzB,OAAO7M,KAAK+M,eAAeD,EAAQvE,IAG7BvB,EAAA9G,UAAA6M,eAAR,SAAuBD,EAAgBvE,GACrC,OAAOvI,KAAKmH,mBAAmB6F,eAAeF,EAAQ,WAAW,GAAO,GACrEnF,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAAC8E,GACF,OAAIA,EAAgBC,mBAAmBrE,OAAS,GACvC,IAAIpD,GAAW5D,YAAYuC,KAAKC,MAAM4I,EAAgBC,mBAAmB,GAAGC,QAAQjB,OAEpF,IAAIzG,MAOduB,EAAA9G,UAAAkN,gBAAP,SAAuBvD,EAAiBgD,EAAiBtE,OAEjDuE,EAASD,EAAU,gDACzB7M,KAAKqN,eAAeP,EAAQjD,EAASgD,EAAStE,EAAW,IAAI,IAGxDvB,EAAA9G,UAAAoN,cAAP,SAAqBzD,EAAiBgD,EAAiBtE,OAE/CuE,EAASD,EAAU,gDACzB7M,KAAKqN,eAAeP,EAAQjD,EAASgD,EAAStE,EAAW,IAAI,IAGvDvB,EAAA9G,UAAAmN,eAAR,SAAuBP,EAAgBjD,EAAiBgD,EAAiBtE,EAAmB5C,EAAiBmG,GAA7G,IAIMyB,EAJNrD,EAAAlK,KAKEA,KAAKmH,mBAAmB6F,eAAeF,EAAQ,WAAW,GAAO,GAC9DnF,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAAC8E,OAEIE,EAWJ,OAZAI,EAAaN,EAAgBC,mBAAmB,IAAM5I,YAGpD6I,EAAUjD,EAAK0B,kBAAkB2B,EAAWJ,QAAStD,EAASiC,GAC9DyB,EAAWJ,QAAUA,EACrBF,EAAgBC,mBAAmB,GAAKK,EACxCrD,EAAK/C,mBAAmBqG,kBAAkBP,EAAgBC,oBAAoBO,cAE9EN,EAAUjD,EAAKyC,eAAe9C,EAASlE,GACvCuE,EAAK/C,mBAAmBuG,kBAAkBZ,EAAQ,UAAW,GAAIvE,EAAWjE,UAAWA,UAAWA,UAAW6I,GAASM,aAGjHF,KAIXE,UAAU,KAAI,SAAEtM,GAAS,OAAAwM,QAAQC,IAAI,+BAAiCzM,MAGrE6F,EAAA9G,UAAA2N,iBAAP,SAAwBhB,EAAiBtE,OACjCuE,EAASD,EAAU,kDACzB,OAAO7M,KAAKmH,mBAAmB6F,eAAeF,EAAQ,WAAW,GAAO,GACrEnF,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAAC8E,GACF,OAAIA,EAAgBC,mBAAmBrE,OAAS,GACvC,IAAIpD,GAAW5D,YAAYuC,KAAKC,MAAM4I,EAAgBC,mBAAmB,GAAGC,QAAQjB,OAEpF,IAAIzG,MAOduB,EAAA9G,UAAA4N,gBAAP,SAAuBjE,EAAiBgD,EAAiBtE,OAEjDuE,EAASD,EAAU,kDACzB7M,KAAKqN,eAAeP,EAAQjD,EAASgD,EAAStE,GAAY,GAAG,IAGxDvB,EAAA9G,UAAA6N,eAAP,SAAsBlE,EAAiBgD,EAAiBtE,OAChDuE,EAASD,EAAU,kDACzB,OAAO7M,KAAK+M,eAAeD,EAAQvE,GAChCZ,KACCQ,EAAAA,IAAG,SAAC6F,GACF,QAAOA,EAASpI,WAAoD,IAAxCoI,EAASpI,SAASwG,QAAQvC,OAKvD7C,EAAA9G,UAAA+N,WAAP,SAAkB1F,EAAmBiB,EAAe0E,EAAmBxD,EAAuByD,OAStFC,EAAO,CACXjF,GAAM+E,EACN3F,UAAaA,EACbnF,cAAiBoG,EACjB2E,KATEA,EACS3B,EAAAA,sBAAsBC,aAAarI,KAAKsI,UAAUyB,IAElD3B,EAAAA,sBAAsBC,aAAarI,KAAKsI,UAAU,MAS3DhC,IACF0D,EAAoB,cAAI1D,OAIpB2D,EAAUjK,KAAKsI,UAAU0B,GACzBzF,GAAU,IAAIG,EAAAA,aACjBC,IAAI,eAAgB,oBACvB,OAAO/I,KAAKiH,KAAKqH,KAvBL,wBAuBeD,EAAS,CAAE1F,QAAOA,IAC1ChB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAACoG,GAAY,OAAAA,MAKfvH,EAAA9G,UAAAsO,YAAP,SAAmBC,OACX7F,EAAO,0BAA4B6F,EACzC,IAAKzO,KAAKsH,iBAAiBI,IAAI+G,GAAS,KAChCvD,EAAclL,KAAK0O,cAAc9F,GACpCjB,KACCyD,EAAAA,YAAY,IAEhBpL,KAAKsH,iBAAiByB,IAAI0F,EAAQvD,GAElC,OAAOlL,KAAKsH,iBAAiBI,IAAI+G,IAG7BzH,EAAA9G,UAAAwO,cAAR,SAAsB9F,OACdD,GAAU,IAAIG,EAAAA,aAAcC,IAAI,gBAAiB,QACvD,OAAO/I,KAAKiH,KAAKS,IAAIkB,EAAK,CAAED,QAASA,IAClChB,KACCQ,EAAAA,IAAG,SAACwG,GAAY,OAAA,IAAI5I,GAAWlE,YAAY8M,OAM1C3H,EAAA9G,UAAA0O,WAAP,SAAkBC,EAAyBC,EAAoBrF,EAAchB,OAErEG,EAAO,kDAAoDiG,EAAkB,IAAMC,EACrF,mCACWrG,EAAM,UAAYgB,EACjC,OAAOzJ,KAAKiH,KAAKS,IAAIkB,GAClBjB,KACCQ,EAAAA,IAAG,SAAC/B,OACI2I,GAAgB,IAAI5I,GAAYtE,YAAYuE,GAC5C4I,EAAyB,IAAI1M,EAgBnC,OAfA0M,EAAWzM,QAAU,GAErBwM,EAAc3I,MAAMvB,QAAO,SAAUlD,GACjC,GAAmB,IAAfA,EAAKsN,MAAa,KACdC,EAAa,IAAI9N,EAAWO,EAAKD,OAAOyH,IAAI,GAAO,GAAO,EAAO7E,UAAW,GAAI3C,GAEtFoN,EAAc3I,MAAMvB,QAAO,SAAWsK,GAChCA,EAAWF,MAAQ,GAAKE,EAAW9N,WAAaM,EAAKD,OAAOyH,IAE9D+F,EAAWxN,OAAOT,KAAKkO,KAG3BH,EAAWzM,QAAQtB,KAAKiO,MAGvBF,MAKRhI,EAAA9G,UAAAkP,uBAAP,SAA8BC,GAC5B,GAAIA,EAAe,KACXzG,EAAM,kDAAoDyG,EAC9D,4BACF,OAAOrP,KAAKiH,KAAKS,IAAIkB,GAClBjB,KACCQ,EAAAA,IAAG,SAAC/B,GAAS,OAAA,IAAID,GAAYtE,YAAYuE,QAK1CY,EAAA9G,UAAAoP,eAAP,aAGOtI,EAAA9G,UAAAqP,WAAP,SAAkB5N,EAAY6N,OACtB5G,EAAM,2BAA6B4G,EACnCpB,EAAOzM,EACP0M,EAAUjK,KAAKsI,UAAU0B,GACzBzF,GAAU,IAAIG,EAAAA,aACjBC,IAAI,eAAgB,oBACvB,OAAO/I,KAAKiH,KAAKwI,IAAI7G,EAAKyF,EAAS,CAAE1F,QAAOA,IACzChB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAAEuH,GAAU,OAAA,IAAIxJ,GAAOrE,YAAY6N,OAIrC1I,EAAA9G,UAAAyP,WAAP,SAAkBd,EACAe,EACAC,EACAC,EACAC,EACAC,EACAC,OAWV7B,EAAO,CACXzM,MAVW,IAAIuE,GAAOrE,YACtB,CACEqO,WAAY,GACZJ,kBAAmBA,EACnBC,gBAAiBA,EACjBI,KAAMF,EACND,MAAOA,IAKTI,sBAAuB,CACpBvB,EAAkB,IAAMgB,GAE3BA,cAAeA,EACfhB,gBAAiBe,EACjBS,MAAO/L,WAEH+J,EAAUjK,KAAKsI,UAAU0B,GACzBzF,GAAU,IAAIG,EAAAA,aACjBC,IAAI,eAAgB,oBACvB,OAAO/I,KAAKiH,KAAKqH,KAtBL,0BAsBeD,EAAS,CAAE1F,QAAOA,IAC1ChB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAACuH,GAAU,OAAAY,OAAOZ,OAIpB1I,EAAA9G,UAAAqQ,QAAP,SAAef,OACP5G,EAAM,2BAA6B4G,EACzC,OAAOxP,KAAKiH,KAAKS,IAAIkB,GAClBjB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAACxG,GAAQ,OAAA,IAAIuE,GAAOrE,YAAYF,OAKlCqF,EAAA9G,UAAAsQ,UAAP,SAAiB3B,EAAyBgB,EAAuBxO,OACzDuH,EAAM,6CAA+CiG,EACvD,kBAAoBgB,EACpB,oBAAsBxO,EACtB,2BACF,OAAOrB,KAAKiH,KAAKS,IAAIkB,GAClBjB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAAC/B,GAAS,OAAA,IAAID,GAAYtE,YAAYuE,OAK1CY,EAAA9G,UAAAuQ,gBAAP,SAAuBC,EAAoBC,EAAenB,OAClD5G,EAAM,2BAA6B4G,EACnCpB,EAAO,CACX0B,kBAAmBY,EAAaZ,kBAChCC,gBAAiBW,EAAaX,gBAC9BI,KAAMQ,GAEFtC,EAAUjK,KAAKsI,UAAU0B,GACzBzF,GAAU,IAAIG,EAAAA,aACjBC,IAAI,eAAgB,oBACvB,OAAO/I,KAAKiH,KAAKqH,KAAK1F,EAAKyF,EAAS,CAAE1F,QAAOA,IAC1ChB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAACjH,GAAS,OAAAoP,OAAOpP,OAInB8F,EAAA9G,UAAA0Q,iBAAP,SAAwB/B,EAAiBgC,OAEjCzC,EAAO,CACX0C,QAASxM,UACTjD,SAAUiD,UACVyM,iBAAkB,CAChB/O,eAAgB6M,EAAkB,IAAMgC,EACxC5O,mBAAoB,UACpBC,kBAAkB,IAGhBmM,EAAUjK,KAAKsI,UAAU0B,GACzBzF,GAAU,IAAIG,EAAAA,aACjBC,IAAI,eAAgB,oBACvB,OAAO/I,KAAKiH,KAAKqH,KAbL,kCAaeD,EAAS,CAAE1F,QAAOA,IAC1ChB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,gBAI7DlB,EAAA9G,UAAA8Q,mBAAP,SAA0BnC,EAAiBgC,EAAepC,OACpD7F,EAAM,0DAEV,OADAA,EAAMA,EAAM,IAAOiG,EAAkB,IAAMgC,EAAgB,kBAAqBpC,EACzEzO,KAAKiH,KAAKsE,UAAO3C,GACrBjB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,gBAI7DlB,EAAA9G,UAAA+Q,iBAAP,SAAwBpC,EAAiBgC,EAAepC,OAChD7F,EAAM,2DAA8DiG,EAAkB,IAAMgC,EACxF,kBAAqBpC,EAC/B,OAAOzO,KAAKiH,KAAKS,IAAIkB,GAClBjB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAACjH,GAAS,OAAA,IAAIkB,GAAmBP,YAAYX,OAI/C8F,EAAA9G,UAAAgR,WAAP,SAAkB1B,OACV5G,EAAM,2BAA6B4G,EACzC,OAAOxP,KAAKiH,KAAKsE,UAAO3C,GACrBjB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,gBAM7DlB,EAAA9G,UAAAiR,UAAP,SAAiB5I,EAAmBE,EAAaC,OAE3CC,EADEC,EAAM,oCAAsCL,EAAY,SAAWE,EAQzE,OALEE,EADED,GACQ,IAAII,EAAAA,aAAcC,IAAI,gBAAiB,QAEvC,IAAID,EAAAA,YAGT9I,KAAKiH,KAAKS,IAAIkB,EAAK,CAAED,QAAOA,IAChChB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAAEiJ,GAAU,OAAA,IAAIvK,IAAShF,YAAY,CAAEuP,OAAQA,QAIjDpK,EAAA9G,UAAAmR,oBAAP,SAA2B9I,EAAmBkG,EAAgBhG,EAAaC,OAErEC,EADEC,EAAM,0BAA4B6F,EAAS,oBAA2BlG,EAAY,SAAWE,EAQnG,OALEE,EADED,GACQ,IAAII,EAAAA,aAAcC,IAAI,gBAAiB,QAEvC,IAAID,EAAAA,YAGT9I,KAAKiH,KAAKS,IAAIkB,EAAK,CAAED,QAAOA,IAChChB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAAEiJ,GAAU,OAAA,IAAIvK,IAAShF,YAAY,CAAEuP,OAAQA,4BAxpBzDE,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAzDLC,EAAAA,kBAsDDC,EAAAA,gBAxBNC,EAAAA,mNAjCF,GCUAC,GAAA,WAcE,SAAAA,IAFU5R,KAAA6R,YAAc,IAAIC,EAAAA,QAS9B,OALEF,EAAA1R,UAAA6R,YAAA,WAEE/R,KAAK6R,YAAY9Q,4BAlBpBiR,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,2BACVC,SAAA,+FAmBFN,EArBA,GCQAO,GAAA,SAAAC,GAsCE,SAAAD,EAAsBE,GAAtB,IAAAnI,EACEkI,EAAAvR,KAAAb,OAAOA,YADakK,EAAAmI,SAAAA,EAbbnI,EAAAoI,YAAwBpI,EAAKoI,YAAcpI,EAAKoI,YAAc,IAAIrN,EAOjEiF,EAAAqI,UAAoC,IAAIC,EAAAA,aAElDtI,EAAAuI,aAA8B,IAAIvN,EAQlCgF,EAAAwI,mBAAkB,SAAIC,GACpBzI,EAAKoI,YAAcpI,EAAKuI,aAAa3O,UAAU8O,KAAI,SAAE5H,GACnD,OAAOA,EAAS5H,gBAAkBuP,EAAYvP,iBAIlD8G,EAAA2I,kBAAiB,SAAIC,GACnB5I,EAAKoI,YAAcQ,EAAeC,OAAO7R,MACzCgJ,EAAKqI,UAAUS,KAAKF,EAAeC,OAAO7R,QAGrCgJ,EAAA+I,QAAO,SAAIC,GAChBhJ,EAAKmI,SAAS/J,gBAAgB4B,EAAK3B,UAAW2B,EAAK1B,OAAQ,IAAK0K,GAC7DvL,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACkL,GACFnJ,EAAKuI,aAAeY,EAChBnJ,EAAKoI,YAAYlP,cACnB8G,EAAKoI,YAAce,EAAgBvP,UAAU8O,KAAI,SAAE5H,GACjD,OAAOA,EAAS5H,gBAAkB8G,EAAKoI,YAAYlP,gBAKjDiQ,EAAgBvP,UAAU+E,OAAS,GAAKqB,EAAKoJ,iBAC/CpJ,EAAKoI,YAAce,EAAgBvP,UAAU,GAC7CoG,EAAKqI,UAAUS,KAAKK,EAAgBvP,UAAU,QAIrD2J,UAAU,KAAI,SAAEtM,GAAW+I,EAAKqJ,aAAe,kCAAoCpS,EAAMA,MAAMqS,cAOtG,OA1EmDC,EAAAA,EAAAA,GAsEjDtB,EAAAjS,UAAAwT,SAAA,WACE1T,KAAKiT,SAAQ,wBA7EhBjB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,8BACVC,SAAA,2wEAjBMlL,yCAyBL2M,EAAAA,sBAKAA,EAAAA,8BAKAA,EAAAA,2BAKAA,EAAAA,yBAOAC,EAAAA,UAgDHzB,EAhFA,CAMmDP,ICTnDiC,GAAA,SAAAzB,GAqCE,SAAAyB,EAAoBxB,GAApB,IAAAnI,EACEkI,EAAAvR,KAAAb,OAAOA,YADWkK,EAAAmI,SAAAA,EAdVnI,EAAA4J,UAA6C,IAAItB,EAAAA,aAO3DtI,EAAA6J,cAAe,EAKR7J,EAAAoI,YAAwB,IAAIrN,EAM5BiF,EAAA+I,QAAO,WACR/I,EAAK8J,uBACP9J,EAAK8J,sBAAsBf,SAAQ,IAKhC/I,EAAA+J,YAAW,SAAIC,GACpBhK,EAAKoI,YAAc4B,EACnBhK,EAAKiK,WACLjK,EAAK8J,sBAAsBtB,mBAAmBwB,IAGzChK,EAAAkK,mBAAkB,SAAInK,EAAiBoK,GAC5CnK,EAAKoK,gBAAkBrK,EACvBC,EAAKqK,mBAAqBF,GAMrBnK,EAAAsK,yBAAwB,SAAIC,GACjCvK,EAAKoI,YAAcmC,EACnBvK,EAAKiK,YAIAjK,EAAAwK,aAAY,WACjBxK,EAAKS,aAAe,GACpBT,EAAKoK,gBAAkBhQ,UACvB4F,EAAKqK,mBAAqBjQ,UAC1B4F,EAAKiK,YAGAjK,EAAAyK,YAAW,WAChBzK,EAAK6J,cAAe,EACpB7J,EAAKmI,SAAS9H,kBAAkBL,EAAK0K,UAAUC,cAAc3T,MAAOgJ,EAAK3B,UAAW2B,EAAKoI,YAAYlP,cAAe8G,EAAKoI,YAAYnJ,IAAI,EAAM,EAAG,IAAM,MAAMsE,UAAS,SACrKqH,GACE5K,EAAK4J,UAAUd,KAAK8B,MAKnB5K,EAAAiK,SAAQ,SAAIlK,GACjBC,EAAK6J,cAAe,EACpB7J,EAAK0K,UAAUC,cAAc3T,MAAQ,OAC/BwO,GAAS,IAAI/I,GAAoB9E,YAAY,CAAE4I,SAAU,GAAIE,aAAc,KAQjF,GAPAT,EAAK4J,UAAUd,KAAKtD,GACpBxF,EAAK6K,YAAc,IAAIjD,EAAAA,QACvB5H,EAAK6K,YAAYtH,UAAS,SAAC1M,GAEzB,OADAmJ,EAAKS,aAAe5J,EACbA,IAETmJ,EAAK8K,YAAc9K,EAAK6K,YAAYE,eAChC/K,EAAKoI,YAAYlP,eAAiB8G,EAAKoI,YAAYnJ,IAAMe,EAAK3B,UAAW,CAQ3E2B,EAAKmI,SAAStI,WAAWG,EAAK6K,YAAa7K,EAAK3B,UAAW2B,EAAKoI,YAAYlP,cAAe8G,EAAKoI,YAAYnJ,GAP/F,EACD,IAM+Gc,GAAoB,MAC5IwD,UAAS,SAACqH,GACT5K,EAAK4J,UAAUd,KAAK8B,SAK9B,OAxGiDrB,EAAAA,EAAAA,uBANhDzB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,6BACVC,SAAA,2sFAfMlL,yCAoBLkO,EAAAA,UAAS3D,KAAA,CAAC,YAAa,CAAC4D,UAAQ,uBAIhCxB,EAAAA,sBAKAA,EAAAA,yBAOAC,EAAAA,sCAEAsB,EAAAA,UAAS3D,KAAA,CAACY,GAA+B,CAACgD,UAAQ,OAqFrDtB,EA9GA,CAMiDjC,ICPjDwD,GAAA,SAAAhD,GAiEE,SAAAgD,EAAoB/C,GAApB,IAAAnI,EACEkI,EAAAvR,KAAAb,OAAOA,YADWkK,EAAAmI,SAAAA,EAlBVnI,EAAAmL,UAAqC,IAAI7C,EAAAA,aAMzCtI,EAAAoL,aAAe,IAAI9C,EAAAA,aAItBtI,EAAAqL,gBAAe,SAAIC,GACxBtL,EAAKmL,UAAUrC,KAAKwC,IAGftL,EAAAuL,mBAAkB,WACvBvL,EAAKoL,aAAatC,UAUtB,OAlE+CS,EAAAA,EAAAA,GA+D7C2B,EAAAlV,UAAAwT,SAAA,iCArED1B,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,2BACVC,SAAA,4lGAbMlL,0CAqBL2M,EAAAA,2BAKAA,EAAAA,yBAKAA,EAAAA,uBAKAA,EAAAA,wBAKAA,EAAAA,yBAKAA,EAAAA,6BAKAA,EAAAA,yBAOAC,EAAAA,6BAMAA,EAAAA,UAmBHwB,EAxEA,CAM+CxD,ICjB/C8D,GAAA,WAAA,SAAAA,KAOA,OAJEA,EAAAxV,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJ4T,EAPA,GASAC,GAAA,WAAA,SAAAA,KAOA,OAJEA,EAAAzV,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJ6T,EAPA,GASAC,GAAA,WAAA,SAAAA,KAOA,OAJEA,EAAA1V,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJ8T,EAPA,GCVaC,GAA2B,CACtC,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,WAGtBC,GAAqB,UAErBC,GAAsB,UAEtBC,GAAyB,4TAIzBC,GAA4B,s1BAIzCC,GAAA,WAKE,SAAAA,EAAoBjP,EAA0BkP,EAA0ChP,EAAkDD,GAAtHlH,KAAAiH,KAAAA,EAA0BjH,KAAAmW,gBAAAA,EAA0CnW,KAAAmH,mBAAAA,EAAkDnH,KAAAkH,SAAAA,SAGnIgP,EAAAhW,UAAAkW,iBAAP,SAAwB7N,EAAmBiB,EAAeqD,OAClDC,EAASD,EAAU,IAAMrD,EAAQ,+CACjC2D,EAA8B,IAAInB,EAAAA,mBAExC,OADAmB,EAAQjB,KAAOM,EAAAA,sBAAsBC,aAAarI,KAAKsI,UAAU,KAC1D1M,KAAKmH,mBAAmBuG,kBAAkBZ,EAAQ,SAAU,GAAIvE,EAAWjE,UAAWA,UAAWA,UAAW6I,GAChHxF,KACCQ,EAAAA,IAAG,SAACjH,GACF,OAAOA,MAMRgV,EAAAhW,UAAAmW,iBAAP,SAAwB9N,EAAmBiB,EAAeqD,EAAiByJ,EAAoBnN,OACvF2D,EAASD,EAAU,IAAMrD,EAAQ,+CACjC2D,EAA8B,IAAInB,EAAAA,mBACxCmB,EAAQjB,KAAOM,EAAAA,sBAAsBC,aAAarI,KAAKsI,UAAU4J,QAC3DC,EAA0B,IAAIC,EAAAA,iBACpCD,EAAMpJ,QAAUA,EAChBoJ,EAAMhO,UAAYA,EAClBgO,EAAME,KAAO3J,EACbyJ,EAAMG,KAAO,SACbH,EAAMpN,GAAKA,MACLwN,EAA0B,IAAIC,EAAAA,gBAGpC,OAFAD,EAAOzJ,mBAAqB,GAC5ByJ,EAAOzJ,mBAAmBjM,KAAKsV,GACxBvW,KAAKmH,mBAAmBqG,kBAAkBmJ,EAAOzJ,oBACrDvF,KACCQ,EAAAA,IAAG,SAACjH,GACF,OAAO,IAAIuF,GAAa5E,YAAauC,KAAKC,MAAMnD,EAAMgM,mBAAmB,GAAGC,QAAQjB,WAKrFgK,EAAAhW,UAAA2W,oBAAP,SAA2B7S,EAAyBuE,EAAmBiB,EAAeqD,EAAiBiK,EAAoBC,EAA8BC,EAA6BC,EAA2BC,GAAjN,IAAAhN,EAAAlK,KAyBE,OAvBmBA,KAAKoW,iBAAiB7N,EAAWiB,EAAOqD,GACzBlF,KAChCwP,EAAAA,SAAQ,SAAChO,OACDiO,EAAsB,GAE5BA,EAASnW,KAAK,IAAIoW,GAAQ,EAAMP,EAAYC,EAAsBC,IAClEhT,EAAOa,QAAO,SAACyB,GACb8Q,EAASnW,KAAK,IAAIoW,GAAQ,EAAO/Q,EAAMpF,MAAO+V,EAAmBC,UAE7DI,GAAgB,IAAI7Q,GAAa5E,YAAY,CAAEsH,GAAIA,EAAIxF,kBAAkB,EAAMyT,SAAUA,IAC/F,OAAOlN,EAAKmM,iBAAiB9N,EAAWiB,EAAOqD,EAASyK,EAAenO,GAAIxB,KACzEC,EAAAA,IAAG,SAAC0O,GAEFpM,EAAKqN,cAAc1K,EAASrD,GAAO,GAAM,KAE3CrB,EAAAA,IAAG,SAACqP,GACA,OAAO,IAAI9B,IAAiB7T,YAC1B,CAAEmC,OAAQA,EAAQyT,WAAYD,WASrCtB,EAAAhW,UAAAwX,kBAAP,SAAyBnP,EAAmBiB,EAAeqD,EAAiBiK,EAAoBC,EAA8BC,EAA6BC,EAA2BC,GAAtL,IAAAhN,EAAAlK,KACQ2X,EAAU3X,KAAKmW,gBAAgBrL,kBAAkBvC,EAAWiB,EAAO,KACnEoO,EAAc5X,KAAKuX,cAAc1K,EAASrD,GAAO,GAAM,GAAO7B,KAClEQ,EAAAA,IAAG,SAACmO,GACA,OAAOA,KAGb,OAAOqB,EAAQhQ,KACbwP,EAAAA,SAAQ,SAACnT,GACP,OAAO4T,EAAYjQ,KACjBwP,EAAAA,SAAQ,SAACb,GACP,GAAIA,EAAQ,KACJmB,GAAa,IAAI/B,IAAiB7T,YACtC,CAACmC,OAAQA,EAAOA,OAAQyT,WAAYnB,IAEtC,OAAOuB,EAAAA,GAAGJ,GAEV,OAAOvN,EAAK2M,oBAAoB7S,EAAOA,OAAQuE,EAAWiB,EAAOqD,EAASiK,EAAYC,EAAsBC,EAAqBC,EAAmBC,GAAkBvP,KACpKQ,EAAAA,IAAG,SAACmP,GACF,OAAOA,YAWhBpB,EAAAhW,UAAA4X,qBAAP,SAA4BvP,EAAmBiB,EAAeqD,EAAiBkL,GAA/E,IAAA7N,EAAAlK,KACE,OAAOA,KAAKqW,iBAAiB9N,EAAWiB,EAAOqD,EAASkL,EAAcN,WAAYM,EAAcN,WAAWtO,IAAIxB,KAC7GQ,EAAAA,IAAG,SAAC6P,GAIF,OAHAD,EAAcN,WAAaO,EAE3B9N,EAAKqN,cAAc1K,EAASrD,GAAO,GAAM,GAAMiE,YACxCsK,MAKN7B,EAAAhW,UAAAqX,cAAP,SAAqB1K,EAAiBrD,EAAed,EAAmBuP,OAChEnL,EAASD,EAAU,IAAMrD,EAAQ,+CACvC,OAAOxJ,KAAKmH,mBAAmB6F,eAAeF,EAAQ,SAAUpE,EAAUuP,GAAYtQ,KACpFQ,EAAAA,IAAG,SAACjH,GACA,GAAIA,EAAMgM,mBAAmBrE,OAAS,EAAG,KACjCqP,GAAW,IAAIzR,GAAa5E,YAAYuC,KAAKC,MAAMnD,EAAMgM,mBAAmB,GAAGC,QAAQjB,OAE7F,OADAgM,EAAS/O,GAAKjI,EAAMgM,mBAAmB,GAAG/D,GACnC+O,EAEP,OAAO5T,cAOV4R,EAAAhW,UAAAiY,kBAAP,SAA0B3O,EAAeqD,GACvC,OAAO7M,KAAKuX,cAAc1K,EAASrD,GAAO,GAAM,GAAO7B,KACrDQ,EAAAA,IAAG,SAACN,GACF,GAAIA,EAAK,KACDyO,EAAqBzO,EACrBuQ,EAAgB,IAAIxC,GAS1B,OARAwC,EAAcC,eAAiB,GAC/B/B,EAAOc,SAASvS,QAAO,SAAEyT,OACjBC,GAAmB,IAAI5C,IAAmB9T,YAAa,CAAEyE,MAAOgS,EAAYhS,MAAOkS,MAAOF,EAAY/R,OACxG+R,EAAYjS,aACd+R,EAAc3U,cAAgB6U,EAAY/R,MAE5C6R,EAAcC,eAAepX,KAAKsX,KAE7BH,EAEP,OAAO,IAAIxC,OAMZM,EAAAhW,UAAAuY,iBAAP,SAAyBjP,EAAeqD,EAAiBvG,GACvD,OAAOtG,KAAKuX,cAAc1K,EAASrD,GAAO,GAAM,GAAO7B,KACrDQ,EAAAA,IAAG,SAACN,OACIuP,EAAWvP,EAAIuP,SAASxE,KAAI,SAAE8F,GAClC,OAAOA,EAASpS,QAAUA,IAE5B,OAAQ8Q,EAAWA,EAAS7Q,KAAOjC,cAKlC4R,EAAAhW,UAAAyY,cAAP,SAAqB7T,EAAoByD,EAAmBiB,EAAelG,EAAgBuJ,OAwCrF+L,EACAC,EAFEC,EAAgB,CArCJ9Y,KAAKmW,gBAAgBlL,qBAAqB1C,EAAWiB,EAAOlG,EAAQ,KAAKqE,KACzFQ,EAAAA,IAAG,SAACN,GAAO,OAAA/C,EAASiU,SAAS1V,iBAAmBwE,EAAImR,SAElChZ,KAAKuX,cAAc1K,EAASrD,GAAO,GAAM,GAAO7B,KAClEQ,EAAAA,IAAG,SAACN,OAEIoR,EADEhP,EAAUnF,EAASZ,WAAWoC,MAEhCuB,IAAQvD,WAAauD,EAAIuP,UAC3BvP,EAAIuP,SAASvS,QAAO,SAAEyB,GAChBA,EAAMA,QAAU2D,IAClBgP,EAAc3S,EACdxB,EAASiU,SAASxV,WAAa0V,EAAY1S,KAC3CzB,EAASiU,SAASvV,UAAYyV,EAAYzS,MAExCF,EAAMD,aACR4S,EAAc3S,EACdxB,EAASiU,SAAStV,cAAgBwV,EAAY1S,KAC9CzB,EAASiU,SAASrV,aAAeuV,EAAYzS,MAE/C1B,EAASiU,SAASpV,mBAAmBkE,EAAIlE,kBAAmBkE,EAAIlE,mBAI/DmB,EAASiU,SAASxV,aACrBuB,EAASiU,SAASxV,WAAawS,IAE5BjR,EAASiU,SAASvV,YACrBsB,EAASiU,SAASvV,UAAY,qCAE3BsB,EAASiU,SAAStV,gBACrBqB,EAASiU,SAAStV,cAAgBqS,IAE/BhR,EAASiU,SAASrV,eACrBoB,EAASiU,SAASrV,aAAe,4CAyBzC,OAlBIoB,EAASiU,SAASvW,WACpBoW,EAAe5Y,KAAKmW,gBAAgB3H,YAAY1J,EAASiU,SAASvW,WAAWmF,KAC3EQ,EAAAA,IAAG,SAACN,GAAO,OAAA/C,EAASiU,SAASrW,iBAAmBmF,GAAY,IAAI9B,KAElE+S,EAAc7X,KAAK2X,IAEnB9T,EAASiU,SAASrW,iBAAmB,IAAIqD,EAEvCjB,EAASiU,SAASpW,YACpBkW,EAAgB7Y,KAAKmW,gBAAgB3H,YAAY1J,EAASiU,SAASpW,YAAYgF,KAC7EQ,EAAAA,IAAG,SAACN,GAAO,OAAA/C,EAASiU,SAASlW,kBAAoBgF,GAAY,IAAI9B,KAEnE+S,EAAc7X,KAAK4X,IAEnB/T,EAASiU,SAASlW,kBAAoB,IAAIkD,EAIrCmT,EAAAA,SAASJ,GAAenR,KAC7BQ,EAAAA,IAAG,SAACgR,GACF,OAAOrU,MAKNoR,EAAAhW,UAAAkZ,mBAAP,SAA0BvP,EAAiBtB,EAAmBsE,GAA9D,IAAA3C,EAAAlK,KAEQ4I,EAAM,kBAAoBiB,EAAU,cAAqBtB,EAAY,oBAC3E,OAAOvI,KAAKiH,KAAKS,IAAIkB,GAAKjB,KACxBwP,EAAAA,SAAQ,SAACrS,OACCuU,GAAU,IAAIpV,GAAWpC,YAAYiD,GAC3C,OAAOoF,EAAKyO,cAAcU,EAAS9Q,EAAW8Q,EAAQN,SAAS3V,cAAeiW,EAAQN,SAASzV,OAAQuJ,KAG3GyM,EAAAA,WAAU,SAACC,GACT,MAA4B,wBAAxBA,EAAIpY,MAAMqY,UAEL3B,EAAAA,IAAG,IAAI5T,GAAWpC,YAAY,CAAE4X,SAAS,KAE3CC,EAAAA,WAAWH,2BAjPzBjI,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAxBNC,EAAAA,kBAJAzK,UAH8E2K,EAAAA,4BAQ9ED,EAAAA,sNAsBR,GCZAiI,GAAA,SAAAvH,GAeE,SAAAuH,EAAoBC,EAAiC3S,EAA0BoL,EAAmCnL,GAAlH,IAAAgD,EACEkI,EAAAvR,KAAAb,OAAOA,YADWkK,EAAA0P,UAAAA,EAAiC1P,EAAAjD,KAAAA,EAA0BiD,EAAAmI,SAAAA,EAAmCnI,EAAAhD,SAAAA,EAF3GgD,EAAA2P,YAAsBvV,UAMtB4F,EAAA4P,UAAS,SAAYvT,OACpBwT,EAAa/Z,KAAK6Z,YAAYG,QAAQ,uBAAwB,SAAWzT,EAAO,KAChF0T,EAASja,KAAK4Z,UAAUM,wBAAwBH,GACtD/Z,KAAKma,QAAUF,GAGV/P,EAAA+I,QAAO,SAAIzM,EAAMD,OAClBqC,EACJ,GAAIpC,GAAiB,yCAATA,GAA4D,sCAATA,EAG3DoC,EAFwB,kBAAtBpC,EAAK4T,MAAM,EAAG,IAEV5N,EAAAA,sBAAsB6N,4BAA4BnQ,EAAKhD,SAAUV,GAEjE,IAAMA,EAEd0D,EAAKmI,SAAS7G,eAAe5C,GAC1BjB,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACN,GAIA,OAHAqC,EAAK2P,YAAchS,EACnBA,EAAMA,EAAIK,WAAW8R,QAAQ,uBAAwB,SAAWzT,EAAO,KACxD2D,EAAK0P,UAAUM,wBAAwBrS,MAK3D4F,UAAS,SAAC5F,GACPqC,EAAKiQ,QAAUtS,GAChB,SACC1G,GACAwM,QAAQC,IAAI,4BAA8BzM,EAAMqS,gBAGjD,KAEDqG,OAAW,EAEbA,EADW,yCAATrT,EACYyP,GAEAD,GAEhB9L,EAAK2P,YAAcA,EACnBA,EAAcA,EAAYG,QAAQ,uBAAwB,SAAWzT,EAAO,SACtE0T,EAAS/P,EAAK0P,UAAUM,wBAAwBL,GACtD3P,EAAKiQ,QAAUF,MAerB,OA1EgDxG,EAAAA,EAAAA,GAgE9CkG,EAAAzZ,UAAAwT,SAAA,aAIAiG,EAAAzZ,UAAAoa,YAAA,SAAYC,IACLA,EAAQC,UAAaD,EAAQC,SAASC,eAAiBF,EAAQC,SAASE,eAAoBH,EAAQ/B,OAAU+B,EAAQ/B,MAAMiC,eAAiBF,EAAQ/B,MAAMkC,gBAC9J1a,KAAKiT,QAAQjT,KAAKwa,SAAUxa,KAAKwY,4BA3EtCxG,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,4BACVC,SAAA,oNAnBMyI,EAAAA,oBACAlJ,EAAAA,kBAEAzK,UACA0K,EAAAA,wCAmBLiC,EAAAA,wBACAA,EAAAA,qBACAA,EAAAA,2BACAA,EAAAA,qBACAA,EAAAA,SAqEHgG,EA/EA,CAKgD/H,ICOhDgJ,GAAA,SAAAxI,GAsLE,SAAAwI,EAAsBvI,EAAqCwI,EAA0DjB,GAArH,IAAA1P,EACEkI,EAAAvR,KAAAb,OAAOA,YADakK,EAAAmI,SAAAA,EAAqCnI,EAAA2Q,sBAAAA,EAA0D3Q,EAAA0P,UAAAA,EArG3G1P,EAAAmL,UAAqC,IAAI7C,EAAAA,aAMzCtI,EAAAuP,QAAgC,IAAIjH,EAAAA,aAavCtI,EAAAqL,gBAAe,eACdC,GAAY,IAAI5T,GAAYC,YAAY,CAAEgI,QAASK,EAAKL,QAASL,MAAOU,EAAKV,MAAOlG,OAAQ4G,EAAK5G,SACvG4G,EAAKmL,UAAUrC,KAAKwC,IAGftL,EAAA4Q,eAAc,SAAItU,EAAMD,GAC7B2D,EAAK6O,SAASvV,UAAYgD,EAC1B0D,EAAK6O,SAASxV,WAAagD,EAC3B2D,EAAK6Q,mBAAmB9H,QAAQzM,EAAMD,IAGjC2D,EAAA8Q,uBAAsB,SAAIxU,EAAMD,GACrC2D,EAAK6O,SAASrV,aAAe8C,EAC7B0D,EAAK6O,SAAStV,cAAgB8C,EAC9B2D,EAAK+Q,sBAAsBhI,QAAQzM,EAAMD,IAGpC2D,EAAA+I,QAAO,WACZ,GAAK/I,EAAKgR,WAuBH,KA2BCpW,GAAW,IAAIb,GAAWpC,YAAYuC,KAAKC,MA1BtB,gxBA2B3B6F,EAAK1F,SAAWM,EAASL,oBACzByF,EAAK6O,SAAWjU,EAASiU,SACzB7O,EAAK/F,QAAUW,EAASZ,WACxBgG,EAAKiR,YAAc3b,OAAO4b,KAAKlR,EAAK/F,SACpC+F,EAAKmR,cAAgB7b,OAAO8b,OAAOpR,EAAK/F,SACxC+F,EAAK6O,SAASvV,UAAY0G,EAAKqR,eAC/BrR,EAAK6O,SAASxV,WAAa2G,EAAKsR,gBAChCtR,EAAK6O,SAAStV,cAAgByG,EAAKuR,wBACnCvR,EAAK6O,SAASrV,aAAewG,EAAKwR,uBAClCxR,EAAK6O,SAAS1V,iBAAmB6G,EAAKyR,4BA3DtCzR,EAAK2Q,sBAAsBzB,mBAAmBlP,EAAKL,QAASK,EAAK3B,UAAW2B,EAAK2C,SAC9ElF,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACrD,GACGA,EAAS2U,QAUZvP,EAAKuP,QAAQzG,KAAK9I,EAAKL,UATvBK,EAAKV,MAAQ1E,EAASiU,SAAS3V,cAC/B8G,EAAK5G,OAASwB,EAASiU,SAASzV,OAChC4G,EAAK1F,SAAWM,EAASL,oBACzByF,EAAK6O,SAAWjU,EAASiU,SACzB7O,EAAK/F,QAAUW,EAASZ,WACxBgG,EAAKiR,YAAc3b,OAAO4b,KAAKlR,EAAK/F,SACpC+F,EAAKmR,cAAgB7b,OAAO8b,OAAOpR,EAAK/F,aAM5CsJ,UACF,KAAI,SAAEtM,GACJ+I,EAAKqJ,aAAe,+BAAiCpS,EAAMA,MAAMqS,cAyD3E,OA9LkDC,EAAAA,EAAAA,GAoLhDmH,EAAA1a,UAAAwT,SAAA,WACE1T,KAAKiT,WAGP2H,EAAA1a,UAAAoa,YAAA,SAAYC,GACNA,EAAQoB,yBAA2BpB,EAAQoB,uBAAuBC,iBAAoBrB,EAAQoB,uBAAuBlB,eAAiBF,EAAQoB,uBAAuBjB,eACvK1a,KAAKiT,+BAhMVjB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,8BACVC,SAAA,+gfArBMlL,UAOAkP,UAHAyE,EAAAA,4DAuBLzF,EAAAA,UAAS3D,KAAA,CAAC,gBAAiB,CAAC4D,UAAQ,mCACpCD,EAAAA,UAAS3D,KAAA,CAAC,eAAgB,CAAC4D,UAAQ,wBAKnCxB,EAAAA,+BAKAA,EAAAA,8BAKAA,EAAAA,uCAKAA,EAAAA,sCAKAA,EAAAA,sCAKAA,EAAAA,uBAKAA,EAAAA,yBAKAA,EAAAA,2BAKAA,EAAAA,0BAKAA,EAAAA,uBAKAA,EAAAA,uBAKAA,EAAAA,yBAKAA,EAAAA,yBAOAC,EAAAA,wBAMAA,EAAAA,UA6GHgH,EApMA,CAMkDhJ,ICnBlDiK,GAAA,SAAAzJ,GAuCE,SAAAyJ,EAAoBxJ,EAAmCyJ,GAAvD,IAAA5R,EACEkI,EAAAvR,KAAAb,OAAOA,YADWkK,EAAAmI,SAAAA,EAAmCnI,EAAA4R,cAAAA,EAd9C5R,EAAA6R,YAAsB7R,EAAK6R,YAAa7R,EAAK6R,WAI/C7R,EAAA8R,QAAe,GAKf9R,EAAAT,KAAO,EACPS,EAAAzB,IAAM,EACNyB,EAAA+R,KAAM,EACN/R,EAAAgS,eAAkC,GAMlChS,EAAA+I,QAAO,WACZ/I,EAAKT,KAAO,EACZS,EAAKzB,IAAM,EACXyB,EAAK+R,KAAM,EACP/R,EAAK3H,SAAW2H,EAAK3H,QAAQA,UAC/B2H,EAAK3H,QAAQA,QAAQsG,OAAS,GAEhCqB,EAAKiS,WACLjS,EAAK+G,oBAGA/G,EAAAiS,SAAQ,WACRjS,EAAK+R,KACR/R,EAAKmI,SAASzD,WAAW1E,EAAK2E,gBAAiB3E,EAAK2F,cAAe3F,EAAKT,KAAMS,EAAKzB,KAChFd,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAAC6G,GACF,GAAK9E,EAAK3H,QAEH,KAEC6Z,EAAiBpN,EAAWzM,QAAQ8Z,OAAM,SAACC,GAAK,OAAApS,EAAK3H,QAAQA,QAAQga,MAAK,SAACC,GAAK,OAAAA,EAAE7a,KAAKwH,KAAOmT,EAAE3a,KAAKwH,OAC3Ge,EAAK3H,QAAQA,QAAU2H,EAAK3H,QAAQA,QAAQka,OAAOL,QAJnDlS,EAAK3H,QAAUyM,EAMbA,EAAWzM,QAAQsG,OAASqB,EAAKzB,IACnCyB,EAAK+R,KAAM,EAEX/R,EAAKT,KAAOS,EAAKT,KAAOuF,EAAWzM,QAAQsG,OAAS,KAGxD4E,UAAU,KAAI,SAAEtM,GAClB+I,EAAKqJ,aAAe,2BAA6BpS,EAAMA,MAAMqS,YAK5DtJ,EAAAwS,cAAa,SAAIhb,GACtBA,EAAOJ,aAAeI,EAAOJ,aAGxB4I,EAAAyS,eAAc,SAAIjb,GAClBA,EAAOD,WACVC,EAAOD,SAAW,IAEhBC,EAAOJ,cAAgBI,EAAOH,cAChCG,EAAOD,SAAW,GAClBC,EAAOH,cAAe,IAEtBG,EAAOH,cAAgBG,EAAOH,aAC9BG,EAAOJ,aAAeI,EAAOJ,cAK1B4I,EAAA0S,YAAW,SAAIlb,EAAQmb,GAC5B3S,EAAKmI,SAAS5B,gBAAgB/O,EAAOC,KAAMkb,EAAWnb,EAAOC,KAAKwH,IAC/DxB,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACuH,GACFxF,EAAK4S,UAAYpN,EACjBhO,EAAOD,SAAS0O,KAAO7L,UACvB4F,EAAK+I,aAGRxF,UAAU,KAAI,SAAEtM,GAAS,OAAA+I,EAAKqJ,aAAe,4BAA8BpS,EAAMA,MAAMoS,gBAGrFrJ,EAAA6S,aAAY,SAAI9M,GACjBA,IAAa3L,WACf4F,EAAKmI,SAAS1C,WAAWzF,EAAK2E,gBAAiB,UAAW3E,EAAK2F,cAAe,kBAAmB,GAAI,GAAII,GACtGtI,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACuH,GACFxF,EAAK4S,UAAYpN,EACjBxF,EAAK8R,QAAQ7L,KAAO7L,UACpB4F,EAAK+I,aAGRxF,UAAU,KAAI,SAAEtM,GAAS,OAAA+I,EAAKqJ,aAAe,4BAA8BpS,EAAMA,MAAMoS,gBAKpFrJ,EAAA8S,qBAAoB,SAAIC,GAMhC,MADgB,CAJuB/S,EAAK4R,cAAcoB,aACxD,YAAa,kCAAkC,EAAM,wBAAyBD,GAAaA,GACpD/S,EAAK4R,cAAcoB,aAC1D,cAAe,gCAAgC,EAAM,wBAAyBD,EAAYA,KAKvF/S,EAAAiT,yBAAwB,SAAIF,OAC3BG,EAA2BlT,EAAK8S,qBAAqBC,GAC3D/S,EAAK4R,cAAcuB,cAAcD,EAASlT,EAAKgS,iBAG1ChS,EAAAoT,gBAAe,SAAIC,GACxBA,EAAsB1Y,QAAO,SAAE2Y,OACvBC,EAAMvT,EAAKgS,eAAewB,UAAS,SAACC,GAAQ,OAAAA,EAAKxU,KAAOqU,EAAcrU,KAC5Ee,EAAKgS,eAAeuB,GAAOD,KAIxBtT,EAAA0T,yBAAwB,SAAIzU,GACtB,cAAPA,EACFe,EAAKuD,YACW,gBAAPtE,GACTe,EAAK2T,eAIF3T,EAAA4T,gCAA+B,SAAIb,OAChCG,EAA2BlT,EAAK8S,qBAAqBC,GAC3D/S,EAAK4R,cAAcuB,cAAcD,EAASlT,EAAKgS,iBAG5ChS,EAAA+G,iBAAgB,WACrB/G,EAAKmI,SAASpB,iBAAiB/G,EAAK2E,gBAAiB3E,EAAK2F,cAAe3F,EAAKuE,QAC3E9G,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACuH,GACyCA,EACtBrN,cAAcwG,OAAS,GAC1CqB,EAAK+S,YAAa,EAClB/S,EAAKiT,0BAAyB,KAE9BjT,EAAK+S,YAAa,EAClB/S,EAAKiT,0BAAyB,OAInC1P,UAAU,KAAI,SAAEtM,GAAS,OAAA+I,EAAKqJ,aAAe,4BAA8BpS,EAAMA,MAAMoS,gBAGrFrJ,EAAAuD,UAAS,WACdvD,EAAKmI,SAASzB,iBAAiB1G,EAAK2E,gBAAiB3E,EAAK2F,eACvDlI,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACuH,GACEA,IACFxF,EAAK+S,YAAa,EAClB/S,EAAK4T,iCAAgC,OAI1CrQ,UAAU,KAAI,SAAEtM,GAAS,OAAA+I,EAAKqJ,aAAe,4BAA8BpS,EAAMA,MAAMoS,gBAGrFrJ,EAAA2T,YAAW,WAChB3T,EAAKmI,SAASrB,mBAAmB9G,EAAK2E,gBAAiB3E,EAAK2F,cAAe3F,EAAKuE,QAC7E9G,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACuH,GACFxF,EAAK+S,YAAa,EAClB/S,EAAK4T,iCAAgC,MAGxCrQ,UAAU,KAAI,SAAEtM,GAAS,OAAA+I,EAAKqJ,aAAe,4BAA8BpS,EAAMA,MAAMoS,gBAGrFrJ,EAAA6T,SAAQ,SAAIrc,GACjBA,EAAOF,UAAYE,EAAOF,UAGrB0I,EAAAqF,WAAU,SAAI5N,EAAMqc,GACzBrQ,QAAQC,IAAI,iBACZjM,EAAKwO,KAAO6N,EACZ9T,EAAKmI,SAAS9C,WAAW5N,EAAMA,EAAKwH,IACjCxB,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACuH,GACF/B,QAAQC,IAAI,gBACZ1D,EAAK+I,aAGRxF,UAAU,KAAI,SAAEtM,GAAS,OAAA+I,EAAKqJ,aAAe,wBAA0BpS,EAAMA,MAAMoS,gBAGjFrJ,EAAAgH,WAAU,SAAI/H,GACnBwE,QAAQC,IAAI,iBACZ1D,EAAKmI,SAASnB,WAAW/H,GACtBxB,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACuH,GACF/B,QAAQC,IAAI,iBAAmB8B,GAC/BxF,EAAK+I,aAGRxF,UAAU,KAAI,SAAEtM,GAAS,OAAA+I,EAAKqJ,aAAe,4BAA8BpS,EAAMA,MAAMoS,kBAS9F,OAnP4CE,EAAAA,EAAAA,GA6O1CoI,EAAA3b,UAAAwT,SAAA,WACE1T,KAAKiT,UACLjT,KAAKgc,QAAQ7L,KAAO,wBArPvB6B,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,uBACVC,SAAA,k/XAlBMlL,UAKAiX,EAAAA,mEAqBLtK,EAAAA,6BAKAA,EAAAA,sBAKAA,EAAAA,0BAKAA,EAAAA,SAgOHkI,EAzPA,CAM4CjK,ICrB5CsM,GAAA,WAAA,SAAAA,KAOA,OAJEA,EAAAhe,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJoc,EAPA,iBASA,SAAAC,KAuBA,OAJEA,EAAAje,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJqc,mBAEA,SAAAC,KAOA,OALEA,EAAAle,UAAA2B,YAAA,SAAYC,GAGV,OAFA,KAAKuc,UAAY,GACjB7e,OAAOuC,OAAO,KAAKsc,UAAWvc,GAC9B,MAEJsc,mBAEA,SAAAE,KAqBA,OAJEA,EAAApe,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJwc,mBAEA,SAAAC,KAOA,OAHEA,EAAAre,UAAA2B,YAAA,SAAYC,GACV,OAAA,MAEJyc,KC5EAC,GAAA,WAcE,SAAAA,EAAoBvX,EAA0BoL,GAA1BrS,KAAAiH,KAAAA,EAA0BjH,KAAAqS,SAAAA,SAGvCmM,EAAAte,UAAAue,gBAAP,SAAuBhI,OAEfrI,GAAO,IAAIkQ,IAAYzc,YAAY,CAAE4U,KAAMA,IAC3CpI,EAAUjK,KAAKsI,UAAU0B,GACzBzF,GAAU,IAAIG,EAAAA,aACjBC,IAAI,eAAgB,oBACvB,OAAO/I,KAAKiH,KAAKqH,KALL,8BAKeD,EAAS,CAAE1F,QAAOA,IAAIhB,KAC/CC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAACoG,GAAY,OAAA,IAAI1I,GAAkBhE,YAAY0M,OAI/CiQ,EAAAte,UAAAwe,aAAP,SAAoBjI,EAAc/N,EAAmBuP,GAArD,IAAA/N,EAAAlK,KACQ4I,EAAM,8BAAgC6N,EAAO,IAC/C9N,EAAuB,IAAIG,EAAAA,YAC3BJ,IACFC,EAAUA,EAAQI,IAAI,gBAAiB,SAErCkP,IACFtP,EAAUA,EAAQI,IAAI,aAAc,aAEhC4V,EAAU,CAAChW,QAASA,GAC1B,OAAO3I,KAAKiH,KAAKS,IAAIkB,EAAK+V,GAAShX,KACjCQ,EAAAA,IAAG,SAACoG,GACF,OAAO,IAAI+P,IAAYzc,YAAY0M,KAErC+K,EAAAA,WAAU,SAACnY,GAET,GAA2B,8BADV,IAAI2E,GAAmBjE,YAAYV,EAAMA,OAC7CqY,UACX,OAAOtP,EAAKuU,gBAAgBhI,GAAM9O,KAChCiX,EAAAA,QAAO,SAACC,GAEN,OAAO3U,EAAKwU,aAAajI,GAAM,GAAM,MAIzCiD,EAAAA,WAAWvY,OAMZqd,EAAAte,UAAA4e,cAAP,SAAqBrI,GAArB,IAAAvM,EAAAlK,KAoBE,OAnBmBA,KAAK0e,aAAajI,GAAM,GAAM,GAAO9O,KACtDQ,EAAAA,IAAG,SAAC4W,GACF,OAAO,IAAIlZ,GAAkBhE,YAAY,CAAEmd,QAAS,mBAEtD1F,EAAAA,WAAU,SAACnY,GAET,GAA2B,8BADV,IAAI2E,GAAmBjE,YAAYV,EAAMA,OAC7CqY,UACX,OAAOtP,EAAKuU,gBAAgBhI,GAAM9O,KAChCQ,EAAAA,IAAG,SAAC0W,GAGF,OADA3U,EAAKwU,aAAajI,GAAM,GAAM,GAAMhJ,YAC7BoR,KAIXnF,EAAAA,WAAWvY,OAOZqd,EAAAte,UAAA+e,cAAP,SAAqBC,EAAoBC,EAAkB5W,EAAmB8T,GAA9E,IACMzT,EADNsB,EAAAlK,KASE,OAPA4I,EAAM,mBAAqBsW,EAAa,IAAMC,EAAW,cACrD5W,IACFK,EAAMA,EAAM,aAAeL,GAEzB8T,IACFzT,EAAMA,EAAM,2BAA8ByT,EAAS,MAE9Crc,KAAKiH,KAAKS,IAAIkB,GAClBjB,KACCQ,EAAAA,IAAG,SAACiX,GAEA,QADMC,GAAU,IAAIjB,IAAevc,YAAYud,GACtC9C,EAAI,EAAGA,EAAI+C,EAAQhB,UAAUxV,OAAQyT,IAC5C+C,EAAQhB,UAAU/B,GAAKpS,EAAKoV,cAAcD,EAAQhB,UAAU/B,IAE9D,OAAO+C,MAMTb,EAAAte,UAAAof,cAAR,SAAsBC,OACdC,EAAeD,EAAS9I,KAAKgJ,MAAM,KAgBzC,OAfID,EAAa3W,OAAS,EACxB0W,EAASG,UAAYF,EAAaA,EAAa3W,OAAS,GAExD0W,EAASG,UAAY,GAEvBH,EAASI,SAAW3f,KAAK4f,QAAQL,EAASG,WAC1CH,EAASM,SAAWrT,EAAAA,sBAAsBsT,gBAAgBxP,OAAOiP,EAASQ,OAC1E/f,KAAKqS,SAAS7D,YAAY+Q,EAASS,QAAQvS,UAAS,SAAC5F,GAEnD,OADA0X,EAASU,cAAgBpY,EAClB0X,GACR,SAAEpe,GAAWwM,QAAQC,IAAI,6CAA+CzM,EAAMqS,YAC/ExT,KAAKqS,SAAS7D,YAAY+Q,EAASW,gBAAgBzS,UAAS,SAAC5F,GAE3D,OADA0X,EAASY,sBAAwBtY,EAC1B0X,GACR,SAAEpe,GAAWwM,QAAQC,IAAI,6CAA+CzM,EAAMqS,YACxE+L,GAGFf,EAAAte,UAAAkgB,eAAP,SAAsBlB,EAAoBC,EAAkBkB,EAAsB9X,OAC1EK,EAAM,mBAAqBsW,EAAa,IAAMC,EAAW,cAAgBkB,EAAe,aAAe9X,EAC7G,OAAOvI,KAAKiH,KAAKsE,UAAO3C,GACrBjB,KACCQ,EAAAA,IAAG,SAAEN,GAAO,OAAA,IAAIhC,GAAkBhE,YAAYgG,OAI7C2W,EAAAte,UAAAogB,kBAAP,SAAyBpB,EAAoBC,EAAkBoB,EAAeC,EAAoBjY,OAC5FK,EAAM,gBAaV,OAXEA,EADiB,eAAfsW,EACItW,EAAM,cAAgBuW,EAEtBvW,EAAM,WAAauW,EAEvB5W,GAA4B,eAAf2W,IACftW,EAAMA,EAAM,IAAML,GAEpBK,EAAMA,EAAM,IAAM2X,EACdC,IACF5X,EAAMA,EAAM,aAAe4X,GAEtB5X,GAGF4V,EAAAte,UAAAugB,iBAAP,SAAwBvB,EAAoBC,EAAkBoB,EAAeC,EAAoBjY,OAC3FK,EAAM,gBAERA,EADiB,eAAfsW,EACItW,EAAM,cAAgBuW,EAEtBvW,EAAM,WAAauW,EAEvB5W,GAA4B,eAAf2W,IACftW,EAAMA,EAAM,IAAML,GAEpBK,EAAMA,EAAM,IAAM2X,EAAQ,kBACtBC,IACF5X,EAAMA,EAAM,aAAe4X,OAGvB7X,EAAU,IAAIG,EAAAA,YAAY,CAC9B4X,eAAgB,6BAElB,OAAO1gB,KAAKiH,KAAKS,IAAIkB,EAAK,CAAED,QAAOA,EAAEgD,aAAY,UAG5C6S,EAAAte,UAAAygB,eAAP,SAAsBzB,EAAoBC,EAAkB5W,EACtCqY,EAAoBC,EAAkBC,OACtDlY,EAAM,mBAAqBsW,EAC3B,IAAMC,EACN,cAAgB0B,EAAW,WAE3BtY,IACFK,EAAMA,EAAM,aAAeL,GAGzBuY,IACFlY,EAAMA,EAAM,gBAAkBkY,OAE1BnY,EAAU,IAAIG,EAAAA,YAAY,CAC9BiY,OAAU,mBACVL,eAAgB,sBAChBM,SAAYH,EACZI,QAAW,wBAEPC,EAAqB,IAAIC,SAE/B,OADAD,EAASE,OAAO,mBAAoBR,GAC7B5gB,KAAKiH,KAAKqH,KAAK1F,EAAKsY,EAAU,CAAEvY,QAASA,EAAS0Y,gBAAgB,EAAMC,QAAS,YAGlF9C,EAAAte,UAAA0f,QAAR,SAAgBF,GACd,MAAkB,QAAdA,EACF,MACuB,QAAdA,EACT,MACuB,OAAdA,EACT,MACuB,QAAdA,EACT,MACuB,QAAdA,EACT,MACuB,QAAdA,EACT,MACuB,QAAdA,EACT,MACuB,QAAdA,EACT,MACuB,QAAdA,EACT,QAEA,2BA7MLpO,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDARNC,EAAAA,kBAEAzK,sJAJR,GC8BAua,GAAA,SAAAnP,GAOE,SAAAmP,EAAoBlP,EAAmCmP,EAA4CC,GAAnG,IAAAvX,EACEkI,EAAAvR,KAAAb,OAAOA,YADWkK,EAAAmI,SAAAA,EAAmCnI,EAAAsX,iBAAAA,EAA4CtX,EAAAuX,OAAAA,EA+B1FvX,EAAA6R,YAAsB7R,EAAK6R,YAAa7R,EAAK6R,WAU5C7R,EAAAwX,oBAAoD,IAAIlP,EAAAA,aAI3DtI,EAAA0W,aAAqBtc,UAKrB4F,EAAA+I,QAAO,WACZ/I,EAAK+U,iBAGA/U,EAAAyX,kBAAiB,SAAIC,EAAgBrC,GAC1CrV,EAAKwX,oBAAoB1O,MAAK,IAAIkL,IAAiBrc,YACjD,CACE+f,OAAMA,EACNrC,SAAQA,MAKPrV,EAAA+U,cAAa,WAClB/U,EAAKsX,iBAAiBvC,cAAc/U,EAAKgV,WAAYhV,EAAKiV,SAAUjV,EAAK3B,UAAW2B,EAAKmS,QACtF1U,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAAC0Z,GACF3X,EAAKmU,UAAYwD,EAAcxD,aAGlC5Q,UAAU,KAAI,SAAEtM,GAAW+I,EAAKqJ,aAAe,iCAAmCpS,EAAMA,MAAMqS,YAG5FtJ,EAAAyW,eAAc,SAAImB,KAGlB5X,EAAA6X,eAAc,SAAID,GACvB5X,EAAKsX,iBAAiBpB,eAAelW,EAAKgV,WAAYhV,EAAKiV,SAAU2C,EAAIrL,KAAMvM,EAAK3B,WACjFZ,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACN,GACF8F,QAAQC,IAAI/F,GACZqC,EAAK+I,aAGRxF,UACC,KAAI,SAAEtM,GAAW+I,EAAKqJ,aAAe,4BAA8BpS,EAAMqS,YAGxEtJ,EAAA8X,aAAY,SAAIF,GACI5X,EAAKuX,OAAOQ,KAAKC,GAAuC,CAC/EC,MAAO,MACPC,OAAQ,MACRjU,KAAM,CACJ2T,IAAKA,EACL5C,WAAYhV,EAAKgV,WACjBC,SAAUjV,EAAKiV,SACf5W,UAAW2B,EAAK3B,aAIH8Z,cAAc5U,UAAS,SAACiC,OAIpCxF,EAAAuW,iBAAgB,SAAIqB,GACzB5X,EAAKsX,iBAAiBf,iBAAiBvW,EAAKgV,WAAYhV,EAAKiV,SAAU2C,EAAIrL,KAAMqL,EAAIQ,gBAAiBpY,EAAK3B,WACxGZ,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACgG,OAEIoU,EAAcC,OAAOC,IAAIC,gBAAgBvU,GACzCwU,EAAOpD,SAASqD,cAAc,KACpCD,EAAKE,KAAON,EACZI,EAAKG,SAAWhB,EAAIrL,KACpBkM,EAAKI,WAGRtV,UACC,KAAI,SAAEtM,GAAW+I,EAAKqJ,aAAe,+BAAiCpS,EAAMqS,cA6DpF,OA1LgDC,EAAAA,EAAAA,GAgI9C8N,EAAArhB,UAAA8iB,WAAA,SAAWC,GACTjjB,KAAKkjB,cAAgB,GACrBljB,KAAK4gB,aAAeqC,EAAMtF,KAAK,IAGjC4D,EAAArhB,UAAAijB,mBAAA,SAAmBrC,GACjB9gB,KAAKojB,gBAAkBtC,GAGzBS,EAAArhB,UAAAmjB,WAAA,SAAWzC,EAAcE,GAAzB,IAAA5W,EAAAlK,KACEA,KAAK4gB,aAAeA,EACpB5gB,KAAKkjB,cAAgB,cAAgBtC,EAAanK,KAClDzW,KAAKojB,gBAAkBtC,EACvB9gB,KAAKsjB,eAAiB,EAClBtjB,KAAK4gB,cACP5gB,KAAKwhB,iBAAiBb,eAAe3gB,KAAKkf,WAAYlf,KAAKmf,SAAUnf,KAAKuI,UACxEvI,KAAK4gB,aAAc5gB,KAAK4gB,aAAanK,KAAMzW,KAAKojB,iBAC/C3V,UAAS,SACPc,GACKA,EAASmI,OAAS6M,EAAAA,cAAcC,iBAClCtZ,EAAKoZ,eAAiBG,KAAKC,MAAM,IAAMnV,EAASoV,OAASpV,EAASqV,QAExC,MAAxB1Z,EAAKoZ,iBACPpZ,EAAK0W,aAAetc,UACpB4F,EAAKgZ,cAAgB,aAAetC,EAAanK,KAE5CmK,EAAab,KAAO,IACtB8D,WAAU,WAAS3Z,EAAK+I,WAAc,KAEtC/I,EAAK+I,UAEP4Q,WAAU,WAAS3Z,EAAKgZ,cAAgB,GAAIhZ,EAAKoZ,eAAiBhf,WAAc,OAEpF,SACDnD,GAAWwM,QAAQC,IAAI,SAAU1D,EAAKqJ,aAAe,6BAA+BpS,EAAMqS,YAIlG+N,EAAArhB,UAAA4jB,WAAA,WAAA,IAAA5Z,EAAAlK,KAEE,IAAKA,KAAKsjB,gBAA0C,MAAxBtjB,KAAKsjB,eAAwB,KACjDS,EAAY/jB,KAAKyhB,OAAOQ,KAAK+B,GAAuC,CACxE7B,MAAO,QACPhU,KAAM,KAGR4V,EAAUE,kBAAkBC,UAAUzW,UAAS,SAAE0W,GAC/Cja,EAAKmZ,WAAWc,EAAGC,KAAMD,EAAGrD,eAG9BiD,EAAU1B,cAAc5U,UAAS,SAACiC,QAKtC6R,EAAArhB,UAAAwT,SAAA,WACE1T,KAAKiT,+BA7LRjB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,2BACVC,SAAA,g+NA9BMlL,UAKAwX,UAFiB6F,EAAAA,gDAsCtB1Q,EAAAA,0BAKAA,EAAAA,wBAKAA,EAAAA,sBAKAA,EAAAA,iCAKAA,EAAAA,0BAKAA,EAAAA,6BAKAA,EAAAA,mCAKAC,EAAAA,UA+IH2N,EA/LA,CAKgD3P,kBAuM9C,SAAAoS,EACSD,GADT,IAAA7Z,EAAAlK,KACSA,KAAA+jB,UAAAA,EALC/jB,KAAAkkB,UAAY,IAAI1R,EAAAA,aACnBxS,KAAA4gB,aAAqBtc,UACrBtE,KAAA8gB,YAAsBxc,UAMtBtE,KAAAqjB,WAAU,WACXnZ,EAAK0W,eACP1W,EAAKga,UAAUlR,KAAK,CAAEoR,KAAMla,EAAK0W,aAAcE,YAAa5W,EAAK4W,cACjE5W,EAAK6Z,UAAUO,UAiBrB,OAbEN,EAAA9jB,UAAAijB,mBAAA,SAAmBrC,GACjB9gB,KAAK8gB,YAAcA,GAGrBkD,EAAA9jB,UAAA8iB,WAAA,SAAWC,GAETjjB,KAAK4gB,aAAeqC,EAAMtF,KAAK,IAGjCqG,EAAA9jB,UAAAqkB,UAAA,WACEvkB,KAAK+jB,UAAUO,6BAhClBtS,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,wCACVC,SAAA,29BA5NkCsS,EAAAA,mDAiOjC5Q,EAAAA,UA4BHoQ,mBAaE,SAAA9B,EACS6B,EACyB5V,GADzBnO,KAAA+jB,UAAAA,EACyB/jB,KAAAmO,KAAAA,EAChCnO,KAAK8hB,IAAM9hB,KAAKmO,KAAK2T,IACrB9hB,KAAKkf,WAAalf,KAAKmO,KAAK+Q,WAC5Blf,KAAKmf,SAAWnf,KAAKmO,KAAKgR,SAC1Bnf,KAAKuI,UAAYvI,KAAKmO,KAAK5F,UAO/B,OAJE2Z,EAAAhiB,UAAAqkB,UAAA,WACEvkB,KAAK+jB,UAAUO,6BArBlBtS,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,wCACVC,SAAA,gfAjQkCsS,EAAAA,gDA4Q/BC,EAAAA,OAAMlT,KAAA,CAACmT,EAAAA,sBAWZxC,KCzRAyC,GAAA,WAAA,SAAAA,KASA,OAJEA,EAAAzkB,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJ6iB,EATA,iBAWA,SAAAC,KAOA,OAJEA,EAAA1kB,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJ8iB,KCrBAC,GAAA,WAcE,SAAAA,EAAoB5d,EAA0BkP,EAA0C0E,GAApE7a,KAAAiH,KAAAA,EAA0BjH,KAAAmW,gBAAAA,EAA0CnW,KAAA6a,sBAAAA,SAEjFgK,EAAA3kB,UAAA4kB,aAAP,SAAoBjb,EAAiBtB,OAC7BK,EAAM,kBAAoBiB,EAAU,cAAqBtB,EAAY,aAC3E,OAAOvI,KAAKiH,KAAKS,IAAIkB,GAClBjB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAACrD,GAGF,OAFgB,IAAIb,GAAWpC,YAAYiD,GACbZ,WAAWoC,UAO1Cue,EAAA3kB,UAAA6kB,cAAP,SAAqB3hB,EAAuBE,EAAgBiF,GAE1D,OAAOvI,KAAKiH,KAAKsE,UADL,qGAET5D,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAACuH,GACF,OAAO,IAAIkV,IAAc/iB,YAAY6N,OAQtCmV,EAAA3kB,UAAA8kB,kBAAP,SACEnb,EAAiBtB,EAAmBiB,EAAelG,EAAgBuJ,GADrE,IAAA3C,EAAAlK,KAEQ4I,EAAM,kBAAoBiB,EAAU,cAAqBtB,EAAY,oBAIrE0c,EAAajlB,KAAKmW,gBAAgBtL,kBAAkBtC,EAAWiB,EAAO,KAAK7B,KAC/EC,EAAAA,IAAG,SAACC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC7DC,EAAAA,IAAG,SAAC+c,OAEE7Z,EAMJ,OALA6Z,EAAUphB,UAAUe,QAAO,SAAEsgB,GACvBA,EAAMhc,KAAO7F,IACf+H,EAAgB8Z,KAGb9Z,KAIL+Z,EAAWplB,KAAKiH,KAAKS,IAAIkB,GAC5BjB,KACCC,EAAAA,IAAG,SAACC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC7DC,EAAAA,IAAG,SAACrD,OACIuU,GAAU,IAAIpV,GAAWpC,YAAYiD,GAQ3C,OAPAoF,EAAK2Q,sBAAsBlC,cACzBU,EACA9Q,EACA8Q,EAAQN,SAAS3V,cACjBiW,EAAQN,SAASzV,OACjBuJ,GAEKwM,KAUb,OALcgM,EAAAA,IAAIJ,EAAYG,GAAUzd,KACtCQ,EAAAA,IAAG,SAACmd,GACF,OAAO,IAAIX,IAAqB9iB,YAAY,CAAE0jB,SAAUD,EAAc,GAAIL,WAAYK,EAAc,GAAGE,WAAYC,gBAAiBH,EAAc,GAAGG,gBAAiBC,wBAAyBJ,EAAc,GAAGI,kDA1EvNpU,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDANNC,EAAAA,kBADAzK,UAIAkP,qKAPR,GCIAyP,GAAA,WAeA,SAAAA,KAOA,OALEA,EAAAzlB,UAAA2B,YAAA,SAAYC,GAGV,OAFA,KAAK8jB,YAAc,GACnBpmB,OAAOuC,OAAO,KAAK6jB,YAAa9jB,GAChC,MAEJ6jB,EAtBA,GAwBAE,GAAA,WAAA,SAAAA,KASA,OAJEA,EAAA3lB,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJ+jB,EATA,GAWAC,GAAA,WAAA,SAAAA,KAaA,OAJEA,EAAA5lB,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJgkB,EAbA,GAeAC,GAAA,WAAA,SAAAA,KAQA,OALEA,EAAA7lB,UAAA2B,YAAA,SAAYC,GAGV,OAFA,KAAKkC,OAAS,GACdxE,OAAOuC,OAAO,KAAKiC,OAAQlC,GAC3B,MAEJikB,EARA,GC3CMC,GAAgB,CACpBC,0BAA2B,oeAM3BC,0BAA2B,oeAM3BC,wBAAyB,yfAMzBC,4BAA6B,6eAM7BC,6BAA8B,2fAM9BC,0BAA2B,6fAM3BC,6BAA8B,qgBAM9BC,8BAA+B,qgBAM/BC,2BAA4B,2hBAQ9BC,GAAA,WAKE,SAAAA,EAAoBzf,EACAkP,EACAwQ,EACA/M,EACA1S,GAJpB,IAAAgD,EAAAlK,KAAoBA,KAAAiH,KAAAA,EACAjH,KAAAmW,gBAAAA,EACAnW,KAAA2mB,gBAAAA,EACA3mB,KAAA4Z,UAAAA,EACA5Z,KAAAkH,SAAAA,EAEZlH,KAAA4mB,eAAc,SAAI/c,EAAiBtB,EAAmBiB,OAEtDqd,EAAa3c,EAAKyc,gBAAgB7B,aAAajb,EAAStB,GACxDue,EAAkB5c,EAAKiM,gBAAgBrL,kBAAkBvC,EAAWiB,EAAO,KAC3Eud,EAAc7c,EAAK8c,kBAAkBnd,EAAStB,GACpD,OAAO2Q,EAAAA,SAAS,CAAC2N,EAAYC,EAAiBC,IAAcpf,KAC1DQ,EAAAA,IAAG,SAACgR,GACF,OAAO,IAAI0M,IAAmBhkB,YAC5B,CAAEolB,eAAgB9N,EAAU,GAAI+N,aAAc/N,EAAU,GAAIgO,UAAWhO,EAAU,GAAGyM,kBAMpF5lB,KAAAonB,aAAY,SAAIC,OAChBC,EAAU,IAAIvB,GAiDpB,OAhDAuB,EAAQtjB,OAAS,GACbqjB,EAAYF,UAAUte,QAAU,EAElCye,EAAQC,OAAQ,EAIhBF,EAAYJ,eAAejjB,OAAOa,QAAO,SAACyB,GACrBA,EAAM0S,MACP1S,EAAMpF,UAClBsmB,EAAe,IAAI1B,GACzB0B,EAAaC,MAAQ,GACrBD,EAAaE,cAAgB,GAE7BF,EAAa/Q,KAAOnQ,EAAM0S,MAC1BwO,EAAaxO,MAAQ1S,EAAM0S,MAC3BwO,EAAaG,aAAarhB,EAAMqhB,YAAarhB,EAAMqhB,eAE7CC,EAAiB,GACvBpoB,OAAOuC,OAAO6lB,EAAgBP,EAAYF,WAC1CS,EAAeC,cAGXC,EAFErK,EAAMmK,EAAelK,UAAS,SAACqK,GAAc,OAAAA,EAAWC,UAAU9mB,QAAUoF,EAAMpF,QAClF+mB,EAAWZ,EAAYF,UAAUte,OAAS,EAAK4U,GAExC,IAATA,EAEF+J,EAAaU,OAAS,WAEtBJ,EAAYT,EAAYF,UAAUc,GAClCT,EAAaW,KAAOL,EAAUM,cAAgBN,EAAUM,cAAclnB,MAAQ,SAC9EsmB,EAAaa,QAAUP,EAAUQ,aAAeR,EAAUQ,aAAapnB,MAAQ,GAC/EsmB,EAAaC,MAAQK,EAAUS,WAAaT,EAAUS,WAAWrnB,MAAQoD,UACzEkjB,EAAaE,cAAgBI,EAAUU,mBAAqBV,EAAUU,mBAAmBtnB,MAAQoD,UAC7FgC,EAAMqhB,WAERH,EAAaU,OAAS,YACZb,EAAYF,UAAUte,OAAS,IAAOof,EAEhDT,EAAaU,OAAS,aAGtBV,EAAaU,OAAS,aAG1BZ,EAAQtjB,OAAO/C,KAAKumB,GACpBF,EAAQC,OAAQ,IAGbD,GAGFtnB,KAAAyoB,WAAU,SAAI5e,EAAiBtB,EAAmBiB,GAMvD,OALiBU,EAAK0c,eAAe/c,EAAStB,EAAWiB,GAAO7B,KAC9DQ,EAAAA,IAAG,SAACkf,GACF,OAAOnd,EAAKkd,aAAaC,cAMxBX,EAAAxmB,UAAAwoB,8BAAP,SAAqC7e,EAAiBtB,EAAmBiB,OACjEsd,EAAkB9mB,KAAKmW,gBAAgBrL,kBAAkBvC,EAAWiB,EAAO,KAC3Emf,EAAkB3oB,KAAKgnB,kBAAkBnd,EAAStB,GACxD,OAAO2Q,EAAAA,SAAS,CAAC4N,EAAiB6B,IAAkBhhB,KAClDQ,EAAAA,IAAG,SAACgR,OACI8N,EAAiB9N,EAAU,GAC3ByP,EAAiBzP,EAAU,GAMjC,OAJAyP,EAAehD,YAAY/gB,QAAO,SAACkjB,OAC3Bc,EAAa5B,EAAejjB,OAAO4O,KAAI,SAACtM,GAAS,OAAAA,EAAMpF,QAAU6mB,EAAWC,UAAU9mB,QAC5F6mB,EAAWJ,aAAakB,EAAWlB,YAAakB,EAAWlB,aAEtDiB,MAKNlC,EAAAxmB,UAAA8mB,kBAAP,SAAyBnd,EAAiBtB,OAElCK,EAAM,kCAAoCL,EAC5C,2CACkBsB,EAAU,IAEhC,OAAO7J,KAAKiH,KAAKS,IAAIkB,GAClBjB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAAC2gB,GAAa,OAAA,IAAInD,IAAsB9jB,YAAYinB,OAGtDpC,EAAAxmB,UAAA6oB,uBAAP,SAA8B1U,EAAoB2U,EAAoBC,EAAiBC,GAarFA,GAFAA,EAAcA,EAAYC,eAEAnP,QADZ,SAC2B,SACnCH,EAAcmM,GAAckD,GAClC,GAAIrP,EAAa,KACXE,EAAaF,EAAYG,QAAQ,qBAAsB3F,GAI3D,OAFA0F,GADAA,EAAaA,EAAWC,QAAQ,uBAAwBiP,IAChCjP,QAAQ,0BAA2BgP,GAC5ChpB,KAAK4Z,UAAUM,wBAAwBH,GAGtD,OAAOzV,+BA1IZgN,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAhENC,EAAAA,kBAHAzK,UACA6d,UAIAlK,EAAAA,oBACAjJ,EAAAA,6NA4DR,GClDA0X,GAAA,SAAAhX,GAkDE,SAAAgX,EAAoBC,EAAgDC,GAApE,IAAApf,EACEkI,EAAAvR,KAAAb,OAAOA,YADWkK,EAAAmf,kBAAAA,EAAgDnf,EAAAof,cAAAA,EAxB7Dpf,EAAAqf,eAAc,SAAI/B,OACnBgC,EAAc,GAIlB,MAH2B,WAAvBhC,EAAaU,SACfsB,EAAcA,EAAchC,EAAaW,KAAO,IAAMje,EAAKof,cAAcG,UAAUjC,EAAaa,UAE3FmB,GAGFtf,EAAA+I,QAAO,WACZ/I,EAAKmf,kBAAkBZ,WAAWve,EAAKL,QAASK,EAAK3B,UAAW2B,EAAKV,OAAO7B,KAC1EwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACmf,GAKF,OAJApd,EAAKod,QAAUA,EACVA,EAAQC,OACX5Z,QAAQxM,MAAM,uGAETmmB,KAGT7Z,UACA,KAAI,SAAEtM,GAAW+I,EAAKqJ,aAAe,qCAAuCpS,EAAMA,MAAMqS,cAW9F,OArDiDC,EAAAA,EAAAA,GAiD/C2V,EAAAlpB,UAAAwT,SAAA,WACE1T,KAAKiT,+BAvDRjB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,6BACVC,SAAA,qsDAbMwU,UACAgD,EAAAA,oDAmBL/V,EAAAA,yBAKAA,EAAAA,uBAKAA,EAAAA,SAuCHyV,EA1DA,CAKiDxX,IC6BjD+X,GAAA,SAAAvX,GAgPE,SAAAuX,EAAoB1iB,EAA0B2S,EAC1BvH,EAAkCwI,EAAwD2G,EAA4CC,EAA2Bva,GADrL,IAAAgD,EAEEkI,EAAAvR,KAAAb,OAAOA,YAFWkK,EAAAjD,KAAAA,EAA0BiD,EAAA0P,UAAAA,EAC1B1P,EAAAmI,SAAAA,EAAkCnI,EAAA2Q,sBAAAA,EAAwD3Q,EAAAsX,iBAAAA,EAA4CtX,EAAAuX,OAAAA,EAA2BvX,EAAAhD,SAAAA,EA1M3KgD,EAAA0f,cAA8C,IAAIpX,EAAAA,aAUrDtI,EAAA2f,uBAAyB,uCACzB3f,EAAA4f,wBAA0BhU,GAC1B5L,EAAA6f,wBAA0B,oCAC1B7f,EAAA8f,yBAA2BjU,GAC3B7L,EAAA+f,sBAAwBpU,GAExB3L,EAAAggB,kBAAiB,SAAI5jB,OACtB6jB,EAQJ,OAPIjgB,EAAKkgB,eAAe3S,YAAcvN,EAAKkgB,eAAe3S,WAAWL,UACnElN,EAAKkgB,eAAe3S,WAAWL,SAASvS,QAAO,SAAEuS,GAC3CA,EAAS9Q,QAAUA,EAAMpF,QAC3BipB,EAAa/S,KAIZ+S,GAA0B,IAAI9S,GAAQ,EAAO/Q,EAAMpF,MAAOgJ,EAAK8f,yBAA0B9f,EAAK6f,0BAGhG7f,EAAAmgB,qBAAoB,SAAIvT,OACzBqT,EAQJ,OAPIjgB,EAAKkgB,eAAe3S,YAAcvN,EAAKkgB,eAAe3S,WAAWL,UACnElN,EAAKkgB,eAAe3S,WAAWL,SAASvS,QAAO,SAAEuS,GAC3CA,EAAS/Q,aACX8jB,EAAa/S,KAIZ+S,GAA0B,IAAI9S,GAAQ,EAAMP,EAAY5M,EAAK4f,wBAAyB5f,EAAK2f,yBAG7F3f,EAAAogB,cAAa,SAAIrR,OAClBsR,EAEArgB,EAAKkgB,eAAe3S,YAAcvN,EAAKkgB,eAAe3S,WAAWL,UACnElN,EAAKkgB,eAAe3S,WAAWL,SAASvS,QAAO,SAAUuS,GACnDA,EAAS9Q,QAAU2S,EAAY3S,QACjCikB,EAAWtR,EACX7B,EAAS9Q,MAAQ2S,EAAY3S,MAC7B8Q,EAAS5Q,KAAOyS,EAAYzS,KAC5B4Q,EAAS7Q,KAAO0S,EAAY1S,QAG5BgkB,EACFA,EAAWtR,EAEX/O,EAAKkgB,eAAe3S,WAAWL,SAASnW,KAAKgY,KAG/C/O,EAAKkgB,eAAe3S,WAAWL,SAAW,GAC1ClN,EAAKkgB,eAAe3S,WAAWL,SAASnW,KAAKgY,IAE/C/O,EAAK0f,cAAc5W,KAAK9I,EAAKkgB,iBAGxBlgB,EAAAsgB,gCAA+B,SAAIjQ,GACxCrQ,EAAKkgB,eAAe3S,WAAW9T,mBAAmB4W,EAAQkQ,SAAUlQ,EAAQkQ,QACxElQ,EAAQkQ,SACVvgB,EAAKwgB,qBAAqB7lB,QAAO,SAAE8lB,GACjCA,EAAK7P,eAAe5Q,EAAK0gB,oBAAoBpkB,KAAM0D,EAAKzG,iBAG5DyG,EAAK0f,cAAc5W,KAAK9I,EAAKkgB,iBAGxBlgB,EAAA2gB,QAAO,SAAItkB,EAAM0S,GACtB/O,EAAKwgB,qBAAqB7lB,QAAO,SAAE8lB,GACjCA,EAAK7P,eAAe7B,EAAYzS,KAAMD,KAExC2D,EAAK4gB,oBAAoBlY,KAAI,SAAU+X,GACrC,OAAOA,EAAKxhB,KAAO8P,EAAY3S,QAC9BwT,UAAUvT,GACb2D,EAAK0f,cAAc5W,KAAK9I,EAAKkgB,iBAGxBlgB,EAAA6gB,gBAAe,SAAIxkB,EAAM0S,GAC9B/O,EAAKwgB,qBAAqB7lB,QAAO,SAAE8lB,GACjCA,EAAK3P,uBAAuB/B,EAAYzS,KAAMD,KAEhD2D,EAAK4gB,oBAAoBlY,KAAI,SAAU+X,GACrC,OAAQA,EAAKxhB,KAAO8P,EAAY3S,OAAS2S,EAAY5S,aACpDyT,UAAUvT,GACb2D,EAAK0f,cAAc5W,KAAK9I,EAAKkgB,iBAGxBlgB,EAAA8gB,YAAW,SAAI1kB,GACpB4D,EAAK0gB,oBAAsB1gB,EAAKggB,kBAAkB5jB,GAC7C4D,EAAKkgB,eAAe3S,WAAW9T,kBAClCuG,EAAKwgB,qBAAqB7lB,QAAO,SAAE8lB,GACjCA,EAAK7P,eAAe5Q,EAAK0gB,oBAAoBpkB,KAAM0D,EAAK0gB,oBAAoBrkB,SAqC3E2D,EAAA+gB,gBAAe,SAAIriB,GACxBsB,EAAK0gB,oBAAoBpkB,KAAOoC,EAChCsB,EAAK4gB,oBAAoBlY,KAAI,SAAE+X,GAC7B,OAAQA,EAAKxhB,KAAOe,EAAK0gB,oBAAoBtkB,QAC5C2M,QAAQ/I,EAAK0gB,oBAAoBpkB,KAAM0D,EAAK0gB,oBAAoBrkB,MACnE2D,EAAKwgB,qBAAqB7lB,QAAO,SAAE8lB,GACjCA,EAAK7P,eAAe5Q,EAAK0gB,oBAAoBpkB,KAAM0D,EAAK0gB,oBAAoBrkB,QAE9E2D,EAAKogB,cAAcpgB,EAAK0gB,sBAGnB1gB,EAAAghB,mBAAkB,SAAItiB,GAC3BsB,EAAKxG,aAAekF,EACpBsB,EAAK4gB,oBAAoBlY,KAAI,SAAE+X,GAC7B,OAAQA,EAAKxhB,KAAOe,EAAKihB,eACxBlY,QAAQ/I,EAAKxG,aAAcwG,EAAKzG,eACnCyG,EAAKwgB,qBAAqB7lB,QAAO,SAAE8lB,GACjCA,EAAK3P,uBAAuB9Q,EAAKxG,aAAcwG,EAAKzG,iBAEtDyG,EAAKogB,cAAc,IAAIjT,GAAQ,EAAMnN,EAAKihB,aAAcjhB,EAAKzG,cAAeyG,EAAKxG,gBAyB5EwG,EAAA+I,QAAO,WAEZ/I,EAAKkhB,uBAAyB,KAC9BlhB,EAAK2Q,sBAAsBnD,kBAAkBxN,EAAK3B,UAAW2B,EAAKV,MAAOU,EAAK2C,QAAS3C,EAAKihB,aAAcjhB,EAAK4f,wBAAyB5f,EAAK2f,uBAAwB3f,EAAK8f,yBAA0B9f,EAAK6f,yBAAyBpiB,KAChOwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACiiB,GACFlgB,EAAKkgB,eAAiBA,EAEtBlgB,EAAK0gB,oBAAsB1gB,EAAKkgB,eAAe3S,WAAWL,SAAS,OAC7DiU,EAAcnhB,EAAKkgB,eAAe3S,WAAWL,SAASxE,KAAI,SAAUwE,GACxE,OAAOA,EAAS/Q,aAGlB6D,EAAKxG,aAAe2nB,EAAY7kB,KAChC0D,EAAKzG,cAAgB4nB,EAAY9kB,KACjC2D,EAAKkhB,uBAAyBlhB,EAAKmgB,qBAAqBngB,EAAKihB,iBAE/D1d,UACA,KAAI,SAAEtM,GAAW+I,EAAKqJ,aAAe,sCAAwCpS,EAAMA,MAAMqS,cAe/F,OAvP+DC,EAAAA,EAAAA,GAqJtDkW,EAAAzpB,UAAA4jB,WAAP,SAAkBxd,EAAsBD,GAAxC,IAAA6D,EAAAlK,KAEOqG,EAGHC,GAAQ,IAAI1C,GAAgB/B,YAAY,CAAEX,MAAOlB,KAAKmrB,eAFtDnrB,KAAKgrB,YAAY1kB,OAIbyd,EAAY/jB,KAAKyhB,OAAOQ,KAAKqJ,GAAwC,CACzEnJ,MAAO,QACPhU,KAAM,CAAE7H,MAAOA,EAAOD,WAAYA,KAGpC0d,EAAUE,kBAAkBC,UAAUzW,UAAS,SAAE0W,GAC/Cja,EAAKmZ,WAAWc,EAAGC,KAAMD,EAAG7d,MAAO6d,EAAG9d,cAGxC0d,EAAU1B,cAAc5U,UAAS,SAACiC,OA0B7Bia,EAAAzpB,UAAAmjB,WAAP,SAAkBe,EAAY9d,EAAsBilB,GAApD,IAAArhB,EAAAlK,KACE,GAAIokB,EAAM,KACFxb,EAAM,6BAA+B5I,KAAKmf,SAAW,IAAMnf,KAAKwJ,MAAQ,IAAM4a,EAAK3N,KACnF+U,EAAQ,0BAA4BxrB,KAAKmf,SAAW,IAAMnf,KAAKwJ,MAAQ,IAAM4a,EAAK3N,KACxFzW,KAAKqS,SAAS/G,0BAA0B1C,GACxC5I,KAAKwhB,iBAAiBb,eAAe,aAAc3gB,KAAKmf,SAAUnf,KAAKuI,UACrE6b,EAAOpkB,KAAKwJ,MAAQ,IAAM4a,EAAK3N,KAAO,IACrC9O,KACCQ,EAAAA,IAAG,SAACN,GACG0jB,EAGHrhB,EAAKghB,mBAAmBM,GAFxBthB,EAAK+gB,gBAAgBO,MAM1B/d,UAAS,SACRiC,GAAU,OAAA,MAAI,SACdvO,GAAWwM,QAAQC,IAAI,SAAU1D,EAAKqJ,aAAe,+BAAiCpS,EAAMqS,aA+BpGmW,EAAAzpB,UAAAoa,YAAA,SAAYC,GACNA,EAAQ/Q,OAAU+Q,EAAQ/Q,MAAMiR,eAAiBF,EAAQ/Q,MAAMkR,eACjE1a,KAAKiT,+BAvPVjB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,2CACVC,SAAA,g6PAvBMT,EAAAA,kBACAkJ,EAAAA,oBAJA3T,UAayDkP,UACzDsI,UANiB6F,EAAAA,iBAEhB3S,EAAAA,yDAqBN+Z,EAAAA,aAAYla,KAAA,CAAC,0CACbka,EAAAA,aAAYla,KAAA,CAACqJ,mBAKbjH,EAAAA,4BAKAA,EAAAA,yBAKAA,EAAAA,uBAKAA,EAAAA,wBAKAA,EAAAA,6BAMAC,EAAAA,UAqNH+V,EA5PA,CAK+D/X,kBAoQ7D,SAAA0Z,EACSvH,EAAiG5V,GAD1G,IAAAjE,EAAAlK,KACSA,KAAA+jB,UAAAA,EAAiG/jB,KAAAmO,KAAAA,EANhGnO,KAAAkkB,UAAY,IAAI1R,EAAAA,aACnBxS,KAAA4gB,aAAqBtc,UACrBtE,KAAA8gB,YAAsBxc,UAMtBtE,KAAAqjB,WAAU,WACXnZ,EAAK0W,eACP1W,EAAKga,UAAUlR,KAAK,CAAEoR,KAAMla,EAAK0W,aAActa,MAAO4D,EAAKiE,KAAK7H,MAAOD,WAAY6D,EAAKiE,KAAK9H,aAC7F6D,EAAK6Z,UAAUO,UAmBrB,OAfEgH,EAAAprB,UAAAijB,mBAAA,SAAmBrC,GACjB9gB,KAAK8gB,YAAcA,GAGrBwK,EAAAprB,UAAA8iB,WAAA,SAAWC,GACTjjB,KAAK4gB,aAAeqC,EAAMtF,KAAK,IAMjC2N,EAAAprB,UAAAqkB,UAAA,WACEvkB,KAAK+jB,UAAUO,6BAjClBtS,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,0CACVC,SAAA,69BAhRkCsS,EAAAA,gDA0RyCC,EAAAA,OAAMlT,KAAA,CAACmT,EAAAA,yDANjF9Q,EAAAA,UA8BH0X,KCvUAI,GAAA,SAAAtZ,GAgEE,SAAAsZ,EAAoBrZ,GAApB,IAAAnI,EACEkI,EAAAvR,KAAAb,OAAOA,YADWkK,EAAAmI,SAAAA,EA7CXnI,EAAAyhB,YAAsBzhB,EAAKyhB,YAAczhB,EAAKyhB,YAAc,WAK5DzhB,EAAA6R,YAAsB7R,EAAK6R,YAAa7R,EAAK6R,WAO5C7R,EAAAmL,UAAqC,IAAI7C,EAAAA,aAK5CtI,EAAAqL,gBAAe,SAAIC,GACxBtL,EAAKmL,UAAUrC,KAAKwC,IAGftL,EAAA+I,QAAO,WACZ/I,EAAK0hB,cAAgB,GACrB1hB,EAAKmI,SAASxE,iBAAiB3D,EAAK2C,QAAS3C,EAAK3B,WAC/CZ,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACyjB,GACF1hB,EAAK0hB,cAAgBA,EAAchmB,UAAY,MAEjD6H,UACF,KAAI,SAAEtM,GAAW+I,EAAKqJ,aAAe,oCAAsCpS,EAAMA,MAAMqS,YAGpFtJ,EAAA2hB,mBAAkB,WACvB3hB,EAAKmI,SAASvE,gBAAgB,KAAM5D,EAAK2C,QAAS3C,EAAK3B,WACvD2B,EAAK0hB,cAAgB,IAGhB1hB,EAAA4hB,cAAa,SAAIjiB,GACtBK,EAAK0hB,cAAcvf,OAAOnC,EAAK0hB,cAAcxf,QAAQvC,GAAU,GAC/DK,EAAKmI,SAASvE,gBAAgBjE,EAASK,EAAK2C,QAAS3C,EAAK3B,cAY9D,OAnEoDkL,EAAAA,EAAAA,GA+DlDiY,EAAAxrB,UAAAwT,SAAA,WACE1T,KAAKiT,+BArERjB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,gCACVC,SAAA,u1FAdMlL,yCAqBL2M,EAAAA,uBAKAA,EAAAA,2BAKAA,EAAAA,0BAKAA,EAAAA,yBAOAC,EAAAA,UAyCH8X,EAxEA,CAKoD9Z,IClBpDma,GAAA,WAmCA,SAAAA,KAOA,OALEA,EAAA7rB,UAAA2B,YAAA,SAAYC,GAGV,OAFA,KAAKkqB,YAAc,GACnBxsB,OAAOuC,OAAO,KAAKiqB,YAAalqB,GAChC,MAEJiqB,EA1CA,GCFAE,GAAA,WAWE,SAAAA,EAAoBhlB,GAAAjH,KAAAiH,KAAAA,SAEbglB,EAAA/rB,UAAAgsB,aAAP,SAAoBriB,EAAiBtB,EAAmB4jB,EAAiB1jB,OAEnEG,EAAM,kCAAoCL,EAC1C,sCACkBsB,EAAU,IAIhC,OAHAjB,EAAOujB,IAAY7nB,UAAcsE,EAAM,aAAeujB,EAAWvjB,EACjEA,EAAMH,EAAOG,EAAM,SAAWH,EAAOG,EAE9B5I,KAAKiH,KAAKS,IAAIkB,GAClBjB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAAC2gB,GAAa,OAAA,IAAIiD,IAAiBlqB,YAAYinB,2BAlBzDxX,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAJNC,EAAAA,+IAHR,GCaA2a,GAAA,SAAAha,GA0DE,SAAAga,EAAoBC,GAApB,IAAAniB,EACEkI,EAAAvR,KAAAb,OAAOA,YADWkK,EAAAmiB,iBAAAA,EAzCbniB,EAAA0b,YAA4B,GAE5B1b,EAAAoiB,QAAUhoB,UACV4F,EAAAzB,IAAM,GACNyB,EAAA+R,KAAM,EAEN/R,EAAA+I,QAAO,WACZ/I,EAAKoiB,QAAUhoB,UACf4F,EAAKzB,IAAM,GACXyB,EAAK+R,KAAM,EACX/R,EAAK0b,YAAc,GACnB1b,EAAKqiB,eAAeriB,EAAKL,QAASK,EAAK3B,UAAW2B,EAAKoiB,QAASpiB,EAAKzB,MAGhEyB,EAAAqiB,eAAc,SAAI1iB,EAAiBtB,EAAmB4jB,EAAiB1jB,GAC5EyB,EAAKmiB,iBAAiBH,aAAahiB,EAAKL,QAASK,EAAK3B,UAAW2B,EAAKoiB,QAASpiB,EAAKzB,KACjFd,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACqkB,OAEIpQ,EAAiBoQ,EAAeR,YAAY3P,OAAM,SAACC,GAAK,OAAApS,EAAK0b,YAAYrJ,MAAK,SAACC,GAAK,OAAAA,EAAEiQ,IAAIvrB,QAAUob,EAAEmQ,IAAIvrB,UAChHgJ,EAAK0b,YAAc1b,EAAK0b,YAAYnJ,OAAOL,GACvCoQ,EAAeR,YAAYnjB,OAASqB,EAAKzB,IAC3CyB,EAAK+R,KAAM,EAEX/R,EAAKoiB,QAAUE,EAAeR,YAAYQ,EAAeR,YAAYnjB,OAAS,GAAG4jB,IAAIvrB,SAGzFuM,UACF,KAAI,SAAEtM,GACJ+I,EAAKqJ,aAAe,gCAAkCpS,EAAMA,MAAMqS,YAIjEtJ,EAAAwiB,aAAY,SAAIC,GAChBziB,EAAK+R,KACR/R,EAAKqiB,eAAeriB,EAAKL,QAASK,EAAK3B,UAAW2B,EAAKoiB,QAASpiB,EAAKzB,QAQ3E,OAzDgDgL,EAAAA,EAAAA,uBAL/CzB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,4BACVC,SAAA,0lXAXM+Z,uCAmBLtY,EAAAA,yBAKAA,EAAAA,SA+CHyY,EA9DA,CAKgDxa,ICDhDgb,GAAA,SAAAxa,GA0DE,SAAAwa,EAAoBjG,GAApB,IAAAzc,EACEkI,EAAAvR,KAAAb,OAAOA,YADWkK,EAAAyc,gBAAAA,EATXzc,EAAA2iB,aAAe3iB,EAAK2iB,aAAe3iB,EAAK2iB,aAAe,UAazD3iB,EAAA+I,QAAO,WACZ/I,EAAKyc,gBAAgB3B,kBAAkB9a,EAAKL,QAASK,EAAK3B,UAAW2B,EAAKV,MAAOU,EAAK5G,OAAQ4G,EAAK2C,SAChGlF,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACuH,GACFxF,EAAK1F,SAAWkL,EAAO6V,SAAS9gB,oBAChCyF,EAAK6O,SAAWrJ,EAAO6V,SAASxM,SAChC7O,EAAK/F,QAAUuL,EAAO6V,SAASrhB,WAC/BgG,EAAK4iB,OAASpd,EAAOuV,WACrB/a,EAAK6iB,QAAUrd,EAAO+V,gBAAkB,IAAM/V,EAAOgW,wBAA0B,aAAexb,EAAK2iB,gBAErGpf,UACF,KAAI,SAAEtM,GAAW+I,EAAKqJ,aAAe,+BAAiCpS,EAAMA,MAAMqS,cAOxF,OA7E+CC,EAAAA,EAAAA,GAyE7CmZ,EAAA1sB,UAAAwT,SAAA,WACE1T,KAAKiT,+BA/ERjB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,2BACVC,SAAA,2/BAbM2S,uCAoBLlR,EAAAA,qBAKAA,EAAAA,sBAKAA,EAAAA,yBAKAA,EAAAA,uBAKAA,EAAAA,0BAKAA,EAAAA,sBAKAA,EAAAA,8BAKAA,EAAAA,4BAKAA,EAAAA,SAiCHiZ,EAlFA,CAK+Chb,ICnB/Cob,GAAA,WAUA,OARE,SAAmBtW,EACAuW,EACAC,EACAC,EACAC,EACA1iB,GALA1K,KAAA0W,KAAAA,EACA1W,KAAAitB,UAAAA,EACAjtB,KAAAktB,gBAAAA,EACAltB,KAAAmtB,QAAAA,EACAntB,KAAAotB,IAAAA,EACAptB,KAAA0K,cAAAA,GAPrB,GCHA2iB,GAAA,WAuBE,SAAAA,EAAoBpmB,EAA0BkP,EAA0CwQ,GAAxF,IAAAzc,EAAAlK,KAAoBA,KAAAiH,KAAAA,EAA0BjH,KAAAmW,gBAAAA,EAA0CnW,KAAA2mB,gBAAAA,EA8DhF3mB,KAAAstB,uBAAsB,SAAIpZ,OAC5BqZ,EAMJ,OALArZ,EAAShE,WAAWrL,QAAO,SAAE2oB,GACvBA,EAAUC,eACZF,EAAeC,KAGZD,GAMDvtB,KAAA0tB,yBAAwB,SAC9BZ,EACAtjB,EACAlG,EACAse,EACA+L,EACA9jB,OACM+jB,EAqEJ,OApEAd,EAAOhpB,UAAUe,QAAO,SAAEmG,GAGtB,GAAIA,EAAS5H,gBAAkBoG,GAASwB,EAAS7B,KAAO7F,EAEpD,GAAIse,GAmBF,IAlBuB5W,EAAS3F,QAAU2F,EAAS3F,QAAU,IAE9CR,QAAO,SAAEgpB,GAClBjM,EAAOzY,KAAO0kB,EAAU1kB,KACrB0kB,EAAUrI,aAEbqI,EAAUrI,WAAa,IAAIsI,EAC3BD,EAAUrI,WAAW9O,KAAO,SAC5BmX,EAAUrI,WAAWuI,WAAa,IAEpCH,EAAmB,IAAIZ,GACrB,SAAUF,EAAQ5iB,EAAKojB,uBAAuBtiB,GAAW6iB,EAExD7iB,EAASya,gBAAkB,IAAMza,EAAS0a,wBAA0B,WAAuBmI,EAAUpX,KACtG5M,OAID+jB,EAAkB,KAEfT,GAAmB,IAAIpoB,GAAUlD,YAAY,CAAE2jB,WAAY,CAAEwI,QAAS,YAAcvX,KAAMmL,EAAOnL,KAAMtN,GAAIyY,EAAOzY,KACxHykB,EAAmB,IAAIZ,GACrB,SAAUF,EAAQ5iB,EAAKojB,uBAAuBtiB,GAAWmiB,EAExDniB,EAASya,gBAAkB,IAAMza,EAAS0a,wBAA0B,WAAuB9D,EAAOnL,KACnG5M,SAGC,GAAI8jB,EAAS,CAmBlB,IAlBwB3iB,EAASxF,SAAWwF,EAASxF,SAAW,IAEhDX,QAAO,SAAEopB,GACnBN,EAAQxkB,KAAO8kB,EAAW9kB,KACvB8kB,EAAWzI,aAEdyI,EAAWzI,WAAa,IAAIsI,EAC5BG,EAAWzI,WAAW9O,KAAO,SAC7BuX,EAAWzI,WAAWuI,WAAa,IAErCH,EAAmB,IAAIZ,GACrB,UAAWF,EAAQ5iB,EAAKojB,uBAAuBtiB,GAAWijB,EAEzDjjB,EAASya,gBAAkB,IAAMza,EAAS0a,wBAA0B,YAAwBuI,EAAWxX,KACxG,UAIDmX,EAAkB,CAEfT,GAAmB,IAAIpoB,GAAUlD,YAAY,CAAE2jB,WAAY,CAAEwI,QAAS,YAAcvX,KAAMkX,EAAQlX,KAAMtN,GAAIwkB,EAAQxkB,KAC1HykB,EAAmB,IAAIZ,GACrB,UAAWF,EAAQ5iB,EAAKojB,uBAAuBtiB,GAAWmiB,EAEzDniB,EAASya,gBAAkB,IAAMza,EAAS0a,wBAA0B,YAAwBiI,EAAQlX,KACrG,UAQPmX,UApJJP,EAAAntB,UAAAguB,yBAAP,SAAgCrkB,EAAiBtB,EAAmBiB,EAAelG,GAAnF,IAAA4G,EAAAlK,KAOE,OANmBA,KAAK2mB,gBAAgB7B,aAAajb,EAAStB,GAC9BZ,KAC9BiX,EAAAA,QAAO,SAACoJ,GACN,OAAO9d,EAAKikB,eAAetkB,EAAStB,EAAWiB,EAAOlG,EAAQ0kB,OAQ7DqF,EAAAntB,UAAAiuB,eAAP,SAAsBtkB,EAAiBtB,EAAmBiB,EAAelG,EAAgB0kB,OAGjFpf,EAAM,qCAAuCL,EAC/C,6BAA+BiB,EAC/B,oBAAsBlG,EACtB,qBAAuB0kB,EACvB,mBAAqBne,EAEzB,OAAO7J,KAAKiH,KAAKS,IAAIkB,GAClBjB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAACimB,OACIC,GAAS,IAAIjpB,GAAkBvD,YAAYusB,GAOjD,OALAC,EAAOhpB,QAAQR,QAAO,SAAC+c,GACI,iBAAdA,EAAOzY,KAChByY,EAAOzY,GAAKmlB,OAAO1M,EAAOzY,OAGvBklB,MAMRhB,EAAAntB,UAAAquB,gBAAP,SAAuBhmB,EAAmBiB,EAAelG,OACjDsF,EAAM,sCAAwCL,EAChD,6BAA+BiB,EAC/B,oBAAsBlG,EAE1B,OAAOtD,KAAKiH,KAAKS,IAAIkB,GAClBjB,KACCC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9DC,EAAAA,IAAG,SAACqmB,OACIC,GAAS,IAAIlpB,GAAmB1D,YAAY2sB,GAOlD,OALAC,EAAOjpB,SAASX,QAAO,SAAC8oB,GACI,iBAAfA,EAAQxkB,KACjBwkB,EAAQxkB,GAAKmlB,OAAOX,EAAQxkB,OAGzBslB,MAiGNpB,EAAAntB,UAAAwuB,kBAAP,SACE7kB,EACAL,EACAlG,EACAiF,EACAqZ,EACA+L,EACAllB,GAPF,IAAAyB,EAAAlK,KAQI,OAAOA,KAAKmW,gBAAgBtL,kBAAkBtC,EAAWiB,EAAOf,GAAKd,KACnEQ,EAAAA,IAAG,SAAC2kB,GACF,OAAO5iB,EAAKwjB,yBAAyBZ,EAAQtjB,EAAOlG,EAAQse,GAAkB,KAAM+L,GAAmB,KAAM9jB,2BAzKxHyH,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAlBNC,EAAAA,kBAYAzK,UAGA6d,qKAhBR,GCmBA8J,GAAA,SAAAvc,GAkDE,SAAAuc,EAAsBtc,EAAqCuc,GAA3D,IAAA1kB,EACEkI,EAAAvR,KAAAb,OAAOA,YADakK,EAAAmI,SAAAA,EAAqCnI,EAAA0kB,qBAAAA,EAhBlD1kB,EAAA2kB,WAAa,EAMZ3kB,EAAA4kB,cAAkD,IAAItc,EAAAA,aAIzDtI,EAAA6kB,UAAW,EAUX7kB,EAAA+I,QAAO,WACZ/I,EAAK0kB,qBAAqBV,yBAAyBhkB,EAAKL,QAASK,EAAK3B,UAAW2B,EAAKV,MAAOU,EAAK5G,QAC/FqE,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACimB,GACFlkB,EAAKkkB,YAAcA,EAAY/oB,WAEjCoI,UACF,KAAI,SAAEtM,GAAW+I,EAAKqJ,aAAe,kCAAoCpS,EAAMA,MAAMqS,YAGlFtJ,EAAA8kB,aAAY,WACjB9kB,EAAK6kB,UAAY7kB,EAAK6kB,YA8B1B,OA5FkDtb,EAAAA,EAAAA,GAiEzCkb,EAAAzuB,UAAA+uB,aAAP,SAAoBrN,GAApB,IAAA1X,EAAAlK,KAEEA,KAAK4uB,qBAAqBF,kBAAkB1uB,KAAK6J,QAAS7J,KAAKwJ,MAAOxJ,KAAKsD,OAAQtD,KAAKuI,UAAWqZ,EAAQ,KAAM,KAAKja,KACpHwL,EAAAA,KAAK,GACLC,EAAAA,UAAUpT,KAAK6R,aACfjK,EAAAA,IAAG,SAACsnB,GACGA,GAAmBA,EAAe/B,SAA0D,aAA9C+B,EAAe/B,QAAQ3H,WAAWwI,SAKjFrgB,QAAQxM,MAAM,yIAIpBgH,EAAAA,IAAG,SAACgnB,GAEF,OADAjlB,EAAK4kB,cAAc9b,KAAKmc,GACjBA,KAGV1hB,UAAU,KAAI,SAAEtM,GAAW+I,EAAKqJ,aAAe,kCAAoCpS,EAAMA,MAAMqS,YAGlGmb,EAAAzuB,UAAAwT,SAAA,WACE1T,KAAKiT,+BA9FRjB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,8BACVC,SAAA,w6CAlBMlL,UAKAqmB,uCAoBL1Z,EAAAA,qBAKAA,EAAAA,sBAKAA,EAAAA,yBAKAA,EAAAA,yBAKAA,EAAAA,0BAKAA,EAAAA,6BAMAC,EAAAA,UAyDH+a,EAjGA,CAKkD/c,ICVlDwd,GAAA,SAAAhd,GA+DE,SAAAgd,EAAoB/c,GAApB,IAAAnI,EACEkI,EAAAvR,KAAAb,OAAOA,YADWkK,EAAAmI,SAAAA,EA5CXnI,EAAAyhB,YAAsBzhB,EAAKyhB,YAAczhB,EAAKyhB,YAAc,WAI5DzhB,EAAA6R,YAAsB7R,EAAK6R,YAAa7R,EAAK6R,WAM5C7R,EAAAmL,UAAqC,IAAI7C,EAAAA,aAM5CtI,EAAAqL,gBAAe,SAAIC,GACxBtL,EAAKmL,UAAUrC,KAAKwC,IAGftL,EAAA+I,QAAO,WACZ/I,EAAKmlB,YAAc,GACnBnlB,EAAKmI,SAASzF,eAAe1C,EAAK2C,QAAS3C,EAAK3B,WAC7CZ,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACknB,GACFnlB,EAAKmlB,YAAcA,EAAYzpB,UAAY,MAE7C6H,UACF,KAAI,SAAEtM,GAAW+I,EAAKqJ,aAAe,kCAAoCpS,EAAMA,MAAMqS,YAGlFtJ,EAAAolB,iBAAgB,WAErBplB,EAAKmI,SAAS/E,cAAc,KAAMpD,EAAK2C,QAAS3C,EAAK3B,WACrD2B,EAAKmlB,YAAc,IAGdnlB,EAAA4hB,cAAa,SAAIjiB,GACtBK,EAAKmlB,YAAYhjB,OAAOnC,EAAKmlB,YAAYjjB,QAAQvC,GAAU,GAC3DK,EAAKmI,SAASjF,gBAAgBvD,EAASK,EAAK2C,QAAS3C,EAAK3B,cAW9D,OAlEkDkL,EAAAA,EAAAA,GA8DhD2b,EAAAlvB,UAAAwT,SAAA,WACE1T,KAAKiT,+BApERjB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,8BACVC,SAAA,iwFAfMlL,yCAsBL2M,EAAAA,uBAKAA,EAAAA,2BAKAA,EAAAA,0BAIAA,EAAAA,yBAMAC,EAAAA,UA0CHwb,EAvEA,CAKkDxd,ICHlD2d,GAAA,SAAAnd,GA0BE,SAAAmd,EAAoBlG,GAApB,IAAAnf,EACEkI,EAAAvR,KAAAb,OAAOA,YADWkK,EAAAmf,kBAAAA,EAIbnf,EAAA+I,QAAO,WACZ/I,EAAKmf,kBAAkBX,8BAA8Bxe,EAAKL,QAASK,EAAK3B,UAAW2B,EAAKV,OACrF7B,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACqkB,GACFtiB,EAAK0b,YAAc4G,EAAe5G,cAC7B1b,EAAK0b,aAAe1b,EAAK0b,YAAY/c,QAAU,IAClD8E,QAAQxM,MAAM,0GAGlBsM,UACF,KAAI,SAAEtM,GAAW+I,EAAKqJ,aAAe,gCAAkCpS,EAAMA,MAAMqS,cAMzF,OA3CqDC,EAAAA,EAAAA,GAwCnD8b,EAAArvB,UAAAwT,SAAA,WACE1T,KAAKiT,+BA9CRjB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,kCACVC,SAAA,+/FAbMwU,uCAqBL/S,EAAAA,yBAKAA,EAAAA,qBAKAA,EAAAA,SA4BH4b,EAhDA,CAKqD3d,ICVrD4d,GAAA,SAAApd,GAeE,SAAAod,IAAA,IAAAtlB,EACEkI,EAAAvR,KAAAb,OAAOA,YATAkK,EAAAulB,SAAU,EAMTvlB,EAAAwlB,cAAgB,IAAIld,EAAAA,aAMvBtI,EAAAylB,WAAU,SAAI1f,GACnB/F,EAAKwlB,cAAc1c,KAAK/C,GACxB/F,EAAK+F,SAAW3L,aAGpB,OAnBkDmP,EAAAA,EAAAA,uBALjDzB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,8BACVC,SAAA,usCAICyB,EAAAA,uBACAA,EAAAA,6BAMAC,EAAAA,UAWH4b,EAxBA,CAKkD5d,ICDlDge,GAAA,SAAAxd,GAUE,SAAAwd,IAAA,IAAA1lB,EACEkI,EAAAvR,KAAAb,OAAOA,YAJCkK,EAAA2lB,aAA2C,IAAIrd,EAAAA,aAQzDtI,EAAA4lB,eAAc,SAAIC,GAChBjoB,eAAeC,QAAQ,WAAYC,KAAKC,MAAMC,YAG9CgC,EAAK2lB,aAAa7c,MAAK,IAAItM,GAAe7E,YACtC,CACEmuB,SAAUD,EAAUC,SACpBC,YAAaF,EAAUE,kBAIjC,OArB4Cxc,EAAAA,EAAAA,uBAL3CzB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,uBACVC,SAAA,uNAKC0B,EAAAA,6BACAD,EAAAA,SAkBHic,EA1BA,CAK4Che,ICJ5Cse,GAAA,SAAA9d,GAkCE,SAAA8d,EAAoB7d,GAApB,IAAAnI,EACEkI,EAAAvR,KAAAb,OAAOA,YADWkK,EAAAmI,SAAAA,EATVnI,EAAAimB,aAAqC,IAAI3d,EAAAA,aAKnDtI,EAAAkmB,YAAwB,GASjBlmB,EAAAmmB,oBAAmB,SAAIliB,GAC5BjE,EAAK8U,QAAU1a,UACf4F,EAAKkmB,YAAcjiB,EAAK1D,SACxBP,EAAKS,aAAewD,EAAKxD,cAGpBT,EAAAomB,mBAAkB,WACvBpmB,EAAKqmB,oBAAoB7b,eACzBxK,EAAKkmB,YAAc,GACnBlmB,EAAK8U,QAAU1a,WAIV4F,EAAAqL,gBAAe,SAAI7K,GACxBR,EAAKimB,aAAand,KAAKtI,IAGlBR,EAAA+I,QAAO,WACR/I,EAAKqmB,qBACPrmB,EAAKqmB,oBAAoBtd,WAItB/I,EAAAsmB,mBAAkB,SAAIvmB,EAAiBoK,EAAoB7K,EAAelG,EAAgB0b,GAC/F9U,EAAKqmB,oBAAoBtc,aAAY,IAAIhP,GAAWpD,YAAa,CAAEuB,cAAgBoG,EAAOL,GAAI7F,KAC9F4G,EAAKqmB,oBAAoBnc,mBAAmBnK,EAASoK,GACrDnK,EAAK8U,QAAUA,EACf9U,EAAKmI,SAAS9H,kBAAkB,GAAIL,EAAK3B,UAAWiB,EAAOlG,GAAQ,EAAM,EAAG,IAAM2G,GAASwD,UAAS,SAClGqH,GACE5K,EAAKkmB,YAActb,EAAQrK,cAKnC,OApEmDgJ,EAAAA,EAAAA,uBALlDzB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,+BACVC,SAAA,u3BAdMlL,yCAqBL2M,EAAAA,uBAKAA,EAAAA,sBAKAA,EAAAA,4BAMAC,EAAAA,oCAGAsB,EAAAA,UAAS3D,KAAA,CAACsC,GAA6B,CAACsB,UAAQ,OA6CnD+a,EAzEA,CAKmDte,ICPnD6e,GAAA,SAAAre,GAgGE,SAAAqe,EAAsBpe,GAAtB,IAAAnI,EACEkI,EAAAvR,KAAAb,OAAOA,YADakK,EAAAmI,SAAAA,EAvDZnI,EAAAwmB,YAAuC,IAAIle,EAAAA,aAOrDtI,EAAAymB,aAAY,SAAIxiB,EAAMtE,GAEpB,GAAa,sBAATsE,EAEFjE,EAAKmI,SAASpE,WAAW/D,EAAK3B,UAAW2B,EAAK9G,cAAe8G,EAAKijB,QAAQA,QAAQhkB,GAAIU,EAASsE,GAC5FxG,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACoG,GACF,GAAIA,EACF,GAAKA,EAASJ,KAAKqF,SAkBjB7F,QAAQxM,MAAM,8BACdwM,QAAQxM,MAAMoN,EAASJ,KAAKqF,cAnBD,CAE3BjF,EAASJ,KAAO/J,KAAKC,MAAMkK,EAASJ,UAEhCyiB,OAAc,EACdlmB,OAAa,EACb6D,EAASqiB,iBACXA,EAAiBriB,EAASqiB,gBAExBriB,EAAS7D,gBACXA,EAAgB6D,EAAS7D,mBAErBmmB,GAAkB,IAAI7rB,GAAYnD,YAAY,CAAC+uB,eAAkBA,EAAgBlmB,cAAiBA,IACxGR,EAAKwmB,YAAY1d,KAAK6d,GACtB3mB,EAAK4iB,OAASxoB,UACd4F,EAAKiE,KAAO7J,UACZ4F,EAAK4mB,OAASxsB,cAQrBmJ,UAAS,SAACsjB,GAAW,OAAAA,GAAO,SAAE5vB,GAC3BwM,QAAQxM,MAAM,8BACdwM,QAAQxM,MAAMA,SAGf,KACC0vB,GAAkB,IAAI7rB,GAAYnD,YAAY,CAAC+uB,eAAkBtsB,UAAWoG,cAAiBpG,YACnG4F,EAAKwmB,YAAY1d,KAAK6d,GACtB3mB,EAAK4iB,OAASxoB,UACd4F,EAAKiE,KAAO7J,UACZ4F,EAAK4mB,OAASxsB,cAoCpB,OA3HkDmP,EAAAA,EAAAA,GA+FhDgd,EAAAvwB,UAAAwT,SAAA,WACE1T,KAAK2e,QAAU,CACbqS,eAAgB,CACdC,WAAc,YAKpBR,EAAAvwB,UAAAoa,YAAA,SAAYC,GAENA,EAAQ4S,SAAW5S,EAAQ4S,QAAQ1S,cAAiBF,EAAQ4S,QAAQ1S,eAAiBF,EAAQ4S,QAAQzS,cACvC,aAA5DH,EAAQ4S,QAAQ1S,aAAa0S,QAAQ3H,WAAWwI,QAClDhuB,KAAK8sB,OAASxoB,UAEdtE,KAAK8sB,OAASvS,EAAQ4S,QAAQ1S,aAAa0S,QAAQ3H,WAE5CjL,EAAQnX,eAAkBmX,EAAQnX,cAAcqX,eAAiBF,EAAQnX,cAAcsX,gBAEhG1a,KAAKmtB,QAAU7oB,WAEbiW,EAAQuW,QAAWvW,EAAQuW,OAAOrW,eAAiBF,EAAQuW,OAAOpW,gBACpE1a,KAAK8wB,OAASvW,EAAQuW,OAAOrW,cAE3BF,EAAQ2W,cAAiB3W,EAAQ2W,aAAazW,eAAiBF,EAAQ2W,aAAaxW,gBACtF1a,KAAKmO,KAAOnO,KAAKkxB,mCA5HtBlf,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,8BACVC,SAAA,gaAZMlL,yCAmBL2M,EAAAA,6BAKAA,EAAAA,sBAKAA,EAAAA,uBAKAA,EAAAA,4BAKAA,EAAAA,8BAKAA,EAAAA,2BAOAC,EAAAA,UAuFH6c,EAhIA,CAKkD7e,mBC+DhD,SAAAuf,EAAoB9e,GAApB,IAAAnI,EACEkI,EAAAvR,KAAAb,OAAOA,YADWkK,EAAAmI,SAAAA,EAxDVnI,EAAAknB,iBAAmB,IAAI5e,EAAAA,aAO1BtI,EAAAmnB,cAAa,SAAIlE,GACtBjjB,EAAKknB,iBAAiBpe,KAAK,IAAIga,GAAmB,UAAW9iB,EAAK+iB,UAAW/iB,EAAKojB,yBAA0BH,EAEzGjjB,EAAKgK,SAASuR,gBAAkB,IAAMvb,EAAKgK,SAASwR,wBAA0B,YAAwByH,EAAQ1W,KAC/GnS,aAIG4F,EAAAonB,MAAK,WACVpnB,EAAKqnB,gBAAgBrwB,MAAQoD,WAGvB4F,EAAAojB,uBAAsB,eACxBC,EAMJ,OALArjB,EAAKgK,SAAShE,WAAWrL,QAAO,SAAE2oB,GAC5BA,EAAUC,eACZF,EAAeC,KAGZD,GAGFrjB,EAAA+I,QAAO,WAEZ/I,EAAKmI,SAASxH,kBAAkBX,EAAK3B,UAAW2B,EAAKV,MAAO,KAAK7B,KAC/DQ,EAAAA,IAAG,SAAC2kB,GACA5iB,EAAK+iB,UAAYH,EACjBA,EAAOhpB,UAAUe,QAAO,SAAEmG,GAGlBA,EAAS5H,gBAAkB8G,EAAKV,OAASwB,EAAS7B,KAAOe,EAAK5G,SAC5D0H,EAASwa,aAAelhB,WAC1B4F,EAAKgK,SAAWlJ,EAChBd,EAAKsnB,gBAAkBxmB,EAASxF,SAAWwF,EAASxF,SAAW,GAC3B,IAAhC0E,EAAKsnB,gBAAgB3oB,QACrBqB,EAAKmnB,cAAcnnB,EAAKsnB,gBAAgB,KAG5C7jB,QAAQxM,MAAM,2GAO1BsM,eAcN,OA5EsDgG,EAAAA,EAAAA,GAsEpD0d,EAAAjxB,UAAAoa,YAAA,SAAYC,GACNA,EAAQ/Q,OAAU+Q,EAAQ/Q,MAAMiR,eAAiBF,EAAQ/Q,MAAMkR,gBAC/D1a,KAAKwxB,gBAAkB,GACzBxxB,KAAKiT,gCA9EVjB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,kCACVC,SAAA,+4CAPMlL,+CAWLkO,EAAAA,UAAS3D,KAAA,CAAC,kBAAmB,CAAC4D,UAAQ,uBACtCxB,EAAAA,qBACAA,EAAAA,sBACAA,EAAAA,gCAMAC,EAAAA,UAkEHud,GA5EsDvf,ICJtD6f,GAAA,WAqDE,SAAAA,IAAA,IAAAvnB,EAAAlK,KAjBUA,KAAA0xB,YAAuC,IAAIlf,EAAAA,aAKrDxS,KAAA2wB,aAAY,SAAIxiB,GACdjE,EAAKwnB,YAAY1e,KAAK7E,IAOxBnO,KAAA2xB,uBAAsB,SAAIxE,GACxBjjB,EAAK0nB,gBAAkBzE,GAS3B,OAJEsE,EAAAvxB,UAAAwT,SAAA,WACE/F,QAAQC,IAAI5N,KAAKoD,oCAxDpB4O,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,0BACVC,SAAA,m3BAICgD,EAAAA,UAAS3D,KAAA,CAAC,kBAAmB,CAAC4D,UAAQ,uBAItCxB,EAAAA,6BAKAA,EAAAA,sBAKAA,EAAAA,4BAKAA,EAAAA,8BAKAA,EAAAA,2BAMAC,EAAAA,UAuBH6d,EA3DA,GCEAI,GAAA,SAAAzf,GAyDE,SAAAyf,EAAoBC,GAApB,IAAA5nB,EACEkI,EAAAvR,KAAAb,KAAM8xB,IAAM9xB,YADMkK,EAAA4nB,MAAAA,EA7BZ5nB,EAAA6nB,YAAW,SAAIloB,GAErBK,EAAKmI,SAASvI,QAAQI,EAAKL,QAASK,EAAK3B,UAAW2B,EAAK9G,cAAe8G,EAAK5G,QAC1EqE,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACuH,WACF,GAAIA,EAAOqJ,SAAS3V,gBAAkB8G,EAAK9G,cAAc8E,WAAY,KAC7D1D,EAAWkL,EAAOjL,oBACxByF,EAAK8nB,eAAYC,EAAA,IACd/nB,EAAKijB,QAAQA,QAAQ1W,MAAOjS,SAGzB0tB,EAAehoB,EAAKioB,0BAA0BjoB,EAAK5G,OAAQ4G,EAAKijB,SAAS1W,KAC/EvM,EAAKiE,OAAIikB,EAAA,IACNF,GAAe1tB,UAGlBmJ,QAAQxM,MAAM,mEAInBsM,UAAS,SAACsjB,GAAW,OAAAA,GAAO,SAAE5vB,GAE7BwM,QAAQxM,MAAM,gCACdwM,QAAQxM,MAAMA,QA0BtB,OA1EiDsS,EAAAA,EAAAA,GAavCoe,EAAA3xB,UAAAiyB,0BAAR,SAAkC7uB,EAAgB6pB,OAC5C9hB,EAMJ,OALA8hB,EAAQF,UAAUnpB,UAAUe,QAAO,SAAEsgB,GAC/BA,EAAMhc,KAAO7F,IACf+H,EAAgB8Z,KAGb9Z,GAoCTwmB,EAAA3xB,UAAAwT,SAAA,aAKAme,EAAA3xB,UAAAoa,YAAA,SAAYC,GAEVnI,EAAAlS,UAAMoa,YAAWzZ,KAAAb,KAACua,IAEbA,EAAQ1Q,SAAW0Q,EAAQ1Q,QAAQ4Q,cAAiBF,EAAQ1Q,QAAQ4Q,eAAiBF,EAAQ1Q,QAAQ6Q,eACpGH,EAAQ4S,SAAW5S,EAAQ4S,QAAQ1S,cAAiBF,EAAQ4S,QAAQ1S,eAAiBF,EAAQ4S,QAAQzS,gBAErGH,EAAQ4S,QAAQ1S,cAClBza,KAAK+xB,YAAY/xB,KAAK6J,8BA1E7BmI,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,6BACVC,SAAA,u8BAdMlL,uCAqBL2M,EAAAA,0BAKAA,EAAAA,SAiEHke,EA/EA,CAKiDpB,ICPjD4B,GAAA,WA4DE,SAAAA,IAAA,IAAAnoB,EAAAlK,KAhBUA,KAAAsyB,aAAwC,IAAI9f,EAAAA,aAKtDxS,KAAAuyB,sBAAqB,SAAI7iB,GACvBxF,EAAKooB,aAAatf,KAAKtD,GACvBxF,EAAKsoB,eAAexD,gBAItBhvB,KAAAyyB,oBAAmB,SAAI7Q,GACrB1X,EAAKsoB,eAAexD,eACpB9kB,EAAKwoB,eAAiB9Q,GAS1B,OAHEyQ,EAAAnyB,UAAAwT,SAAA,iCA/DD1B,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,yBACVC,SAAA,skBAKCgD,EAAAA,UAAS3D,KAAA,CAACod,GAA8B,CAACxZ,UAAQ,qBAKjDxB,EAAAA,yBAKAA,EAAAA,yBAKAA,EAAAA,6BAKAA,EAAAA,sBAKAA,EAAAA,8BAKAA,EAAAA,4BAOAC,EAAAA,UAsBHye,EAlEA,GCZAM,GAAA,WAUE,SAAAA,EAAmBtgB,GAAArS,KAAAqS,SAAAA,EAsBrB,OApBEsgB,EAAAzyB,UAAA0yB,QAAA,WAiBE,OAZe5yB,KAAKqS,SAASjJ,YAC1BzB,KACCQ,EAAAA,IAAG,SAACkB,GAMF,OALAA,EAAMwpB,UAAUhuB,QAAO,SAACiuB,GACD,eAAjBA,EAAQpc,OACVrN,EAAM0pB,yBAA2BD,KAG9BzpB,0BAlBhBiI,EAAAA,sDAJOtK,MA6BR2rB,EAhCA,iBCgBE,SAAAK,EAAoB3gB,EAAmC4gB,GAAnCjzB,KAAAqS,SAAAA,EAAmCrS,KAAAizB,OAAAA,EAwCzD,OArCED,EAAA9yB,UAAAgzB,YAAA,SAAYC,EAA+B7sB,GAA3C,IAAA4D,EAAAlK,KAEQ6J,EAAUspB,EAAMvqB,IAAIuqB,EAAMvqB,IAAIC,OAAS,GAAGuqB,KAgChD,OA9BuB,IAAIT,GAAe3yB,KAAKqS,UAEMugB,UAClDjrB,KAECiX,EAAAA,QAAO,SACLyU,GACE,OAAOnpB,EAAKmI,SAASzI,aAAaypB,EAAON,yBAAyB5pB,GAAIU,GACnElC,KACCQ,EAAAA,IAAG,SAACrD,GACF,QAAIA,IAIFoF,EAAK+oB,OAAOK,SAAS,CAAC,oBAAqB,KACpC,KAGXha,EAAAA,WAAU,SAACnY,GAKT,OAHAwM,QAAQxM,MAAM,uBAAyB0I,EAAU,iDAEjDK,EAAK+oB,OAAOK,SAAS,CAAC,oBAAqB,IACpC5Z,EAAAA,WAAWvY,8BAjCnCmQ,EAAAA,sDAPOtK,UADAusB,EAAAA,UAmDRP,KC3CAQ,GAAA,WAoDE,SAAAA,IA7CAxzB,KAAAyzB,yBAA2B,CACzB,IACA,CAAE/c,KAAM,SAAU1G,MAAO,OAAQ0jB,UAAW,SAC5C,CAAEhd,KAAM,UAAW1G,MAAO,QAAS0jB,UAAW,UA4BvC1zB,KAAA8wB,OAAgB9wB,KAAK8wB,OAAS9wB,KAAK8wB,OAAS9wB,KAAKyzB,yBA6B5D,OAbED,EAAAtzB,UAAAwT,SAAA,WAGE1T,KAAK2e,QAAU,CACbqS,eAAgB,CACd2C,UAAY,EACZ1C,WAAc,UAEhB2C,kBAAoB,GAEtBjmB,QAAQC,IAAI5N,KAAK8sB,6BAhEpB9a,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,mCACVC,SAAA,2XAeCyB,EAAAA,qBAMAA,EAAAA,uBAKAA,EAAAA,sBAKAA,EAAAA,sBAKAA,EAAAA,8BAKAA,EAAAA,uBAKAA,EAAAA,SAmBH6f,EAnEA,GCbAK,GAAA,WASI,SAAAA,IAAA,IAAA3pB,EAAAlK,KAEQA,KAAA8zB,YAAcxvB,UAEdtE,KAAA+zB,cAAa,SAAIC,EAAiB3jB,GAItC,QAHgBA,EAAMA,MAAMuC,KAAI,SAACqhB,GAC7B,OAAQA,EAAK9qB,KAAO6qB,KAKpBh0B,KAAAk0B,gBAAe,SAAIC,EAAkB9jB,EAAc+jB,OAEnDC,EAAUD,EAAOhX,QAAQxK,KAAI,SAAC0hB,GAClC,OAAQH,IAAaG,EAAUH,WAEjC,OAAKE,KAIahkB,EAAMA,MAAMuC,KAAI,SAACqhB,GAC/B,OAAQA,EAAK9qB,KAAOkrB,EAAQE,kBAclCv0B,KAAAw0B,gBAAe,SAAInkB,GAIf,QAHgBA,EAAMA,MAAMuC,KAAI,SAACqhB,GAC7B,OAA+B,IAAvBA,EAAKQ,iBAIrBz0B,KAAA00B,eAAc,WACV,OAAOxqB,EAAK4pB,aAGhB9zB,KAAA20B,eAAc,SAAIV,GACd/pB,EAAK4pB,YAAcG,UAnBvBJ,EAAA3zB,UAAA00B,UAAA,SAAUC,EAAgBxkB,GACtB,OAAOrQ,KAAK+zB,cAAcc,EAAQxkB,IAGtCwjB,EAAA3zB,UAAA40B,YAAA,SAAYX,EAAkB9jB,EAAc+jB,GACxC,OAAOp0B,KAAKk0B,gBAAgBC,EAAU9jB,EAAO+jB,wBArCpD9iB,EAAAA,WAAUC,KAAA,CAAC,CACRC,WAAY,wJALhB,GC0CAujB,GAAA,WAgIE,SAAAA,EAAsB1iB,EAAqCyJ,EAAiDmX,EAA0B+B,GAAtI,IAAA9qB,EAAAlK,KAAsBA,KAAAqS,SAAAA,EAAqCrS,KAAA8b,cAAAA,EAAiD9b,KAAAizB,OAAAA,EAA0BjzB,KAAAg1B,aAAAA,EApHtIh1B,KAAAyzB,yBAA2B,CACzB,IACA,CAAE/c,KAAM,SAAU1G,MAAO,OAAQ0jB,UAAW,SAC5C,CAAEhd,KAAM,UAAW1G,MAAO,SAAU0jB,UAAW,UAwDxC1zB,KAAA8wB,OAAgB9wB,KAAK8wB,OAAU9wB,KAAK8wB,OAAS9wB,KAAKyzB,yBAKlDzzB,KAAAi1B,WAAqBj1B,KAAKi1B,WAAYj1B,KAAKi1B,UAK3Cj1B,KAAAk1B,eAAyBl1B,KAAKk1B,eAAgBl1B,KAAKk1B,cAKnDl1B,KAAAm1B,YAAsBn1B,KAAKm1B,YAAan1B,KAAKm1B,WAK7Cn1B,KAAAo1B,WAAqBp1B,KAAKo1B,WAAYp1B,KAAKo1B,UAO1Cp1B,KAAAq1B,YAAyC,IAAI7iB,EAAAA,aAcvDxS,KAAAunB,OAAQ,EACRvnB,KAAAkc,eAAkC,GAElClc,KAAAs1B,iBAAkB,EAClBt1B,KAAAu1B,cAAe,EACfv1B,KAAAw1B,kBAAmB,EACnBx1B,KAAAy1B,eAAgB,EAChBz1B,KAAA01B,cAAgB,EAGhB11B,KAAA21B,iBAAkB,EAGR31B,KAAA6R,YAAc,IAAIC,EAAAA,QAMlB9R,KAAAgd,qBAAoB,eACtBI,EAAU,GAChB,GAAIlT,EAAKorB,gBAAiB,KAClBM,EAAe1rB,EAAK4R,cAAcoB,aAAa,SAAU,oBAAoB,EAAM,UAAWhT,EAAKkqB,QAASlqB,EAAK8qB,aAAaF,YAAY,YAAa5qB,EAAKmG,MAAOnG,EAAKkqB,SAAiB,GAC/LhX,EAAQnc,KAAK20B,GAEf,GAAI1rB,EAAKqrB,aAAc,KACfM,EAAY3rB,EAAK4R,cAAcoB,aAAa,WAAY,qBAAsBhT,EAAK4rB,WAAY,mBAAoB5rB,EAAKkqB,QAASlqB,EAAK8qB,aAAaF,YAAY,WAAY5qB,EAAKmG,MAAOnG,EAAKkqB,SAAiB,GACnNhX,EAAQnc,KAAK40B,GAEf,GAAI3rB,EAAKsrB,iBAAkB,KACnBO,EAAgB7rB,EAAK4R,cAAcoB,aAAa,UAAW,oBAAoB,EAAM,WAAYhT,EAAKkqB,QAASlqB,EAAK8qB,aAAaF,YAAY,UAAW5qB,EAAKmG,MAAOnG,EAAKkqB,SAAiB,GAChMhX,EAAQnc,KAAK80B,GAEf,GAAI7rB,EAAKurB,cAAe,KAChBO,EAAa9rB,EAAK4R,cAAcoB,aAAa,QAAS,kBAAkB,EAAM,SAAS,GAAM,GACnGE,EAAQnc,KAAK+0B,GAEf,OAAO5Y,GAGFpd,KAAA4d,yBAAwB,SAAIuW,GAChB,aAAbA,GACFjqB,EAAK+rB,iBAEU,YAAb9B,GACFjqB,EAAK+I,UAEU,UAAbkhB,GACFjqB,EAAKmrB,YAAYriB,KAAK,IAAIkjB,EAAAA,YAAY,cAAe,OAEtC,WAAb/B,GACFjqB,EAAKmrB,YAAYriB,KAAK,IAAIkjB,EAAAA,YAAY,gBAAiB,QAIpDl2B,KAAAm2B,sBAAqB,SAAIC,GAC9BlsB,EAAKmsB,qBAAqBrH,eAC1B9kB,EAAKksB,gBAAkBA,GAGlBp2B,KAAAs2B,iBAAgB,SAAInoB,GAEzBjE,EAAKqsB,cAAcC,cAAgBtsB,EAAKqsB,cAAcE,MAAM5tB,OAC5DqB,EAAKwsB,YAAcxsB,EAAKqsB,cAAcE,MAAM5tB,OAC5CqB,EAAKyrB,iBAAkB,GAGlB31B,KAAA22B,mBAAkB,WACvBzsB,EAAKksB,gBAAkB9xB,UACvB4F,EAAKmsB,qBAAqBrH,gBAGrBhvB,KAAAuyB,sBAAqB,SAAIrkB,GAC9BhE,EAAKksB,gBAAkB9xB,UACvB4F,EAAKmsB,qBAAqBrH,eAE1BnL,WAAU,WACR3Z,EAAK+I,WACJ,MAGEjT,KAAA42B,qBAAoB,SAAIC,GAC7B3sB,EAAK4sB,UAAYD,EACbA,IAAc3sB,EAAKwsB,YACrBxsB,EAAKyrB,iBAAkB,EAEvBzrB,EAAKyrB,iBAAkB,GAIpB31B,KAAAiT,QAAO,WACR/I,EAAKwgB,sBACPxgB,EAAKwgB,qBAAqBzX,UAExB/I,EAAK6sB,mBACP7sB,EAAK6sB,kBAAkB9jB,UAErB/I,EAAK8sB,qBACP9sB,EAAK8sB,oBAAoB/jB,UAEvB/I,EAAKmsB,sBACPnsB,EAAKmsB,qBAAqBpjB,UAExB/I,EAAK+sB,oBACP/sB,EAAK+sB,mBAAmBhkB,UAEtB/I,EAAKgtB,yBACPhtB,EAAKgtB,wBAAwBjkB,UAE3B/I,EAAK8sB,qBACP9sB,EAAK8sB,oBAAoB/jB,UAEvB/I,EAAKitB,wBACPjtB,EAAKitB,uBAAuBlkB,UAE1B/I,EAAKktB,oBACPltB,EAAKktB,mBAAmBnkB,WAIrBjT,KAAAi2B,eAAc,WACnB/rB,EAAKmI,SAASvE,gBAAgB5D,EAAKL,QAASK,EAAK2C,QAAS3C,EAAK3B,WAC/D2B,EAAK4rB,YAAc5rB,EAAK4rB,eAClBuB,EAAmBntB,EAAK4R,cAAcoB,aAC1C,WAAY,qBAAsBhT,EAAK4rB,WAAY,mBAAmB,GAAM,GAC9E5rB,EAAKgS,eAAiBhS,EAAK4R,cAAcuB,cAAc,CAACga,GAAmBntB,EAAKgS,iBAwCpF,OArCE6Y,EAAA70B,UAAAwT,SAAA,WAAA,IAAAxJ,EAAAlK,KACOs3B,MAAMhnB,OAAOtQ,KAAK6J,YAEhB7J,KAAKu3B,mBAAoE,IAA/Cv3B,KAAKu3B,iBAAiBnrB,QAAQpM,KAAKwJ,QAChExJ,KAAKqS,SAAS/E,cAActN,KAAK6J,QAAS7J,KAAK6M,QAAS7M,KAAKuI,WAE/DvI,KAAKunB,OAAQ,GAEXvnB,KAAKu1B,aACPv1B,KAAKqS,SAAStE,eAAe/N,KAAK6J,QAAS7J,KAAK6M,QAAS7M,KAAKuI,WAC3DZ,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUpT,KAAK6R,aACf1J,EAAAA,IAAG,SAACuH,GAGF,OAFAxF,EAAK4rB,WAAapmB,EAClBxF,EAAKgS,eAAiBhS,EAAKgS,eAAeO,OAAOvS,EAAK8S,wBAC/CtN,KAGVjC,UACC,KAAI,SAAEtM,GACJ+I,EAAKqJ,aAAe,gCAAkCpS,EAAMA,MAAMqS,WAIxExT,KAAKkc,eAAiBlc,KAAKkc,eAAeO,OAAOzc,KAAKgd,yBAI1D+X,EAAA70B,UAAA6R,YAAA,WACE/R,KAAK6R,YAAY9Q,QAGnBg0B,EAAA70B,UAAAs3B,gBAAA,WACEx3B,KAAKy3B,YAAYhB,MAAMnF,M5CtLpB,WACH,IAAK,IAAIxwB,EAAK,GAAIF,EAAI,EAAGA,EAAI82B,UAAU7uB,OAAQjI,IAC3CE,EAAKA,EAAG2b,OAAOrc,EAAOs3B,UAAU92B,KACpC,OAAOE,E4CmLqB62B,CAAK33B,KAAK43B,cAAcC,UAAc73B,KAAK83B,kBAAkBD,iCAlR5F7lB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,8BACVC,SAAA,i+JApBMlL,UACeiX,EAAAA,8BAZCsV,EAAAA,cAkBhBM,2CAkBL3e,EAAAA,UAAS3D,KAAA,CAAC,kBAAmB,CAAC4D,UAAQ,2BACtCsW,EAAAA,aAAYla,KAAA,CAAC,0CACbwmB,EAAAA,gBAAexmB,KAAA,CAAC,iCAYhBoC,EAAAA,qBAKAA,EAAAA,sBAKAA,EAAAA,yBAKAA,EAAAA,uBAKAA,EAAAA,sBAKAA,EAAAA,gCAKAA,EAAAA,qBAKAA,EAAAA,sBAKAA,EAAAA,8BAKAA,EAAAA,sBAKAA,EAAAA,yBAKAA,EAAAA,6BAKAA,EAAAA,0BAKAA,EAAAA,yBAKAA,EAAAA,2BAOAC,EAAAA,qCAGAsB,EAAAA,UAAS3D,KAAA,CAACqJ,GAA8B,CAACzF,UAAQ,+BACjDD,EAAAA,UAAS3D,KAAA,CAACqb,GAA2B,CAACzX,UAAQ,kCAC9CD,EAAAA,UAAS3D,KAAA,CAACod,GAA8B,CAACxZ,UAAQ,gCACjDD,EAAAA,UAAS3D,KAAA,CAAC6a,GAA4B,CAACjX,UAAQ,oCAC/CD,EAAAA,UAAS3D,KAAA,CAACgQ,GAA4B,CAACpM,UAAQ,gCAC/CD,EAAAA,UAAS3D,KAAA,CAACsK,GAAwB,CAAC1G,UAAQ,iCAC3CD,EAAAA,UAAS3D,KAAA,CAAC6X,GAA6B,CAACjU,UAAQ,qCAChDD,EAAAA,UAAS3D,KAAA,CAACge,GAAiC,CAACpa,UAAQ,2BACpDD,EAAAA,UAAS3D,KAAA,CAAC,eAAgB,CAAC4D,UAAQ,OAwKtC4f,EArRA,GC/BAiD,GAAA,WAiBE,SAAAA,EAAoB3O,GAAArpB,KAAAqpB,kBAAAA,EAmBtB,OAjBE2O,EAAA93B,UAAAwT,SAAA,eAMMuV,EAFEC,GAFUlpB,KAAKi4B,QAAU,QAAWj4B,KAAKk4B,OAAS,MAAQ,UAElC,YAAcl4B,KAAKkoB,OAAS,OAIxDe,EADkB,cAAhBjpB,KAAKkoB,QAA0BloB,KAAK2nB,WAC5B,8BAEA,SAAW3nB,KAAKkoB,OAAS,MAErCloB,KAAKm4B,aAAe,iBAAmBn4B,KAAKkoB,QAAUloB,KAAK2nB,WAAa,YAAc,IAEtF3nB,KAAKo4B,WAAap4B,KAAKqpB,kBAAkBN,uBAAuB/oB,KAAKgZ,MAAO,cAAeiQ,EAASC,wBAjCvGlX,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,2BACVC,SAAA,uaAXMwU,uCAeL/S,EAAAA,sBACAA,EAAAA,sBACAA,EAAAA,qBACAA,EAAAA,0BACAA,EAAAA,qBACAA,EAAAA,6BACAA,EAAAA,SAwBHqkB,EApCA,GCDAK,GAAA,WA0CE,SAAAA,IAAA,IAAAnuB,EAAAlK,KAVUA,KAAA4pB,cAA8C,IAAIpX,EAAAA,aAMlDxS,KAAA2S,YAAsC,IAAIH,EAAAA,aAMpDxS,KAAAs4B,yBAAwB,SAAI7jB,GAE1BvK,EAAKquB,kBAAoB9jB,EACzBvK,EAAKyI,YAAYK,KAAKyB,IAGxBzU,KAAAw4B,oBAAmB,SAAIpO,GACrBlgB,EAAK0f,cAAc5W,KAAKoX,IAM5B,OAHEiO,EAAAn4B,UAAAwT,SAAA,iCAtDD1B,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,0CACVC,SAAA,m3BASCyB,EAAAA,yBAKAA,EAAAA,uBAKAA,EAAAA,wBAKAA,EAAAA,6BAMAC,EAAAA,4BAMAA,EAAAA,UAmBHykB,EAzDA,GCAAI,GAAA,WAqCE,SAAAA,IAAA,IAAAvuB,EAAAlK,KADUA,KAAA0xB,YAAuC,IAAIlf,EAAAA,aAI9CxS,KAAA04B,mBAAkB,SAAIxqB,GAC3BhE,EAAKwnB,YAAY1e,KAAK9E,IAM1B,OAHEuqB,EAAAv4B,UAAAwT,SAAA,iCA5CD1B,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,qCACVC,SAAA,maAOCyB,EAAAA,yBAKAA,EAAAA,uBAKAA,EAAAA,2BAKAA,EAAAA,8BAKAA,EAAAA,2BAOAC,EAAAA,UAWH6kB,EA/CA,GCNAE,GAAA,WAMA,OALE,SAAmBlkB,EACAmkB,EACArwB,EACAswB,GAHA74B,KAAAyU,YAAAA,EACAzU,KAAA44B,YAAAA,EACA54B,KAAAuI,UAAAA,EACAvI,KAAA64B,eAAAA,GAJrB,GCOAC,GAAA,WAaE,SAAAA,EACS/U,EACyB5V,GAFlC,IAAAjE,EAAAlK,KACSA,KAAA+jB,UAAAA,EACyB/jB,KAAAmO,KAAAA,EAO3BnO,KAAA+4B,kBAAiB,SAAIC,GAC1B9uB,EAAK8uB,YAAcA,GAGrBh5B,KAAAi5B,SAAQ,eACAzjB,GAAY,IAAI5T,GAAYC,YAChC,CAAEgI,QAASK,EAAK8uB,YAAYtuB,cAAelB,MAAOU,EAAKuK,YAAYrR,cAAeE,OAAQ4G,EAAKuK,YAAYtL,KAC7Ge,EAAK6Z,UAAUO,MAAM9O,IAGvBxV,KAAAk5B,YAAW,WACThvB,EAAK6Z,UAAUO,SAjBftkB,KAAKyU,YAActG,EAAKsG,YACxBzU,KAAKuI,UAAY4F,EAAK5F,UACtBvI,KAAK44B,YAAczqB,EAAKyqB,YACxB54B,KAAK64B,eAAiB1qB,EAAK0qB,eAiB/B,2BApCC7mB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,gCACVC,SAAA,ywFAZuBsS,EAAAA,oBACjBmU,GAA2BQ,WAAA,CAAA,CAAAziB,KAwB9B+N,EAAAA,OAAMlT,KAAA,CAACmT,EAAAA,sBAqBZoU,EApCA,GCTAM,GAAA,WAAA,SAAAA,KASA,OAJEA,EAAAl5B,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJs3B,EATA,iBAWA,SAAAC,KAUA,OAJEA,EAAAn5B,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJu3B,mBAEA,SAAAC,KAMA,OAJEA,EAAAp5B,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJw3B,mBAEA,SAAAC,KAUA,OAJEA,EAAAr5B,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJy3B,mBAEA,SAAAC,KAOA,OAJEA,EAAAt5B,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJ03B,mBAEA,SAAAC,KAMA,OAJEA,EAAAv5B,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJ23B,KC5DAC,GAAA,WAaE,SAAAA,EAAoBzyB,EAA0B0yB,GAA1B35B,KAAAiH,KAAAA,EAA0BjH,KAAA25B,kBAAAA,SAEvCD,EAAAx5B,UAAA05B,qBAAP,SAA4BC,EAAyBhtB,GAArD,IAAA3C,EAAAlK,KAEQ85B,EAAmD,GAQzD,OAPAD,EAAOE,UAAUl1B,QAAO,SAAEqP,GACxB4lB,EAAoB74B,KAAKiJ,EAAKyvB,kBAAkBxhB,kBAAkBjE,EAAS9Q,cAAeyJ,GAASlF,KACjGQ,EAAAA,IAAG,SAAC6xB,GACF,OAAOA,QAIN9gB,EAAAA,SAAS4gB,GAAqBnyB,KACnCQ,EAAAA,IAAG,SAACgR,GACF,IAAK,IAAImD,EAAI,EAAGA,EAAIud,EAAOE,UAAUlxB,OAAQyT,IAC3Cud,EAAOE,UAAUzd,GAAG2d,aAAazhB,MAAQW,EAAUmD,GAAG7Y,cAAgB0V,EAAUmD,GAAG7Y,cAAgBa,UAErG,OAAOu1B,MAKNH,EAAAx5B,UAAAg6B,qBAAP,SAA4BL,EAA6Bz2B,EAAuByJ,GAE9E,OAAO7M,KAAK25B,kBAAkBxhB,kBAAkB/U,EAAeyJ,GAASlF,KACtEQ,EAAAA,IAAG,SAACgyB,GAUF,OATAN,EAAOO,WAAWv1B,QAAO,SAACmjB,OACpBqS,EACAF,GAAkBA,EAAe9hB,iBAClCgiB,EAAcF,EAAe9hB,eAAezF,KAAI,SAAC8F,GAChD,OAAOA,EAASpS,QAAU0hB,EAAUsS,UAAUp5B,SAGlD8mB,EAAUsS,UAAU9hB,MAAS6hB,GAAeA,EAAY7hB,MAAS6hB,EAAY7hB,MAAQlU,YAEhFu1B,MAKNH,EAAAx5B,UAAAq6B,mBAAP,SAA0BhyB,EAAmBC,EAAkBqE,GAA/D,IAAA3C,EAAAlK,KACQ4I,EAAM,6CAA+CL,EAC3D,OAAOvI,KAAKiH,KAAKS,IAAIkB,GAAKjB,KACxBC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9D0W,EAAAA,QAAO,SAACrQ,OACAisB,GAAmB,IAAIlB,IAAkBz3B,YAAY0M,OAIrDksB,EAAmB,IAAInB,GAM7B,OALI9wB,EAAOK,OAAS,EAClB4xB,EAAiBV,UAAYS,EAAiBT,UAAU1d,OAL1D,SAAyBqe,EAA+BC,EAAOC,GAC7D,OAAmD,IAA3CpyB,EAAO4D,QAAQsuB,EAAQt3B,iBAM/Bq3B,EAAiBV,UAAYS,EAAiBT,UAEzC7vB,EAAK0vB,qBAAqBa,EAAkB5tB,OAKlD6sB,EAAAx5B,UAAA26B,uBAAP,SAA8BtyB,EAAmBiB,EAAelG,EAAgBw3B,EAAsBjuB,GAAtG,IAAA3C,EAAAlK,KACQ4I,EAAM,8CAAgDL,EACxD,6BAA+BiB,EAC/B,kBAAoBlG,EACpB,iCAAmCgrB,OAAOwM,GAAa3R,cAC3D,OAAOnpB,KAAKiH,KAAKS,IAAIkB,GAAKjB,KACxBC,EAAAA,IAAG,SAAEC,GAAO,OAAAC,eAAeC,QAAQ,eAAgBC,KAAKC,MAAMC,cAC9D0W,EAAAA,QAAO,SAACrQ,OACAwsB,GAAsB,IAAItB,IAAsB53B,YAAY0M,GAClE,OAAOrE,EAAKgwB,qBAAqBa,EAAqBvxB,EAAOqD,2BA1EpEyE,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDARNC,EAAAA,kBAIAyE,sJALR,GCgBA8kB,GAAA,SAAA5oB,GAOE,SAAA4oB,EAAoBC,GAApB,IAAA/wB,EACEkI,EAAAvR,KAAAb,OAAOA,YADWkK,EAAA+wB,iBAAAA,EA2BX/wB,EAAAgxB,eAAyBhxB,EAAKgxB,eAAiBhxB,EAAKgxB,eAAiB,EAKrEhxB,EAAAixB,kBAAkBjxB,EAAKixB,iBAAkBjxB,EAAKixB,gBAO7CjxB,EAAAkxB,iBAAuD,IAAI5oB,EAAAA,aAQ9DtI,EAAAmxB,aAAc,EAGdnxB,EAAAoxB,kBAAmC,GACnCpxB,EAAAqxB,kBAA+B,WAC/BrxB,EAAAsxB,YAAqB,GACrBtxB,EAAAuxB,cAA0B5lB,GAAeuE,QAAQyN,UAIhD3d,EAAAwxB,aAAY,WAClB,OAAOxxB,EAAKyxB,sBAGPzxB,EAAA0xB,qBAA4B,CACjCC,YAAY,EACZC,qBAAqB,EACrBC,OAAQ,CACNC,SAAS,EACTC,SAAU,QAEZnL,OAAQ,CACNoL,QAAS,CACPC,KAAM,EACNC,MAAO,EACP3zB,IAAK,GACL4zB,OAAQ,KAGZC,QAAS,CACPC,cAAe,CACbC,OAAQ,CACN,CACErsB,KAAMjG,EAAKwxB,aACXe,KAAM,CACJ1c,KAAM,KACN2c,OAAQ,kBACRC,OAAQ,QAEVnkB,MAAO,WAET,CACErI,KAAM,QACNssB,KAAM,CACJ1c,KAAM,KACN2c,OAAQ,mBAEVlkB,MAAO,aAIbokB,WAAY,CACVC,OAAQ,MACRC,gBAAe,SAAWC,GACxB,OAAOA,EAAQC,QAAQF,iBAEzBG,YAAa,QACbC,aAAc,GACdC,YAAa,EACb3kB,MAAO,QACPwjB,QAAO,SAAWe,GAGhB,OAFgBA,EAAQC,QACF7uB,KAAK4uB,EAAQK,WACpB,GAEjBX,KAAM,CACJE,OAAQ,QAEVU,UAAS,SAAGn8B,EAAOo8B,OAEXC,EAAWD,EAAIE,MAAMrvB,KAAKovB,SAEhC,GAAIA,EAASnxB,QAAQkxB,EAAIN,WAAaO,EAAS10B,OAAS,EAAG,CACzD,GAAIqB,EAAKixB,gBAAiB,KAClBsC,EAAMF,EAAS,GAAGpvB,KAAKuvB,OAAM,SAAEC,EAAGp+B,GAAM,OAAAo+B,EAAIp+B,GAAG,GAErD,OADmBkkB,KAAKC,MAAOxiB,EAAQu8B,EAAO,KAAO,IAGrD,OAAOv8B,EAGT,OAAO,MAOTgJ,EAAA0zB,sBAAqB,SAAIC,GAC/B3zB,EAAKoxB,kBAAoB,GACzBpxB,EAAKyxB,qBAAuB,MACtBmC,EAA0B,GAC1BtB,EAAmB,GACnBuB,EAAuB,GAG7BF,EAAW9D,UAAUl1B,QAAO,SAACm5B,GAEvBA,EAAG/D,aAAazhB,QAClBtO,EAAKuxB,cAAgBvxB,EAAKuxB,cAAcpf,OAAM,SAACsB,GAAQ,OAAAA,IAASqgB,EAAG/D,aAAazhB,WAIpFqlB,EAAW9D,UAAUl1B,QAAO,SAACqP,OAMvB+pB,EACJ,GANAH,EAAiB78B,KAAKiT,EAASgqB,sBAC/Bh0B,EAAKyxB,qBAAuBzxB,EAAKyxB,qBAAuBznB,EAASgqB,qBACjEh0B,EAAKi0B,yBAA2Bj0B,EAAKi0B,yBAA2BjqB,EAASkqB,uBACzE5B,EAAOv7B,KAAKiT,EAAS+lB,aAAajhB,OAG9B9E,EAAS+lB,aAAazhB,OAAStE,EAAS+lB,aAAazhB,QAAU1C,GAEjEmoB,EAAM/pB,EAAS+lB,aAAazhB,UACvB,KAEC6lB,EAASn0B,EAAKuxB,cAAclvB,MAClC,GAAI8xB,EACFJ,EAAMI,MACD,KAECz9B,EAAoB,SAAhB6iB,KAAK6a,SAEfL,EAAM,IADIM,SAAS39B,EAAEsH,WAAY,GACnBA,SAAS,KAG3B61B,EAAW98B,KAAKg9B,KAGlB/zB,EAAK0xB,qBAAqBG,OAAOC,QAAUQ,EAAO3zB,QAAU,EAC5DqB,EAAKoxB,kBAAoBwC,EACzB5zB,EAAKs0B,oBAAsBhC,EAC3BtyB,EAAKsxB,YAAYv6B,KAAM,CAAE67B,gBAAiBiB,IAC1C7zB,EAAKmxB,aAAc,GAGdnxB,EAAA+I,QAAO,WACZ/I,EAAK+wB,iBAAiBV,mBAAmBrwB,EAAK3B,UAAW2B,EAAK1B,OAAQ0B,EAAK2C,SAASlF,KAClFwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAAC0xB,GAGF,OAFA3vB,EAAKu0B,gBAAkB5E,EACvB3vB,EAAK0zB,sBAAsB/D,GACpBA,KAERpsB,UACC,KAAI,SAAEtM,GAAW+I,EAAKqJ,aAAe,uCAAyCpS,EAAMA,MAAMqS,cA6BlG,OA/NwDC,EAAAA,EAAAA,GAuM/CunB,EAAA96B,UAAAw+B,aAAP,SAAoBzM,OAAEtF,EAAAsF,EAAAtF,MAAOgS,EAAA1M,EAAA0M,OAC3B,GAAIA,EAAO91B,OAAS,EAAG,KACf20B,EAAQmB,EAAO,GAAGC,OAClBC,EAAoBrB,EAAMsB,kBAAkBnS,GAClD,GAAKkS,EAAah2B,OAAS,EAAG,KAEtBk2B,EAAsBF,EAAa,GAAGG,OAC9BxB,EAAMrvB,KAAKquB,OAAOuC,GAElBvB,EAAMrvB,KAAKovB,SAAS,GAAGpvB,KAAK4wB,GAC1C/+B,KAAKy+B,gBAAgB1E,UAAUgF,GAAqBjE,aAAc,EAClE96B,KAAKo7B,iBAAiBpoB,KAAKhT,KAAKy+B,gBAAgB1E,UAAUgF,OAKzD/D,EAAA96B,UAAA++B,aAAP,SAAoBhN,GAAEA,EAAAtF,MAAOsF,EAAA0M,QAI7B3D,EAAA96B,UAAAwT,SAAA,WACE1T,KAAKiT,+BAjORjB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,qCACVC,SAAA,inBAdMwnB,yCA0BL/lB,EAAAA,sBAKAA,EAAAA,0BAKAA,EAAAA,uBAKAA,EAAAA,8BAKAA,EAAAA,+BAKAA,EAAAA,gCAOAC,EAAAA,gCAEAsB,EAAAA,UAAS3D,KAAA,CAAC2tB,EAAAA,mBAAoB,CAAC/pB,UAAQ,OAoL1C6lB,EApOA,CAKwDppB,ICLxDutB,GAAA,SAAA/sB,GA0IE,SAAA+sB,EAAoBlE,GAApB,IAAA/wB,EACEkI,EAAAvR,KAAAb,OAAOA,YADWkK,EAAA+wB,iBAAAA,EA1GX/wB,EAAAgxB,eAAyBhxB,EAAKgxB,eAAiBhxB,EAAKgxB,eAAiB,EAKrEhxB,EAAAixB,kBAAkBjxB,EAAKixB,iBAAkBjxB,EAAKixB,gBAM7CjxB,EAAAk1B,sBAAoE,IAAI5sB,EAAAA,aAM3EtI,EAAAmxB,aAAc,EAGdnxB,EAAAoxB,kBAAkC,GAClCpxB,EAAAqxB,kBAA+B,WAC/BrxB,EAAAsxB,YAAqB,GACrBtxB,EAAAuxB,cAA0B5lB,GAAeuE,QAAQyN,UAKhD3d,EAAAwxB,aAAY,WAClB,OAAOxxB,EAAKyxB,sBAGPzxB,EAAA0xB,qBAA4B,CACjCC,YAAY,EACZC,qBAAqB,EACrBC,OAAQ,CACNE,SAAU,QAEZnL,OAAQ,CACNoL,QAAS,CACPC,KAAM,EACNC,MAAO,EACP3zB,IAAK,GACL4zB,OAAQ,KAGZC,QAAS,CACPC,cAAe,CACbC,OAAQ,CACN,CACErsB,KAAMjG,EAAKwxB,aACXe,KAAM,CACJ1c,KAAM,KACN2c,OAAQ,kBACRC,OAAQ,QAEVnkB,MAAO,WAET,CACErI,KAAM,QACNssB,KAAM,CACJ1c,KAAM,KACN2c,OAAQ,mBAEVlkB,MAAO,aAIbokB,WAAY,CACVC,OAAQ,MACRC,gBAAe,SAAWC,GACxB,OAAOA,EAAQC,QAAQF,iBAEzBG,YAAa,QACbC,aAAc,GACdC,YAAa,EACb3kB,MAAO,QACPwjB,QAAO,SAAWe,GAGhB,OAFgBA,EAAQC,QACF7uB,KAAK4uB,EAAQK,WACpB,GAEjBX,KAAM,CACJE,OAAQ,QAEVU,UAAS,SAAGn8B,EAAOo8B,OAEXC,EAAWD,EAAIE,MAAMrvB,KAAKovB,SAEhC,GAAIA,EAASnxB,QAAQkxB,EAAIN,WAAaO,EAAS10B,OAAS,EAAG,CACzD,GAAIqB,EAAKixB,gBAAiB,KAClBsC,EAAMF,EAAS,GAAGpvB,KAAKuvB,OAAM,SAAEC,EAAGp+B,GAAM,OAAAo+B,EAAIp+B,GAAG,GAErD,OADmBkkB,KAAKC,MAAOxiB,EAAQu8B,EAAO,KAAO,IAGrD,OAAOv8B,EAGT,OAAO,MAYTgJ,EAAA0zB,sBAAqB,SAAIC,EAAiC3V,GAChEhe,EAAKoxB,kBAAoB,GACzBpxB,EAAKyxB,qBAAuB,MACtB0D,EAA8B,GAC9B7C,EAAmB,GACnBuB,EAAuB,GAG7BF,EAAWzD,WAAWv1B,QAAO,SAACy6B,GAExBA,EAAGhF,UAAU9hB,QACftO,EAAKuxB,cAAgBvxB,EAAKuxB,cAAcpf,OAAM,SAACsB,GAAQ,OAAAA,IAAS2hB,EAAGhF,UAAU9hB,WAIjFqlB,EAAWzD,WAAWv1B,QAAO,SAACmjB,OAKxBiW,EACJ,GALE/zB,EAAKyxB,qBAAuBzxB,EAAKyxB,qBAAuB3T,EAAUuX,UAClEF,EAAkBp+B,KAAK+mB,EAAUuX,WACjC/C,EAAOv7B,KAAK+mB,EAAUsS,UAAUthB,OAG9BgP,EAAUsS,UAAU9hB,OAASwP,EAAUsS,UAAU9hB,QAAU1C,GAE7DmoB,EAAMjW,EAAUsS,UAAU9hB,UACrB,KAEC6lB,EAASn0B,EAAKuxB,cAAclvB,MAClC,GAAI8xB,EACFJ,EAAMI,MACD,KAECz9B,EAAoB,SAAhB6iB,KAAK6a,SAEfL,EAAM,IADIM,SAAS39B,EAAEsH,WAAY,GACnBA,SAAS,KAG3B61B,EAAW98B,KAAKg9B,KAElB/zB,EAAKoxB,kBAAkBr6B,KAAKo+B,GAC5Bn1B,EAAKs0B,oBAAsBhC,EAC3BtyB,EAAKsxB,YAAYv6B,KAAM,CAAE67B,gBAAiBiB,IAE1C7zB,EAAK0xB,qBAAqBG,OAAOC,QAAUQ,EAAO3zB,QAAU,EAC5DqB,EAAKmxB,aAAc,GAGdnxB,EAAA+I,QAAO,WACZ/I,EAAK+wB,iBAAiBJ,uBAAuB3wB,EAAK3B,UAAW2B,EAAKV,MAAOU,EAAK5G,QAAQ,EAAO4G,EAAK2C,SAASlF,KACzGwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAAC0xB,GAGF,OAFA3vB,EAAK6wB,oBAAsBlB,EAC3B3vB,EAAK0zB,sBAAsB/D,EAAQ3R,QAC5B2R,KAERpsB,UACC,KAAI,SAAEtM,GAAW+I,EAAKqJ,aAAe,uCAAyCpS,EAAMA,MAAMqS,cAmClG,OApO+DC,EAAAA,EAAAA,GAsMtD0rB,EAAAj/B,UAAAw+B,aAAP,SAAoBzM,OAAEtF,EAAAsF,EAAAtF,MAAOgS,EAAA1M,EAAA0M,OAC3B,GAAIA,EAAO91B,OAAS,EAAG,KACf20B,EAAQmB,EAAO,GAAGC,OAClBC,EAAoBrB,EAAMsB,kBAAkBnS,GAClD,GAAKkS,EAAah2B,OAAS,EAAG,KAEtBk2B,EAAsBF,EAAa,GAAGG,OACtChmB,EAAQwkB,EAAMrvB,KAAKquB,OAAOuC,GAE1B79B,EAAQs8B,EAAMrvB,KAAKovB,SAAS,GAAGpvB,KAAK4wB,GAC1CpxB,QAAQC,IAAImxB,EAAqB/lB,EAAO9X,GACxClB,KAAKo/B,sBAAsBpsB,KAAKhT,KAAK+6B,oBAAoBX,WAAW2E,GAAqBzE,cAKxF6E,EAAAj/B,UAAA++B,aAAP,SAAoBhN,GAAEA,EAAAtF,MAAOsF,EAAA0M,QAK7BQ,EAAAj/B,UAAAwT,SAAA,aAGAyrB,EAAAj/B,UAAAoa,YAAA,SAAYC,GACNA,EAAQ/Q,QAAU+Q,EAAQilB,aAAgBjlB,EAAQ/Q,MAAMiR,eAAiBF,EAAQ/Q,MAAMkR,gBACzF1a,KAAKiT,+BArOVjB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,8CACVC,SAAA,qlBAdMwnB,yCAwBL/lB,EAAAA,qBAKAA,EAAAA,sBAKAA,EAAAA,uBAKAA,EAAAA,8BAKAA,EAAAA,+BAKAA,EAAAA,qCAMAC,EAAAA,UA8LHurB,EAzOA,CAK+DvtB,ICF/D6tB,GAAA,SAAArtB,GAAA,SAAAqtB,IAAA,IAAAv1B,EAAA,OAAAkI,GAAAA,EAAAstB,MAAA1/B,KAAA03B,YAAA13B,YA8BWkK,EAAAgxB,eAAyBhxB,EAAKgxB,eAAiBhxB,EAAKgxB,eAAiB,EAKrEhxB,EAAAixB,kBAAkBjxB,EAAKixB,iBAAkBjxB,EAAKixB,gBAM7CjxB,EAAAkxB,iBAAuD,IAAI5oB,EAAAA,aAM3DtI,EAAAk1B,sBAAoE,IAAI5sB,EAAAA,aAQ3EtI,EAAAy1B,uBAAsB,SAAIC,GAC/B11B,EAAK21B,uBAAyBD,EAC9B11B,EAAKkxB,iBAAiBpoB,KAAK4sB,IAGtB11B,EAAA41B,4BAA2B,SAAIC,GACpC71B,EAAKk1B,sBAAsBpsB,KAAK+sB,IAG3B71B,EAAA81B,sBAAqB,WAC1B91B,EAAK21B,uBAAyBv7B,WAGzB4F,EAAA+I,QAAO,WACR/I,EAAK+1B,iBACP/1B,EAAK+1B,gBAAgBhtB,UAEnB/I,EAAKg2B,oBACPh2B,EAAKg2B,mBAAmBjtB,aAI9B,OAxEwDQ,EAAAA,EAAAA,uBALvDzB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,qCACVC,SAAA,srFAQCyB,EAAAA,sBAKAA,EAAAA,0BAKAA,EAAAA,uBAKAA,EAAAA,8BAKAA,EAAAA,+BAKAA,EAAAA,gCAMAC,EAAAA,sCAMAA,EAAAA,gCAGAsB,EAAAA,UAAS3D,KAAA,CAACypB,GAAoC,CAAC7lB,UAAQ,gCACvDD,EAAAA,UAAS3D,KAAA,CAAC4tB,GAA2C,CAAChqB,UAAQ,OA0BjEsqB,EA7EA,CAKwD7tB,ICCxDuuB,GAAA,WAiFE,SAAAA,EAAsBrkB,EAA8C2F,EAA6BuT,GAAjG,IAAA9qB,EAAAlK,KAAsBA,KAAA8b,cAAAA,EAA8C9b,KAAAyhB,OAAAA,EAA6BzhB,KAAAg1B,aAAAA,EArBvFh1B,KAAAq1B,YAAyC,IAAI7iB,EAAAA,aAShDxS,KAAAkc,eAAkC,GAIzClc,KAAAs1B,iBAAkB,EAClBt1B,KAAAw1B,kBAAmB,EAEZx1B,KAAAuV,gBAAe,SAAIC,GAExBtL,EAAKmrB,YAAYriB,KAAK,IAAIkjB,EAAAA,YAAY,cAAe1gB,KAK7CxV,KAAAgd,qBAAoB,eACtBI,EAAU,GAIhB,GAAIlT,EAAKorB,gBAAiB,KAClBM,EAAe1rB,EAAK4R,cAAcoB,aAAa,SAAU,oBAAoB,EAAM,UAAWhT,EAAKkqB,QAASlqB,EAAK8qB,aAAaF,YAAY,YAAa5qB,EAAKmG,MAAOnG,EAAKkqB,SAAiB,GAC/LhX,EAAQnc,KAAK20B,GAEf,GAAI1rB,EAAKsrB,iBAAkB,KACnBO,EAAgB7rB,EAAK4R,cAAcoB,aAAa,UAAW,oBAAoB,EAAM,WAAYhT,EAAKkqB,QAASlqB,EAAK8qB,aAAaF,YAAY,UAAW5qB,EAAKmG,MAAOnG,EAAKkqB,SAAiB,GAChMhX,EAAQnc,KAAK80B,GAEf,OAAO3Y,GAGFpd,KAAA4d,yBAAwB,SAAIuW,GAChB,WAAbA,GACFjqB,EAAKmrB,YAAYriB,KAAK,IAAIkjB,EAAAA,YAAY,gBAAiB,OAExC,YAAb/B,GACFjqB,EAAK+I,WAIFjT,KAAAogC,0BAAyB,SAAI3rB,GAgBlCvK,EAAKm2B,kBAAkB5rB,EAAanQ,UAAW4F,EAAK3B,UAAW2B,EAAK2uB,iBAG/D74B,KAAAsgC,8BAA6B,SAAIC,GACtCr2B,EAAKs2B,6BAA+BD,GAG/BvgC,KAAAygC,mCAAkC,SAAIn6B,GACvC4D,EAAKs2B,8BACPt2B,EAAKw2B,gBAAgBlQ,mBAAmBlgB,OAAOhK,EAAM6C,IAAK7C,EAAM0S,MAAO9O,EAAKs2B,6BAA6Bp9B,cAAe8G,EAAKs2B,6BAA6BvG,aAAa9wB,GAAIe,EAAKs2B,6BAA6BvG,aAAajhB,MAAQ,IAAM1S,EAAM0S,QAIlPhZ,KAAAqgC,kBAAiB,SAAI5rB,EAAuBmkB,EAAarwB,EAAWswB,GAChD3uB,EAAKuX,OAAOQ,KAAK6W,GAAgC,CACjE3W,MAAO,MACPC,OAAQ,MACRue,SAAU,QACVC,UAAW,QACXC,WAAY,mBACZ1yB,KAAM,IAAIwqB,GAA4BlkB,EAAamkB,EAAarwB,EAAWswB,KAGnExW,cAAc5U,UAAS,SAACiC,GAC5BA,GACFxF,EAAKmrB,YAAYriB,KAAK,IAAIkjB,EAAAA,YAAY,cAAexmB,OAKpD1P,KAAAiT,QAAO,WACR/I,EAAK42B,oBACP52B,EAAK42B,mBAAmB7tB,UAEtB/I,EAAK62B,kBACP72B,EAAK62B,iBAAiB9tB,UAEpB/I,EAAKw2B,iBACPx2B,EAAKw2B,gBAAgBztB,UAEnB/I,EAAK82B,wBACP92B,EAAK82B,uBAAuB/tB,UAE1B/I,EAAK+2B,oBACP/2B,EAAK+2B,mBAAmBhuB,UAEtB/I,EAAKg3B,sBACPh3B,EAAKg3B,qBAAqBjuB,WAShC,OALEktB,EAAAjgC,UAAAwT,SAAA,WACE1T,KAAKkc,eAAiBlc,KAAKkc,eAAeO,OAAOzc,KAAKgd,wBACtDhd,KAAKmhC,uBAAwBnhC,KAAKo0B,QAASp0B,KAAKg1B,aAAaF,YAAY,YAAa90B,KAAKqQ,MAAOrQ,KAAKo0B,6BAjL1GpiB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,8BACVC,SAAA,oiHAzBqB+L,EAAAA,8BAIEoG,EAAAA,iBAKjBwP,uCAuBLlgB,EAAAA,sBAKAA,EAAAA,yBAKAA,EAAAA,wBAKAA,EAAAA,sBAKAA,EAAAA,qBAKAA,EAAAA,qBAKAA,EAAAA,qBAKAA,EAAAA,sBAKAA,EAAAA,8BAKAA,EAAAA,2BAMAC,EAAAA,mCAEAsB,EAAAA,UAAS3D,KAAA,CAACma,GAAgC,CAACvW,UAAQ,8BACnDD,EAAAA,UAAS3D,KAAA,CAAC6d,GAA8B,CAACja,UAAQ,6BACjDD,EAAAA,UAAS3D,KAAA,CAAC2e,GAA+B,CAAC/a,UAAQ,oCAClDD,EAAAA,UAAS3D,KAAA,CAACsK,GAAwB,CAAC1G,UAAQ,gCAC3CD,EAAAA,UAAS3D,KAAA,CAACgQ,GAA4B,CAACpM,UAAQ,kCAC/CD,EAAAA,UAAS3D,KAAA,CAACkuB,GAAoC,CAACtqB,UAAQ,OAiH1DgrB,EApLA,GCvBAiB,GAAA,WAAA,SAAAA,KAWA,OAJEA,EAAAlhC,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJs/B,EAXA,iBAaA,SAAAC,KAOA,OAJEA,EAAAnhC,UAAA2B,YAAA,SAAYC,GAEV,OADAtC,OAAOuC,OAAM,KAAOD,GACpB,MAEJu/B,KCtBAC,GAAA,WAYE,SAAAA,EAAoBp6B,EAA4BC,GAA5BnH,KAAAkH,SAAAA,EAA4BlH,KAAAmH,mBAAAA,SAGzCm6B,EAAAphC,UAAAqhC,qBAAP,SAA4Bh5B,EAAmBsE,EAAiB20B,OACxD10B,EAASD,EAAU,mDACnBM,EAA8B,IAAInB,EAAAA,mBAGxC,OAFAmB,EAAQjB,KAAOM,EAAAA,sBAAsBC,aAAarI,KAAKsI,UAAU80B,IAE1DxhC,KAAKmH,mBAAmBuG,kBAAkBZ,EAAQ,SAAU,GAAIvE,EAAWjE,UAAWA,UAAWA,UAAW6I,GAChHxF,KACCQ,EAAAA,IAAG,SAACjH,GAAS,OAAAA,MAIZogC,EAAAphC,UAAAuhC,kBAAP,SAAyB50B,EAAiBnE,EAAmBuP,OAErDnL,EAASD,EAAU,mDAEzB,OAAO7M,KAAKmH,mBAAmB6F,eAAeF,EAAQ,SAAUpE,EAAUuP,GACvEtQ,KACCQ,EAAAA,IAAG,SAACjH,GACA,GAAIA,EAAMgM,mBAAmBrE,OAAS,EAAG,KACjCqP,GAAW,IAAIkpB,IAAiBv/B,YAAYuC,KAAKC,MAAMnD,EAAMgM,mBAAmB,GAAGC,QAAQjB,OAEjG,OADAgM,EAAS/O,GAAKjI,EAAMgM,mBAAmB,GAAG/D,GACnC+O,EAEP,OAAO5T,cAOZg9B,EAAAphC,UAAAwhC,qBAAP,SAA4Bn5B,EAAmBsE,EAAiB20B,EAAgCr4B,GAAhG,IAAAe,EAAAlK,KACQ8M,EAASD,EAAU,mDACnBM,EAA8B,IAAInB,EAAAA,mBACxCmB,EAAQjB,KAAOM,EAAAA,sBAAsBC,aAAarI,KAAKsI,UAAU80B,QAC3DjrB,EAA0B,IAAIC,EAAAA,iBACpCD,EAAMpJ,QAAUA,EAChBoJ,EAAMhO,UAAYA,EAClBgO,EAAME,KAAO3J,EACbyJ,EAAMG,KAAO,SACbH,EAAMpN,GAAKA,MACLwN,EAA0B,IAAIC,EAAAA,gBAIpC,OAHAD,EAAOzJ,mBAAqB,GAC5ByJ,EAAOzJ,mBAAmBjM,KAAKsV,GAExBvW,KAAKmH,mBAAmBqG,kBAAkBmJ,EAAOzJ,oBACrDvF,KACCQ,EAAAA,IAAG,SAACjH,GAGF,OADAgJ,EAAKu3B,kBAAkB50B,GAAS,GAAM,GAAMY,aACrC,IAAI2zB,IAAiBv/B,YAAauC,KAAKC,MAAMnD,EAAMgM,mBAAmB,GAAGC,QAAQjB,+BAzDjGoF,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDALNE,EAAAA,gBACAC,EAAAA,0LAJR,GCaAgwB,GAAA,SAAAvvB,GAAA,SAAAuvB,IAAA,IAAAz3B,EAAA,OAAAkI,GAAAA,EAAAstB,MAAA1/B,KAAA03B,YAAA13B,YAWWkK,EAAA03B,eAA2B,GAM1B13B,EAAA23B,aAAyC,IAAIrvB,EAAAA,aAM7CtI,EAAA43B,eAAyC,IAAItvB,EAAAA,aAKvDtI,EAAA63B,mBAAkB,SAAIjvB,GACpB5I,EAAK23B,aAAa7uB,KAAKF,OACjBkvB,EAAS,GACflvB,EAAejO,QAAO,SAAE+6B,GACtBoC,EAAO/gC,KAAK2+B,EAASx8B,iBAEvB8G,EAAK43B,eAAe9uB,KAAKgvB,IAG3B93B,EAAA+3B,gBAAe,WACb/3B,EAAKg4B,kBAAoBh4B,EAAKuI,aAAa3O,UAC3CoG,EAAK43B,eAAe9uB,KAAK9I,EAAKi4B,UAAUj4B,EAAKg4B,oBAC7Ch4B,EAAK23B,aAAa7uB,KAAK9I,EAAKuI,aAAa3O,YAG3CoG,EAAAk4B,kBAAiB,WACfl4B,EAAKg4B,kBAAoB,GACzBh4B,EAAK43B,eAAe9uB,KAAK,IACzB9I,EAAK23B,aAAa7uB,KAAK,KAGjB9I,EAAAi4B,UAAS,SAAIr+B,OACbk+B,EAAS,GAIf,OAHAl+B,EAAUe,QAAO,SAAE+6B,GACjBoC,EAAO/gC,KAAK2+B,EAASx8B,iBAEhB4+B,GAGF93B,EAAA+I,QAAO,SAAIC,GAChBhJ,EAAKmI,SAAS/J,gBAAgB4B,EAAK3B,UAAW2B,EAAK1B,OAAQ,IAAK0K,GAC7DvL,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACkL,GACFnJ,EAAKuI,aAAeY,EAEhBnJ,EAAKoI,aAAepI,EAAKoI,YAAYlP,cACvC8G,EAAKoI,YAAce,EAAgBvP,UAAU8O,KAAI,SAAE5H,GACjD,OAAOA,EAAS5H,gBAAkB8G,EAAKoI,YAAYlP,gBAG5C8G,EAAK03B,gBAAkB13B,EAAK03B,eAAe/4B,OAAS,IAE7DqB,EAAKg4B,kBAAoBh4B,EAAKuI,aAAa3O,UAAUuY,OAAM,SAACrR,GAC1D,OAGO,IAHCd,EAAK03B,eAAelkB,UAAS,SAAEsgB,GACrC,OAAOA,IAAOhzB,EAAS5H,sBAOhCqK,UAAU,KAAI,SAAEtM,GAAW+I,EAAKqJ,aAAe,kCAAoCpS,EAAMA,MAAMqS,cActG,OA1FsDC,EAAAA,EAAAA,GA+EpDkuB,EAAAzhC,UAAAoa,YAAA,SAAYC,GAENA,EAAQqnB,gBAAmBrnB,EAAQqnB,eAA0B,aAC/D5hC,KAAKiT,SAAQ,IAKjB0uB,EAAAzhC,UAAAwT,SAAA,iCA5FD1B,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,kCACVC,SAAA,2+BAICgD,EAAAA,UAAS3D,KAAA,CAAE8wB,EAAAA,iBAAkB,CAACltB,UAAQ,4BAKtCxB,EAAAA,4BAMAC,EAAAA,+BAMAA,EAAAA,UAwEH+tB,EA/FA,CAKsDxvB,ICNtDmwB,GAAA,SAAAlwB,GAAA,SAAAkwB,IAAA,IAAAp4B,EAAA,OAAAkI,GAAAA,EAAAstB,MAAA1/B,KAAA03B,YAAA13B,YAOSkK,EAAAk2B,0BAAyB,SAAI3rB,GAClCvK,EAAKqI,UAAUS,KAAKyB,IAGfvK,EAAAq4B,sBAAqB,WAEiB,IAAvCr4B,EAAKuI,aAAa3O,UAAU+E,QAG9BqB,EAAKk2B,0BAA0Bl2B,EAAKuI,aAAa3O,UAAU,OAGjE,OAd8D2P,EAAAA,EAAAA,uBAL7DzB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,2CACVC,SAAA,wqBAiBFowB,EAnBA,CAK8DnwB,ICD9DqwB,GAAA,SAAApwB,GAeE,SAAAowB,EAAsBrP,EAAiCsP,EAA0DC,GAAjH,IAAAx4B,EACEkI,EAAAvR,KAAAb,OAAOA,YADakK,EAAAipB,MAAAA,EAAiCjpB,EAAAu4B,sBAAAA,EAA0Dv4B,EAAAw4B,SAAAA,EARjHx4B,EAAAy4B,cAAgB,gDAqBTz4B,EAAA04B,uBAAsB,WAG3BpgB,OAAOP,KAAK/X,EAAKy4B,gBAWZz4B,EAAA24B,gBAAe,eACdC,GAAiB,IAAI1B,IAAiBv/B,YAAY,CACtDkhC,eAAgB74B,EAAK03B,eACrBoB,kBAAmB94B,EAAK44B,eAAeE,kBACvCC,cAAe/4B,EAAK44B,eAAeG,cACnCC,mBAAoBh5B,EAAK44B,eAAeG,gBAE1C/4B,EAAKu4B,sBAAsBf,qBAAqBx3B,EAAK3B,UAAW2B,EAAKi5B,cAAct2B,QAASi2B,EAAgB54B,EAAK44B,eAAe35B,IAAIsE,UAAS,SACzIiC,GACIxF,EAAKw4B,SAASzgB,KAAK,uDAAwD,KAAM,CAC7EmhB,SAAU,OAEjB,SACDjiC,GACI+I,EAAKw4B,SAASzgB,KAAK,qDAAsD,KAAM,CAC3EmhB,SAAU,WAK1B,OAzD+C3vB,EAAAA,EAAAA,GAcnC+uB,EAAAtiC,UAAAmjC,yBAAV,WACE,OAAOrjC,KAAKyiC,uBAGPD,EAAAtiC,UAAAojC,qBAAP,SAA4B96B,GAC1BmF,QAAQC,IAAI,aAAcpF,GAC1BxI,KAAK4hC,eAAiBp5B,GASjBg6B,EAAAtiC,UAAAwT,SAAP,WACE1T,KAAKmjC,cAAgBnjC,KAAKmzB,MAAMoQ,SAASp1B,KAAKq1B,eAAeL,cAC7DnjC,KAAK8iC,eAAiB9iC,KAAKmzB,MAAMoQ,SAASp1B,KAAKq1B,eAAeV,eAC9D9iC,KAAKqzB,OAASrzB,KAAKmzB,MAAMoQ,SAASp1B,KAAKklB,OACvCrzB,KAAKuI,UAAY+H,OAAOtQ,KAAKqzB,OAAON,yBAAyB5pB,IAAIs6B,UACjEzjC,KAAK4hC,eAAiB5hC,KAAK8iC,eAAeC,oCAvC7C/wB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,0BACVC,SAAA,k5CAhBMwxB,EAAAA,sBAEApC,UAECqC,EAAAA,eAwETnB,EA9DA,CAK+C5wB,ICD/CgyB,GAAA,SAAAxxB,GAUE,SAAAwxB,EAAoB/oB,EAAwDgpB,EAAkCC,EAA6DpB,GAA3K,IAAAx4B,EACEkI,EAAAvR,KAAAb,KAAM6jC,EAAUC,EAA0BpB,IAAS1iC,YADjCkK,EAAA2Q,sBAAAA,EAAwD3Q,EAAA25B,SAAAA,EAAkC35B,EAAA45B,yBAAAA,EAA6D55B,EAAAw4B,SAAAA,EAIpKx4B,EAAAsuB,oBAAmB,SAAIpO,GAC5BlgB,EAAKkgB,eAAiBA,EACtBzc,QAAQC,IAAIwc,IAGPlgB,EAAA63B,mBAAkB,SAAIttB,GAC3BvK,EAAKoI,YAAcmC,GAGdvK,EAAA24B,gBAAe,WACpB34B,EAAK2Q,sBAAsB/C,qBAAqB5N,EAAK3B,UAAW2B,EAAKoI,YAAYlP,cAAe8G,EAAKi5B,cAAct2B,QAAS3C,EAAKkgB,gBAC9HziB,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACiiB,GACFlgB,EAAKkgB,eAAiBA,KAExB3c,UAAS,SACPiC,GACIxF,EAAKw4B,SAASzgB,KAAK,+BAAgC,KAAM,CACrDmhB,SAAU,OAEjB,SACDjiC,GACI+I,EAAKw4B,SAASzgB,KAAK,sCAAuC,KAAM,CAC5DmhB,SAAU,MAEdz1B,QAAQC,IAAI,sCAAwCzM,EAAMqS,eAKxE,OAzC2DC,EAAAA,EAAAA,uBAL1DzB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,wCACVC,SAAA,4oCAlBMgE,UAGAwtB,EAAAA,sBACApC,UAECqC,EAAAA,eAwDTC,EA9CA,CAK2DpB,ICT3DuB,GAAA,SAAA3xB,GAAA,SAAA2xB,IAAA,IAAA75B,EAAA,OAAAkI,GAAAA,EAAAstB,MAAA1/B,KAAA03B,YAAA13B,YAOEkK,EAAAy4B,cAAgB,gDAaTz4B,EAAA24B,gBAAe,eACdC,GAAiB,IAAI1B,IAAiBv/B,YAAY,CACtDkhC,eAAgB74B,EAAK03B,eACrBoC,qBAAsB95B,EAAK+5B,iBAC3BjB,kBAAmB94B,EAAK44B,eAAeE,kBACvCC,cAAe/4B,EAAK44B,eAAeG,cACnCC,mBAAoBh5B,EAAK44B,eAAeG,gBAG1C7wB,EAAAlS,UAAMmjC,yBAAwBxiC,KAAAqJ,GAAGw3B,qBAAqBx3B,EAAK3B,UAAW2B,EAAKi5B,cAAct2B,QAASi2B,EAAgB54B,EAAK44B,eAAe35B,IAAIsE,UAAS,SAC/IiC,GACIxF,EAAKw4B,SAASzgB,KAAK,8BAA+B,KAAM,CACpDmhB,SAAU,OAEjB,SACDjiC,GACI+I,EAAKw4B,SAASzgB,KAAK,qCAAsC,KAAM,CAC3DmhB,SAAU,WAK1B,OArC0D3vB,EAAAA,EAAAA,GAMjDswB,EAAA7jC,UAAAgkC,kCAAP,SAAyC17B,GACvCxI,KAAKikC,iBAAmBz7B,GAGnBu7B,EAAA7jC,UAAAwT,SAAP,WACEtB,EAAAlS,UAAMwT,SAAQ7S,KAAAb,MACdA,KAAKikC,iBAAmBjkC,KAAK8iC,eAAekB,0CAjB/ChyB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,uCACVC,SAAA,03CAwCF6xB,EA1CA,CAK0DvB,ICR1D2B,GAAA,SAAA/xB,GAYI,SAAA+xB,EAAsBhR,EAAiCiR,EAAwD1B,EAA+BjhB,GAA9I,IAAAvX,EACIkI,EAAAvR,KAAAb,KAAMmzB,EAAOiR,EAAsB1B,IAAS1iC,YAD1BkK,EAAAipB,MAAAA,EAAiCjpB,EAAAk6B,qBAAAA,EAAwDl6B,EAAAw4B,SAAAA,EAA+Bx4B,EAAAuX,OAAAA,EAY9IvX,EAAAm6B,mBAAkB,WACdn6B,EAAKi5B,cAAc9yB,MAAQnG,EAAKi5B,cAAc9yB,MAAMgM,OAAM,SAACqe,GAAW,OAAAA,EAAQvxB,IAAMe,EAAK4pB,YAAY3qB,MAGzGe,EAAAo6B,aAAY,SAAIrQ,GACZ/pB,EAAK4pB,YAAcG,GAGvB/pB,EAAAq6B,mBAAkB,WACIr6B,EAAKuX,OAAOQ,KAAKuiB,EAAAA,8BAA+B,CAC9DriB,MAAO,MACPC,OAAQ,MACRue,SAAU,QACVC,UAAW,QACXC,WAAY,mBACZ1yB,KAAM,CAAEs2B,aAAc,UAIhBpiB,cAAc5U,UAAS,SAACiC,GAC9B,GAAIA,EAAQ,KACFg1B,GAAU,IAAIC,EAAAA,eAAgB9iC,YAAY,CAACsH,GAAIuG,EAAOvG,GAAI6yB,QAAStsB,EAAO+G,KAAMmuB,SAAU,IAChG16B,EAAKi5B,cAAc9yB,MAAMpP,KAAKyjC,SAI9C,OA7CoDjxB,EAAAA,EAAAA,GAWhD0wB,EAAAjkC,UAAAwT,SAAA,WACI1T,KAAKmjC,cAAgB/wB,EAAAlS,UAAM2kC,SAAQhkC,KAAAb,MAAGujC,SAASp1B,KAAK22B,oBACpD9kC,KAAKqQ,MAAQ+B,EAAAlS,UAAM2kC,SAAQhkC,KAAAb,MAAGujC,SAASp1B,KAAK42B,SAC5C/kC,KAAKoR,OAASgB,EAAAlS,UAAM2kC,SAAQhkC,KAAAb,MAAGujC,SAASp1B,KAAK62B,UAC7ChlC,KAAKqzB,OAASjhB,EAAAlS,UAAM2kC,SAAQhkC,KAAAb,MAAGujC,SAASp1B,KAAKklB,OAC7CrzB,KAAKuI,UAAY+H,OAAOtQ,KAAKqzB,OAAON,yBAAyB5pB,IAAIs6B,+BArBxEzxB,EAAAA,UAAST,KAAA,CAAC,CACPU,SAAU,gCACVC,SAAA,+wGAZKwxB,EAAAA,sBAFmDuB,EAAAA,8BAGnDtB,EAAAA,mBAAatf,EAAAA,aA2DtB8f,EAlDA,CAKoDe,EAAAA,oCCTpDC,GAAA,WAwBE,SAAAA,IAAA,IAAAj7B,EAAAlK,KAHUA,KAAAolC,gBAA+C,IAAI5yB,EAAAA,aAQpDxS,KAAAqlC,WAAU,SAAIpR,GACjB/pB,EAAKk7B,gBAAgBpyB,KAAKihB,IAG9Bj0B,KAAAslC,eAAc,SAAIC,EAAmBC,GACjC,OAAOD,EAAGp8B,KAAOq8B,EAAGr8B,IAE5B,OAVIg8B,EAAAjlC,UAAAwT,SAAA,iCA1BH1B,EAAAA,UAAST,KAAA,CAAC,CACPU,SAAU,+BACVC,SAAA,mbAQDyB,EAAAA,4BAKAA,EAAAA,+BAMAC,EAAAA,UAeHuxB,EApCA,GCSAM,GAAA,SAAArzB,GAmCE,SAAAqzB,EAAsBpzB,EAAqCuc,GAA3D,IAAA1kB,EACEkI,EAAAvR,KAAAb,OAAOA,YADakK,EAAAmI,SAAAA,EAAqCnI,EAAA0kB,qBAAAA,EAVjD1kB,EAAAw7B,eAAmD,IAAIlzB,EAAAA,aAc1DtI,EAAA+I,QAAO,WACZ/I,EAAK0kB,qBAAqBL,gBAAgBrkB,EAAK3B,UAAW2B,EAAKV,MAAOU,EAAK5G,QACxEqE,KACCwL,EAAAA,KAAK,GACLC,EAAAA,UAAUlJ,EAAK2H,aACf1J,EAAAA,IAAG,SAACqmB,GACFtkB,EAAKskB,aAAeA,EAAahpB,SACA,IAA7B0E,EAAKskB,aAAa3lB,QACpBqB,EAAKy7B,cAAcz7B,EAAKskB,aAAa,OAGzC/gB,UACF,KAAI,SAAEtM,GAAW+I,EAAKqJ,aAAe,kCAAoCpS,EAAMA,MAAMqS,cA6B3F,OA3EmDC,EAAAA,EAAAA,GAiD1CgyB,EAAAvlC,UAAAylC,cAAP,SAAqBhY,GAArB,IAAAzjB,EAAAlK,KACEA,KAAK4uB,qBAAqBF,kBAAkB,KAAM1uB,KAAKwJ,MAAOxJ,KAAKsD,OAAQtD,KAAKuI,UAAW,KAAMolB,EAAS,KAAKhmB,KAC7GwL,EAAAA,KAAK,GACLC,EAAAA,UAAUpT,KAAK6R,aACfjK,EAAAA,IAAG,SAACsnB,GACGA,GAAmBA,EAAe/B,SAA0D,aAA9C+B,EAAe/B,QAAQ3H,WAAWwI,SAKjFrgB,QAAQxM,MAAM,2KAIpBgH,EAAAA,IAAG,SAACgnB,GAEF,OADAjlB,EAAKw7B,eAAe1yB,KAAKmc,GAClBA,KAGV1hB,UAAU,KAAI,SAAEtM,GAAW+I,EAAKqJ,aAAe,kCAAoCpS,EAAMA,MAAMqS,YAGlGiyB,EAAAvlC,UAAAwT,SAAA,WACE1T,KAAKiT,+BA7ERjB,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,+BACVC,SAAA,y3CAhBMlL,UAKAqmB,qCAkBL1Z,EAAAA,sBAKAA,EAAAA,yBAKAA,EAAAA,8BAMAC,EAAAA,UAuDH6xB,EAhFA,CAKmD7zB,ICvBnDg0B,GAAA,WAGA,SAAAA,KAYA,OAPEA,EAAA1lC,UAAAupB,UAAA,SAAUvoB,EAAYyc,GAIpB,OADAzc,GADAA,EAAQA,EAAM8Y,QAAQ,aAAc2D,EAAKkoB,OAAO3kC,QAClC8Y,QAAQ,aAAc2D,EAAKmoB,OAAO5kC,4BARnD6kC,EAAAA,KAAIx0B,KAAA,CAAC,CACJkF,KAAM,wBAWRmvB,EAfA,GCcAI,GAAA,SAAA5zB,GAAA,SAAA4zB,IAAA,IAAA97B,EAAA,OAAAkI,GAAAA,EAAAstB,MAAA1/B,KAAA03B,YAAA13B,YAcWkK,EAAA+I,QAAO,WAEV/I,EAAKmI,SAASxH,kBAAkBX,EAAK3B,UAAW2B,EAAKV,MAAO,KAAK7B,KAC7DQ,EAAAA,IAAG,SAAC2kB,GAEAA,EAAOhpB,UAAUe,QAAO,SAAEmG,GAGlBA,EAAS5H,gBAAkB8G,EAAKV,OAASwB,EAAS7B,KAAOe,EAAK5G,SAC1D0H,EAASwa,aAAelhB,UAExB4F,EAAK+7B,eAAiBj7B,EAAS3F,QAAU2F,EAAS3F,QAAU,GAK5DsI,QAAQxM,MAAM,2GAOhCsM,aAUNvD,EAAAo7B,eAAc,SAAIC,EAASC,GACvB,OAAOD,EAAGp8B,KAAOe,EAAKg8B,mBAwB9B,OAnEsDzyB,EAAAA,EAAAA,GAmClDuyB,EAAA9lC,UAAAoa,YAAA,SAAYC,GACJA,EAAQ/Q,OAAU+Q,EAAQ/Q,MAAMiR,eAAiBF,EAAQ/Q,MAAMkR,gBAC/D1a,KAAKimC,eAAiB,GACtBjmC,KAAKiT,YAQN+yB,EAAA9lC,UAAA+uB,aAAP,SAAoBrN,GAApB,IAAA1X,EAAAlK,KACIA,KAAK4uB,qBAAqBF,kBAAkB1uB,KAAK6J,QAAS7J,KAAKwJ,MAAOxJ,KAAKsD,OAAQtD,KAAKuI,UAAWqZ,EAAQ,KAAM,KAAKja,KAClHwL,EAAAA,KAAK,GACLC,EAAAA,UAAUpT,KAAK6R,aACfjK,EAAAA,IAAG,SAACsnB,GACKA,GAAmBA,EAAe/B,SAKnCxf,QAAQxM,MAAM,yIAItBgH,EAAAA,IAAG,SAACgnB,GAEA,OADAjlB,EAAK4kB,cAAc9b,KAAKmc,GACjBA,KAGV1hB,UAAU,KAAI,SAAEtM,GAAW+I,EAAKqJ,aAAe,kCAAoCpS,EAAMA,MAAMqS,gCAtE3GxB,EAAAA,UAAST,KAAA,CAAC,CACPU,SAAU,mCACVC,SAAA,mxCAODyB,EAAAA,SA+DHqyB,EAxEA,CAKsDrX,ICNtDwX,GAAA,WA4BE,SAAAA,EAAoBvsB,EAAiC4H,EAA6Cta,GAA9ElH,KAAA4Z,UAAAA,EAAiC5Z,KAAAwhB,iBAAAA,EAA6CxhB,KAAAkH,SAAAA,EAOpG,OALEi/B,EAAAjmC,UAAAwT,SAAA,eACQ0yB,EAAc55B,EAAAA,sBAAsB65B,+BAA+BrmC,KAAKkH,SAAUlH,KAAKwhB,iBAAiBlB,kBAAkBtgB,KAAKkf,WAAYlf,KAAKmf,SAAUnf,KAAKuf,SAAS9I,KAAMzW,KAAKuf,SAAS+C,gBAAiBtiB,KAAKuI,YACxNvI,KAAKsmC,qBAAuBtmC,KAAK4Z,UAAU2sB,+BAA+BH,wBAhC7Ep0B,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,iCACVC,SAAA,+LAdMyI,EAAAA,oBAEA6D,UAEA9M,EAAAA,8CAiBLiC,EAAAA,0BAKAA,EAAAA,wBAKAA,EAAAA,yBAKAA,EAAAA,SAWHwyB,EAnCA,GCEAK,GAAA,WAcI,SAAAA,EACYt/B,EACAisB,EACAF,EACAwT,EACAzR,GALZ,IAAA9qB,EAAAlK,KACYA,KAAAkH,SAAAA,EACAlH,KAAAmzB,MAAAA,EACAnzB,KAAAizB,OAAAA,EACAjzB,KAAAymC,mBAAAA,EACAzmC,KAAAg1B,aAAAA,EAyCLh1B,KAAA0mC,SAAQ,WACXx8B,EAAK+oB,OAAOK,SAAS,CAACppB,EAAKy8B,eAGnC,OA1CIH,EAAAtmC,UAAAwT,SAAA,WAAA,IAAAxJ,EAAAlK,KACU6M,EAAU7M,KAAKmzB,MAAMoQ,SAASp1B,KAAK22B,oBAAoBj4B,QACvDgoB,EAAS70B,KAAKmzB,MAAMoQ,SAASp1B,KAAKy4B,iBAAiBz9B,GAErDnJ,KAAKymC,mBAAmBI,sBAAsBhS,EAAQhoB,GAASlF,KAC3DQ,EAAAA,IAAG,SAAC2+B,GACIA,GAAexiC,WACf4F,EAAK8F,MAAQ82B,EAAY92B,MACzB9F,EAAK68B,SAAWD,EAAYC,SAC5B78B,EAAK88B,gBAAgD,IAA7BF,EAAYG,cAAsBz6B,EAAAA,sBAAsB6N,4BAA4BnQ,EAAKhD,SAAU4/B,EAAYG,eAAiB,GAExJ/8B,EAAKg9B,WAAa,IAAIvnC,MACtBuK,EAAKg9B,WAAWjmC,MAAK,IAAIkmC,EAAAA,uBAAwBtlC,YAAY,CACzDmO,MAAO82B,EAAYI,WAAW,GAAGl3B,MACjC7C,QAAS25B,EAAYI,WAAW,GAAG/5B,QACnCi6B,QAASN,EAAYI,WAAW,GAAGE,WAGvCl9B,EAAKg9B,WAAWjmC,MAAK,IAAIkmC,EAAAA,uBAAwBtlC,YAAY,CACzDmO,MAAO82B,EAAYI,WAAW,GAAGl3B,MACjC7C,QAAS25B,EAAYI,WAAW,GAAG/5B,QACnCi6B,QAASN,EAAYI,WAAW,GAAGE,WAGvCl9B,EAAKg9B,WAAWjmC,MAAK,IAAIkmC,EAAAA,uBAAwBtlC,YAAY,CACzDmO,MAAO82B,EAAYI,WAAW,GAAGl3B,MACjC7C,QAAS25B,EAAYI,WAAW,GAAG/5B,QACnCi6B,QAASN,EAAYI,WAAW,GAAGE,WAGvCl9B,EAAKy8B,YAAcG,EAAYO,WAE/Bn9B,EAAK+oB,OAAOK,SAAS,CAAC,oCAGhC7lB,iCAzDbuE,EAAAA,UAAST,KAAA,CAAC,CACPU,SAAU,8BACVC,SAAA,gSAhBKR,EAAAA,gBAEQgyB,EAAAA,sBAARnQ,EAAAA,cAD8C+T,EAAAA,mCAG9CzT,MA0ET2S,EAhEA,iBCCE,SAAAe,EAAoBpgC,EAAkDi9B,EAAsDn9B,EAA0BoL,EAAmCnL,GAArKlH,KAAAmH,mBAAAA,EAAkDnH,KAAAokC,qBAAAA,EAAsDpkC,KAAAiH,KAAAA,EAA0BjH,KAAAqS,SAAAA,EAAmCrS,KAAAkH,SAAAA,EA2BjLlH,KAAAwnC,YAAW,SAAIp2B,EAAiBf,OAChCo3B,EAA6B,GAUnC,OATAp3B,EAAMxL,QAAO,SAACovB,GACQ7iB,EAAOwB,KAAI,SAAC80B,GAC9B,OAAQA,EAAIjxB,OAASwd,EAAK0T,SAI1BF,EAAUxmC,KAAKgzB,MAGZ,IAAIntB,IAAQjF,aAAY,IAAIiF,IAAQjF,YAAa,CAAEwO,MAAOo3B,MAErE,OArCEF,EAAArnC,UAAA0yB,QAAA,WAAA,IAAA1oB,EAAAlK,KAGQ4nC,EAAwB,IAAIC,EAAAA,sBAAsB7nC,KAAKmH,mBAAoBnH,KAAKokC,qBAAsBpkC,KAAKiH,KAAMjH,KAAKkH,UAkB5H,OAduB,IAAIyrB,GAAe3yB,KAAKqS,UAAUugB,UAAUjrB,KACjEiX,EAAAA,QAAO,SAACkpB,OACEv/B,EAAYu/B,EAAU/U,yBAAyB5pB,GACrDy+B,EAAsBG,WAAWz3B,OAAO/H,QAClCy/B,EAAiBJ,EAAsBhV,UACvCqV,EAAU/9B,EAAKmI,SAAShB,qBAAqBy2B,EAAU/U,yBAAyB5pB,GAAI2+B,EAAU3+B,GAAI,KAAM,GAC9G,OAAO+P,EAAAA,SAAS8uB,EAAgBC,GAAStgC,KACvCQ,EAAAA,IAAG,SAAE8pB,OAAAG,EAAAhyB,EAAA6xB,EAAA,GAACiW,EAAA9V,EAAA,GAAY+V,EAAA/V,EAAA,GAChB,OAAOloB,EAAKs9B,YAAYW,EAAU/2B,OAAQ82B,EAAW73B,kCArBlEiB,EAAAA,sDAT4EK,EAAAA,4BAAxBszB,EAAAA,8BAG7CxzB,EAAAA,kBAJAzK,UAMA0K,EAAAA,YA+CR61B,mBCrCE,SAAAa,EAAoB/1B,EAAmC4gB,EAAwBhsB,EAA0BC,EAA4BC,EAAkDi9B,GAAvL,IAAAl6B,EAAAlK,KAAoBA,KAAAqS,SAAAA,EAAmCrS,KAAAizB,OAAAA,EAAwBjzB,KAAAiH,KAAAA,EAA0BjH,KAAAkH,SAAAA,EAA4BlH,KAAAmH,mBAAAA,EAAkDnH,KAAAokC,qBAAAA,EAFvLpkC,KAAAqoC,mBAAqB77B,EAAAA,sBAAsB6N,4BAA4Bra,KAAKkH,SAAU,yCAM9ElH,KAAAsoC,4BAA2B,eAC3B3/B,GAAU,IAAIG,EAAAA,aAAcC,IAAI,gBAAiB,QACvD,OAAOmB,EAAKjD,KAAKS,IAAIwC,EAAKm+B,mBAAoB,CAAE1/B,QAAOA,IAAIhB,KACzDQ,EAAAA,IAAG,SAACogC,GAAkB,OAAA,IAAIxhC,IAA2BlF,YAAY0mC,OAI7DvoC,KAAAwoC,YAAW,SAAIC,EAA6CtV,GAClE,OAAOsV,EAAkBC,OAAO91B,KAAI,SAAC+1B,GACnC,OAAQA,EAASC,WAAazV,EAAM0V,YAAYzV,QAI5CpzB,KAAA8oC,UAAS,SAAIxyB,EAAwBjG,GAI3C,QAHgBA,EAAMA,MAAMuC,KAAI,SAACqhB,GAC/B,OAAQA,EAAK9qB,KAAOmN,EAAOie,kBA6BjC,OAxBE6T,EAAAloC,UAAAgzB,YAAA,SAAYC,EAA+B7sB,GAA3C,IAAA4D,EAAAlK,KAEQ+oC,EAAe/oC,KAAKsoC,8BAIpBU,EADkB,IAAIzB,GAAcvnC,KAAKmH,mBAAoBnH,KAAKokC,qBAAsBpkC,KAAKiH,KAAMjH,KAAKqS,SAAUrS,KAAKkH,UACvF0rB,UAetC,OAZkB1Z,EAAAA,SAAS6vB,EAAcC,GAAerhC,KACtDQ,EAAAA,IAAG,SAAE8pB,OAAAG,EAAAhyB,EAAA6xB,EAAA,GAAC4W,EAAAzW,EAAA,GAAa6W,EAAA7W,EAAA,GACX8W,EAAiBh/B,EAAKs+B,YAAYK,EAAa1V,GACrD,QAAIjpB,EAAK4+B,UAAUI,EAAgBD,KAGjCt7B,QAAQxM,MAAM,wCAAyCgyB,GACvDjpB,EAAK+oB,OAAOK,SAAS,CAAC,wCAAoDH,EAAMvqB,IAAM,oBAAsBsgC,EAAe3U,eAAiB,OACrI,2BA9ChBjjB,EAAAA,sDAVOtK,UADAusB,EAAAA,cAEA9hB,EAAAA,kBAKAC,EAAAA,gBAD6EC,EAAAA,4BAAxBszB,EAAAA,0BA0D7DmD,KCnEAe,GAAA,WA0PE,SAAAA,EAAoBC,EAA0CC,EAAoCniC,GAA9ElH,KAAAopC,gBAAAA,EAA0CppC,KAAAqpC,aAAAA,EAAoCrpC,KAAAkH,SAAAA,EAChGlH,KAAKopC,gBAAgBE,kBACnB,mBACAtpC,KAAKqpC,aAAanvB,wBAAwB,8iCAO5Cla,KAAKopC,gBAAgBE,kBACnB,mBACAtpC,KAAKqpC,aAAanvB,wBAAwB,k/BAO5Cla,KAAKopC,gBAAgBE,kBACnB,kBACAtpC,KAAKqpC,aAAanvB,wBAAwB,2gCAO5Cla,KAAKopC,gBAAgBE,kBACnB,mBACAtpC,KAAKqpC,aAAanvB,wBAAwB,spDAQ5Cla,KAAKopC,gBAAgBE,kBACnB,6BACAtpC,KAAKqpC,aAAanvB,wBAAwB,6TAE5Cla,KAAKopC,gBAAgBE,kBACnB,0BACAtpC,KAAKqpC,aAAanvB,wBAAwB,ssBAE5Cla,KAAKopC,gBAAgBE,kBACnB,2BACAtpC,KAAKqpC,aAAanvB,wBAAwB,6zBAK5Cla,KAAKopC,gBAAgBE,kBACnB,uBACAtpC,KAAKqpC,aAAanvB,wBAAwB,kWAE5Cla,KAAKopC,gBAAgBE,kBACnB,yBACAtpC,KAAKqpC,aAAanvB,wBAAwB,yUAM5Cla,KAAKopC,gBAAgBE,kBACnB,yBACAtpC,KAAKqpC,aAAanvB,wBAAwB,kYAK5Cla,KAAKopC,gBAAgBE,kBACnB,+BACAtpC,KAAKqpC,aAAanvB,wBAAwB,0/HAiD5Cla,KAAKopC,gBAAgBE,kBACnB,iCACAtpC,KAAKqpC,aAAanvB,wBAAwB,wZAM5Cla,KAAKopC,gBAAgBE,kBACnB,yBACAtpC,KAAKqpC,aAAanvB,wBAAwB,+cAI5Cla,KAAKopC,gBAAgBE,kBACnB,uBACAtpC,KAAKqpC,aAAanvB,wBAAwB,ueAK5Cla,KAAKopC,gBAAgBE,kBACnB,sBACAtpC,KAAKqpC,aAAanvB,wBAAwB,gRAI5Cla,KAAKopC,gBAAgBE,kBACnB,sBACAtpC,KAAKqpC,aAAanvB,wBAAwB,utDAI5Cla,KAAKopC,gBAAgBE,kBACnB,mBACAtpC,KAAKqpC,aAAanvB,wBAAwB,+aAI5Cla,KAAKopC,gBAAgBE,kBACnB,qBACAtpC,KAAKqpC,aAAanvB,wBAAwB,gkBAI5Cla,KAAKopC,gBAAgBE,kBACnB,mBACAtpC,KAAKqpC,aAAanvB,wBAAwB,gqBAI5Cla,KAAKopC,gBAAgBE,kBACnB,6BACAtpC,KAAKqpC,aAAanvB,wBAAwB,2ZAK5Cla,KAAKopC,gBAAgBE,kBACnB,qBACAtpC,KAAKqpC,aAAanvB,wBAAwB,6cAM5Cla,KAAKopC,gBAAgBE,kBACnB,kBACAtpC,KAAKqpC,aAAanvB,wBAAwB,m7CAK5Cla,KAAKopC,gBAAgBE,kBACnB,sBACAtpC,KAAKqpC,aAAanvB,wBAAwB,4aAK5Cla,KAAKopC,gBAAgBE,kBACnB,mBACAtpC,KAAKqpC,aAAanvB,wBAAwB,weAK5Cla,KAAKopC,gBAAgBE,kBACnB,kBACAtpC,KAAKqpC,aAAanvB,wBAAwB,4xBAK5Cla,KAAKopC,gBAAgBE,kBACnB,iBACAtpC,KAAKqpC,aAAanvB,wBAAwB,0aAM5Cla,KAAKopC,gBAAgBE,kBACnB,yBACAtpC,KAAKqpC,aAAanvB,wBAAwB,m7CAK5Cla,KAAKopC,gBAAgBE,kBACnB,oBACAtpC,KAAKqpC,aAAanvB,wBAAwB,o2BAI5Cla,KAAKopC,gBAAgBE,kBACnB,kBACAtpC,KAAKqpC,aAAanvB,wBAAwB,wbAK5Cla,KAAKopC,gBAAgBE,kBACnB,qBACAtpC,KAAKqpC,aAAanvB,wBAAwB,s2BAI5Cla,KAAKopC,gBAAgBE,kBACnB,iBACAtpC,KAAKqpC,aAAanvB,wBAAwB,qcAK5Cla,KAAKopC,gBAAgBE,kBACnB,4BACAtpC,KAAKqpC,aAAanvB,wBAAwB,wXAK5Cla,KAAKopC,gBAAgBE,kBACnB,0BACAtpC,KAAKqpC,aAAanvB,wBAAwB,weAO5Cla,KAAKopC,gBAAgBE,kBACnB,mCACAtpC,KAAKqpC,aAAanvB,wBAAwB,+iBAO5Cla,KAAKopC,gBAAgBE,kBACnB,2BACAtpC,KAAKqpC,aAAanvB,wBAAwB,wMAI5Cla,KAAKopC,gBAAgBE,kBACnB,oCACAtpC,KAAKqpC,aAAanvB,wBAAwB,wMAI5Cla,KAAKopC,gBAAgBE,kBACnB,wBACAtpC,KAAKqpC,aAAanvB,wBAAwB,0MAI5Cla,KAAKopC,gBAAgBE,kBACnB,iCACAtpC,KAAKqpC,aAAanvB,wBAAwB,0MAI5Cla,KAAKopC,gBAAgBE,kBACnB,2BACAtpC,KAAKqpC,aAAanvB,wBAAwB,ybAO5Cla,KAAKopC,gBAAgBE,kBACnB,yBACAtpC,KAAKqpC,aAAanvB,wBAAwB,2MAI5Cla,KAAKopC,gBAAgBE,kBACnB,oCACAtpC,KAAKqpC,aAAanvB,wBAAwB,6hBAO5Cla,KAAKopC,gBAAgBE,kBACnB,mBACAtpC,KAAKqpC,aAAanvB,wBAAwB,yxBAI5Cla,KAAKopC,gBAAgBE,kBACnB,WACAtpC,KAAKqpC,aAAanvB,wBAAwB,wNAE5Cla,KAAKopC,gBAAgBE,kBACnB,oBACAtpC,KAAKqpC,aAAanvB,wBAAwB,m0EAI5Cla,KAAKopC,gBAAgBE,kBACnB,oBACAtpC,KAAKqpC,aAAanvB,wBAAwB,28QAe5Cla,KAAKopC,gBAAgBE,kBACnB,uBACAtpC,KAAKqpC,aAAanvB,wBAAwB,m1DAQ5Cla,KAAKopC,gBAAgBE,kBACnB,uBACAtpC,KAAKqpC,aAAanvB,wBAAwB,yyHAa5Cla,KAAKopC,gBAAgBE,kBACnB,gBACAtpC,KAAKqpC,aAAanvB,wBAAwB,8PAE5Cla,KAAKopC,gBAAgBE,kBACnB,oBACAtpC,KAAKqpC,aAAanvB,wBAAwB,kOAE5Cla,KAAKopC,gBAAgBE,kBACnB,mBACAtpC,KAAKqpC,aAAanvB,wBAAwB,kOAG5Cla,KAAKopC,gBAAgBE,kBACnB,mBACAtpC,KAAKqpC,aAAanvB,wBAAwB,iSAG5Cla,KAAKopC,gBAAgBE,kBACnB,kBACAtpC,KAAKqpC,aAAanvB,wBAAwB,0gBAG5Cla,KAAKopC,gBAAgBE,kBACnB,eACAtpC,KAAKqpC,aAAanvB,wBAAwB,uKAG5Cla,KAAKopC,gBAAgBE,kBACnB,mBACAtpC,KAAKqpC,aAAanvB,wBAAwB,obAE5Cla,KAAKopC,gBAAgBE,kBACnB,qBACAtpC,KAAKqpC,aAAanvB,wBAAwB,sWAE5Cla,KAAKopC,gBAAgBE,kBACnB,iBACAtpC,KAAKqpC,aAAanvB,wBAAwB,qYAE5Cla,KAAKopC,gBAAgBE,kBACnB,gBACAtpC,KAAKqpC,aAAanvB,wBAAwB,+TAI5Cla,KAAKopC,gBAAgBE,kBACnB,2BACAtpC,KAAKqpC,aAAanvB,wBAAwB,0fAO5Cla,KAAKopC,gBAAgBE,kBACnB,sCACAtpC,KAAKqpC,aAAanvB,wBAAwB,21BAS5Cla,KAAKopC,gBAAgBE,kBACnB,mCACAtpC,KAAKqpC,aAAanvB,wBAAwB,6ZAK5Cla,KAAKopC,gBAAgBE,kBACnB,6CACAtpC,KAAKqpC,aAAanvB,wBAAwB,msBAK5Cla,KAAKopC,gBAAgBE,kBACnB,iEACAtpC,KAAKqpC,aAAanvB,wBAAwB,msBAK5Cla,KAAKopC,gBAAgBE,kBACnB,wBACAtpC,KAAKqpC,aAAanvB,wBAAwB,uxCAe5Cla,KAAKopC,gBAAgBE,kBACnB,sBACAtpC,KAAKqpC,aAAanvB,wBAAwB,mtEAoB5Cla,KAAKopC,gBAAgBE,kBACnB,oBACAtpC,KAAKqpC,aAAanvB,wBAAwB,uxCAe5Cla,KAAKopC,gBAAgBE,kBACnB,kBACAtpC,KAAKqpC,aAAanvB,wBAAwB,mtEAoB5Cla,KAAKopC,gBAAgBE,kBACnB,mBACAtpC,KAAKqpC,aAAanvB,wBAAwB,ymDAa5Cla,KAAKopC,gBAAgBE,kBACnB,kBACAtpC,KAAKqpC,aAAanvB,wBAAwB,mtEAoB5Cla,KAAKopC,gBAAgBE,kBACnB,kBACAtpC,KAAKqpC,aAAanvB,wBAAwB,i1CAe5Cla,KAAKopC,gBAAgBE,kBACnB,gCACAtpC,KAAKqpC,aAAanvB,wBAAwB,4qMAuB5Cla,KAAKopC,gBAAgBE,kBACnB,aACAtpC,KAAKqpC,aAAanvB,wBAAwB,qoBAa5Cla,KAAKopC,gBAAgBE,kBACnB,QACAtpC,KAAKqpC,aAAanvB,wBAAwB,+oCAsB5Cla,KAAKopC,gBAAgBE,kBACnB,WACAtpC,KAAKqpC,aAAanvB,wBAAwB,uzBAc5Cla,KAAKopC,gBAAgBE,kBACnB,YACAtpC,KAAKqpC,aAAanvB,wBAAwB,6tBAc5Cla,KAAKopC,gBAAgBE,kBACnB,6BACAtpC,KAAKqpC,aAAanvB,wBAAwB,mtEAoB5Cla,KAAKopC,gBAAgBE,kBACnB,6BACAtpC,KAAKqpC,aAAanvB,wBAAwB,+oCAsB5Cla,KAAKopC,gBAAgBE,kBACnB,6BACAtpC,KAAKqpC,aAAanvB,wBAAwB,i1CAe5Cla,KAAKopC,gBAAgBE,kBACnB,iBACAtpC,KAAKqpC,aAAanvB,wBAAwB,wzBAI5Cla,KAAKopC,gBAAgBE,kBACnB,QACAtpC,KAAKqpC,aAAanvB,wBAAwB,wSAM5Cla,KAAKopC,gBAAgBE,kBACnB,qBACAtpC,KAAKqpC,aAAanvB,wBAAwB,8tCAoChD,OAzzBWivB,EAAAI,QAAP,WACI,MAAO,CACHC,SAAUL,EACVM,UAAW,CAACziC,GAAiB6d,GAAmBwI,GAAwB7O,GAAmB8iB,GAAyBzN,GAAgB6F,0BAnJ/IgQ,EAAAA,SAAQn4B,KAAA,CAAC,CACNo4B,aAAc,CACV/Z,GACAzd,GACAya,GACAxD,GACAuF,GACAvC,GACAmD,GACAH,GACA1D,GACAnK,GACA1F,GACA2T,GACAxL,GACA9B,GACAtH,GACAjB,GACAgQ,GACA2B,GACAlW,GACAvB,GACAqc,GACAte,GACA6e,GACAU,GACAM,GACAI,GACAQ,GACAmB,GACAuB,GACAiD,GACAK,GACAI,GACA0H,GACAwB,GACAW,GACAxJ,GACA0J,GACAoB,GACAG,GACAI,GACAgB,GACAM,GACAG,GACAI,GACAG,GACAK,GACA/G,GACAzE,GACAmE,IAENyK,QAAS,CACPC,EAAAA,gBACAC,EAAAA,iBACAC,EAAAA,iBACAC,EAAAA,cACAC,EAAAA,wBACAC,EAAAA,gBACAC,EAAAA,cACAC,EAAAA,kBACAC,EAAAA,cACAC,EAAAA,mBACAC,EAAAA,eACAC,EAAAA,cACAC,EAAAA,gBACAC,EAAAA,gBACAC,EAAAA,gBACAC,EAAAA,cACAT,EAAAA,cACAU,EAAAA,iBACAC,EAAAA,cACAC,EAAAA,iBACAC,EAAAA,mBACAC,EAAAA,kBACAC,EAAAA,qBACAC,EAAAA,qBACAC,EAAAA,qBACAC,EAAAA,YACAC,EAAAA,iBACAC,EAAAA,kBACAC,EAAAA,gBACAC,EAAAA,oBACAC,EAAAA,cAEFC,QAAS,CACP/b,GACAzd,GACAya,GACAxD,GACAuF,GACAvC,GACAmD,GACAH,GACA1D,GACAnK,GACA1F,GACA2T,GACAxL,GACA9B,GACAtH,GACAjB,GACAgQ,GACA2B,GACAlW,GACAvB,GACAqc,GACAte,GACAuf,GACAV,GACAgB,GACAI,GACAQ,GACAmB,GACAuB,GACAsD,GACAI,GACA0H,GACAwB,GACAW,GACAxJ,GACA0J,GACAoB,GACAO,GACAgB,GACAM,GACAG,GACAI,GACAG,GACAK,GACA/G,GACAzE,IAEA4Q,gBAAiB,CAACtgB,GAAwCtH,GAAuC9B,GAAuC4W,IACxI2Q,UAAW,CACPoC,EAAAA,oBACA7Y,GACAoV,GACA1e,EAAAA,kBACA,CAAEoiB,QAASC,EAAAA,kBAAmBC,SAAUC,EAAAA,mBAAoBC,OAAO,iDA1NzEC,EAAAA,uBAMqBxxB,EAAAA,oBAmEfjJ,EAAAA,YA+8BRy3B,EA7iCA,GCAAiD,GAAA,WAsBE,SAAAA,EAAoBC,EAA6C5J,EAAwD5nB,EAAwD5T,EAA0BC,GAA3M,IAAAgD,EAAAlK,KAAoBA,KAAAqsC,cAAAA,EAA6CrsC,KAAAyiC,sBAAAA,EAAwDziC,KAAA6a,sBAAAA,EAAwD7a,KAAAiH,KAAAA,EAA0BjH,KAAAkH,SAAAA,EAP3MlH,KAAAqoC,mBAAqB77B,EAAAA,sBAAsB6N,4BAA4Bra,KAAKkH,SAAU,qCACtFlH,KAAAssC,WAAa9/B,EAAAA,sBAAsB6N,4BAA4Bra,KAAKkH,SAAU,8BAUvElH,KAAA+nC,WAAU,SAAIx/B,GACnB2B,EAAK3B,UAAYA,GAIXvI,KAAAusC,oBAAmB,WACzB,OAAOriC,EAAKjD,KAAKS,IAAIwC,EAAKm+B,qBAIpBroC,KAAAwsC,SAAQ,WACd,OAAOtiC,EAAKjD,KAAKS,IAAIwC,EAAKoiC,YAAY3kC,KACpCQ,EAAAA,IAAG,SAAC0E,OACM4/B,GAAgB,IAAIC,EAAAA,eAAgB7qC,YAAYgL,GAEtD,OADA3C,EAAK2C,QAAU4/B,EAAc5/B,QACtB4/B,MAMPzsC,KAAA2sC,uBAAsB,SAAI7J,IAIf,IAAI1B,IAAiBv/B,YAAYihC,GACzCC,eAAel+B,QAAO,SAAC2E,GAC9BU,EAAK2Q,sBAAsBtD,cAAcrN,EAAK2C,QAASrD,GAAO,GAAM,GAAOiE,eAoDjF,OAhDE2+B,EAAAlsC,UAAA0yB,QAAA,SAAQga,GAAR,IAAA1iC,EAAAlK,KA6CE,OA5CkBA,KAAKwsC,WAAW7kC,KAChC0C,EAAAA,UAAS,SAACwC,GAAW,OAAA3C,EAAKu4B,sBAAsBhB,kBAAkB50B,EAAQA,SAAS,GAAM,GACtFlF,KACCwP,EAAAA,SAAQ,SACN2rB,GACE,OAAIA,IAAmBx+B,UACd4F,EAAKqiC,sBAAsB5kC,KAChCiX,EAAAA,QAAO,SAACtI,GAGN,OAFApM,EAAK2iC,kBAAmB,IAAIzL,IAAiBv/B,YAAYyU,GACzDpM,EAAK2iC,iBAAiB7J,kBAAoB94B,EAAK2C,QAAU,SAClD3C,EAAKu4B,sBAAsBlB,qBAChCr3B,EAAK3B,UACLsE,EAAQA,QACR3C,EAAK2iC,kBACJllC,KACCQ,EAAAA,IAAG,SACDuH,OACQo9B,EAAe5iC,EAAK2iC,iBAa1B,OAZAC,EAAa3jC,GAAKuG,EAClBxF,EAAKu4B,sBAAsBf,qBACzBx3B,EAAK3B,UACLsE,EAAQA,QACRigC,EACAp9B,GAAQjC,UAAS,SAEjBs/B,GACE7iC,EAAKu4B,sBAAsBhB,kBAAkBv3B,EAAK2C,SAAS,GAAM,GAAMY,cAG3EvD,EAAKyiC,uBAAuBG,GACrBA,SAMnB5iC,EAAKyiC,uBAAuB7J,GACrBjrB,EAAAA,GAAGirB,+BAnFzBxxB,EAAAA,sDAPOK,EAAAA,4BAEA2vB,UAEAprB,UAHAzE,EAAAA,kBAIAC,EAAAA,YA+FR06B,EAzGA,iBCwBE,SAAAY,EAAoB7lC,EAAkDi9B,EAAsD3B,EAAwDwK,EAA4ChmC,EAA0BkP,EAA0C0E,EAAwD3T,GAAxUlH,KAAAmH,mBAAAA,EAAkDnH,KAAAokC,qBAAAA,EAAsDpkC,KAAAyiC,sBAAAA,EAAwDziC,KAAAitC,gBAAAA,EAA4CjtC,KAAAiH,KAAAA,EAA0BjH,KAAAmW,gBAAAA,EAA0CnW,KAAA6a,sBAAAA,EAAwD7a,KAAAkH,SAAAA,EA2C9V,OAzCE8lC,EAAA9sC,UAAA0yB,QAAA,SAAQga,GAAR,IAAA1iC,EAAAlK,KAGQ4nC,EAAwB,IAAIC,EAAAA,sBAAsB7nC,KAAKmH,mBAAoBnH,KAAKokC,qBAAsBpkC,KAAKiH,KAAMjH,KAAKkH,UACtHgmC,EAAyB,IAAId,GAAuBpsC,KAAKmH,mBAAoBnH,KAAKyiC,sBAAuBziC,KAAK6a,sBAAuB7a,KAAKiH,KAAMjH,KAAKkH,UAkC3J,OAhCuB,IAAIyrB,GAAe3yB,KAAKmW,iBAAiByc,UAAUjrB,KACxEiX,EAAAA,QAAO,SAAC1d,OACEqH,EAAYrH,EAAM6xB,yBAAyB5pB,GACjDy+B,EAAsBG,WAAWz3B,OAAO/H,IACxC2kC,EAAuBnF,WAAWz3B,OAAO/H,QAInCuQ,EAAgB,CAFC8uB,EAAsBhV,UACrBsa,EAAuBta,QAAQga,IAEvD,OAAO1zB,EAAAA,SAASJ,GAAenR,KAC7BQ,EAAAA,IAAG,SAACgR,GACF,OAAO,IAAIkoB,IAAuBx/B,YAAY,CAAEshC,cAAehqB,EAAU,GAAI2pB,eAAgB3pB,EAAU,WAM7ExR,KAClCiX,EAAAA,QAAO,SAACuuB,OAGAr0B,EAAgB,CAFD5O,EAAK+iC,gBAAgBnuB,cAAcquB,EAAqBhK,cAAct2B,QAAU,UACjF3C,EAAK+iC,gBAAgBnuB,cAAcquB,EAAqBhK,cAAct2B,QAAU,UAEpG,OAAOqM,EAAAA,SAASJ,GAAenR,KAC7BQ,EAAAA,IAAG,SACDgR,GACE,OAAOg0B,6BApCpB77B,EAAAA,sDAZOK,EAAAA,4BAFmDszB,EAAAA,8BAUnD3D,UAHA9iB,UADA/M,EAAAA,kBADAzK,UAMAkP,UACAxE,EAAAA,YAgDRs7B,KCnEAI,GAAA,WAWE,SAAAA,EAAmB/6B,GAAArS,KAAAqS,SAAAA,EA4BrB,OAzBE+6B,EAAAltC,UAAA0yB,QAAA,WAAA,IAAA1oB,EAAAlK,KAcE,OAZgBA,KAAKqS,SAASjJ,YAC3BzB,KACCQ,EAAAA,IAAG,SAACkB,GAMF,OALAA,EAAMwpB,UAAUhuB,QAAO,SAACiuB,GACD,eAAjBA,EAAQpc,OACVrN,EAAM0pB,yBAA2BD,KAG9BzpB,KAIE1B,KACb0C,EAAAA,UAAS,SAACy9B,GACN,OAAO59B,EAAKmI,SAAShB,qBAAqBy2B,EAAU/U,yBAAyB5pB,GAAI2+B,EAAU3+B,GAAI,KAAM,GAAMxB,KACzGQ,EAAAA,IAAG,SAACklC,GACF,OAAO,IAAIxmC,IAAShF,YAAYwrC,8BAxB7C/7B,EAAAA,sDALOtK,MAoCRomC,EAvCA,GCAAE,GAAA,WAWE,SAAAA,EAAmBj7B,GAAArS,KAAAqS,SAAAA,EA4BrB,OAzBEi7B,EAAAptC,UAAA0yB,QAAA,WAAA,IAAA1oB,EAAAlK,KAcE,OAZgBA,KAAKqS,SAASjJ,YAC3BzB,KACCQ,EAAAA,IAAG,SAACkB,GAMF,OALAA,EAAMwpB,UAAUhuB,QAAO,SAACiuB,GACD,eAAjBA,EAAQpc,OACVrN,EAAM0pB,yBAA2BD,KAG9BzpB,KAIE1B,KACb0C,EAAAA,UAAS,SAACy9B,GACN,OAAO59B,EAAKmI,SAASlB,WAAW22B,EAAU/U,yBAAyB5pB,GAAI,KAAM,GAAMxB,KACjFQ,EAAAA,IAAG,SAACklC,GACF,OAAO,IAAIxmC,IAAShF,YAAYwrC,8BAxB7C/7B,EAAAA,sDALOtK,MAoCRsmC,EAvCA,GCAAC,GAAA,WAgBE,SAAAA,EAAoBpmC,EAAkDi9B,EAAsDn9B,EAA0BoL,EAAmCnL,GAArKlH,KAAAmH,mBAAAA,EAAkDnH,KAAAokC,qBAAAA,EAAsDpkC,KAAAiH,KAAAA,EAA0BjH,KAAAqS,SAAAA,EAAmCrS,KAAAkH,SAAAA,EAkC3L,OA/BEqmC,EAAArtC,UAAA0yB,QAAA,SAAQga,OAEAY,EAAUxtC,KAAKqS,SAASjJ,YAC3BzB,KACCQ,EAAAA,IAAG,SAACkB,GAMF,OALAA,EAAMwpB,UAAUhuB,QAAO,SAACiuB,GACD,eAAjBA,EAAQpc,OACVrN,EAAM0pB,yBAA2BD,KAG9BzpB,KAIPu+B,EAAwB,IAAIC,EAAAA,sBAAsB7nC,KAAKmH,mBAAoBnH,KAAKokC,qBAAsBpkC,KAAKiH,KAAMjH,KAAKkH,UAE5H,OAAOsmC,EAAQ7lC,KACb0C,EAAAA,UAAS,SAACy9B,GAON,OANAF,EAAsBG,WAAWz3B,OAAOw3B,EAAU/U,yBAAyB5pB,KACpDy+B,EAAsBhV,UAAUjrB,KACrDQ,EAAAA,IAAG,SAACg7B,GACF,OAAO,IAAIr8B,IAAQjF,YAAY,CAAEwO,MAAO8yB,EAAc9yB,mCA3BnEiB,EAAAA,sDAT4EK,EAAAA,4BAAxBszB,EAAAA,8BAG7CxzB,EAAAA,kBAJAzK,UAMA0K,EAAAA,YAyCR67B,EAlDA,GCCAE,GAAA,WAcI,SAAAA,EAAoBp7B,GAAArS,KAAAqS,SAAAA,EA6BxB,OA1BIo7B,EAAAvtC,UAAA0yB,QAAA,SAAQga,GAAR,IAAA1iC,EAAAlK,KAcI,OAZgBA,KAAKqS,SAASjJ,YACzBzB,KACGQ,EAAAA,IAAG,SAACkB,GAMA,OALAA,EAAMwpB,UAAUhuB,QAAO,SAACiuB,GACC,eAAjBA,EAAQpc,OACRrN,EAAM0pB,yBAA2BD,KAGlCzpB,KAIJ1B,KACX0C,EAAAA,UAAS,SAACy9B,GACN,OAAO59B,EAAKmI,SAASvI,QAAQ8iC,EAAcc,OAAO7jC,SAAUi+B,EAAU/U,yBAAyB5pB,GAAIyjC,EAAcc,OAAOlkC,MAAOojC,EAAcc,OAAOpqC,QAC/IqE,KACGQ,EAAAA,IAAG,SAACod,GACA,OAAOA,6BAzBlCjU,EAAAA,sDARQtK,MAwCTymC,EA3CA,GCDAE,GAAA,WAgBE,SAAAA,EAAoB1mC,EAA0BC,GAA1BlH,KAAAiH,KAAAA,EAA0BjH,KAAAkH,SAAAA,EAF9ClH,KAAA4tC,0BAA4B,wCAe9B,OAVED,EAAAztC,UAAA0yB,QAAA,eACQjqB,GAAU,IAAIG,EAAAA,aAAcC,IAAI,gBAAiB,QACvD,OAAO/I,KAAKiH,KAAKS,IAAI8E,EAAAA,sBAAsB6N,4BAA4Bra,KAAKkH,SAAUlH,KAAK4tC,2BAA4B,CAAEjlC,QAAOA,IAAIhB,KAClIQ,EAAAA,IAAG,SAAC0lC,GAEF,OADiC,IAAI9mC,IAA2BlF,YAAYgsC,2BAZnFv8B,EAAAA,sDAHOG,EAAAA,kBACAC,EAAAA,YAoBRi8B,EA7BA,GCAAG,GAAA,WAcI,SAAAA,EACY9Y,EACA7e,EACAgd,EACA4a,EACA3J,EACA4J,EACA9mC,GANAlH,KAAAg1B,aAAAA,EACAh1B,KAAAmW,gBAAAA,EACAnW,KAAAmzB,MAAAA,EACAnzB,KAAA+tC,qBAAAA,EACA/tC,KAAAokC,qBAAAA,EACApkC,KAAAguC,WAAAA,EACAhuC,KAAAkH,SAAAA,EA8BhB,OA3BI4mC,EAAA5tC,UAAA0yB,QAAA,WAAA,IAAA1oB,EAAAlK,KAEU8zB,EAAc9zB,KAAKg1B,aAAaN,iBAEtC,GAAIZ,GAAexvB,UAAU,KACrB2pC,EAAwB,IAAIpG,EAAAA,sBAAsB7nC,KAAK+tC,qBAAsB/tC,KAAKokC,qBAAsBpkC,KAAKguC,WAAYhuC,KAAKkH,UAElI,OADuB,IAAIyrB,GAAe3yB,KAAKmW,iBACzByc,UAAUjrB,KAC5BiX,EAAAA,QAAO,SAACvV,OACEd,EAAYc,EAAM0pB,yBAAyB5pB,GAGjD,OAFA8kC,EAAsBlG,WAAWz3B,OAAO/H,IAEjC0lC,EAAsBrb,UAAUjrB,KACnCQ,EAAAA,IAAG,SAACg7B,OACM+K,EAAc/K,EAAc9yB,MAAMqtB,OAAM,SAAWyQ,EAAMC,GAC3D,OAAQD,EAAKvJ,SAAWwJ,EAAQxJ,SAAYuJ,EAAOC,IAGvD,OADAlkC,EAAK8qB,aAAaL,eAAeuZ,GAC1BA,QAMvB,OAAOr2B,EAAAA,GAAGic,wBArCrBxiB,EAAAA,sDAFQuiB,UANA7sB,UAFS08B,EAAAA,sBAGqD/xB,EAAAA,4BAAxBszB,EAAAA,8BAEtCxzB,EAAAA,kBACAC,EAAAA,YA4CTo8B,EAnDA","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {AccessToken, AuthInfo, Deserializable, Claim} from '@tibco-tcstk/tc-core-lib';\n\nexport class NoteThread {\n  constructor(public threadId: string,\n              public showReplies: boolean,\n              public showNewReply: boolean,\n              public editMode: boolean,\n              public newReply: any,\n              public thread: Note[],\n              public note: Note\n  ) {\n  }\n}\n\nexport class CaseRoute {\n  public caseRef: string;\n  public appId: string;\n  public typeId: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class NotificationCollection {\n  constructor(\n    public collectionName: string,\n    public lifecycledWithType: string,\n    public lifecycledWithId: string\n  ) { }\n}\n\nexport class Notification implements Deserializable {\n  entityId: string;\n  entityName: string;\n  entityType: string;\n  id: string;\n  notifyCollection: NotificationCollection;\n  notifyOnAllReplies: boolean;\n  notifyOnUpdate: boolean;\n  threadId: string;\n  topicId: string;\n  type: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class NotificationList implements Deserializable {\n  notifications: Notification[];\n  deserialize(input: any): this {\n    this.notifications = [];\n    Object.assign(this.notifications, input);\n    return this;\n  }\n}\n\nexport class ThreadList implements Deserializable {\n  threads: NoteThread[];\n  deserialize(input: any): this {\n    this.threads = [];\n    Object.assign(this.threads, input);\n    return this;\n  }\n}\n\nexport class Metadata {\n  constructor(public createdBy:\tstring,\n              public creationTimestamp:\tstring,\n              public createdByDetails: UserInfo,\n              public modifiedBy:\tstring,\n              public modificationTimestamp:\tstring,\n              public modifiedByDetails: UserInfo,\n              public lock:\tboolean,\n              public lockType:\tstring,\n              public lockedBy:\tstring,\n              public msLockExpiry:\tstring,\n              public msSystemTime:\tstring,\n              public markedForPurge: boolean,\n              public applicationId:\tstring,\n              public applicationLabel: string,\n              public typeId: string,\n              public stateColor: string,\n              public stateIcon: string,\n              public caseTypeColor: string,\n              public caseTypeIcon: string,\n              public useCaseTypeColor: boolean\n            ) {\n  }\n}\n\nexport class CaseTypeState implements Deserializable {\n  id: string;\n  label: string;\n  value: string;\n  isTerminal: boolean;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class CaseTypeStatesListList implements  Deserializable {\n  casetypes: CaseTypeStatesList[];\n  deserialize(input: any): this {\n    this.casetypes = [];\n    Object.assign(this.casetypes, input);\n    return this;\n  }\n}\n\nexport class CaseTypeStatesList implements Deserializable {\n  states: CaseTypeState[];\n  deserialize(input: any): this {\n    this.states = [];\n    Object.assign(this.states, input);\n    return this;\n  }\n}\n\nexport class CaseInfo implements Deserializable {\n    deleted: boolean;\n    caseReference: string;\n    untaggedCasedata: string;\n    untaggedCasedataObj: any;\n    casedata: string;\n    casedataObj: any;\n    summary:  string;\n    summaryObj: any;\n    metadata: Metadata;\n    deserialize(input: any): this {\n      Object.assign(this, input);\n      this.summaryObj = this.summary ? JSON.parse(this.summary) : undefined;\n      this.casedataObj = this.casedata ? JSON.parse(this.casedata) : undefined;\n      this.untaggedCasedataObj = this.untaggedCasedata ? JSON.parse(this.untaggedCasedata) : undefined;\n      return this;\n    }\n}\n\nexport class CaseInfoList implements Deserializable {\n\n  caseinfos: CaseInfo[];\n  casecount: string;\n  deserialize(input: any): this {\n    this.caseinfos = [];\n    Object.assign(this.caseinfos, input);\n    this.caseinfos.forEach(function(caseinfo) {\n      if (caseinfo.summary) { caseinfo.summaryObj = JSON.parse(caseinfo.summary); }\n      if (caseinfo.casedata) { caseinfo.casedataObj = JSON.parse(caseinfo.casedata); }\n    })\n    return this;\n  }\n}\n\nexport class CaseAttribute {\n  isIdentifier: boolean;\n  isMandatory: boolean;\n  isStructuredType: true;\n  label: string;\n  name: string;\n  type: string;\n  maximum: number;\n  minimum: number;\n}\n\nexport class JsonSchema {\n  $schema: string;\n  definitions: any[];\n  properties: any[];\n  type: string;\n  required: string[];\n}\n\nexport class Process {\n  jsonSchema: JsonSchema;\n  name: string;\n  id: string;\n  unsupportedForm: boolean;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class ProcessId {\n  caseIdentifier: string;\n  caseReference: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n\nexport class CaseType {\n  actions: Process[];\n  applicationId: string;\n  applicationInternalName: string;\n  applicationName: any;\n  attributes: CaseAttribute[];\n  creators: Process[];\n  id:  string;\n  isCase: boolean\n  label: any;\n  name: string;\n  jsonSchema: JsonSchema;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class CaseTypesList implements Deserializable {\n  casetypes: CaseType[];\n  deserialize(input: any): this {\n    this.casetypes = [];\n    Object.assign(this.casetypes, input);\n    return this;\n  }\n}\n\nexport class CaseAction implements Deserializable {\n  activityName: string;\n  applicationId: string;\n  applicationName: string;\n  availableInStates: string[];\n  chatBotEnabled: boolean;\n  id: string;\n  label: string;\n  name: string;\n  noData: boolean;\n  performerPaths: string[];\n  roles: string[];\n  version: number;\n  process: Process;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class CaseActionsList implements Deserializable {\n  actions: CaseAction[];\n  deserialize(input: any): this {\n    this.actions = [];\n    Object.assign(this.actions, input);\n    return this;\n  }\n}\n\nexport class CaseCreator implements Deserializable {\n  activityName: string;\n  applicationId: string;\n  applicationName: string;\n  chatBotEnabled: boolean;\n  id: string;\n  label: string;\n  name: string;\n  roles: string[];\n  version: number;\n  process: Process;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class CaseCreatorsList implements Deserializable {\n  creators: CaseCreator[];\n  deserialize(input: any): this {\n    this.creators = [];\n    Object.assign(this.creators, input);\n    return this;\n  }\n}\n\nexport class CaseList implements Deserializable {\n  uniqueKey: string;\n  maxSize: number;\n  caseRefs: string[];\n  deserialize(input: any): this {\n    this.uniqueKey = input.uniqueKey;\n    this.maxSize = input.maxSize;\n    this.caseRefs = [];\n    Object.assign(this.caseRefs, input.caseRefs);\n    return this;\n  }\n}\n\nexport class ApiResponseText implements Deserializable {\n  message: string;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class ApiResponseError implements Deserializable {\n  errorMsg: string;\n  errorCode: string;\n  contextAttributes: string[];\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class UserInfo implements Deserializable {\n  externalId: string;\n  firstName: string;\n  lastName: string;\n  username: string;\n  email: string;\n  type: string;\n  id: string;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class NotesRole implements Deserializable {\n  entityId: string;\n  entityName: string;\n  entityType: string;\n  id: string;\n  role: string;\n  threadId: string;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Thread implements Deserializable {\n  acceptedStatusCount: number;\n  actionDate: number;\n  actionId: string;\n  actionType: string;\n  answerNoteCount: number;\n  answeredStatusCount: number;\n  createdById: string;\n  createdByName: string;\n  createdDate: number;\n  id: string;\n  informationalNoteCount: number;\n  isAbandoned: boolean;\n  isLocked: boolean;\n  isOrphaned: boolean;\n  issueNoteCount: number;\n  lifecycledWithId: boolean;\n  lifecycledWithType: boolean;\n  modifiedById: string;\n  modifiedByName: string;\n  modifiedDate: number;\n  questionNoteCount: number;\n  relatedItemCollection: string[];\n  relatedItemId: string;\n  relatedItemType: string;\n  resolutionNoteCount: number;\n  resolvedStatusCount: number;\n  roles: NotesRole[];\n  status: string;\n  topLevelNoteId: string;\n  topicId: string;\n  totalCount: number;\n  unacceptedStatusCount: number;\n  unansweredStatusCount: number;\n  unclassifiedStatusCount: number;\n  unresolvedStatusCount: number;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Note implements Deserializable {\n  attributes: string[];\n  createdById: string;\n  createdByName: string;\n  createdDate: number;\n  descendantModifiedDate: number;\n  id: string;\n  isDescendantNewOrModified: boolean;\n  isHidden: boolean;\n  isModified: boolean;\n  isNew: boolean;\n  level: number;\n  modifiedByName: string;\n  modifiedDate: number;\n  notificationLabel: string;\n  notificationUrl: string;\n  parentId: string;\n  relatedItemCollection: string[];\n  relatedItemId: string;\n  relatedItemType: string;\n  replyAcceptedId: string;\n  replyCount: number;\n  replyDate: number;\n  status: string;\n  text: string;\n  thread: Thread;\n  threadId: string;\n  title: string;\n  topicId: string;\n  type: string;\n  editMode: boolean;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class NotesList implements Deserializable {\n  notes: Note[];\n  deserialize(input: any): this {\n    this.notes = [];\n    Object.assign(this.notes, input);\n    return this;\n  }\n}\n\nexport class IconMap {\n  constructor(\n    public isCaseType: boolean,\n    public state: string,\n    public fill: string,\n    public icon: string\n  ) {}\n}\n\nexport class CardConfig implements Deserializable {\n  id: string;\n  useCaseTypeColor: boolean;\n  stateMap: IconMap[];\n  deserialize(input: any): this {\n    // this.stateMap = [];\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class LoginContext implements Deserializable {\n  authInfo: AuthInfo;\n  accessToken: AccessToken;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class CaseSearchResults implements Deserializable {\n  caserefs: string[];\n  searchString: string;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n","import {Deserializable, RoleAttribute} from '@tibco-tcstk/tc-core-lib';\n\nexport class Group {\n  public name: string;\n  public description: string;\n  public type: string;\n  public id: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Groups {\n  groups: Group[];\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Roles {\n  roles: RoleAttribute[];\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class RouteAccessDef {\n  routeUrl: string;\n  requiredRoleId: string;\n}\n\nexport class ButtonAccessDef {\n  buttonId: string;\n  requiredRoleId: string;\n}\n\nexport class RouteAccessControlConfig {\n  routes: RouteAccessDef[];\n  buttons: ButtonAccessDef[];\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n","import { Injectable, NgModule} from '@angular/core';\nimport {forkJoin, Observable, of, throwError} from 'rxjs';\nimport { HttpClientModule, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport {\n  CaseInfo,\n  CaseInfoList,\n  CaseTypesList,\n  CaseTypeStatesList,\n  CaseActionsList,\n  CaseList,\n  UserInfo,\n  ApiResponseText,\n  NotesList,\n  Note,\n  ThreadList,\n  Thread,\n  NoteThread,\n  NotificationList,\n  CaseType,\n  CardConfig,\n  IconMap,\n  Metadata,\n  CaseSearchResults,\n  CaseTypeStatesListList\n} from '../models/liveappsdata';\nimport {  DocumentList, Document} from '../models/tc-document';\nimport {\n  AccessToken,\n  AuthInfo,\n  SharedStateList,\n  SharedStateEntry,\n  SharedStateContent,\n  TcSharedStateService,\n  UiAppConfig,\n  TcCoreCommonFunctions,\n  Group,\n  Claim,\n  Sandbox,\n  SandboxList\n} from '@tibco-tcstk/tc-core-lib';\nimport {Groups} from '../models/tc-groups-data';\nimport {\n  catchError,\n  debounceTime,\n  distinctUntilChanged,\n  map,\n  mergeMap,\n  share,\n  shareReplay,\n  switchMap,\n  take,\n  takeUntil,\n  tap\n} from 'rxjs/operators';\nimport { Deserializable} from '@tibco-tcstk/tc-core-lib';\nimport {split} from 'ts-node';\nimport {Location} from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class LiveAppsService {\n  // these are 'per session' caches. They won't time out unless explicitly cleared or browser is refreshed\n  private claimsCacheMap = new Map();\n  private userInfoCacheMap = new Map();\n  private caseTypesCacheMap = new Map();\n  private iconSVGTextCacheMap = new Map();\n\n  constructor(\n    private http: HttpClient, private location: Location, private sharedStateService: TcSharedStateService) { }\n\n  public getSandboxes(): Observable<SandboxList> {\n    const url = '/organisation/v1/sandboxes';\n    return this.http.get(url)\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map ( sandboxList => new SandboxList().deserialize(sandboxList)));\n  }\n\n  public getApplications(sandboxId: number, appIds: string[], top: number, useCache: boolean): Observable<CaseTypesList> {\n    const select = 'b';\n    let url = '/case/v1/types?$sandbox=' + sandboxId + '&$select=' + select + '&$top=' + top;\n\n    if (appIds && appIds.length > 0) {\n      url = url + '&$filter=applicationId in(' + appIds.toString() + ') and isCase eq TRUE';\n    }\n    // note: since this is cached it will require a reload to see new apps\n    let headers;\n    if (useCache) {\n      headers = new HttpHeaders().set('cacheResponse', 'true');\n    } else {\n      headers = new HttpHeaders();\n    }\n\n\n    return this.http.get(url, { headers })\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(casetypes => {\n          if (appIds && appIds.length > 0) {\n            // This is to workaround a bug where non case type types are returned when > 1 appId\n            const tmpCaseTypes = new CaseTypesList().deserialize(casetypes);\n            const filteredCaseTypes = new CaseTypesList().deserialize( { casetypes: [] });\n\n            tmpCaseTypes.casetypes.forEach(ctype => {\n              if (ctype.id === '1') {\n                filteredCaseTypes.casetypes.push(ctype);\n              }\n            });\n            return filteredCaseTypes;\n          } else {\n            return new CaseTypesList().deserialize(casetypes);\n          }\n        }));\n  }\n\n  public getClaims(): Observable<Claim> {\n    const url = '/organisation/v1/claims';\n    const headers = new HttpHeaders().set('cacheResponse', 'true');\n    return this.http.get(url, { headers: headers } )\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map ( claim => new Claim().deserialize(claim)));\n  }\n\n  public getCases(sandboxId: number, appId: string, typeId: string, skip: number, top: number): Observable<CaseInfoList> {\n    const url = '/case/v1/cases' + '?$sandbox=' + sandboxId + '&$filter=applicationId eq '\n      + appId + ' and typeId eq ' + typeId + '&$skip=' + skip + '&$top=' + top;\n    return this.http.get(url)\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(caseinfos => new CaseInfoList().deserialize(caseinfos)));\n  }\n\n  public getCasesCount(sandboxId: number, appId: string, typeId: string): Observable<string> {\n    const url = '/case/v1/cases' + '?$sandbox=' + sandboxId + '&$filter=applicationId eq '\n      + appId + ' and typeId eq ' + typeId + '&$count=true';\n\n    return this.http.get(url)\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(casecount => casecount.toString()));\n  }\n\n  public getCaseByRef(sandboxId, caseRef: string): Observable<CaseInfo> {\n    const url = '/case/v1/cases/' + caseRef\n      + '?$sandbox=' + sandboxId;\n    return this.http.get(url)\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(caseinfo => new CaseInfo().deserialize(caseinfo))\n      );\n  }\n\n  public getCase(caseRef: string, sandboxId: number, appId: string, typeId: string ): Observable<CaseInfo> {\n    const url = '/case/v1/cases/' + caseRef + '/' + '?$sandbox=' + sandboxId + '&$filter=applicationId eq '\n      + appId + ' and typeId eq ' + typeId + '&$select=uc, m';\n    return this.http.get(url)\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(caseinfo => new CaseInfo().deserialize(caseinfo)));\n  }\n\n  public caseSearch(terms: Observable<string>, sandboxId: number, appId: string, typeId: string, skip: number, top: number, stateId: number): Observable<CaseSearchResults> {\n    return terms\n      .pipe(\n        debounceTime(500),\n        distinctUntilChanged(),\n        switchMap(term => this.caseSearchEntries(term, sandboxId, appId, typeId, false, skip, top, stateId))\n      );\n  }\n\n  public caseSearchEntries(term: string, sandboxId: number, appId: string, typeId: string, force: boolean, skip: number, top: number, stateId: number): Observable<CaseSearchResults> {\n      let url = '/case/v1/cases' + '?$sandbox=' + sandboxId + '&$filter=applicationId eq '\n        + appId + ' and typeId eq ' + typeId;\n      if (stateId) {\n        url = url + ' and stateId eq ' + stateId;\n      }\n      url = url + '&$skip=' + skip + '&$top=' + top\n        + '&$select=cr';\n      if (term || (!term && !force)) {\n        url = url + '&$search=' + term;\n      }\n\n    return this.http.get(url)\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(caseinfos => {\n          const caserefs: string[] = [];\n            const caseinfolist = new CaseInfoList().deserialize(caseinfos);\n            caseinfolist.caseinfos.forEach(caseinfo => {\n              caserefs.push(caseinfo.caseReference);\n            })\n            return new CaseSearchResults().deserialize({ caserefs: caserefs, searchString: term });\n          }\n        )\n      );\n  }\n\n  public getCaseTypes(sandboxId: number, appId: string, top: number): Observable<CaseTypesList> {\n    const select = 'b,s,sa,a';\n    let url = '/case/v1/types?$sandbox=' + sandboxId + '&$select=' + select + '&$top=' + top;\n    if (appId != null) {\n      url = url + '&$filter=applicationId eq ' + appId;\n    }\n\n    return this.http.get(url)\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(casetypes => new CaseTypesList().deserialize(casetypes)));\n  }\n\n  public getCaseTypeSchema(sandboxId: number, appId: string, top: number): Observable<CaseTypesList> {\n    // https://eu.liveapps.cloud.tibco.com/case/v1/types?$sandbox=25&&$filter=applicationName eq 'Customer Complaint'&$select=b,js,c,ac\n    const select = 'b,js,c,ac,a';\n    let url = '/case/v1/types?$sandbox=' + sandboxId + '&$select=' + select + '&$top=' + top;\n    if (appId != null) {\n      url = url + '&$filter=applicationId eq ' + appId;\n    }\n    return this.http.get(url)\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(casetypes => new CaseTypesList().deserialize(casetypes)));\n  }\n\n    public getCaseTypeStates(sandboxId: number, appId: string, top: number): Observable<CaseTypeStatesList> {\n        const select = 's';\n        let url = '/case/v1/types?$sandbox=' + sandboxId + '&$select=' + select  + '&$top=' + top;\n        if (appId != null) {\n            url = url + '&$filter=applicationId eq ' + appId;\n        }\n        const headers = new HttpHeaders().set('cacheResponse', 'true');\n        return this.http.get(url, { headers: headers } )\n        // return this.http.get(url)\n            .pipe(\n                tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n                map(casetypestates => {\n                  // const x = new CaseTypeStatesList().deserialize(casetypestates[0].states);\n                  // return x;\n\n                  const casetypelist = new CaseTypeStatesListList().deserialize(casetypestates);\n                  let states: CaseTypeStatesList;\n                  casetypelist.casetypes.forEach((casetype) => {\n                    if (casetype.states !== undefined) {\n                      states = new CaseTypeStatesList().deserialize(casetype.states);\n                    }\n                  });\n                  return states;\n                }\n                ));\n    }\n\n    public getCaseTypeBasicInfo(sandboxId: number, appId: string, typeId: string, top: number): Observable<CaseType> {\n        const select = 'b';\n      let url = '/case/v1/types?$sandbox=' + sandboxId + '&$select=' + select + '&$top=' + top;\n      if (appId != null) {\n        url = url + '&$filter=applicationId eq ' + appId;\n      }\n\n      if (!this.caseTypesCacheMap.get(url)) {\n        const cacheEntry$ = this.getCaseTypeBasicInfoCached(url, typeId)\n          .pipe(\n            shareReplay(1)\n          );\n        this.caseTypesCacheMap.set(url, cacheEntry$);\n      }\n      return this.caseTypesCacheMap.get(url);\n    }\n\n    private getCaseTypeBasicInfoCached(url, typeId) {\n      const headers = new HttpHeaders().set('cacheResponse', 'true');\n      return this.http.get(url, { headers: headers } )\n        .pipe(\n          tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n          map(casetypes => {\n            const caseTypesList: CaseTypesList = new CaseTypesList().deserialize(casetypes);\n            let requestedType: CaseType;\n            caseTypesList.casetypes.forEach((casetype) => {\n              if (casetype.id === typeId) {\n                requestedType = casetype;\n              }\n            });\n            return requestedType;\n          })\n        );\n    }\n\n    public clearFromIconSVGTextCache(url) {\n      if (this.iconSVGTextCacheMap.get(url)) {\n        this.iconSVGTextCacheMap.delete(url);\n      }\n    }\n\n    public getIconSVGText(url: string): Observable<string> {\n      // todo: revisit the base href issue\n      if (url.substr(0, 2) === '//') {\n        url = url.substr(1, url.length - 1);\n      }\n      if (!this.iconSVGTextCacheMap.get(url)) {\n        // const fixedUrl = window.location.protocol + '//' + window.location.host  + url;\n        const cacheEntry$ = this.getIconSVGTextCache(url)\n          .pipe(\n            shareReplay(1)\n          );\n        this.iconSVGTextCacheMap.set(url, cacheEntry$);\n      }\n      return this.iconSVGTextCacheMap.get(url);\n    }\n\n    private getIconSVGTextCache(url) {\n      const headers = new HttpHeaders().set('cacheResponse', 'true');\n      return this.http.get(url, {responseType: 'text', headers: headers } )\n        .pipe(\n          map(val => {\n              const svgContents = val.toString();\n              return svgContents;\n            }\n          )\n        );\n    }\n\n  private updateCasesRecord(casesContent: SharedStateContent, caseRef: string, toggle: Boolean): SharedStateContent {\n    const sharedStateContent: SharedStateContent = new SharedStateContent().deserialize(casesContent);\n    const casesRec: CaseList = JSON.parse(sharedStateContent.json);\n    let existing = false;\n      // check if already exists\n\n    if (caseRef === '-1') {\n      // clear list\n        casesRec.caseRefs.length = 0;\n    } else {\n      if (casesRec.caseRefs.indexOf(caseRef) !== -1) {\n        // remove it if it is already in the array\n        casesRec.caseRefs.splice(casesRec.caseRefs.indexOf(caseRef), 1);\n        existing = true;\n      }\n      if (!toggle || existing === false) {\n        // only add it if we are not in toggle mode (favorites) or if the caseRef didnt already exist in the list\n        // now add case to front of array\n        casesRec.caseRefs.unshift(caseRef);\n        // check if we are > max size\n        if (casesRec.maxSize !== -1 && casesRec.caseRefs.length > casesRec.maxSize) {\n          // remove oldest entry\n          casesRec.caseRefs.pop();\n        }\n      }\n    }\n    sharedStateContent.json = TcCoreCommonFunctions.escapeString(JSON.stringify(casesRec));\n    return sharedStateContent;\n  }\n\n  private newCasesRecord(caseRef: string, maxSize: number): SharedStateContent {\n    const casesRec: CaseList = new CaseList();\n    casesRec.maxSize = maxSize;\n    if (caseRef === '-1') {\n      casesRec.caseRefs = [ ];\n    } else {\n      casesRec.caseRefs = [caseRef];\n    }\n    casesRec.uniqueKey = 'caseReference';\n    const sharedStateContent: SharedStateContent = new SharedStateContent();\n    sharedStateContent.json = TcCoreCommonFunctions.escapeString(JSON.stringify(casesRec));\n    return sharedStateContent;\n  }\n\n  public getRecentCases(uiAppId: string, sandboxId: number): Observable<CaseList> {\n    const ssName = uiAppId + '.recentcases.tibcolabs.client.context.PRIVATE';\n    return this.getSSCasesList(ssName, sandboxId);\n  }\n\n  private getSSCasesList(ssName: string, sandboxId: number): Observable<CaseList> {\n    return this.sharedStateService.getSharedState(ssName, 'PRIVATE', false, false)\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(sharedStateList => {\n          if (sharedStateList.sharedStateEntries.length > 0) {\n            return new CaseList().deserialize(JSON.parse(sharedStateList.sharedStateEntries[0].content.json));\n          } else {\n            return new CaseList();\n          }\n        }\n        )\n      );\n  }\n\n  public unsetRecentCase(caseRef: string, uiAppId: string, sandboxId: number) {\n    // NOTE: Use '-1' as caseRef to clear recent cases list\n    const ssName = uiAppId + '.recentcases.tibcolabs.client.context.PRIVATE';\n    this.setCasesRecord(ssName, caseRef, uiAppId, sandboxId, 10, true);\n  }\n\n  public setRecentCase(caseRef: string, uiAppId: string, sandboxId: number) {\n    // NOTE: Use '-1' as caseRef to clear recent cases list\n    const ssName = uiAppId + '.recentcases.tibcolabs.client.context.PRIVATE';\n    this.setCasesRecord(ssName, caseRef, uiAppId, sandboxId, 10, false);\n  }\n\n  private setCasesRecord(ssName: string, caseRef: string, uiAppId: string, sandboxId: number, maxSize: number, toggle: boolean) {\n    // get cases list from shared state if any\n    // update cases data removing oldest if > maxsize\n    // set shared state\n    let casesEntry: SharedStateEntry;\n    this.sharedStateService.getSharedState(ssName, 'PRIVATE', false, false)\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(sharedStateList => {\n            casesEntry = sharedStateList.sharedStateEntries[0] || undefined;\n            let content: SharedStateContent;\n            if (casesEntry) {\n              content = this.updateCasesRecord(casesEntry.content, caseRef, toggle);\n              casesEntry.content = content;\n              sharedStateList.sharedStateEntries[0] = casesEntry;\n              this.sharedStateService.updateSharedState(sharedStateList.sharedStateEntries).subscribe();\n            } else {\n              content = this.newCasesRecord(caseRef, maxSize);\n              this.sharedStateService.createSharedState(ssName, 'PRIVATE', '', sandboxId, undefined, undefined, undefined, content).subscribe();\n            }\n\n            return casesEntry;\n          }\n\n        )\n      ).subscribe(null, error => console.log('Unable to set recent cases: ' + error));\n  }\n\n  public getFavoriteCases(uiAppId: string, sandboxId: number): Observable<CaseList> {\n    const ssName = uiAppId + '.favoritecases.tibcolabs.client.context.PRIVATE';\n    return this.sharedStateService.getSharedState(ssName, 'PRIVATE', false, false)\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(sharedStateList => {\n          if (sharedStateList.sharedStateEntries.length > 0) {\n            return new CaseList().deserialize(JSON.parse(sharedStateList.sharedStateEntries[0].content.json));\n          } else {\n            return new CaseList();\n          }\n        }\n        )\n      );\n  }\n\n  public setFavoriteCase(caseRef: string, uiAppId: string, sandboxId: number) {\n    // NOTE: Use '-1' as caseRef to clear recent cases list\n    const ssName = uiAppId + '.favoritecases.tibcolabs.client.context.PRIVATE';\n    this.setCasesRecord(ssName, caseRef, uiAppId, sandboxId, -1, true);\n  }\n\n  public isFavoriteCase(caseRef: string, uiAppId: string, sandboxId: number): Observable<boolean> {\n    const ssName = uiAppId + '.favoritecases.tibcolabs.client.context.PRIVATE';\n    return this.getSSCasesList(ssName, sandboxId)\n      .pipe(\n        map(caselist => {\n          return caselist.caseRefs ? (caselist.caseRefs.indexOf(caseRef) !== -1) : false;\n        })\n      );\n  }\n\n  public runProcess(sandboxId: number, appId: string, processId: string, caseReference: string, data: any): Observable<any> {\n    const url = '/process/v1/processes';\n    // convert data to an escaped JSON string\n    let dataJson;\n    if (data) {\n      dataJson = TcCoreCommonFunctions.escapeString(JSON.stringify(data));\n    } else {\n      dataJson = TcCoreCommonFunctions.escapeString(JSON.stringify({}));\n    }\n    const body = {\n      'id': processId,\n      'sandboxId': sandboxId,\n      'applicationId': appId,\n      'data': dataJson\n    };\n\n    if (caseReference) {\n      body['caseReference'] = caseReference;\n    }\n\n\n    const bodyStr = JSON.stringify(body);\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/json');\n    return this.http.post(url, bodyStr, { headers })\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(response => response)\n      );\n  }\n\n  // Since we call get userinfo a lot - and the data doesn't tend to change - I will cache it for the session\n  public getUserInfo(userId: string): Observable<UserInfo> {\n    const url =  '/organisation/v1/users/' + userId;\n    if (!this.userInfoCacheMap.get(userId)) {\n      const cacheEntry$ = this.getUserCached(url)\n        .pipe(\n          shareReplay(1)\n        );\n      this.userInfoCacheMap.set(userId, cacheEntry$);\n    }\n      return this.userInfoCacheMap.get(userId);\n  }\n\n  private getUserCached(url) {\n    const headers = new HttpHeaders().set('cacheResponse', 'true');\n    return this.http.get(url, { headers: headers } )\n      .pipe(\n        map(userinfo => new UserInfo().deserialize(userinfo))\n      );\n  }\n\n  /* notes service */\n\n  public getThreads(relatedItemType: string, itemTypeId: string, skip: number, top: number): Observable<ThreadList> {\n    // https://liveapps.tenant-integration.tcie.pro/collaboration/notes?$relatedItemCollection=CASE_APP_15441&$orderby=createdDate%20ASC\n    const url =  '/collaboration/v1/notes?$relatedItemCollection=' + relatedItemType + '_' + itemTypeId\n      + '&$orderby=createdDate desc'\n      + '&$top=' + top + '&$skip=' + skip;\n    return this.http.get(url)\n      .pipe(\n        map(notes => {\n          const returnedNotes = new NotesList().deserialize(notes);\n          const threadList: ThreadList = new ThreadList();\n          threadList.threads = [];\n          // create threads\n          returnedNotes.notes.forEach(function(note) {\n              if (note.level === 1) {\n                const noteThread = new NoteThread(note.thread.id, false, false, false, undefined, [], note);\n                // get other threads for this id\n                returnedNotes.notes.forEach(function (threadNote) {\n                  if (threadNote.level > 1 && threadNote.threadId === note.thread.id) {\n                    // add to the thread\n                    noteThread.thread.push(threadNote);\n                  }\n                });\n                threadList.threads.push(noteThread);\n              }\n            });\n          return threadList;\n        })\n      );\n  }\n\n  public getNotesForCollections(collectionIds): Observable<NotesList> {\n    if (collectionIds) {\n      const url = '/collaboration/v1/notes?$relatedItemCollection=' + collectionIds +\n        '&$orderby=createdDate ASC';\n      return this.http.get(url)\n        .pipe(\n          map(notes => new NotesList().deserialize(notes))\n        );\n    }\n  }\n\n  public deleteAllNotes() {\n  }\n\n  public updateNote(note: Note, noteId: string): Observable<Note> {\n    const url = '/collaboration/v1/notes/' + noteId;\n    const body = note;\n    const bodyStr = JSON.stringify(body);\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/json');\n    return this.http.put(url, bodyStr, { headers })\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map( result => new Note().deserialize(result))\n      );\n  }\n\n  public createNote(relatedItemType: string,\n                    uiAppSource: string,\n                    relatedItemId: string,\n                    notificationLabel: string,\n                    notificationUrl: string,\n                    title: string,\n                    noteText: string): Observable<number> {\n    const url = '/collaboration/v1/notes';\n    const note = new Note().deserialize(\n      {\n        attributes: [],\n        notificationLabel: notificationLabel,\n        notificationUrl: notificationUrl,\n        text: noteText,\n        title: title\n      }\n    );\n    const body = {\n      note: note,\n      relatedItemCollection: [\n        (relatedItemType + '_' + relatedItemId)\n      ],\n      relatedItemId: relatedItemId,\n      relatedItemType: uiAppSource,\n      roles: undefined\n    };\n    const bodyStr = JSON.stringify(body);\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/json');\n    return this.http.post(url, bodyStr, { headers })\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(result => Number(result))\n      );\n  }\n\n  public getNote(noteId: number): Observable<Note> {\n    const url = '/collaboration/v1/notes/' + noteId;\n    return this.http.get(url)\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(note => new Note().deserialize(note)\n        )\n      );\n  }\n\n  public getThread(relatedItemType: string, relatedItemId: string, threadId: number) {\n    const url = '/collaboration/v1/notes/?$relatedItemType=' + relatedItemType\n      + '&relatedItemId=' + relatedItemId\n      + '&filter=threadId=' + threadId\n      + '&orderby=createdDate ASC';\n      return this.http.get(url)\n        .pipe(\n          tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n          map(notes => new NotesList().deserialize(notes)\n          )\n        );\n  }\n\n  public createReplyNote(originalNote: Note, reply: string, noteId: string): Observable<number> {\n    const url = '/collaboration/v1/notes/' + noteId;\n    const body = {\n      notificationLabel: originalNote.notificationLabel,\n      notificationUrl: originalNote.notificationUrl,\n      text: reply\n    };\n    const bodyStr = JSON.stringify(body);\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/json');\n    return this.http.post(url, bodyStr, { headers })\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(value => Number(value))\n      );\n  }\n\n  public subscribeToNotes(relatedItemType, relatedTypeId) {\n    const url = '/collaboration/v1/notifications';\n    const body = {\n      topicId: undefined,\n      threadId: undefined,\n      notifyCollection: {\n        collectionName: relatedItemType + '_' + relatedTypeId,\n        lifecycledWithType: 'RT_CASE',\n        lifecycledWithId: true\n      }\n    };\n    const bodyStr = JSON.stringify(body);\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/json');\n    return this.http.post(url, bodyStr, { headers })\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString()))\n      );\n  }\n\n  public unsubscribeToNotes(relatedItemType, relatedTypeId, userId) {\n    let url = '/collaboration/v1/notifications?$filter=collectionName=';\n    url = url + '\\'' + relatedItemType + '_' + relatedTypeId + '\\' and entityId=' + userId;\n    return this.http.delete(url)\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString()))\n      );\n  }\n\n  public getNotifications(relatedItemType, relatedTypeId, userId): Observable<NotificationList> {\n    const url = '/collaboration/v1/notifications?$filter=collectionName=\\'' + relatedItemType + '_' + relatedTypeId\n            + '\\' and entityId=' + userId;\n    return this.http.get(url)\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(value => new NotificationList().deserialize(value))\n      );\n  }\n\n  public deleteNote(noteId: number) {\n    const url = '/collaboration/v1/notes/' + noteId;\n    return this.http.delete(url)\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString()))\n      );\n  }\n\n  /* end notes service */\n\n  public getGroups(sandboxId: number, top: number, useCache: boolean): Observable<Groups> {\n    const url = '/organisation/v1/groups?$sandbox=' + sandboxId + '&$top=' + top;\n    let headers;\n    if (useCache) {\n      headers = new HttpHeaders().set('cacheResponse', 'true');\n    } else {\n      headers = new HttpHeaders();\n    }\n\n    return this.http.get(url, { headers })\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map( groups => new Groups().deserialize({ groups: groups }))\n      );\n  }\n\n  public getGroupMemberships(sandboxId: number, userId: string, top: number, useCache: boolean): Observable<Groups> {\n    const url = '/organisation/v1/users/' + userId + '/groups' + '?$sandbox=' + sandboxId + '&$top=' + top;\n    let headers;\n    if (useCache) {\n      headers = new HttpHeaders().set('cacheResponse', 'true');\n    } else {\n      headers = new HttpHeaders();\n    }\n\n    return this.http.get(url, { headers })\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map( groups => new Groups().deserialize({ groups: groups }))\n      );\n  }\n\n\n}\n","\nimport {Component, OnDestroy } from '@angular/core';\nimport {Subject} from 'rxjs';\n\n\n/**\n * Generic component extended by others\n *\n *@example <tcla-live-apps-component></tcla-live-apps-component>\n */\n@Component({\n  selector: 'tcla-live-apps-component',\n  templateUrl: './live-apps-component.component.html',\n  styleUrls: ['./live-apps-component.component.css']\n})\n\n/**\n * Class Description of the Component\n */\nexport class LiveAppsComponent implements OnDestroy {\n\n  // use the _destroyed$/takeUntil pattern to avoid memory leaks if a response was never received\n  protected _destroyed$ = new Subject();\n\n  constructor() { }\n\n  ngOnDestroy() {\n    // on destroy\n    this._destroyed$.next();\n  }\n\n}\n","\n\nimport {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {LiveAppsService} from '../../services/live-apps.service';\nimport {CaseInfo, CaseType, CaseTypesList} from '../../models/liveappsdata';\nimport {map, take, takeUntil} from 'rxjs/operators';\nimport {Subject} from 'rxjs';\nimport {LiveAppsComponent} from '../live-apps-component/live-apps-component.component';\n\n\n/**\n * Lists live apps applications in drop down list allowing selection of app\n *\n * ![alt-text](../live-apps-applications.png \"Image\")\n *\n *@example <tcla-live-apps-applications></tcla-live-apps-applications>\n */\n\n@Component({\n  selector: 'tcla-live-apps-applications',\n  templateUrl: './live-apps-applications.component.html',\n  styleUrls: ['./live-apps-applications.component.css']\n})\n\nexport class LiveAppsApplicationsComponent extends LiveAppsComponent implements OnInit {\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  /**\n   * The list of LA Application IDs you want to handle\n   */\n  @Input() appIds: string[];\n\n  /**\n   * Whether to auto select the first app in dropdown selector (eg search)\n   */\n  @Input() selectFirstApp: boolean;\n\n  /**\n   * Application selected from dropdown (output)\n   */\n  @Input() selectedApp: CaseType = this.selectedApp ? this.selectedApp : new CaseType();\n\n\n  /**\n   * ~event selection : Value selected in child component\n   * ~payload CaseType : type varies.  but is when something is selected in a drop down it is passed back to the caller\n   */\n  @Output() selection: EventEmitter<CaseType> = new EventEmitter<CaseType>();\n\n  applications: CaseTypesList = new CaseTypesList();\n  // selectedApp: CaseType = new CaseType();\n  errorMessage: string;\n\n  constructor(protected liveapps: LiveAppsService) {\n    super();\n  }\n\n  changeAppSelection = (appSelected: CaseType) => {\n    this.selectedApp = this.applications.casetypes.find((casetype) => {\n      return casetype.applicationId === appSelected.applicationId;\n    });\n  }\n\n  selectApplication = (selectionEvent) => {\n    this.selectedApp = selectionEvent.source.value;\n    this.selection.emit(selectionEvent.source.value);\n  }\n\n  public refresh = (bypassCache: boolean) => {\n    this.liveapps.getApplications(this.sandboxId, this.appIds, 100, bypassCache)\n      .pipe(\n        take(1),\n        takeUntil(this._destroyed$),\n        map(applicationList => {\n          this.applications = applicationList;\n          if (this.selectedApp.applicationId) {\n            this.selectedApp = applicationList.casetypes.find((casetype) => {\n              return casetype.applicationId === this.selectedApp.applicationId;\n            });\n            // this.selection.emit(this.selectedApp);\n          } else\n          // select first as default\n            if (applicationList.casetypes.length > 0 && this.selectFirstApp) {\n              this.selectedApp = applicationList.casetypes[0];\n              this.selection.emit(applicationList.casetypes[0]);\n          }\n        })\n      )\n      .subscribe(null, error => { this.errorMessage = 'Error retrieving applications: ' + error.error.errorMsg; });\n  }\n\n  ngOnInit(): void {\n    this.refresh(false);\n  }\n\n}\n","import {Component, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, ViewChild} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {LiveAppsService} from '../../services/live-apps.service';\nimport {CaseInfoList, CaseSearchResults, CaseType} from '../../models/liveappsdata';\nimport {LiveAppsComponent} from '../live-apps-component/live-apps-component.component';\nimport {LiveAppsApplicationsComponent} from '../live-apps-applications/live-apps-applications.component';\nimport {map, tap} from 'rxjs/operators';\n\n/**\n * Selection of app + searching for cases\n *\n *  ![alt-text](../live-apps-case-search.png \"Image\")\n *\n *@example <tcla-live-apps-case-search></tcla-live-apps-case-search>\n */\n@Component({\n  selector: 'tcla-live-apps-case-search',\n  templateUrl: './live-apps-case-search.component.html',\n  styleUrls: ['./live-apps-case-search.component.css']\n})\n\nexport class LiveAppsCaseSearchComponent extends LiveAppsComponent {\n  @ViewChild('searchBox', {static: false}) searchBox: ElementRef;\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  /**\n   * The list of LA Application IDs you want to handle\n   */\n  @Input() appIds: string[];\n\n\n  /**\n   * ~event foundRefs : Search completed (caseRefs returned)\n   * ~payload CaseSearchResults : caseRefs matching the search (so parent can display them in case list component)\n   */\n  @Output() foundRefs: EventEmitter<CaseSearchResults> = new EventEmitter<CaseSearchResults>();\n\n  @ViewChild(LiveAppsApplicationsComponent, {static: false}) applicationsComponent: LiveAppsApplicationsComponent;\n\n  searchTerm$: Subject<string>;\n  searchValue: Observable<String>;\n  searchString: string;\n  forcedSearch = false;\n  public selectedStateId: number;\n  public selectedStateLabel: string;\n\n  // case type selector\n  public selectedApp: CaseType = new CaseType();\n\n  constructor(private liveapps: LiveAppsService) {\n    super();\n  }\n\n  public refresh = () => {\n    if (this.applicationsComponent) {\n      this.applicationsComponent.refresh(true);\n    }\n  }\n\n\n  public setCaseType = (caseType: CaseType) => {\n    this.selectedApp = caseType;\n    this.doSearch();\n    this.applicationsComponent.changeAppSelection(caseType);\n  }\n\n  public setSelectedStateId = (stateId: number, stateLabel: string) => {\n    this.selectedStateId = stateId;\n    this.selectedStateLabel = stateLabel;\n    // not currently supported to limit search by stateId\n    // this.doSearch(stateId);\n  }\n\n  // handle search app selection\n  public handleSearchAppSelection = (application: CaseType) => {\n    this.selectedApp = application;\n    this.doSearch();\n  }\n\n  // clear search results\n  public clearResults = () => {\n    this.searchString = '';\n    this.selectedStateId = undefined;\n    this.selectedStateLabel = undefined;\n    this.doSearch();\n  }\n\n  public forceSearch = () => {\n    this.forcedSearch = true;\n    this.liveapps.caseSearchEntries(this.searchBox.nativeElement.value, this.sandboxId, this.selectedApp.applicationId, this.selectedApp.id, true, 0, 1000, null).subscribe(\n      results => {\n        this.foundRefs.emit(results);\n      }\n    );\n  }\n\n  public doSearch = (stateId?: number) => {\n    this.forcedSearch = false;\n    this.searchBox.nativeElement.value = '';\n    const result = new CaseSearchResults().deserialize({ caserefs: [], searchString: '' });\n    this.foundRefs.emit(result);\n    this.searchTerm$ = new Subject<string>();\n    this.searchTerm$.subscribe(next => {\n      this.searchString = next;\n      return next;\n    })\n    this.searchValue = this.searchTerm$.asObservable();\n    if (this.selectedApp.applicationId && this.selectedApp.id && this.sandboxId) {\n      const skip = 0;\n      const top = 1000;\n      // Note: The API limits searches to 1000 items\n      // The service is configured to optimize performance by only returning case references at this stage\n      // The case details will only be loaded when the item is rendered (for example in the case-list component)\n      // Any case list component should use cdk virtual scroll to ensure 1000 case details are not loaded in one go\n      // (from the API or to the DOM)\n      this.liveapps.caseSearch(this.searchTerm$, this.sandboxId, this.selectedApp.applicationId, this.selectedApp.id, skip, top, stateId ? stateId : null)\n        .subscribe(results => {\n          this.foundRefs.emit(results);\n        });\n    }\n  }\n\n}\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\nimport {LiveAppsService} from '../../services/live-apps.service';\nimport { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';\nimport {CaseRoute} from '../../models/liveappsdata';\n\n/**\n * Renders list of cases for caserefs\n *\n * ![alt-text](../live-apps-case-list.png \"Image\")\n *\n *@example <tcla-live-apps-case-list></tcla-live-apps-case-list>\n */\n@Component({\n  selector: 'tcla-live-apps-case-list',\n  templateUrl: './live-apps-case-list.component.html',\n  styleUrls: ['./live-apps-case-list.component.css']\n})\n\nexport class LiveAppsCaseListComponent extends LiveAppsComponent implements OnInit {\n  /**\n   * Text shown in menu bar\n   */\n  @Input() headerText: string;\n\n  /**\n   * case card format - list, card, miniCard, staticList (no click event)\n   */\n  @Input() displayType: string;\n\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  /**\n   * The Application ID of the UI (should ideally be unique as it is shared state key)\n   */\n  @Input() uiAppId: string;\n\n  /**\n   * List of case references to display in the list\n   */\n  @Input() caseRefs: string[];\n\n  /**\n   * Text to highlight in the list of cases (normall text that was searched)\n   */\n  @Input() highlight: string;\n\n  /**\n   * Filter text displayed when listing cases after selecting case type and state via report widget\n   */\n  @Input() headerMessage: string;\n\n\n  /**\n   * ~event clickCase : Case clicked\n   * ~payload CaseRoute : CaseRoute object output when case is clicked so calling component can route accordingly - ie. route to case\n   */\n  @Output() clickCase: EventEmitter<CaseRoute> = new EventEmitter<CaseRoute>();\n\n  /**\n   * ~event clearMatches : Clear Matches button clicked\n   *\n   */\n  @Output() clearMatches = new EventEmitter();\n\n  public errorMessage: string;\n\n  public clickCaseAction = (caseRoute: CaseRoute) => {\n    this.clickCase.emit(caseRoute);\n  }\n\n  public clearMatchingCases = () => {\n    this.clearMatches.emit();\n  }\n\n  constructor(private liveapps: LiveAppsService) {\n    super();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import {Deserializable} from '@tibco-tcstk/tc-core-lib';\nimport {CardConfig, CaseTypeState} from './liveappsdata';\n\nexport class CaseCardConfig implements Deserializable {\n  states: CaseTypeState[];\n  cardConfig: CardConfig;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class StateColorMapRec implements Deserializable {\n  state: string;\n  color: string;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class StateColorMap implements Deserializable {\n  stateColorRecs: StateColorMapRec[];\n  caseTypeColor: string;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {SharedStateContent, SharedStateEntry, SharedStateList, TcCoreCommonFunctions, TcSharedStateService, UiAppConfig} from '@tibco-tcstk/tc-core-lib';\nimport {forkJoin, Observable, of, throwError} from 'rxjs';\nimport {ApiResponseError, CardConfig, CaseInfo, CaseTypeState, CaseTypeStatesList, IconMap, UserInfo} from '../models/liveappsdata';\nimport {LiveAppsService} from './live-apps.service';\nimport {CaseCardConfig, StateColorMap, StateColorMapRec} from '../models/tc-case-card-config';\nimport {catchError, flatMap, map, mergeMap, tap} from 'rxjs/operators';\nimport {flush} from '@angular/core/testing';\nimport {HttpClient} from '@angular/common/http';\nimport {Location} from '@angular/common';\n\nexport const DEFAULT_COLORS: string[] = [\n  '#3E94C0', '#49B3D3', '#76C6CF', '#A9DACD', '#DCECC9',\n  '#FFAB40', '#FFD180', '#FFE0B2', '#FFF3E0', '#81D4FA',\n  '#B3E5FC', '#8AF2F2', '#91A3AE', '#CED8DD', '#EBEFF1',\n  '#6A1B9A', '#AD1457', '#EC407A', '#C4469E', '#BA68C8',\n  '#8C9EFF', '#FF8A80', '#546F7A', '#263237'\n];\n\nexport const DEFAULT_TYPE_COLOR = '#8197c0';\n\nexport const DEFAULT_STATE_COLOR = '#8197c0';\n\nexport const GENERIC_STATE_ICON_SVG = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\">\\n' +\n  '    <path fill=\"<DYNAMICFILL>\" fill-rule=\"nonzero\" d=\"M.045 1.154h13.91v2.133H.045V1.154zM.8 4.75h12.364v8.19c0 .596-.487 1.083-1.082 1.083h-10.2A1.085 1.085 0 0 1 .8 12.94V4.75zm7.978 2.447V5.776H5.222v1.421h3.556z\"/>\\n' +\n  '</svg>\\n';\n\nexport const GENERIC_CASETYPE_ICON_SVG = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 48 48\">\\n' +\n  '    <path fill=\"<DYNAMICFILL>\" fill-rule=\"evenodd\" d=\"M42 42H6c-1.103 0-2-.898-2-2V26.61c4.43 2.623 10.208 3.96 15.729 4.422v1.504c0 1.326.948 2.4 2.118 2.4h4.764c1.17 0 2.118-1.074 2.118-2.4V31.04c6.16-.503 11.505-2.008 15.271-4.264v13.223c0 1.103-.897 2-2 2zM6 15.995h36c1.103 0 2 .898 2 2v3.583c-2.798 2.727-8.447 4.664-15.271 5.268v-1.511c0-1.326-.948-2.4-2.117-2.4h-4.765c-1.17 0-2.118 1.074-2.118 2.4v1.51c-6.651-.6-12.41-2.518-15.729-5.348v-3.501c0-1.103.897-2 2-2zm10.655-8.89c0-.063.023-.098.016-.106l14.944-.011s.04.033.04.117v4.89h-15v-4.89zM42 11.996h-6.345v-4.89C35.655 4.842 33.861 3 31.657 3H16.653c-2.204 0-3.998 1.842-3.998 4.106v4.89H6c-3.308 0-6 2.692-6 6V40c0 3.31 2.692 6 6 6h36c3.309 0 6-2.69 6-6V17.997c0-3.31-2.691-6.001-6-6.001z\"/>\\n' +\n  '</svg>\\n';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TcCaseCardConfigService {\n\n  constructor(private http: HttpClient, private liveAppsService: LiveAppsService, private sharedStateService: TcSharedStateService, private location: Location) {\n  }\n\n  public createCardConfig(sandboxId: number, appId: string, uiAppId: string): Observable<string> {\n    const ssName = uiAppId + '.' + appId + '.stateconfig.tibcolabs.client.context.PUBLIC';\n    const content: SharedStateContent = new SharedStateContent();\n    content.json = TcCoreCommonFunctions.escapeString(JSON.stringify({}));\n    return this.sharedStateService.createSharedState(ssName, 'PUBLIC', '', sandboxId, undefined, undefined, undefined, content)\n      .pipe(\n        map(value => {\n          return value;\n        }\n      )\n    );\n  }\n\n  public updateCardConfig(sandboxId: number, appId: string, uiAppId: string, config: CardConfig, id: string): Observable<CardConfig> {\n    const ssName = uiAppId + '.' + appId + '.stateconfig.tibcolabs.client.context.PUBLIC';\n    const content: SharedStateContent = new SharedStateContent();\n    content.json = TcCoreCommonFunctions.escapeString(JSON.stringify(config));\n    const entry: SharedStateEntry = new SharedStateEntry();\n    entry.content = content;\n    entry.sandboxId = sandboxId;\n    entry.name = ssName;\n    entry.type = 'PUBLIC';\n    entry.id = id;\n    const ssList: SharedStateList = new SharedStateList();\n    ssList.sharedStateEntries = [];\n    ssList.sharedStateEntries.push(entry);\n    return this.sharedStateService.updateSharedState(ssList.sharedStateEntries)\n      .pipe(\n        map(value => {\n          return new CardConfig().deserialize((JSON.parse(value.sharedStateEntries[0].content.json)));\n        })\n      );\n  }\n\n  public createNewCardConfig(states: CaseTypeState[], sandboxId: number, appId: string, uiAppId: string, caseTypeId: string, defaultCaseTypeColor: string, defaultCaseTypeIcon: string, defaultStateColor: string, defaultStateIcon: string): Observable<CaseCardConfig> {\n    // create new config and return it\n    const newConfig$ = this.createCardConfig(sandboxId, appId, uiAppId);\n    const updatedConfig$ = newConfig$.pipe(\n      mergeMap(id => {\n        const stateMap: IconMap[] = [];\n        // one record for the case type icon config\n        stateMap.push(new IconMap(true, caseTypeId, defaultCaseTypeColor, defaultCaseTypeIcon));\n        states.forEach(state => {\n          stateMap.push(new IconMap(false, state.value, defaultStateColor, defaultStateIcon));\n        });\n        const newCardConfig = new CardConfig().deserialize({ id: id, useCaseTypeColor: true, stateMap: stateMap });\n        return this.updateCardConfig(sandboxId, appId, uiAppId, newCardConfig, id).pipe(\n          tap(config => {\n            // trigger update of the cache\n            this.getCardConfig(uiAppId, appId, true, true);\n          }),\n          map(newcard => {\n              return new CaseCardConfig().deserialize(\n                { states: states, cardConfig: newcard }\n              );\n          })\n        );\n      })\n    );\n    return updatedConfig$;\n  }\n\n  public getCaseCardConfig(sandboxId: number, appId: string, uiAppId: string, caseTypeId: string, defaultCaseTypeColor: string, defaultCaseTypeIcon: string, defaultStateColor: string, defaultStateIcon: string): Observable<CaseCardConfig> {\n    const states$ = this.liveAppsService.getCaseTypeStates(sandboxId, appId, 100);\n    const cardConfig$ = this.getCardConfig(uiAppId, appId, true, false).pipe(\n      map(config => {\n          return config;\n      })\n    );\n    return states$.pipe(\n      mergeMap(states => {\n        return cardConfig$.pipe(\n          mergeMap(config => {\n            if (config) {\n              const cardConfig = new CaseCardConfig().deserialize(\n                {states: states.states, cardConfig: config}\n              );\n              return of(cardConfig);\n            } else {\n              return this.createNewCardConfig(states.states, sandboxId, appId, uiAppId, caseTypeId, defaultCaseTypeColor, defaultCaseTypeIcon, defaultStateColor, defaultStateIcon).pipe(\n                map(newCardConfig => {\n                  return newCardConfig;\n                })\n              );\n            }\n          }\n          )\n        );\n      })\n    );\n  }\n\n  public updateCaseCardConfig(sandboxId: number, appId: string, uiAppId: string, updatedConfig: CaseCardConfig): Observable < CaseCardConfig > {\n    return this.updateCardConfig(sandboxId, appId, uiAppId, updatedConfig.cardConfig, updatedConfig.cardConfig.id).pipe(\n      map(cardconfig => {\n        updatedConfig.cardConfig = cardconfig;\n        // remember to flush cache\n        this.getCardConfig(uiAppId, appId, true, true).subscribe();\n        return updatedConfig;\n      })\n    );\n  }\n\n  public getCardConfig(uiAppId: string, appId: string, useCache: boolean, flushCache: boolean): Observable<CardConfig> {\n    const ssName = uiAppId + '.' + appId + '.stateconfig.tibcolabs.client.context.PUBLIC';\n    return this.sharedStateService.getSharedState(ssName, 'PUBLIC', useCache, flushCache).pipe(\n      map(value => {\n          if (value.sharedStateEntries.length > 0) {\n            const ssresult = new CardConfig().deserialize(JSON.parse(value.sharedStateEntries[0].content.json));\n            ssresult.id = value.sharedStateEntries[0].id;\n            return ssresult;\n          } else {\n            return undefined;\n          }\n        }\n      )\n    );\n  }\n\n  public getStateColorInfo (appId: string, uiAppId: string): Observable<StateColorMap> {\n    return this.getCardConfig(uiAppId, appId, true, false).pipe(\n      map(val => {\n        if (val) {\n          const config: CardConfig = val;\n          const stateColorMap = new StateColorMap();\n          stateColorMap.stateColorRecs = [];\n          config.stateMap.forEach((stateMapRec) => {\n            const stateColorMapRec = new StateColorMapRec().deserialize( { state: stateMapRec.state, color: stateMapRec.fill} );\n            if (stateMapRec.isCaseType) {\n              stateColorMap.caseTypeColor = stateMapRec.fill;\n            }\n            stateColorMap.stateColorRecs.push(stateColorMapRec);\n          });\n          return stateColorMap;\n        } else {\n          return new StateColorMap();\n        }\n      })\n    );\n  }\n\n  public getColorForState (appId: string, uiAppId: string, state: string): Observable<string> {\n    return this.getCardConfig(uiAppId, appId, true, false).pipe(\n      map(val => {\n        const stateMap = val.stateMap.find((stateRec) => {\n          return stateRec.state === state;\n        });\n        return (stateMap ? stateMap.fill : undefined);\n      })\n    );\n  }\n\n  public parseCaseInfo(caseinfo: CaseInfo, sandboxId: number, appId: string, typeId: string, uiAppId): Observable<CaseInfo> {\n    // in order to get all the info we need we actually need to call up to 4 observables in parallel\n    const caseInfo$ = this.liveAppsService.getCaseTypeBasicInfo(sandboxId, appId, typeId, 100).pipe(\n      map(val => caseinfo.metadata.applicationLabel = val.label)\n    );\n    const cardConfig$ = this.getCardConfig(uiAppId, appId, true, false).pipe(\n      map(val => {\n          const stateId = caseinfo.summaryObj.state;\n          let stateConfig: IconMap;\n          if (val !== undefined && val.stateMap) {\n            val.stateMap.forEach((state) => {\n              if (state.state === stateId) {\n                stateConfig = state;\n                caseinfo.metadata.stateColor = stateConfig.fill;\n                caseinfo.metadata.stateIcon = stateConfig.icon;\n              }\n              if (state.isCaseType) {\n                stateConfig = state;\n                caseinfo.metadata.caseTypeColor = stateConfig.fill;\n                caseinfo.metadata.caseTypeIcon = stateConfig.icon;\n              }\n              caseinfo.metadata.useCaseTypeColor = val.useCaseTypeColor ? val.useCaseTypeColor : false;\n            });\n          }\n          // defaults\n          if (!caseinfo.metadata.stateColor) {\n            caseinfo.metadata.stateColor = DEFAULT_STATE_COLOR;\n          }\n          if (!caseinfo.metadata.stateIcon) {\n            caseinfo.metadata.stateIcon = 'assets/icons/ic-generic-state.svg';\n          }\n          if (!caseinfo.metadata.caseTypeColor) {\n            caseinfo.metadata.caseTypeColor = DEFAULT_TYPE_COLOR;\n          }\n          if (!caseinfo.metadata.caseTypeIcon) {\n            caseinfo.metadata.caseTypeIcon = 'assets/icons/ic-generic-casetype.svg';\n          }\n        }\n      ));\n    const forkJoinArray = [caseInfo$, cardConfig$];\n    let creatorInfo$;\n    let modifiedInfo$;\n    if (caseinfo.metadata.createdBy) {\n      creatorInfo$ = this.liveAppsService.getUserInfo(caseinfo.metadata.createdBy).pipe(\n        map(val => caseinfo.metadata.createdByDetails = val ? val : new UserInfo())\n      );\n      forkJoinArray.push(creatorInfo$);\n    } else {\n      caseinfo.metadata.createdByDetails = new UserInfo();\n    }\n    if (caseinfo.metadata.modifiedBy) {\n      modifiedInfo$ = this.liveAppsService.getUserInfo(caseinfo.metadata.modifiedBy).pipe(\n        map(val => caseinfo.metadata.modifiedByDetails = val ? val : new UserInfo())\n      );\n      forkJoinArray.push(modifiedInfo$);\n    } else {\n      caseinfo.metadata.modifiedByDetails = new UserInfo();\n    }\n\n    // call all the observables at once and return the Observable to the parsed CaseInfo\n    return forkJoin(forkJoinArray).pipe(\n      map(resultArr => {\n        return caseinfo;\n      })\n    );\n  }\n\n  public getCaseWithSummary(caseRef: string, sandboxId: number, uiAppId: string): Observable<CaseInfo> {\n    // get the base caseinfo from the API, then call parseCaseInfo to create an Observable with all the extra data we need\n    const url = '/case/v1/cases/' + caseRef + '/' + '?$sandbox=' + sandboxId + '&$select=uc, m, s';\n    return this.http.get(url).pipe(\n      mergeMap(caseinfo => {\n          const caseinf = new CaseInfo().deserialize(caseinfo);\n          return this.parseCaseInfo(caseinf, sandboxId, caseinf.metadata.applicationId, caseinf.metadata.typeId, uiAppId);\n        }\n      ),\n      catchError(err => {\n        if (err.error.errorCode === 'CM_CASEREF_NOTEXIST') {\n          // case deleted\n          return of(new CaseInfo().deserialize({ deleted: true } ));\n        }\n        return throwError(err);\n      })\n    );\n  }\n}\n","import {Component, Input, OnChanges, OnDestroy, OnInit, SecurityContext, SimpleChanges} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {DomSanitizer, SafeHtml} from '@angular/platform-browser';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {map, take, takeUntil} from 'rxjs/operators';\nimport {LiveAppsService} from '../../services/live-apps.service';\nimport {Location} from '@angular/common';\nimport {LiveAppsComponent} from '../live-apps-component/live-apps-component.component';\nimport {TcCoreCommonFunctions} from '@tibco-tcstk/tc-core-lib';\nimport {GENERIC_CASETYPE_ICON_SVG, GENERIC_STATE_ICON_SVG} from '../../services/tc-case-card-config.service';\n\n/**\n * renders a single icon for a state\n *\n * ![alt-text](../live-apps-state-icon.png \"\")\n *\n *@example <tcla-live-apps-state-icon></tcla-live-apps-state-icon>\n */\n\n@Component({\n  selector: 'tcla-live-apps-state-icon',\n  templateUrl: './live-apps-state-icon.component.html',\n  styleUrls: ['./live-apps-state-icon.component.css']\n})\nexport class LiveAppsStateIconComponent extends LiveAppsComponent implements OnInit, OnChanges {\n  @Input() id: string;\n  @Input() iconPath: string;\n  @Input() color: string;\n  @Input() iconHostURL: string;\n  @Input() appId: string;\n\n  public iconSVG: SafeHtml;\n  public svgcontents: string = undefined;\n\n  constructor(private sanitizer: DomSanitizer, private http: HttpClient, private liveapps: LiveAppsService, private location: Location) {\n    super();\n  }\n\n  public refillSVG = function(fill) {\n    const updatedsvg = this.svgcontents.replace('fill=\"<DYNAMICFILL>\"', 'fill=\"' + fill + '\"');\n    const newval = this.sanitizer.bypassSecurityTrustHtml(updatedsvg);\n    this.iconSVG = newval;\n  };\n\n  public refresh = (icon, fill) => {\n    let url: string;\n    if (icon && icon !== 'assets/icons/ic-generic-casetype.svg' && icon !== 'assets/icons/ic-generic-state.svg') {\n      if (icon.slice(0, 13) === 'assets/icons/') {\n        // if icon is in assets folder we need to prepare the Url\n        url = TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, icon);\n      } else {\n        url = '/' + icon;\n      }\n      this.liveapps.getIconSVGText(url)\n        .pipe(\n          take(1),\n          takeUntil(this._destroyed$),\n          map(val => {\n              this.svgcontents = val;\n              val = val.toString().replace('fill=\"<DYNAMICFILL>\"', 'fill=\"' + fill + '\"');\n              const newval = this.sanitizer.bypassSecurityTrustHtml(val);\n              return newval;\n            }\n          )\n        )\n        .subscribe(val => {\n            this.iconSVG = val;\n          }\n          , error => {\n            console.log('Unable to retrieve icon: ' + error.errorMsg);\n          }\n        );\n    } else {\n      // use generic icon\n      let svgcontents: string;\n      if (icon === 'assets/icons/ic-generic-casetype.svg') {\n        svgcontents = GENERIC_CASETYPE_ICON_SVG;\n      } else {\n        svgcontents = GENERIC_STATE_ICON_SVG;\n      }\n      this.svgcontents = svgcontents;\n      svgcontents = svgcontents.replace('fill=\"<DYNAMICFILL>\"', 'fill=\"' + fill + '\"');\n      const newval = this.sanitizer.bypassSecurityTrustHtml(svgcontents);\n      this.iconSVG = newval;\n    }\n  }\n\n\n  ngOnInit() {\n    // this.refresh(this.iconPath, this.color);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ((changes.iconPath && (changes.iconPath.currentValue !== changes.iconPath.previousValue)) || (changes.color && (changes.color.currentValue !== changes.color.previousValue))) {\n      this.refresh(this.iconPath, this.color);\n    }\n  }\n\n}\n","import {\n  Component,\n  EventEmitter,\n  Input, OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList, SimpleChanges,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation\n} from '@angular/core';\nimport {LiveAppsService} from '../../services/live-apps.service';\nimport {CardConfig, CaseInfo, CaseRoute, Metadata} from '../../models/liveappsdata';\nimport {map, take, takeUntil} from 'rxjs/operators';\nimport {Subject} from 'rxjs';\nimport {DomSanitizer, Meta, SafeHtml} from '@angular/platform-browser';\nimport {LiveAppsStateIconComponent} from '../live-apps-state-icon/live-apps-state-icon.component';\nimport {LiveAppsComponent} from '../live-apps-component/live-apps-component.component';\nimport {TcCaseCardConfigService} from '../../services/tc-case-card-config.service';\n\n/**\n * Renders case summary cards\n *\n * ![alt-text](../live-apps-case-summary.png \"Image\")\n *\n * ![alt-text](../live-apps-case-summary-2.png \"Image\")\n *\n *@example <tcla-live-apps-case-summary></tcla-live-apps-case-summary>\n */\n\n@Component({\n  selector: 'tcla-live-apps-case-summary',\n  templateUrl: './live-apps-case-summary.component.html',\n  styleUrls: ['./live-apps-case-summary.component.css']\n})\n\nexport class LiveAppsCaseSummaryComponent extends LiveAppsComponent implements OnInit, OnChanges {\n  // The ViewChild declarations give access to components marked on the template so that I can call public functions like refresh\n  @ViewChild('caseStateIcon', {static: false}) stateIconComponent: LiveAppsStateIconComponent;\n  @ViewChild('caseTypeIcon', {static: false}) caseTypeIconComponent: LiveAppsStateIconComponent;\n\n  /**\n   * Whether to use static data (ie. when in app config box)\n   */\n  @Input() configMode: boolean;\n\n  /**\n   * static data for app config box\n   */\n  @Input() configModeColor: string;\n\n  /**\n   * static data for app config box\n   */\n  @Input() configModeIcon: string;\n\n  /**\n   * static data for app config box\n   */\n  @Input() configModeCaseTypeColor: string;\n\n  /**\n   * static data for app config box\n   */\n  @Input() configModeCaseTypeIcon: string;\n\n  /**\n   * static data for app config box\n   */\n  @Input() configModeAppTypeLabel: string;\n\n  /**\n   * The case reference\n   */\n  @Input() caseRef: string;\n\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  /**\n   * case card format - list, card, miniCard, staticList (no click event)\n   */\n  @Input() displayType: string; // miniCard, card, list\n\n  /**\n   * Whether to display a border around the card\n   */\n  @Input() borderCard: boolean;\n\n  /**\n   * Whether to display the colored \"bar\" on a summary card (on left or top)\n   */\n  @Input() typeBar: boolean;\n\n  /**\n   * The Application ID of the UI (should ideally be unique as it is shared state key)\n   */\n  @Input() uiAppId: string;\n\n  /**\n   * Text to highlight in the list of cases (normall text that was searched)\n   */\n  @Input() highlight: string;\n\n\n  /**\n   * ~event clickCase : Case clicked\n   * ~payload CaseRoute : CaseRoute object output when case is clicked so calling component can route accordingly - ie. route to case\n   */\n  @Output() clickCase: EventEmitter<CaseRoute> = new EventEmitter<CaseRoute>();\n\n  /**\n   * ~event deleted : Case Displayed has been deleted\n   * ~payload string : string emitted when summary tries to load data for a case that has been deleted (so it can be hidden.removed from - for example recent cases list)\n   */\n  @Output() deleted: EventEmitter<string> = new EventEmitter<string>();\n\n  public casedata: any;\n  public summary: any;\n  public summaryKeys: string[];\n  public summaryValues: string[];\n  public metadata: Metadata;\n  public appStateConfig: CardConfig;\n  public errorMessage;\n  public appId: string;\n  public typeId: string;\n  color: string;\n\n  public clickCaseAction = () => {\n    const caseRoute = new CaseRoute().deserialize({ caseRef: this.caseRef, appId: this.appId, typeId: this.typeId});\n    this.clickCase.emit(caseRoute);\n  }\n\n  public restylePreview = (icon, fill) => {\n    this.metadata.stateIcon = icon;\n    this.metadata.stateColor = fill;\n    this.stateIconComponent.refresh(icon, fill);\n  }\n\n  public restylePreviewCaseType = (icon, fill) => {\n    this.metadata.caseTypeIcon = icon;\n    this.metadata.caseTypeColor = fill;\n    this.caseTypeIconComponent.refresh(icon, fill);\n  }\n\n  public refresh = () => {\n    if (!this.configMode) {\n      this.caseCardConfigService.getCaseWithSummary(this.caseRef, this.sandboxId, this.uiAppId)\n        .pipe(\n          take(1),\n          takeUntil(this._destroyed$),\n          map(caseinfo => {\n            if (!caseinfo.deleted) {\n              this.appId = caseinfo.metadata.applicationId;\n              this.typeId = caseinfo.metadata.typeId;\n              this.casedata = caseinfo.untaggedCasedataObj;\n              this.metadata = caseinfo.metadata;\n              this.summary = caseinfo.summaryObj;\n              this.summaryKeys = Object.keys(this.summary);\n              this.summaryValues = Object.values(this.summary);\n            } else {\n              // notify parent case has been deleted\n              this.deleted.emit(this.caseRef);\n            }\n          })\n        ).subscribe(\n        null, error => {\n          this.errorMessage = 'Error retrieving case data: ' + error.error.errorMsg;\n        });\n    } else {\n      const sampleCaseInfoJSON = '{\\n' +\n        '  \"untaggedCasedata\": \"\",\\n' +\n        '  \"summary\": \"{\\\\\"state\\\\\":\\\\\"Current State\\\\\",\\\\\"Summary1\\\\\":\\\\\"000001\\\\\",\\\\\"Summary2\\\\\":\\\\\"summary data\\\\\",\\\\\"Summary3\\\\\":\\\\\"summary data\\\\\"}\",\\n' +\n        '  \"metadata\": {\\n' +\n        '    \"createdBy\": \"-1\",\\n' +\n        '    \"creationTimestamp\": \"2018-11-27T08:40:03.404Z\",\\n' +\n        '    \"createdByDetails\": {\\n' +\n        '      \"username\": \"creator@mycompany.com\"\\n' +\n        '    },\\n' +\n        '    \"modifiedBy\": \"-1\",\\n' +\n        '    \"modificationTimestamp\": \"2018-11-27T08:40:22.010Z\",\\n' +\n        '    \"lockType\": \"1\",\\n' +\n        '    \"msLockExpiry\": \"1543308022271\",\\n' +\n        '    \"msSystemTime\": \"1545127800839\",\\n' +\n        '    \"applicationId\": \"934\",\\n' +\n        '    \"typeId\": \"1\"\\n' +\n        '  },\\n' +\n        '  \"summaryObj\": {\\n' +\n        '    \"state\": \"Current State\",\\n' +\n        '    \"Summary 1\": \"000001\",\\n' +\n        '    \"Summary 2\": \"The case name\",\\n' +\n        '    \"Summary 3\": \"The case description\"\\n' +\n        '  },\\n' +\n        '  \"untaggedCasedataObj\": {\\n' +\n        '  }\\n' +\n        '}'\n      const caseinfo = new CaseInfo().deserialize(JSON.parse(sampleCaseInfoJSON));\n      this.casedata = caseinfo.untaggedCasedataObj;\n      this.metadata = caseinfo.metadata;\n      this.summary = caseinfo.summaryObj;\n      this.summaryKeys = Object.keys(this.summary);\n      this.summaryValues = Object.values(this.summary);\n      this.metadata.stateIcon = this.configModeIcon;\n      this.metadata.stateColor = this.configModeColor;\n      this.metadata.caseTypeColor = this.configModeCaseTypeColor;\n      this.metadata.caseTypeIcon = this.configModeCaseTypeIcon;\n      this.metadata.applicationLabel = this.configModeAppTypeLabel;\n    }\n  }\n\n  constructor(protected liveapps: LiveAppsService, protected caseCardConfigService: TcCaseCardConfigService, protected sanitizer: DomSanitizer) {\n    super();\n  }\n\n  ngOnInit() {\n    this.refresh();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.configModeAppTypeLabel && !changes.configModeAppTypeLabel.isFirstChange() && (changes.configModeAppTypeLabel.currentValue !== changes.configModeAppTypeLabel.previousValue)) {\n      this.refresh();\n    }\n  }\n\n}\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {LiveAppsService} from '../../services/live-apps.service';\nimport {map, take, takeUntil} from 'rxjs/operators';\nimport {Note, NoteThread, NotificationList, ThreadList} from '../../models/liveappsdata';\nimport {LiveAppsComponent} from '../live-apps-component/live-apps-component.component';\nimport {ToolbarButton} from '@tibco-tcstk/tc-core-lib';\nimport {TcButtonsHelperService} from '@tibco-tcstk/tc-core-lib';\n\n\n/**\n * This Component allows to list, and add Notes to a Case-Instance or other Context e.g. a whole Application.\n * Any Note can have Sub-Notes to allow real collaboration.\n *\n * ![alt-text](../live-apps-notes.png \"Notes Component Image\")\n *\n *@example <tcla-live-apps-notes></tcla-live-apps-notes>\n */\n@Component({\n  selector: 'tcla-live-apps-notes',\n  templateUrl: './live-apps-notes.component.html',\n  styleUrls: ['./live-apps-notes.component.css']\n})\n\nexport class LiveAppsNotesComponent extends LiveAppsComponent implements OnInit {\n  /**\n   * itemType for notes collection\n   */\n  @Input() relatedItemType: string; // use 'CASE_APP' to share notes with case manager\n\n  /**\n   * itemId for notes collection\n   */\n  @Input() relatedItemId: string; // 'caseRef' for case related\n\n  /**\n   * The ID of the logged user\n   */\n  @Input() userId: string;\n\n  /**\n   * Whether to show the header bar in the widget - eg. favorites on home page (contains icon etc) - if off icons still appear without bar\n   */\n  @Input() showHeader: boolean = this.showHeader ? this.showHeader : true;\n\n  public notes: Note[];\n  public errorMessage: string;\n  public newNote: any = {};\n  public newNoteId: number;\n  public delNoteId: number;\n  public threads: ThreadList;\n  public subscribed: Boolean;\n  public skip = 0;\n  public top = 5;\n  public end = false;\n  public toolbarButtons: ToolbarButton[] = [];\n\n  constructor(private liveapps: LiveAppsService, private buttonsHelper: TcButtonsHelperService) {\n    super();\n  }\n\n  public refresh = () => {\n    this.skip = 0;\n    this.top = 5;\n    this.end = false;\n    if (this.threads && this.threads.threads) {\n      this.threads.threads.length = 0;\n    }\n    this.getBatch();\n    this.getNotifications();\n  }\n\n  public getBatch = () => {\n    if (!this.end) {\n      this.liveapps.getThreads(this.relatedItemType, this.relatedItemId, this.skip, this.top)\n        .pipe(\n          take(1),\n          takeUntil(this._destroyed$),\n          map(threadList => {\n            if (!this.threads) {\n              this.threads = threadList;\n            } else {\n              // this will strip any duplicates that may have been retrieved due to fast scrolling\n              const filteredEvents = threadList.threads.filter(x => this.threads.threads.every(y => y.note.id !== x.note.id));\n              this.threads.threads = this.threads.threads.concat(filteredEvents);\n            }\n            if (threadList.threads.length < this.top) {\n              this.end = true;\n            } else {\n              this.skip = this.skip + threadList.threads.length - 1;\n            }\n          })\n        ).subscribe(null, error => {\n        this.errorMessage = 'Error retrieving notes: ' + error.error.errorMsg;\n      });\n    }\n  }\n\n  public toggleReplies = (thread) => {\n    thread.showReplies = !thread.showReplies;\n  }\n\n  public toggleNewReply = (thread) => {\n    if (!thread.newReply) {\n      thread.newReply = {};\n    }\n    if (thread.showReplies && !thread.showNewReply) {\n      thread.newReply = {};\n      thread.showNewReply = true;\n    } else {\n      thread.showNewReply = !thread.showNewReply;\n      thread.showReplies = !thread.showReplies;\n    }\n\n  }\n\n  public createReply = (thread, replyText) => {\n    this.liveapps.createReplyNote(thread.note, replyText, thread.note.id)\n      .pipe(\n        take(1),\n        takeUntil(this._destroyed$),\n        map(result => {\n          this.newNoteId = result;\n          thread.newReply.text = undefined;\n          this.refresh();\n        })\n      )\n      .subscribe(null, error => this.errorMessage = 'Error creating new note: ' + error.error.errorMessage);\n  }\n\n  public createThread = (noteText) => {\n    if (noteText !== undefined) {\n      this.liveapps.createNote(this.relatedItemType, 'RT_CASE', this.relatedItemId, 'comments update', '', '', noteText)\n        .pipe(\n          take(1),\n          takeUntil(this._destroyed$),\n          map(result => {\n            this.newNoteId = result;\n            this.newNote.text = undefined;\n            this.refresh();\n          })\n        )\n        .subscribe(null, error => this.errorMessage = 'Error creating new note: ' + error.error.errorMessage);\n    }\n  }\n\n\n  protected createToolbarButtons = (subscribed): ToolbarButton[] => {\n    const subscribeButton: ToolbarButton = this.buttonsHelper.createButton(\n      'subscribe', 'tcs-collaboration-unsubscribed', true, 'Enable Notifications', !subscribed, !subscribed);\n    const unSubscribeButton: ToolbarButton = this.buttonsHelper.createButton(\n      'unsubscribe', 'tcs-collaboration-subscribed', true, 'Disable Notifications', subscribed, subscribed);\n    const buttons = [ subscribeButton, unSubscribeButton ];\n    return buttons;\n  }\n\n  public setupNotificationButtons = (subscribed: boolean) => {\n    const buttons: ToolbarButton[] = this.createToolbarButtons(subscribed);\n    this.buttonsHelper.updateButtons(buttons, this.toolbarButtons);\n  }\n\n  public updateButtonDef = (updatedToolbarButtons: ToolbarButton[]) => {\n    updatedToolbarButtons.forEach( updatedButton => {\n      const idx = this.toolbarButtons.findIndex(item => item.id === updatedButton.id);\n      this.toolbarButtons[idx] = updatedButton;\n    });\n  }\n\n  public handleToolbarButtonEvent = (id) => {\n    if (id === 'subscribe') {\n      this.subscribe();\n    } else if (id === 'unsubscribe') {\n      this.unsubscribe();\n    }\n  }\n\n  public recreateButtonsForNotifications = (subscribed) => {\n      const buttons: ToolbarButton[] = this.createToolbarButtons(subscribed);\n      this.buttonsHelper.updateButtons(buttons, this.toolbarButtons);\n  }\n\n  public getNotifications = () => {\n    this.liveapps.getNotifications(this.relatedItemType, this.relatedItemId, this.userId)\n      .pipe(\n        take(1),\n        takeUntil(this._destroyed$),\n        map(result => {\n          const notificationList: NotificationList = result;\n          if (notificationList.notifications.length > 0) {\n            this.subscribed = true;\n            this.setupNotificationButtons(true);\n          } else {\n            this.subscribed = false;\n            this.setupNotificationButtons(false);\n          }\n        })\n      )\n      .subscribe(null, error => this.errorMessage = 'Error creating new note: ' + error.error.errorMessage);\n  }\n\n  public subscribe = () => {\n    this.liveapps.subscribeToNotes(this.relatedItemType, this.relatedItemId)\n      .pipe(\n        take(1),\n        takeUntil(this._destroyed$),\n        map(result => {\n          if (result) {\n            this.subscribed = true;\n            this.recreateButtonsForNotifications(true);\n          }\n        })\n      )\n      .subscribe(null, error => this.errorMessage = 'Error creating new note: ' + error.error.errorMessage);\n  }\n\n  public unsubscribe = () => {\n    this.liveapps.unsubscribeToNotes(this.relatedItemType, this.relatedItemId, this.userId)\n      .pipe(\n        take(1),\n        takeUntil(this._destroyed$),\n        map(result => {\n          this.subscribed = false;\n          this.recreateButtonsForNotifications(false);\n        })\n      )\n      .subscribe(null, error => this.errorMessage = 'Error creating new note: ' + error.error.errorMessage);\n  }\n\n  public editNote = (thread) => {\n    thread.editMode = !thread.editMode;\n  }\n\n  public updateNote = (note, updatedText) => {\n    console.log('Updating note');\n    note.text = updatedText;\n    this.liveapps.updateNote(note, note.id)\n      .pipe(\n        take(1),\n        takeUntil(this._destroyed$),\n        map(result => {\n          console.log('Note updated');\n          this.refresh();\n        })\n      )\n      .subscribe(null, error => this.errorMessage = 'Error updating note: ' + error.error.errorMessage);\n  }\n\n  public deleteNote = (id) => {\n    console.log('Deleting note');\n    this.liveapps.deleteNote(id)\n      .pipe(\n        take(1),\n        takeUntil(this._destroyed$),\n        map(result => {\n          console.log('Note deleted: ' + result);\n          this.refresh();\n        })\n      )\n      .subscribe(null, error => this.errorMessage = 'Error creating new note: ' + error.error.errorMessage);\n  }\n\n  ngOnInit() {\n    this.refresh();\n    this.newNote.text = '';\n\n  }\n\n}\n","import {Deserializable} from '@tibco-tcstk/tc-core-lib';\nimport {UserInfo} from './liveappsdata';\n\nexport class DocumentAction implements Deserializable {\n  action: string;\n  document: Document;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Document implements Deserializable {\n  artifactCheckSum: string;\n  artifactRef: string;\n  artifactVersion: string;\n  author: number;\n  authorDetails: UserInfo;\n  creationDate: Date;\n  description: string;\n  id: string;\n  lastModifiedBy: string;\n  lastModifiedByDetails: UserInfo;\n  lastModifiedDate: Date;\n  mimeType: string;\n  name: string;\n  ownerApp: string;\n  size: string;\n  fileSize: string;\n  extension: string;\n  fileIcon: string;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class DocumentList implements Deserializable {\n  documents: Document[];\n  deserialize(input: any): this {\n    this.documents = [];\n    Object.assign(this.documents, input);\n    return this;\n  }\n}\n\nexport class OrgFolder implements Deserializable {\n  id: string;\n  name: string;\n  owner: string;\n  ownerSub: string;\n  ownerSandbox: string;\n  creationDate: string;\n  lastModifiedDate: string;\n  lastModifiedBy: string;\n  publishedVersion: string;\n  latestVersion: string;\n  publisedVersionId: string;\n  latestVersionId: string;\n  checksum: string;\n  extRef: string;\n  tags: DocTags[];\n  descriptor: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class DocTags implements Deserializable {\n  id: string;\n  name: string;\n  ownerSub: string;\n  deserialize(input: any): this {\n    return this;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Observable, throwError} from 'rxjs';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {ApiResponseError, ApiResponseText} from '../models/liveappsdata';\nimport {LiveAppsService} from './live-apps.service';\nimport {Document, DocumentList, OrgFolder} from '../models/tc-document';\nimport {catchError, flatMap, map, tap} from 'rxjs/operators';\nimport {TcCoreCommonFunctions} from '@tibco-tcstk/tc-core-lib';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TcDocumentService {\n\n  constructor(private http: HttpClient, private liveapps: LiveAppsService) {\n  }\n\n  public createOrgFolder(name: string): Observable<ApiResponseText> {\n    const url = '/webresource/v1/orgFolders/';\n    const body = new OrgFolder().deserialize({ name: name });\n    const bodyStr = JSON.stringify(body);\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/json');\n    return this.http.post(url, bodyStr, { headers }).pipe(\n      tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n      map(response => new ApiResponseText().deserialize(response))\n    );\n  }\n\n  public getOrgFolder(name: string, useCache: boolean, flushCache: boolean): Observable<OrgFolder> {\n    const url = '/webresource/v1/orgFolders/' + name + '/';\n    let headers: HttpHeaders = new HttpHeaders();\n    if (useCache) {\n      headers = headers.set('cacheResponse', 'true');\n    }\n    if (flushCache) {\n      headers = headers.set('flushCache', 'true');\n    }\n    const options = {headers: headers};\n    return this.http.get(url, options).pipe(\n      map(response => {\n        return new OrgFolder().deserialize(response);\n      }),\n      catchError(error => {\n        const apiError = new ApiResponseError().deserialize(error.error);\n        if (apiError.errorCode === 'WR_FOLDER_DOES_NOT_EXIST') {\n          return this.createOrgFolder(name).pipe(\n            flatMap(newOrgFolder => {\n              // trigger cache flush\n              return this.getOrgFolder(name, true, true);\n            })\n          );\n        } else {\n          throwError(error);\n        }\n      })\n    );\n  }\n\n  public initOrgFolder(name: string): Observable<ApiResponseText> {\n    const orgFolder$ = this.getOrgFolder(name, true, false).pipe(\n      map(orgFolderResp => {\n        return new ApiResponseText().deserialize({ message: 'orgFolder ok'});\n      }),\n      catchError(error => {\n        const apiError = new ApiResponseError().deserialize(error.error);\n        if (apiError.errorCode === 'WR_FOLDER_DOES_NOT_EXIST') {\n          return this.createOrgFolder(name).pipe(\n            map(newOrgFolder => {\n              // trigger cache flush\n              this.getOrgFolder(name, true, true).subscribe();\n              return newOrgFolder;\n            })\n          );\n        } else {\n          throwError(error);\n        }\n      })\n    );\n    return orgFolder$;\n  }\n\n  public listDocuments(folderType: string, folderId: string, sandboxId: number, filter: string): Observable<DocumentList> {\n    let url: string;\n    url = '/webresource/v1/' + folderType + '/' + folderId + '/artifacts/';\n    if (sandboxId) {\n      url = url + '?$sandbox=' + sandboxId;\n    }\n    if (filter) {\n      url = url + '&$filter=contains(name,\\'' + filter + '\\')';\n    }\n    return this.http.get(url)\n      .pipe(\n        map(docs => {\n            const docList = new DocumentList().deserialize(docs);\n            for (let x = 0; x < docList.documents.length; x++) {\n              docList.documents[x] = this.parseDocument(docList.documents[x]);\n            }\n            return docList;\n          }\n        )\n      );\n  }\n\n  private parseDocument(document): Document {\n    const splitDocName = document.name.split('.');\n    if (splitDocName.length > 1) {\n      document.extension = splitDocName[splitDocName.length - 1];\n    } else {\n      document.extension = '';\n    }\n    document.fileIcon = this.getIcon(document.extension);\n    document.fileSize = TcCoreCommonFunctions.fileSizeToHuman(Number(document.size));\n    this.liveapps.getUserInfo(document.author).subscribe(val => {\n      document.authorDetails = val;\n      return document;\n    }, error => { console.log('Unable to retrieve user details for user: ' + error.errorMsg); });\n    this.liveapps.getUserInfo(document.lastModifiedBy).subscribe(val => {\n      document.lastModifiedByDetails = val;\n      return document;\n    }, error => { console.log('Unable to retrieve user details for user: ' + error.errorMsg); });\n    return document;\n  }\n\n  public deleteDocument(folderType: string, folderId: string, documentName: string, sandboxId: number): Observable<ApiResponseText> {\n    const url = '/webresource/v1/' + folderType + '/' + folderId + '/artifacts/' + documentName + '?$sandbox=' + sandboxId;\n    return this.http.delete(url)\n      .pipe(\n        map( val => new ApiResponseText().deserialize(val))\n      );\n  }\n\n  public getUrlForDocument(folderType: string, folderId: string, docId: string, docVersion: string, sandboxId: number): string {\n    let url = '/webresource/';\n    if (folderType === 'orgFolders') {\n      url = url + 'orgFolders/' + folderId;\n    } else {\n      url = url + 'folders/' + folderId;\n    }\n    if (sandboxId && folderType !== 'orgFolders') {\n      url = url + '/' + sandboxId;\n    }\n    url = url + '/' + docId;\n    if (docVersion) {\n      url = url + '?$version=' + docVersion;\n    }\n    return url;\n  }\n\n  public downloadDocument(folderType: string, folderId: string, docId: string, docVersion: string, sandboxId: number): Observable<any> {\n    let url = '/webresource/';\n    if (folderType === 'orgFolders') {\n      url = url + 'orgFolders/' + folderId;\n    } else {\n      url = url + 'folders/' + folderId;\n    }\n    if (sandboxId && folderType !== 'orgFolders') {\n      url = url + '/' + sandboxId;\n    }\n    url = url + '/' + docId + '?$download=true';\n    if (docVersion) {\n      url = url + '&$version=' + docVersion;\n    }\n    // todo: Check whether application/octet-stream is ok or whether we should change it\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/octet-stream',\n    });\n    return this.http.get(url, { headers, responseType: 'blob' as 'json' });\n  }\n\n  public uploadDocument(folderType: string, folderId: string, sandboxId: number,\n                        fileToUpload: File, fileName: string, description: string): Observable<any> {\n    let url = '/webresource/v1/' + folderType\n      + '/' + folderId\n      + '/artifacts/' + fileName + '/upload/';\n\n    if (sandboxId) {\n      url = url + '?$sandbox=' + sandboxId;\n    }\n\n    if (description) {\n      url = url + '&description=' + description;\n    }\n    const headers = new HttpHeaders({\n      'accept': 'application/json',\n      'Content-Type': 'multipart/form-data',\n      'filename': fileName,\n      'enctype': 'multipart/form-data'\n    });\n    const formData: FormData = new FormData();\n    formData.append('artifactContents', fileToUpload);\n    return this.http.post(url, formData, { headers: headers, reportProgress: true, observe: 'events' });\n  }\n\n  private getIcon(extension: string): string {\n    if (extension === 'txt') {\n      return('doc');\n    } else if (extension === 'css') {\n      return('doc');\n    } else if (extension === 'js') {\n      return('doc');\n    } else if (extension === 'pdf') {\n      return('doc');\n    } else if (extension === 'xml') {\n      return('doc');\n    } else if (extension === 'doc') {\n      return('doc');\n    } else if (extension === 'zip') {\n      return('zip');\n    } else if (extension === 'ppt') {\n      return('doc');\n    } else if (extension === 'png') {\n      return('image');\n    } else {\n      return('doc');\n    }\n  }\n\n}\n","import {Component, EventEmitter, Inject, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {LiveAppsService} from '../../services/live-apps.service';\nimport {map, take, takeUntil} from 'rxjs/operators';\nimport {DocumentList, Document, DocumentAction} from '../../models/tc-document';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material';\nimport {LiveAppsComponent} from '../live-apps-component/live-apps-component.component';\nimport {TcDocumentService} from '../../services/tc-document.service';\nimport {HttpEventType} from '@angular/common/http';\n\n\n/**\n * Document List and upload Component\n *\n * This Component allows to list, upload, download, Documents attached to a Case-Instance or a whole Application.\n * In the Upload Dialog the User is able to select a local File and enter a short Description.\n *\n * The Component stores also the following Data\n * - uploading User\n * - Timestamp\n * - File Size\n *\n * Document List<br>\n * ![alt-text](../live-apps-documents.png \"Documents Component Image\")\n * Document Upload Dialog <br>\n * ![alt-text](../Docs-Upload.png \"Documents Component Image\")\n *\n *@example <tcla-live-apps-documents></tcla-live-apps-documents>\n */\n\n@Component({\n  selector: 'tcla-live-apps-documents',\n  templateUrl: './live-apps-documents.component.html',\n  styleUrls: ['./live-apps-documents.component.css']\n})\nexport class LiveAppsDocumentsComponent extends LiveAppsComponent implements OnInit {\n\n  constructor(private liveapps: LiveAppsService, private documentsService: TcDocumentService, public dialog: MatDialog) {\n    super();\n  }\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  /**\n   * orgFolders' or 'caseFolders' - different API calls made according to which one this is\n   */\n  @Input() folderType: string; // 'orgFolders' or 'caseFolders'\n\n  /**\n   * The organisation folder to store/retrieve documents\n   */\n  @Input() folderId: string;   // caseRef for caseFolder\n\n  /**\n   * NOT used but would allow a search filter on documents\n   */\n  @Input() filter: string;\n\n  /**\n   * header text on component (defaults to documents)\n   */\n  @Input() folderDescription: string;\n\n  /**\n   * Whether to show the header bar in the widget - eg. favorites on home page (contains icon etc) - if off icons still appear without bar\n   */\n  @Input() showHeader: boolean = this.showHeader ? this.showHeader : true;\n\n  /**\n   * Custom Document Buttons (array of text)\n   */\n  @Input() customActions: string[]\n\n  /**\n   * Custom Document Action Event: fired when a custom action is clicked for a document (outputs the action name and a document (DocumentAction))\n   */\n  @Output() customActionClicked: EventEmitter<DocumentAction> = new EventEmitter<DocumentAction>()\n\n  public errorMessage: string;\n  public documents: Document[];\n  public fileToUpload: File = undefined;\n  public fileDescription: string;\n  uploadMessage: string;\n  public uploadProgress: number;\n\n  public refresh = () => {\n    this.listDocuments();\n  }\n\n  public customActionClick = (action: string, document: Document) => {\n    this.customActionClicked.emit(new DocumentAction().deserialize(\n      {\n        action,\n        document\n      }\n    ));\n  }\n\n  public listDocuments = () => {\n    this.documentsService.listDocuments(this.folderType, this.folderId, this.sandboxId, this.filter)\n      .pipe(\n        take(1),\n        takeUntil(this._destroyed$),\n        map(documentslist => {\n          this.documents = documentslist.documents;\n        })\n      )\n      .subscribe(null, error => { this.errorMessage = 'Error retrieving case states: ' + error.error.errorMsg; });\n    }\n\n  public uploadDocument = (doc) => {\n  }\n\n  public removeDocument = (doc) => {\n    this.documentsService.deleteDocument(this.folderType, this.folderId, doc.name, this.sandboxId)\n      .pipe(\n        take(1),\n        takeUntil(this._destroyed$),\n        map(val => {\n          console.log(val);\n          this.refresh();\n        })\n      )\n      .subscribe(\n        null, error => { this.errorMessage = 'Error removing document: ' + error.errorMsg; });\n  }\n\n  public viewDocument = (doc) => {\n    const viewDocDialogRef = this.dialog.open(LiveAppsDocumentViewerDialogComponent, {\n      width: '75%',\n      height: '75%',\n      data: {\n        doc: doc,\n        folderType: this.folderType,\n        folderId: this.folderId,\n        sandboxId: this.sandboxId\n      }\n    });\n\n    viewDocDialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n  public downloadDocument = (doc) => {\n    this.documentsService.downloadDocument(this.folderType, this.folderId, doc.name, doc.artifactVersion, this.sandboxId)\n      .pipe(\n        take(1),\n        takeUntil(this._destroyed$),\n        map(data => {\n          // todo: check if this works on all browsers\n          const downloadURL = window.URL.createObjectURL(data);\n          const link = document.createElement('a');\n          link.href = downloadURL;\n          link.download = doc.name;\n          link.click();\n        })\n      )\n      .subscribe(\n        null, error => { this.errorMessage = 'Error downloading document: ' + error.errorMsg; });\n  }\n\n  attachFile(files: FileList) {\n    this.uploadMessage = '';\n    this.fileToUpload = files.item(0);\n  }\n\n  setFileDescription(description: string) {\n    this.fileDescription = description;\n  }\n\n  uploadFile(fileToUpload, description) {\n    this.fileToUpload = fileToUpload;\n    this.uploadMessage = 'Uploading: ' + fileToUpload.name;\n    this.fileDescription = description;\n    this.uploadProgress = 0;\n    if (this.fileToUpload) {\n      this.documentsService.uploadDocument(this.folderType, this.folderId, this.sandboxId,\n        this.fileToUpload, this.fileToUpload.name, this.fileDescription)\n        .subscribe(\n          (response: any) => {\n            if (response.type === HttpEventType.UploadProgress) {\n              this.uploadProgress = Math.round(100 * response.loaded / response.total);\n            }\n            if (this.uploadProgress === 100) {\n              this.fileToUpload = undefined;\n              this.uploadMessage = 'Uploaded: ' + fileToUpload.name;\n              // api seems not to show new documents straight away sometimes - so this minimizes the chances of that if file > 1mb\n               if (fileToUpload.size > 1000000) {\n                 setTimeout(() => { this.refresh(); }, 2000);\n               } else {\n                 this.refresh();\n               }\n               setTimeout(() => { this.uploadMessage = ''; this.uploadProgress = undefined; }, 5000);\n            }\n          },\n          error => { console.log('error'); this.errorMessage = 'Error uploading document: ' + error.errorMsg; });\n    }\n  }\n\n  openDialog(): void {\n    // only allow if upload not in progress\n    if (!this.uploadProgress || this.uploadProgress === 100) {\n      const dialogRef = this.dialog.open(LiveAppsDocumentUploadDialogComponent, {\n        width: '500px',\n        data: {}\n      });\n\n      dialogRef.componentInstance.fileevent.subscribe(($e) => {\n        this.uploadFile($e.file, $e.description);\n      })\n\n      dialogRef.afterClosed().subscribe(result => {\n      });\n    }\n  }\n\n  ngOnInit() {\n    this.refresh();\n  }\n}\n\n@Component({\n  selector: 'tcla-live-apps-document-upload-dialog',\n  templateUrl: 'app-live-apps-document-upload-dialog.html',\n  styleUrls: [ 'app-live-apps-document-upload-dialog.css']\n})\nexport class LiveAppsDocumentUploadDialogComponent {\n\n  @Output() fileevent = new EventEmitter<any>();\n  public fileToUpload: File = undefined;\n  public description: string = undefined;\n\n  constructor(\n    public dialogRef: MatDialogRef<LiveAppsDocumentUploadDialogComponent>) {}\n\n\n  public uploadFile = () => {\n    if (this.fileToUpload) {\n      this.fileevent.emit({ file: this.fileToUpload, description: this.description });\n      this.dialogRef.close();\n    }\n  }\n\n  setFileDescription(description: string) {\n    this.description = description;\n  }\n\n  attachFile(files: FileList) {\n    // this.uploadMessage = '';\n    this.fileToUpload = files.item(0);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n@Component({\n  selector: 'tcla-live-apps-document-viewer-dialog',\n  templateUrl: 'app-live-apps-document-viewer-dialog.html',\n  styleUrls: [ 'app-live-apps-document-viewer-dialog.css']\n})\nexport class LiveAppsDocumentViewerDialogComponent {\n  public doc: Document;\n  public folderType: string;\n  public folderId: string;\n  public sandboxId: number;\n\n  constructor(\n    public dialogRef: MatDialogRef<LiveAppsDocumentUploadDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    this.doc = this.data.doc;\n    this.folderType = this.data.folderType;\n    this.folderId = this.data.folderId;\n    this.sandboxId = this.data.sandboxId;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n","import {Deserializable} from '@tibco-tcstk/tc-core-lib';\nimport {CaseInfo, JsonSchema} from './liveappsdata';\n\nexport class CaseInfoWithSchema implements Deserializable {\n  caseInfo: CaseInfo;\n  caseSchema: JsonSchema;\n  applicationName: string;\n  applicationInternalName: string;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class PurgeResult implements Deserializable {\n  mfpCount: number;\n\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport {forkJoin, Observable, of, zip} from 'rxjs';\nimport {CaseInfo, CaseType, JsonSchema} from '../models/liveappsdata';\nimport {LiveAppsService} from './live-apps.service';\nimport {HttpClient} from '@angular/common/http';\nimport {CaseInfoWithSchema, PurgeResult} from '../models/tc-case-data';\nimport {map, mergeMap, tap} from 'rxjs/operators';\nimport {TcCaseCardConfigService} from './tc-case-card-config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TcCaseDataService {\n\n  constructor(private http: HttpClient, private liveAppsService: LiveAppsService, private caseCardConfigService: TcCaseCardConfigService) { }\n\n  public getCaseState(caseRef: string, sandboxId: number): Observable<string> {\n    const url = '/case/v1/cases/' + caseRef + '/' + '?$sandbox=' + sandboxId + '&$select=s';\n    return this.http.get(url)\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(caseinfo => {\n          const caseinf = new CaseInfo().deserialize(caseinfo);\n          const state: string = caseinf.summaryObj.state;\n          return state;\n        })\n      );\n  }\n\n\n  public purgeAllCases(applicationId: string, typeId: string, sandboxId: number): Observable<PurgeResult> {\n    const url = '/case/v1/cases/?$sandbox=1930&$filter=applicationId eq 2550 and typeId eq 1 and purgeable eq TRUE';\n    return this.http.delete(url)\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(result => {\n          return new PurgeResult().deserialize(result);\n        })\n      );\n  }\n\n\n\n\n  public getCaseWithSchema(\n    caseRef: string, sandboxId: number, appId: string, typeId: string, uiAppId: string): Observable<CaseInfoWithSchema> {\n    const url = '/case/v1/cases/' + caseRef + '/' + '?$sandbox=' + sandboxId + '&$select=uc, m, s';\n\n    // Make the two required API calls\n\n    const caseSchema = this.liveAppsService.getCaseTypeSchema(sandboxId, appId, 100).pipe(\n      tap(val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n      map(typesList => {\n        // get schema for case type\n        let requestedType: CaseType;\n        typesList.casetypes.forEach((cType) => {\n          if (cType.id === typeId) {\n            requestedType = cType;\n          }\n        });\n        return requestedType;\n      })\n    );\n\n    const caseData = this.http.get(url)\n      .pipe(\n        tap(val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(caseinfo => {\n          const caseinf = new CaseInfo().deserialize(caseinfo);\n          this.caseCardConfigService.parseCaseInfo(\n            caseinf,\n            sandboxId,\n            caseinf.metadata.applicationId,\n            caseinf.metadata.typeId,\n            uiAppId\n          );\n          return caseinf;\n        })\n      );\n\n    // Combine the results of both calls into a single response\n    const test1 = zip(caseSchema, caseData).pipe(\n      map(caseInfoArray => {\n        return new CaseInfoWithSchema().deserialize({ caseInfo: caseInfoArray[1], caseSchema: caseInfoArray[0].jsonSchema, applicationName: caseInfoArray[0].applicationName, applicationInternalName: caseInfoArray[0].applicationInternalName });\n      })\n    );\n    return test1;\n  }\n}\n","import {Deserializable} from '@tibco-tcstk/tc-core-lib';\nimport {CaseTypeStatesList} from './liveappsdata';\nimport {AuditEventAttribute, AuditEventList} from './tc-case-audit';\n\nexport class StateAuditEvent implements Deserializable {\n  caseState: AuditEventAttribute;\n  type: AuditEventAttribute;\n  phaseLabel: AuditEventAttribute;\n  previousPhaseLabel: AuditEventAttribute;\n  messageId: AuditEventAttribute;\n  principalName: AuditEventAttribute;\n  creationTime: AuditEventAttribute;\n  isTerminal: boolean;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class StateAuditEventList implements Deserializable {\n  auditEvents: StateAuditEvent[];\n  deserialize(input: any) {\n    this.auditEvents = [];\n    Object.assign(this.auditEvents, input);\n    return this;\n  }\n}\n\nexport class StateTrackerData implements Deserializable {\n  possibleStates: CaseTypeStatesList;\n  currentState: string;\n  phase: string;\n  caseAudit: StateAuditEvent[];\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class TrackerState implements Deserializable {\n  name: string;\n  label: string;\n  phase: string;\n  previousPhase: string;\n  isTerminal: boolean;\n  status: string;\n  user: string;\n  changed: string;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class StateTracker implements Deserializable {\n  states: TrackerState[];\n  valid: boolean;\n  deserialize(input: any) {\n    this.states = [];\n    Object.assign(this.states, input);\n    return this;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {forkJoin, Observable} from 'rxjs';\nimport {LiveAppsService} from './live-apps.service';\nimport {TcCaseDataService} from './tc-case-data.service';\nimport {map, tap} from 'rxjs/operators';\nimport {HttpClient} from '@angular/common/http';\nimport {StateTrackerData, StateTracker, TrackerState, StateAuditEventList, StateAuditEvent} from '../models/tc-case-states';\nimport {DomSanitizer, SafeHtml} from '@angular/platform-browser';\nimport {Location} from '@angular/common';\nimport {TcCoreCommonFunctions} from '@tibco-tcstk/tc-core-lib';\n\nconst MILESTONE_SVG = {\n  END_SECTION_COMPLETED_SVG: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"94\" height=\"36\" viewBox=\"0 0 94 36\">\\n' +\n  '    <path class=\"{{milestoneBgClass}}\" fill=\"none\" fill-rule=\"evenodd\" d=\"M0 0h76c9.941 0 18 8.059 18 18s-8.059 18-18 18H0c6.095-3.675 10.172-10.361 10.172-18C10.172 10.361 6.095 3.675 0 0z\"/>\\n' +\n  '    <text fill=\"#FFF\" font-family=\"SourceSansPro-Regular, Source Sans Pro\" font-size=\"14\">\\n' +\n  '        <tspan x=\"16\" y=\"23\" class=\"{{milestoneLabelClass}}\">{{milestoneLabel}}</tspan>\\n' +\n  '    </text>\\n' +\n  '</svg>\\n',\n  END_SECTION_INPROGESS_SVG: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"94\" height=\"36\" viewBox=\"0 0 94 36\">\\n' +\n  '    <path class=\"{{milestoneBgClass}}\" fill=\"none\" fill-rule=\"evenodd\" d=\"M0 0h76c9.941 0 18 8.059 18 18s-8.059 18-18 18H0c6.095-3.675 10.172-10.361 10.172-18C10.172 10.361 6.095 3.675 0 0z\"/>\\n' +\n  '    <text fill=\"#FFF\" font-family=\"SourceSansPro-Regular, Source Sans Pro\" font-size=\"14\">\\n' +\n  '        <tspan x=\"16\" y=\"23\" class=\"{{milestoneLabelClass}}\">{{milestoneLabel}}</tspan>\\n' +\n  '    </text>\\n' +\n  '</svg>\\n',\n  END_SECTION_PENDING_SVG: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"94\" height=\"36\" viewBox=\"0 0 94 36\">\\n' +\n  '    <path class=\"{{milestoneBgClass}}\" fill=\"none\" fill-rule=\"evenodd\" d=\"M0 0h76c9.941 0 18 8.059 18 18s-8.059 18-18 18H0c6.095-3.675 10.172-10.361 10.172-18C10.172 10.361 6.095 3.675 0 0z\"/>\\n' +\n  '    <text class=\"pending-text\" fill=\"#FFF\" font-family=\"SourceSansPro-Regular, Source Sans Pro\" font-size=\"14\">\\n' +\n  '        <tspan x=\"16\" y=\"23\" class=\"{{milestoneLabelClass}}\">{{milestoneLabel}}</tspan>\\n' +\n  '    </text>\\n' +\n  '</svg>\\n',\n  FIRST_SECTION_COMPLETED_SVG: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"94\" height=\"36\" viewBox=\"0 0 94 36\">\\n' +\n  '<path class=\"{{milestoneBgClass}}\" fill=\"none\" fill-rule=\"evenodd\" d=\"M93.42 0C87.176 3.675 83 10.361 83 18c0 7.639 4.176 14.325 10.42 18H0c6.36-3.675 10.614-10.361 10.614-18C10.614 10.361 6.36 3.675 0 0h93.42z\"/>\\n' +\n  '<text fill=\"#FFF\" font-family=\"SourceSansPro-Regular, Source Sans Pro\" font-size=\"14\">\\n' +\n  '    <tspan x=\"16\" y=\"23\" class=\"{{milestoneLabelClass}}\">{{milestoneLabel}}</tspan>\\n' +\n  '</text>\\n' +\n  '</svg>\\n',\n  FIRST_SECTION_INPROGRESS_SVG: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"94\" height=\"36\" viewBox=\"0 0 94 36\">\\n' +\n  '    <path class=\"{{milestoneBgClass}}\" fill=\"none\" fill-rule=\"evenodd\" d=\"M93.42 0C87.176 3.675 83 10.361 83 18c0 7.639 4.176 14.325 10.42 18H0c6.36-3.675 10.614-10.361 10.614-18C10.614 10.361 6.36 3.675 0 0h93.42z\"/>\\n' +\n  '    <text fill=\"#FFF\" font-family=\"SourceSansPro-Regular, Source Sans Pro\" font-size=\"14\">\\n' +\n  '        <tspan x=\"16\" y=\"23\" class=\"{{milestoneLabelClass}}\">{{milestoneLabel}}</tspan>\\n' +\n  '    </text>\\n' +\n  '</svg>',\n  FIRST_SECTION_PENDING_SVG: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"94\" height=\"36\" viewBox=\"0 0 94 36\">\\n' +\n  '    <path class=\"{{milestoneBgClass}}\" fill=\"none\" fill-rule=\"evenodd\" d=\"M93.42 0C87.176 3.675 83 10.361 83 18c0 7.639 4.176 14.325 10.42 18H0c6.36-3.675 10.614-10.361 10.614-18C10.614 10.361 6.36 3.675 0 0h93.42z\"/>\\n' +\n  '    <text fill=\"#FFF\" font-family=\"SourceSansPro-Regular, Source Sans Pro\" font-size=\"14\">\\n' +\n  '        <tspan x=\"16\" y=\"23\" class=\"{{milestoneLabelClass}}\">{{milestoneLabel}}</tspan>\\n' +\n  '    </text>\\n' +\n  '</svg>\\n',\n  MIDDLE_SECTION_COMPLETED_SVG: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"164\" height=\"36\" viewBox=\"0 0 164 36\">\\n' +\n  '    <path class=\"{{milestoneBgClass}}\" fill=\"none\" fill-rule=\"evenodd\" d=\"M164 0c-6.09 3.675-10.163 10.361-10.163 18 0 7.639 4.073 14.325 10.163 18H0c6.095-3.675 10.172-10.361 10.172-18C10.172 10.361 6.095 3.675 0 0h164z\"/>\\n' +\n  '    <text fill=\"#FFF\" font-family=\"SourceSansPro-Regular, Source Sans Pro\" font-size=\"14\">\\n' +\n  '        <tspan x=\"16\" y=\"23\" class=\"{{milestoneLabelClass}}\">{{milestoneLabel}}</tspan>\\n' +\n  '    </text>\\n' +\n  '</svg>\\n',\n  MIDDLE_SECTION_INPROGRESS_SVG: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"164\" height=\"36\" viewBox=\"0 0 164 36\">\\n' +\n  '    <path class=\"{{milestoneBgClass}}\" fill=\"none\" fill-rule=\"evenodd\" d=\"M164 0c-6.09 3.675-10.163 10.361-10.163 18 0 7.639 4.073 14.325 10.163 18H0c6.095-3.675 10.172-10.361 10.172-18C10.172 10.361 6.095 3.675 0 0h164z\"/>\\n' +\n  '    <text fill=\"#FFF\" font-family=\"SourceSansPro-Regular, Source Sans Pro\" font-size=\"14\">\\n' +\n  '        <tspan x=\"16\" y=\"23\" class=\"{{milestoneLabelClass}}\">{{milestoneLabel}}</tspan>\\n' +\n  '    </text>\\n' +\n  '</svg>\\n',\n  MIDDLE_SECTION_PENDING_SVG: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"164\" height=\"36\" viewBox=\"0 0 164 36\">\\n' +\n  '    <path class=\"{{milestoneBgClass}}\" fill=\"none\" fill-rule=\"evenodd\" d=\"M164 0c-6.09 3.675-10.163 10.361-10.163 18 0 7.639 4.073 14.325 10.163 18H0c6.095-3.675 10.172-10.361 10.172-18C10.172 10.361 6.095 3.675 0 0h164z\"/>\\n' +\n  '    <text class=\"pending-text\" fill=\"#FFF\" font-family=\"SourceSansPro-Regular, Source Sans Pro\" font-size=\"14\">\\n' +\n  '        <tspan x=\"16\" y=\"23\" class=\"{{milestoneLabelClass}}\">{{milestoneLabel}}</tspan>\\n' +\n  '    </text>\\n' +\n  '</svg>\\n'\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TcCaseStatesService {\n\n  constructor(private http: HttpClient,\n              private liveAppsService: LiveAppsService,\n              private caseDataService: TcCaseDataService,\n              private sanitizer: DomSanitizer,\n              private location: Location) { }\n\n  private getTrackerData = (caseRef: string, sandboxId: number, appId: string): Observable<StateTrackerData> => {\n    // merge the result of these three API calls into one object\n    const caseState$ = this.caseDataService.getCaseState(caseRef, sandboxId);\n    const possibleStates$ = this.liveAppsService.getCaseTypeStates(sandboxId, appId, 100);\n    const stateAudit$ = this.getCaseStateAudit(caseRef, sandboxId);\n    return forkJoin([caseState$, possibleStates$, stateAudit$]).pipe(\n      map(resultArr => {\n        return new StateTrackerData().deserialize(\n          { possibleStates: resultArr[1], currentState: resultArr[0], caseAudit: resultArr[2].auditEvents }\n          );\n      })\n    );\n  }\n\n  private buildTracker = (trackerData: StateTrackerData): StateTracker => {\n    const tracker = new StateTracker();\n    tracker.states = [];\n    if (trackerData.caseAudit.length <= 0) {\n      // if no audit it has likely been deleted and we cannot create a milestone trailer\n      tracker.valid = false;\n    } else {\n      // work out the status of each state\n      // possible states: 'pending', 'inprogress', 'completed'\n      trackerData.possibleStates.states.forEach(state => {\n        const stateLabel = state.label;\n        const stateName = state.value;\n        const trackerState = new TrackerState();\n        trackerState.phase = '';\n        trackerState.previousPhase = '';\n        // no specific name coming from API so use label.\n        trackerState.name = state.label;\n        trackerState.label = state.label;\n        trackerState.isTerminal = state.isTerminal ? state.isTerminal : false;\n        // find last event for this state\n        const reversedEvents = [];\n        Object.assign(reversedEvents, trackerData.caseAudit);\n        reversedEvents.reverse();\n        const idx = reversedEvents.findIndex(auditEvent => auditEvent.caseState.value === state.value);\n        const origIdx = (trackerData.caseAudit.length - 1) - idx;\n        let thisEvent: StateAuditEvent;\n        if (idx === -1) {\n          // no audit events so we haven't reached this state yet\n          trackerState.status = 'pending';\n        } else {\n          thisEvent = trackerData.caseAudit[origIdx];\n          trackerState.user = thisEvent.principalName ? thisEvent.principalName.value : 'system';\n          trackerState.changed = thisEvent.creationTime ? thisEvent.creationTime.value : '';\n          trackerState.phase = thisEvent.phaseLabel ? thisEvent.phaseLabel.value : undefined;\n          trackerState.previousPhase = thisEvent.previousPhaseLabel ? thisEvent.previousPhaseLabel.value : undefined;\n          if (state.isTerminal) {\n            // if we have audit for this state and it is terminal it must be completed\n            trackerState.status = 'completed';\n          } else if ((trackerData.caseAudit.length - 1) === origIdx) {\n            // if this is the last audit entry then it is in progress\n            trackerState.status = 'inprogress';\n          } else {\n            // otherwise it must be completed\n            trackerState.status = 'completed';\n          }\n        }\n        tracker.states.push(trackerState);\n        tracker.valid = true;\n      });\n    }\n    return tracker;\n  }\n\n  public getTracker = (caseRef: string, sandboxId: number, appId: string): Observable<StateTracker> => {\n    const tracker$ = this.getTrackerData(caseRef, sandboxId, appId).pipe(\n      map(trackerData => {\n        return this.buildTracker(trackerData);\n      })\n    );\n    return tracker$;\n  }\n\n  public getCaseStateAuditWithTerminal(caseRef: string, sandboxId: number, appId: string): Observable<StateAuditEventList> {\n    const possibleStates$ = this.liveAppsService.getCaseTypeStates(sandboxId, appId, 100);\n    const caseStateAudit$ = this.getCaseStateAudit(caseRef, sandboxId);\n    return forkJoin([possibleStates$, caseStateAudit$]).pipe(\n      map(resultArr => {\n        const possibleStates = resultArr[0];\n        const caseStateAudit = resultArr[1];\n        // mark if any are terminal states\n        caseStateAudit.auditEvents.forEach(auditEvent => {\n          const foundState = possibleStates.states.find(state => state.value === auditEvent.caseState.value);\n          auditEvent.isTerminal = foundState.isTerminal ? foundState.isTerminal : false;\n        });\n        return caseStateAudit;\n      })\n    );\n  }\n\n  public getCaseStateAudit(caseRef: string, sandboxId: number): Observable<StateAuditEventList> {\n\n    const url = '/event/v1/auditEvents?$sandbox=' + sandboxId\n      + '&$filter=type eq \\'casestate\\''\n      + ' and id eq \\'' + caseRef + '\\'';\n\n    return this.http.get(url)\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(caseaudit => new StateAuditEventList().deserialize(caseaudit)));\n  }\n\n  public getMilestoneSectionSvg(stateLabel: string, labelClass: string, bgClass: string, svgFileName: string): SafeHtml {\n    /*return this.liveAppsService.getIconSVGText(TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, 'assets/icons/milestones/' + svgFileName)).pipe(\n      map(svgcontents => {\n        let updatedsvg = svgcontents.replace('{{milestoneLabel}}', stateLabel);\n        updatedsvg = updatedsvg.replace('{{milestoneBgClass}}', bgClass);\n        updatedsvg = updatedsvg.replace('{{milestoneLabelClass}}', labelClass);\n        const newval = this.sanitizer.bypassSecurityTrustHtml(updatedsvg);\n        return newval;\n      })\n    );*/\n    // convert svgFileName to the inline property name\n    svgFileName = svgFileName.toUpperCase();\n    const regEx = /-|\\./gi;\n    svgFileName = svgFileName.replace(regEx, '_');\n    const svgcontents = MILESTONE_SVG[svgFileName];\n    if (svgcontents) {\n      let updatedsvg = svgcontents.replace('{{milestoneLabel}}', stateLabel);\n      updatedsvg = updatedsvg.replace('{{milestoneBgClass}}', bgClass);\n      updatedsvg = updatedsvg.replace('{{milestoneLabelClass}}', labelClass);\n      const newval = this.sanitizer.bypassSecurityTrustHtml(updatedsvg);\n      return newval;\n    } else {\n      return undefined;\n    }\n  }\n}\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {CaseTypeState, CaseTypeStatesList, Metadata} from '../../models/liveappsdata';\nimport {Subject} from 'rxjs';\nimport {LiveAppsService} from '../../services/live-apps.service';\nimport {map, take, takeUntil} from 'rxjs/operators';\nimport {LiveAppsComponent} from '../live-apps-component/live-apps-component.component';\nimport {StateTracker, TrackerState} from '../../models/tc-case-states';\nimport {TcCaseStatesService} from '../../services/tc-case-states.service';\nimport {DurationSincePipe} from '@tibco-tcstk/tc-core-lib';\n\n\n/**\n * Case States/Milestone view\n *\n * ![alt-text](../live-apps-case-states.png \"Image\")\n *\n *@example <tcla-live-apps-case-states></tcla-live-apps-case-states>\n */\n@Component({\n  selector: 'tcla-live-apps-case-states',\n  templateUrl: './live-apps-case-states.component.html',\n  styleUrls: ['./live-apps-case-states.component.css']\n})\nexport class LiveAppsCaseStatesComponent extends LiveAppsComponent implements OnInit {\n  /**\n   * The LA Application Id\n   */\n  @Input() appId: string;\n\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  /**\n   * The case reference\n   */\n  @Input() caseRef: string;\n\n\n  public states: CaseTypeState[];\n  public tracker: StateTracker;\n  public errorMessage: string;\n\n  public getToolTipText = (trackerState: TrackerState): string => {\n    let toolTipText = '';\n    if (trackerState.status != 'pending') {\n      toolTipText = toolTipText + trackerState.user + ' ' + this.durationSince.transform(trackerState.changed);\n    }\n    return toolTipText;\n  }\n\n  public refresh = () => {\n    this.caseStatesService.getTracker(this.caseRef, this.sandboxId, this.appId).pipe(\n      take(1),\n      takeUntil(this._destroyed$),\n      map(tracker => {\n        this.tracker = tracker;\n        if (!tracker.valid) {\n          console.error('Unable to create milestone trailer. Case Audit likely removed due to subscription retention period.');\n        }\n        return tracker;\n      }\n        )\n    ).subscribe(\n      null, error => { this.errorMessage = 'Error constructing state tracker: ' + error.error.errorMsg; });\n  }\n\n  constructor(private caseStatesService: TcCaseStatesService, private durationSince: DurationSincePipe) {\n    super();\n  }\n\n  ngOnInit() {\n    this.refresh();\n  }\n\n}\n","\n/*\n*     Case Type icons are stored in an orgFolder specified in liveAppsConfig.json (pushed to shared state)\n*     Icon Name will be appId.filename.svg\n*     Icon svg should contain <DYNAMICFILL> this will be set according to the color selected in this component\n*\n*     eg: 1742.ic-created.svg for Partner Portal Live Apps App (appId: 1742) 'Created' state\n*\n*     <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\">\n*        <path fill=\"<DYNAMICFILL>\" class=\"svg-content\" fill-rule=\"evenodd\" d=\"M7 14A7 7 0 1 1 7 0a7 7 0 0 1 0 14zm3.474-6.472a.527.527 0 0 0 0-1.053H7.526V3.527a.525.525 0 1 0-1.052 0v2.948H3.526a.527.527 0 0 0 0 1.053h2.948v2.948a.525.525 0 0 0 .898.373.525.525 0 0 0 .154-.373V7.528h2.948z\"/>\n*      </svg>\n*\n*\n */\nimport {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList, SimpleChanges,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport {Observable, of, Subject} from 'rxjs';\nimport {LiveAppsService} from '../../services/live-apps.service';\nimport {CardConfig, CaseTypeState, IconMap} from '../../models/liveappsdata';\nimport {map, take, takeUntil} from 'rxjs/operators';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {DomSanitizer, SafeHtml} from '@angular/platform-browser';\nimport {LiveAppsCaseDataComponent} from '../live-apps-case-data/live-apps-case-data.component';\nimport {LiveAppsStateIconComponent} from '../live-apps-state-icon/live-apps-state-icon.component';\nimport {LiveAppsCaseSummaryComponent} from '../live-apps-case-summary/live-apps-case-summary.component';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material';\nimport {LiveAppsDocumentUploadDialogComponent} from '../live-apps-documents/live-apps-documents.component';\nimport { Location } from '@angular/common';\nimport {LiveAppsComponent} from '../live-apps-component/live-apps-component.component';\nimport {CaseCardConfig} from '../../models/tc-case-card-config';\nimport {DEFAULT_COLORS, DEFAULT_STATE_COLOR, DEFAULT_TYPE_COLOR, TcCaseCardConfigService} from '../../services/tc-case-card-config.service';\nimport {TcDocumentService} from '../../services/tc-document.service';\n\n\n\n/**\n * Manages summary card configuration\n *\n *@example <tcla-live-apps-application-configuration></tcla-live-apps-application-configuration>\n */\n\n@Component({\n  selector: 'tcla-live-apps-application-configuration',\n  templateUrl: './live-apps-application-configuration.component.html',\n  styleUrls: ['./live-apps-application-configuration.component.css']\n})\nexport class LiveAppsApplicationConfigurationComponent extends LiveAppsComponent implements OnChanges {\n  // The ViewChild declarations give access to components marked on the template so that I can call public functions like refresh\n  @ViewChildren('iconcomp') stateIconComponents: QueryList<LiveAppsStateIconComponent>;\n  @ViewChildren(LiveAppsCaseSummaryComponent) caseSummaryComponent: QueryList<LiveAppsCaseSummaryComponent>;\n\n  /**\n   * The LA Application Id\n   */\n  @Input() appId: string;\n\n  /**\n   * The label shown above the case type in the configuration widget\n   */\n  @Input() appTypeLabel: string;\n\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  /**\n   * The Application ID of the UI (should ideally be unique as it is shared state key)\n   */\n  @Input() uiAppId: string;\n\n  /**\n   * The organisation folder to store/retrieve documents\n   */\n  @Input() folderId: string;\n\n  /**\n   * ~event configChanged : Configuration values changed\n   * ~payload CaseCardConfig : CaseCardConfig object when configuration is changed (so called can do a save with data)\n   */\n  @Output() configChanged: EventEmitter<CaseCardConfig> = new EventEmitter<CaseCardConfig>();\n\n  public errorMessage: string;\n  public caseCardConfig: CaseCardConfig;\n  public selectedStateConfig: IconMap;\n  public selectedCaseTypeConfig: IconMap;\n  public caseTypeIcon: string;\n  public caseTypeColor: string;\n\n  // prepareExternalUrl will add the base href\n  public DEFAULT_CASE_TYPE_ICON = 'assets/icons/ic-generic-casetype.svg';\n  public DEFAULT_CASE_TYPE_COLOR = DEFAULT_TYPE_COLOR;\n  public DEFAULT_CASE_STATE_ICON = 'assets/icons/ic-generic-state.svg';\n  public DEFAULT_CASE_STATE_COLOR = DEFAULT_STATE_COLOR;\n  public DEFAULT_COLOR_PALETTE = DEFAULT_COLORS;\n\n  public getConfigForState = (state: CaseTypeState): IconMap => {\n    let reqIconMap: IconMap;\n    if (this.caseCardConfig.cardConfig && this.caseCardConfig.cardConfig.stateMap) {\n      this.caseCardConfig.cardConfig.stateMap.forEach((stateMap) => {\n        if (stateMap.state === state.value) {\n          reqIconMap = stateMap;\n        }\n      });\n    }\n    return reqIconMap ? reqIconMap : new IconMap(false, state.value, this.DEFAULT_CASE_STATE_COLOR, this.DEFAULT_CASE_STATE_ICON);\n  }\n\n  public getConfigForCaseType = (caseTypeId: string): IconMap => {\n    let reqIconMap: IconMap;\n    if (this.caseCardConfig.cardConfig && this.caseCardConfig.cardConfig.stateMap) {\n      this.caseCardConfig.cardConfig.stateMap.forEach((stateMap) => {\n        if (stateMap.isCaseType) {\n          reqIconMap = stateMap;\n        }\n      });\n    }\n    return reqIconMap ? reqIconMap : new IconMap(true, caseTypeId, this.DEFAULT_CASE_TYPE_COLOR, this.DEFAULT_CASE_TYPE_ICON);\n  }\n\n  public updateIconMap = (stateConfig: IconMap) => {\n    let foundMap: IconMap;\n    let updatedMap: IconMap;\n    if (this.caseCardConfig.cardConfig && this.caseCardConfig.cardConfig.stateMap) {\n      this.caseCardConfig.cardConfig.stateMap.forEach(function(stateMap) {\n        if (stateMap.state === stateConfig.state) {\n          foundMap = stateConfig;\n          stateMap.state = stateConfig.state;\n          stateMap.icon = stateConfig.icon;\n          stateMap.fill = stateConfig.fill;\n        }\n      });\n      if (foundMap) {\n        foundMap = stateConfig;\n      } else {\n        this.caseCardConfig.cardConfig.stateMap.push(stateConfig);\n      }\n    } else {\n      this.caseCardConfig.cardConfig.stateMap = [];\n      this.caseCardConfig.cardConfig.stateMap.push(stateConfig);\n    }\n    this.configChanged.emit(this.caseCardConfig);\n  }\n\n  public handleCaseTypeColorToggleChange = (changes) => {\n    this.caseCardConfig.cardConfig.useCaseTypeColor = changes.checked ? changes.checked : false;\n    if (changes.checked) {\n      this.caseSummaryComponent.forEach((comp: LiveAppsCaseSummaryComponent) => {\n        comp.restylePreview(this.selectedStateConfig.icon, this.caseTypeColor);\n      });\n    }\n    this.configChanged.emit(this.caseCardConfig);\n  }\n\n  public setFill = (fill, stateConfig: IconMap) => {\n    this.caseSummaryComponent.forEach((comp: LiveAppsCaseSummaryComponent) => {\n      comp.restylePreview(stateConfig.icon, fill);\n    });\n    this.stateIconComponents.find(function(comp) {\n      return comp.id === stateConfig.state;\n    }).refillSVG(fill);\n    this.configChanged.emit(this.caseCardConfig);\n  }\n\n  public setCaseTypeFill = (fill, stateConfig: IconMap) => {\n    this.caseSummaryComponent.forEach((comp: LiveAppsCaseSummaryComponent) => {\n      comp.restylePreviewCaseType(stateConfig.icon, fill);\n    });\n    this.stateIconComponents.find(function(comp) {\n      return (comp.id === stateConfig.state && stateConfig.isCaseType);\n    }).refillSVG(fill);\n    this.configChanged.emit(this.caseCardConfig);\n  }\n\n  public selectState = (state: CaseTypeState) => {\n    this.selectedStateConfig = this.getConfigForState(state);\n    if (!this.caseCardConfig.cardConfig.useCaseTypeColor) {\n      this.caseSummaryComponent.forEach((comp: LiveAppsCaseSummaryComponent) => {\n        comp.restylePreview(this.selectedStateConfig.icon, this.selectedStateConfig.fill);\n      });\n    }\n  }\n\n  /*public saveConfig = () => {\n    this.caseCardConfigService.updateCaseCardConfig(this.sandboxId, this.appId, this.uiAppId, this.caseCardConfig)\n      .pipe(\n        take(1),\n        takeUntil(this._destroyed$),\n        map(caseCardConfig => {\n          this.caseCardConfig = caseCardConfig;\n        })\n      ).subscribe(null, error => { console.log('Unable to update case card config: ' + error.errorMsg); }\n    );\n  }*/\n\n  public openDialog(state: CaseTypeState, isCaseType: boolean): void {\n\n    if (!isCaseType) {\n      this.selectState(state);\n    } else {\n      state = new CaseTypeState().deserialize({ value: this.appTypeLabel });\n    }\n    const dialogRef = this.dialog.open(LiveAppsStateIconUploadDialogComponent, {\n      width: '500px',\n      data: { state: state, isCaseType: isCaseType }\n    });\n\n    dialogRef.componentInstance.fileevent.subscribe(($e) => {\n      this.uploadFile($e.file, $e.state, $e.isCaseType);\n    })\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n  public setNewStateIcon = (url) => {\n    this.selectedStateConfig.icon = url;\n    this.stateIconComponents.find((comp: LiveAppsStateIconComponent) => {\n      return (comp.id === this.selectedStateConfig.state);\n    }).refresh(this.selectedStateConfig.icon, this.selectedStateConfig.fill);\n    this.caseSummaryComponent.forEach((comp: LiveAppsCaseSummaryComponent) => {\n      comp.restylePreview(this.selectedStateConfig.icon, this.selectedStateConfig.fill);\n    });\n    this.updateIconMap(this.selectedStateConfig);\n  }\n\n  public setNewCaseTypeIcon = (url) => {\n    this.caseTypeIcon = url;\n    this.stateIconComponents.find((comp: LiveAppsStateIconComponent) => {\n      return (comp.id === this.appTypeLabel);\n    }).refresh(this.caseTypeIcon, this.caseTypeColor);\n    this.caseSummaryComponent.forEach((comp: LiveAppsCaseSummaryComponent) => {\n      comp.restylePreviewCaseType(this.caseTypeIcon, this.caseTypeColor);\n    });\n    this.updateIconMap(new IconMap(true, this.appTypeLabel, this.caseTypeColor, this.caseTypeIcon));\n  }\n\n  public uploadFile(file: File, state: CaseTypeState, isStateIcon: boolean) {\n    if (file) {\n      const url = 'webresource/v1/orgFolders/' + this.folderId + '/' + this.appId + '.' + file.name;\n      const dlUrl = 'webresource/orgFolders/' + this.folderId + '/' + this.appId + '.' + file.name;\n      this.liveapps.clearFromIconSVGTextCache(url);\n      this.documentsService.uploadDocument('orgFolders', this.folderId, this.sandboxId,\n        file, (this.appId + '.' + file.name), '')\n        .pipe(\n          map(val => {\n            if (!isStateIcon) {\n              this.setNewStateIcon(dlUrl);\n            } else {\n              this.setNewCaseTypeIcon(dlUrl);\n            }\n          })\n        )\n        .subscribe(\n          result => null,\n          error => { console.log('error'); this.errorMessage = 'Error uploading state icon: ' + error.errorMsg; });\n    }\n  }\n\n  public refresh = () => {\n    // need states & cardConfig\n    this.selectedCaseTypeConfig = null;\n    this.caseCardConfigService.getCaseCardConfig(this.sandboxId, this.appId, this.uiAppId, this.appTypeLabel, this.DEFAULT_CASE_TYPE_COLOR, this.DEFAULT_CASE_TYPE_ICON, this.DEFAULT_CASE_STATE_COLOR, this.DEFAULT_CASE_STATE_ICON).pipe(\n      take(1),\n      takeUntil(this._destroyed$),\n      map(caseCardConfig => {\n        this.caseCardConfig = caseCardConfig;\n        // set default selected to first state for this case type (0 is case type)\n        this.selectedStateConfig = this.caseCardConfig.cardConfig.stateMap[1];\n        const caseTypeRec = this.caseCardConfig.cardConfig.stateMap.find(function(stateMap) {\n          return stateMap.isCaseType;\n        });\n\n        this.caseTypeIcon = caseTypeRec.icon;\n        this.caseTypeColor = caseTypeRec.fill;\n        this.selectedCaseTypeConfig = this.getConfigForCaseType(this.appTypeLabel);\n      })\n    ).subscribe(\n      null, error => { this.errorMessage = 'Error retrieving case card config: ' + error.error.errorMsg; });\n  }\n\n  constructor(private http: HttpClient, private sanitizer: DomSanitizer,\n              private liveapps: LiveAppsService, public caseCardConfigService: TcCaseCardConfigService, private documentsService: TcDocumentService, public dialog: MatDialog, private location: Location) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.appId && (changes.appId.currentValue !== changes.appId.previousValue)) {\n      this.refresh();\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'tcla-live-apps-state-icon-upload-dialog',\n  templateUrl: 'upload-file-dialog/app-live-apps-state-icon-upload-dialog.html',\n  styleUrls: [ 'upload-file-dialog/app-live-apps-state-icon-upload-dialog.css']\n})\nexport class LiveAppsStateIconUploadDialogComponent {\n  @Output() fileevent = new EventEmitter<any>();\n  public fileToUpload: File = undefined;\n  public description: string = undefined;\n  public fileText: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<LiveAppsStateIconUploadDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {}\n\n  public uploadFile = () => {\n    if (this.fileToUpload) {\n      this.fileevent.emit({ file: this.fileToUpload, state: this.data.state, isCaseType: this.data.isCaseType } );\n      this.dialogRef.close();\n    }\n  }\n\n  setFileDescription(description: string) {\n    this.description = description;\n  }\n\n  attachFile(files: FileList) {\n    this.fileToUpload = files.item(0);\n    /*const myReader: FileReader = new FileReader();\n    myReader.readAsText(this.fileToUpload);\n    this.fileText = myReader.result.toString();*/\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\nimport {LiveAppsService} from '../../services/live-apps.service';\nimport {LiveAppsComponent} from '../live-apps-component/live-apps-component.component';\nimport {CaseRoute} from '../../models/liveappsdata';\n\n\n/**\n * This Component allows to list your Favorite Cases.\n *\n * ![alt-text](../live-apps-favorite-cases.png \"Documents Component Image\")\n *\n *@example <tcla-live-apps-favorite-cases></tcla-live-apps-favorite-cases>\n */\n@Component({\n  selector: 'tcla-live-apps-favorite-cases',\n  templateUrl: './live-apps-favorite-cases.component.html',\n  styleUrls: ['./live-apps-favorite-cases.component.css']\n})\nexport class LiveAppsFavoriteCasesComponent extends LiveAppsComponent implements OnInit {\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  /**\n   * The Application ID of the UI (should ideally be unique as it is shared state key)\n   */\n  @Input() uiAppId: string;\n\n  /**\n   * case card format - list, card, miniCard, staticList (no click event)\n   */\n  @Input() displayType: string = this.displayType ? this.displayType : 'miniCard'; // miniCard, card, list\n\n  /**\n   * Whether to show the header bar in the widget - eg. favorites on home page (contains icon etc) - if off icons still appear without bar\n   */\n  @Input() showHeader: boolean = this.showHeader ? this.showHeader : true;\n\n\n  /**\n   * ~event clickCase : Case clicked\n   * ~payload CaseRoute : CaseRoute object output when case is clicked so calling component can route accordingly - ie. route to case\n   */\n  @Output() clickCase: EventEmitter<CaseRoute> = new EventEmitter<CaseRoute>();\n\n  public favoriteCases: string[];\n  public errorMessage: string;\n\n  public clickCaseAction = (caseRoute: CaseRoute) => {\n    this.clickCase.emit(caseRoute);\n  }\n\n  public refresh = () => {\n    this.favoriteCases = [];\n    this.liveapps.getFavoriteCases(this.uiAppId, this.sandboxId)\n      .pipe(\n        take(1),\n        takeUntil(this._destroyed$),\n        map(favoriteCases => {\n          this.favoriteCases = favoriteCases.caseRefs || [];\n        })\n      ).subscribe(\n      null, error => { this.errorMessage = 'Error retrieving favorite cases: ' + error.error.errorMsg; });\n  }\n\n  public clearFavoriteCases = () => {\n    this.liveapps.setFavoriteCase('-1', this.uiAppId, this.sandboxId);\n    this.favoriteCases = [];\n  }\n\n  public handleDeleted = (caseRef: string) => {\n    this.favoriteCases.splice(this.favoriteCases.indexOf(caseRef), 1);\n    this.liveapps.setFavoriteCase(caseRef, this.uiAppId, this.sandboxId);\n  }\n\n\n  constructor(private liveapps: LiveAppsService) {\n    super();\n  }\n\n  ngOnInit() {\n    this.refresh();\n  }\n\n}\n","import {Deserializable} from '@tibco-tcstk/tc-core-lib';\n\nexport class AuditEventAttribute implements Deserializable {\n  type: string;\n  value: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AuditEvent implements Deserializable {\n  // value: string;\n  // type: string;\n  messageId: AuditEventAttribute;\n  creationTime: AuditEventAttribute;\n  delayTime: AuditEventAttribute;\n  procName: AuditEventAttribute;\n  principalName: AuditEventAttribute;\n  taskType: AuditEventAttribute;\n  taskName: AuditEventAttribute;\n  label: AuditEventAttribute;\n  caseState: AuditEventAttribute;\n  artifactPath: AuditEventAttribute;\n  artifactName: AuditEventAttribute;\n  severity: AuditEventAttribute;\n  message: AuditEventAttribute;\n  param0: AuditEventAttribute;\n  param1: AuditEventAttribute;\n\n  key: AuditEventAttribute;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AuditEventList implements Deserializable {\n  auditevents: AuditEvent[];\n  deserialize(input: any): this {\n    this.auditevents = [];\n    Object.assign(this.auditevents, input);\n    return this;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {map, tap} from 'rxjs/operators';\nimport {HttpClient} from '@angular/common/http';\nimport {AuditEventList} from '../models/tc-case-audit';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TcCaseAuditService {\n\n  constructor(private http: HttpClient) { }\n\n  public getCaseAudit(caseRef: string, sandboxId: number, startAt: string, top: number): Observable<AuditEventList> {\n    const select = 's';\n    let url = '/event/v1/auditEvents?$sandbox=' + sandboxId\n      + '&$filter=type eq \\'case\\''\n      + ' and id eq \\'' + caseRef + '\\'';\n    url = (startAt !== undefined) ? (url + '&$startat=' + startAt) : url;\n    url = top ? (url + '&$top=' + top) : url;\n\n    return this.http.get(url)\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(caseaudit => new AuditEventList().deserialize(caseaudit)));\n  }\n}\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {map, take, takeUntil} from 'rxjs/operators';\nimport {AuditEvent} from '../../models/tc-case-audit';\nimport {LiveAppsComponent} from '../live-apps-component/live-apps-component.component';\nimport {TcCaseAuditService} from '../../services/tc-case-audit.service';\n\n/**\n * Render audit trail for a case\n *\n *  ![alt-text](../live-apps-case-audit.png \"Image\")\n *\n *@example <tcla-live-apps-case-audit></tcla-live-apps-case-audit>\n */\n@Component({\n  selector: 'tcla-live-apps-case-audit',\n  templateUrl: './live-apps-case-audit.component.html',\n  styleUrls: ['./live-apps-case-audit.component.css']\n})\nexport class LiveAppsCaseAuditComponent extends LiveAppsComponent implements OnDestroy {\n\n  /**\n   * The case reference\n   */\n  @Input() caseRef: string;\n\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  public auditEvents: AuditEvent[] = [];\n  public errorMessage: string;\n  public startat = undefined;\n  public top = 20;\n  public end = false;\n\n  public refresh = () => {\n    this.startat = undefined;\n    this.top = 20;\n    this.end = false;\n    this.auditEvents = [];\n    this.getAuditEvents(this.caseRef, this.sandboxId, this.startat, this.top);\n  }\n\n  public getAuditEvents = (caseRef: string, sandboxId: number, startAt: number, top: number) => {\n    this.caseAuditService.getCaseAudit(this.caseRef, this.sandboxId, this.startat, this.top)\n      .pipe(\n        take(1),\n        takeUntil(this._destroyed$),\n        map(auditeventlist => {\n          // this will strip any duplicates that may have been retrieved due to fast scrolling\n          const filteredEvents = auditeventlist.auditevents.filter(x => this.auditEvents.every(y => y.key.value !== x.key.value))\n          this.auditEvents = this.auditEvents.concat(filteredEvents);\n          if (auditeventlist.auditevents.length < this.top) {\n            this.end = true;\n          } else {\n            this.startat = auditeventlist.auditevents[auditeventlist.auditevents.length - 1].key.value;\n          }\n        })\n      ).subscribe(\n      null, error => {\n        this.errorMessage = 'Error retrieving case audit: ' + error.error.errorMsg;\n      });\n  }\n\n  public getNextBatch = (event) => {\n    if (!this.end) {\n      this.getAuditEvents(this.caseRef, this.sandboxId, this.startat, this.top);\n    }\n  }\n\n  constructor(private caseAuditService: TcCaseAuditService) {\n    super();\n  }\n\n}\n","import {Component, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {LiveAppsService} from '../../services/live-apps.service';\nimport {CaseInfo, JsonSchema, Metadata} from '../../models/liveappsdata';\nimport {map, take, takeUntil} from 'rxjs/operators';\nimport {Subject} from 'rxjs';\nimport {LiveAppsComponent} from '../live-apps-component/live-apps-component.component';\nimport {TcCaseDataService} from '../../services/tc-case-data.service';\nimport {CustomFormDefs} from '@tibco-tcstk/tc-forms-lib';\n\n\n/**\n * Displays data for a case in a widget (high level)\n *\n * ![alt-text](../live-apps-case-data.png \"Image\")\n *\n *@example <tcla-live-apps-case-data></tcla-live-apps-case-data>\n */\n@Component({\n  selector: 'tcla-live-apps-case-data',\n  templateUrl: './live-apps-case-data.component.html',\n  styleUrls: ['./live-apps-case-data.component.css']\n})\nexport class LiveAppsCaseDataComponent extends LiveAppsComponent implements OnInit {\n  /**\n   * The case reference\n   */\n  @Input() caseRef: string;\n\n  /**\n   * The LA Application Id\n   */\n  @Input() appId: string;\n\n  /**\n   * The LA Application Type Id (generally 1)\n   */\n  @Input() typeId: string;\n\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  /**\n   * The Application ID of the UI (should ideally be unique as it is shared state key)\n   */\n  @Input() uiAppId: string;\n\n  /**\n   * Whether to show the header bar in the widget - eg. favorites on home page (contains icon etc) - if off icons still appear without bar\n   */\n  @Input() showHeader: boolean;\n\n  /**\n   * Layout object that can be passed to override default layout of the form renderer\n   */\n  @Input() layout: any[];\n\n  /**\n   * Custom Form configuration file\n   */\n  @Input() customFormDefs: CustomFormDefs;\n\n  /**\n   * not used\n   */\n  @Input() customDataId = this.customDataId ? this.customDataId : 'default';\n\n  public casedata: any;\n  public summary: any;\n  public metadata: Metadata;\n  public errorMessage: string;\n  public schema: JsonSchema;\n  public formRef: string;\n\n  constructor(private caseDataService: TcCaseDataService) {\n    super();\n  }\n\n  public refresh = () => {\n    this.caseDataService.getCaseWithSchema(this.caseRef, this.sandboxId, this.appId, this.typeId, this.uiAppId)\n      .pipe(\n        take(1),\n        takeUntil(this._destroyed$),\n        map(result => {\n          this.casedata = result.caseInfo.untaggedCasedataObj;\n          this.metadata = result.caseInfo.metadata;\n          this.summary = result.caseInfo.summaryObj;\n          this.schema = result.caseSchema;\n          this.formRef = result.applicationName + '.' + result.applicationInternalName + '.casedata.' + this.customDataId;\n        })\n      ).subscribe(\n      null, error => { this.errorMessage = 'Error retrieving case data: ' + error.error.errorMsg; });\n  }\n\n  ngOnInit() {\n    this.refresh();\n  }\n\n}\n","import {Deserializable} from '@tibco-tcstk/tc-core-lib';\nimport {CaseAttribute, CaseTypesList, Process} from './liveappsdata';\n\nexport class LaProcessSelection {\n  // Format of ref is <applicationName>.<applicationInternalName>.<processType>.<processName>\n  constructor(public type: string,\n              public appSchema: CaseTypesList,\n              public caseIdAttribute: CaseAttribute,\n              public process: Process,\n              public ref: string,\n              public caseReference: string\n  ) {\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {\n  CaseAction,\n  CaseActionsList,\n  CaseCreator,\n  CaseCreatorsList,\n  CaseType,\n  CaseTypesList,\n  JsonSchema,\n  Process\n} from '../models/liveappsdata';\nimport {LaProcessSelection} from '../models/tc-case-processes';\nimport {LiveAppsService} from './live-apps.service';\nimport {Observable} from 'rxjs';\nimport {flatMap, map, tap} from 'rxjs/operators';\nimport {TcCaseDataService} from './tc-case-data.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TcCaseProcessesService {\n\n  constructor(private http: HttpClient, private liveAppsService: LiveAppsService, private caseDataService: TcCaseDataService) { }\n\n  //  This service gets the case state then uses that and the caseRef to get the available actions.\n  public getCaseActionsForCaseRef(caseRef: string, sandboxId: number, appId: string, typeId: string): Observable<CaseActionsList> {\n    const caseState$ = this.caseDataService.getCaseState(caseRef, sandboxId);\n    const caseActions$ = caseState$.pipe(\n      flatMap(caseState => {\n        return this.getCaseActions(caseRef, sandboxId, appId, typeId, caseState);\n      })\n    );\n    return caseActions$;\n  }\n\n\n// todo: Note this is not a public API - update when Public API available\n  public getCaseActions(caseRef: string, sandboxId: number, appId: string, typeId: string, caseState: string): Observable<CaseActionsList> {\n    // https://eu.liveapps.cloud.tibco.com/pageflow/caseActions?$sandbox=31&\n    // $filter=applicationId%20eq%201742%20and%20caseType%20eq%201%20and%20caseState%20eq%20Responded%20and%20caseRef%20eq%20150491\n    const url = '/pageflow/v1/caseActions?$sandbox=' + sandboxId\n      + '&$filter=applicationId eq ' + appId\n      + ' and caseType eq ' + typeId\n      + ' and caseState eq ' + caseState\n      + ' and caseRef eq ' + caseRef;\n\n    return this.http.get(url)\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(caseactions => {\n          const caList = new CaseActionsList().deserialize(caseactions);\n          // non public API returns action Id as number, switch to string to match other APIs\n          caList.actions.forEach(action => {\n            if (typeof action.id === 'number') {\n              action.id = String(action.id);\n            }\n          })\n          return caList;\n        })\n      );\n    }\n\n  // todo: Note this is not a public API - update when Public API available\n  public getCaseCreators(sandboxId: number, appId: string, typeId: string): Observable<CaseCreatorsList> {\n    const url = '/pageflow/v1/caseCreators?$sandbox=' + sandboxId\n      + '&$filter=applicationId eq ' + appId\n      + ' and caseType eq ' + typeId\n\n    return this.http.get(url)\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(casecreators => {\n          const ccList = new CaseCreatorsList().deserialize(casecreators);\n          // non public API returns creator Id as number, switch to string to match other APIs\n          ccList.creators.forEach(creator => {\n            if (typeof creator.id === 'number') {\n              creator.id = String(creator.id);\n            }\n          })\n          return ccList;\n        })\n      );\n  }\n\n  private getCaseIDAttributeName = (caseType: CaseType) => {\n    let caseIdAttrib: any;\n    caseType.attributes.forEach((attribute) => {\n      if (attribute.isIdentifier) {\n        caseIdAttrib = attribute;\n      }\n    });\n    return caseIdAttrib;\n  }\n\n  // this is a helper function that given a case type 'schema' for the whole application will create an LaProcessSelection object\n  // containing both the appSchema and particular details for this action\n  // this object is required to submit the process later.\n  private createLaProcessSelection = (\n    schema: CaseTypesList,\n    appId: string,\n    typeId: string,\n    action: CaseAction,\n    creator: CaseCreator,\n    caseRef: string): LaProcessSelection => {\n      let processSelection: LaProcessSelection;\n      schema.casetypes.forEach((casetype) => {\n          // the schema will contain definitions for both the 'case' and any defined types in that case.\n          // We want the schema for this 'case'.\n          if (casetype.applicationId === appId && casetype.id === typeId) {\n            // if ( casetype.jsonSchema !== undefined) {\n              if (action) {\n                const caseActionList = casetype.actions ? casetype.actions : [];\n                // now find the selected action\n                caseActionList.forEach((actionDef) => {\n                  if (action.id === actionDef.id) {\n                    if (!actionDef.jsonSchema) {\n                      // create blank form schema\n                      actionDef.jsonSchema = new JsonSchema();\n                      actionDef.jsonSchema.type = 'object';\n                      actionDef.jsonSchema.properties = [];\n                    }\n                    processSelection = new LaProcessSelection(\n                      'action', schema, this.getCaseIDAttributeName(casetype), actionDef,\n                      // Format of ref is <applicationName>.<applicationInternalName>.<processType>.<processName>\n                      (casetype.applicationName + '.' + casetype.applicationInternalName + '.' + 'action' + '.' + actionDef.name),\n                      caseRef\n                    );\n                  }\n                });\n                if (!processSelection) {\n                  // no schema for this process\n                  const process: Process = new Process().deserialize({ jsonSchema: { $schema: 'NOSCHEMA' }, name: action.name, id: action.id });\n                  processSelection = new LaProcessSelection(\n                    'action', schema, this.getCaseIDAttributeName(casetype), process,\n                    // Format of ref is <applicationName>.<applicationInternalName>.<processType>.<processName>\n                    (casetype.applicationName + '.' + casetype.applicationInternalName + '.' + 'action' + '.' + action.name),\n                    caseRef\n                  );\n                }\n              } else if (creator) {\n                const caseCreatorList = casetype.creators ? casetype.creators : [];\n                // now find the selected action\n                caseCreatorList.forEach((creatorDef) => {\n                  if (creator.id === creatorDef.id) {\n                    if (!creatorDef.jsonSchema) {\n                      // create blank form schema\n                      creatorDef.jsonSchema = new JsonSchema();\n                      creatorDef.jsonSchema.type = 'object';\n                      creatorDef.jsonSchema.properties = [];\n                    }\n                    processSelection = new LaProcessSelection(\n                      'creator', schema, this.getCaseIDAttributeName(casetype), creatorDef,\n                      // Format of ref is <applicationName>.<applicationInternalName>.<processType>.<processName>\n                      (casetype.applicationName + '.' + casetype.applicationInternalName + '.' + 'creator' + '.' + creatorDef.name),\n                      null\n                    );\n                  }\n                });\n                if (!processSelection) {\n                  // no schema for this process\n                  const process: Process = new Process().deserialize({ jsonSchema: { $schema: 'NOSCHEMA' }, name: creator.name, id: creator.id });\n                  processSelection = new LaProcessSelection(\n                    'creator', schema, this.getCaseIDAttributeName(casetype), process,\n                    // Format of ref is <applicationName>.<applicationInternalName>.<processType>.<processName>\n                    (casetype.applicationName + '.' + casetype.applicationInternalName + '.' + 'creator' + '.' + creator.name),\n                    null\n                  );\n                }\n              }\n            }\n          // }\n        }\n      );\n      return processSelection;\n  }\n\n    public getProcessDetails(\n      caseRef: string,\n      appId: string,\n      typeId: string,\n      sandboxId: number,\n      action: CaseAction,\n      creator: CaseCreator,\n      top: number): Observable<LaProcessSelection> {\n        return this.liveAppsService.getCaseTypeSchema(sandboxId, appId, top).pipe(\n          map(schema => {\n            return this.createLaProcessSelection(schema, appId, typeId, action ? action : null, creator ? creator: null, caseRef);\n            }\n          )\n        );\n    }\n}\n","\nimport {Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {LiveAppsService} from '../../services/live-apps.service';\nimport {map, take, takeUntil, tap} from 'rxjs/operators';\nimport {CaseAction, CaseType, CaseTypesList, Process} from '../../models/liveappsdata';\nimport {LaProcessSelection} from '../../models/tc-case-processes';\nimport {LiveAppsComponent} from '../live-apps-component/live-apps-component.component';\nimport {TcCaseProcessesService} from '../../services/tc-case-processes.service';\nimport {CustomFormDefs} from '@tibco-tcstk/tc-forms-lib';\n\n\n/**\n * Renders case action buttons\n *\n * ![alt-text](../live-apps-case-actions.png \"Image\")\n *\n *@example <tcla-live-apps-case-actions></tcla-live-apps-case-actions>\n */\n@Component({\n  selector: 'tcla-live-apps-case-actions',\n  templateUrl: './live-apps-case-actions.component.html',\n  styleUrls: ['./live-apps-case-actions.component.css']\n})\nexport class LiveAppsCaseActionsComponent extends LiveAppsComponent implements OnInit {\n  /**\n   * The case reference\n   */\n  @Input() caseRef: string;\n\n  /**\n   * The LA Application Id\n   */\n  @Input() appId: string;\n\n  /**\n   * The LA Application Type Id (generally 1)\n   */\n  @Input() typeId: string;\n\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  /**\n   * The state of the case\n   */\n  @Input() caseState: string;\n\n  /**\n   * Max Actions that can be run simultaneously\n   */\n  @Input() maxActions = 1;\n\n  /**\n   * ~event actionClicked : Case Action selected\n   * ~payload LaProcessSelection : LaProcessSelection object output when an action is clicked (ie. message to parent to run action component)\n   */\n  @Output() actionClicked: EventEmitter<LaProcessSelection> = new EventEmitter<LaProcessSelection>();\n\n  public caseactions: CaseAction[];\n  public errorMessage: string;\n  public disabled = false;\n\n  appSchema: CaseTypesList;\n  caseType: CaseType;\n  caseActionList: Process[];\n\n  constructor(protected liveapps: LiveAppsService, protected caseProcessesService: TcCaseProcessesService) {\n    super();\n  }\n\n  public refresh = () => {\n    this.caseProcessesService.getCaseActionsForCaseRef(this.caseRef, this.sandboxId, this.appId, this.typeId)\n      .pipe(\n        take(1),\n        takeUntil(this._destroyed$),\n        map(caseactions => {\n          this.caseactions = caseactions.actions;\n        })\n      ).subscribe(\n      null, error => { this.errorMessage = 'Error retrieving case actions: ' + error.error.errorMsg; });\n  }\n\n  public toggleEnable = () => {\n    this.disabled = !this.disabled;\n  }\n\n  public selectAction(action: CaseAction) {\n\n    this.caseProcessesService.getProcessDetails(this.caseRef, this.appId, this.typeId, this.sandboxId, action, null, 100).pipe(\n      take(1),\n      takeUntil(this._destroyed$),\n      tap(processDetails => {\n        if (!processDetails || !processDetails.process || (processDetails.process.jsonSchema.$schema === 'NOSCHEMA')) {\n          // This will be triggered when no form schema is available\n          // Typically happens when:\n          // 1) The form has elements that are not supported by the Live Apps API for form schemas such as participant selectors\n          // 2) The Live Apps application is legacy and has no form schema at all, redeploying the live apps application would fix this.\n            console.error('No schema available for this case type: The form may not be supported or you may need to update/re-deploy the live apps application');\n          }\n        }\n      ),\n      map(processSchema => {\n        this.actionClicked.emit(processSchema);\n        return processSchema;\n      })\n    )\n    .subscribe(null, error => { this.errorMessage = 'Error retrieving case actions: ' + error.error.errorMsg; });\n  }\n\n  ngOnInit() {\n    this.refresh();\n  }\n\n}\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {LiveAppsService} from '../../services/live-apps.service';\nimport {Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\nimport {CaseList, CaseRoute} from '../../models/liveappsdata';\nimport {LiveAppsComponent} from '../live-apps-component/live-apps-component.component';\n\n/**\n * Recent cases widget, this Component list recent visited Cases.\n *\n * ![alt-text](../live-apps-recent-cases.png \"\")\n *\n *@example <tcla-live-apps-recent-cases></tcla-live-apps-recent-cases>\n */\n@Component({\n  selector: 'tcla-live-apps-recent-cases',\n  templateUrl: './live-apps-recent-cases.component.html',\n  styleUrls: ['./live-apps-recent-cases.component.css']\n})\nexport class LiveAppsRecentCasesComponent extends LiveAppsComponent implements OnInit {\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  /**\n   * The Application ID of the UI (should ideally be unique as it is shared state key)\n   */\n  @Input() uiAppId: string;\n\n  /**\n   * case card format - list, card, miniCard, staticList (no click event)\n   */\n  @Input() displayType: string = this.displayType ? this.displayType : 'miniCard'; // miniCard, card, list\n  /**\n   * Whether to show the header bar in the widget - eg. favorites on home page (contains icon etc) - if off icons still appear without bar\n   */\n  @Input() showHeader: boolean = this.showHeader ? this.showHeader : true;\n\n  /**\n   * ~event clickCase : Case clicked\n   * ~payload CaseRoute : CaseRoute object output when case is clicked so calling component can route accordingly - ie. route to case\n   */\n  @Output() clickCase: EventEmitter<CaseRoute> = new EventEmitter<CaseRoute>();\n\n\n  public recentCases: string[];\n  public errorMessage: string;\n\n  public clickCaseAction = (caseRoute: CaseRoute) => {\n    this.clickCase.emit(caseRoute);\n  }\n\n  public refresh = () => {\n    this.recentCases = [];\n    this.liveapps.getRecentCases(this.uiAppId, this.sandboxId)\n      .pipe(\n        take(1),\n        takeUntil(this._destroyed$),\n        map(recentCases => {\n          this.recentCases = recentCases.caseRefs || [];\n        })\n      ).subscribe(\n      null, error => { this.errorMessage = 'Error retrieving recent cases: ' + error.error.errorMsg; });\n  }\n\n  public clearRecentCases = () => {\n    // -1 will clear recent cases\n    this.liveapps.setRecentCase('-1', this.uiAppId, this.sandboxId);\n    this.recentCases = [];\n  }\n\n  public handleDeleted = (caseRef: string) => {\n    this.recentCases.splice(this.recentCases.indexOf(caseRef), 1);\n    this.liveapps.unsetRecentCase(caseRef, this.uiAppId, this.sandboxId);\n  }\n\n  constructor(private liveapps: LiveAppsService) {\n    super();\n  }\n\n  ngOnInit() {\n    this.refresh();\n  }\n\n}\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {map, take, takeUntil} from 'rxjs/operators';\nimport {AuditEvent} from '../../models/tc-case-audit';\nimport {LiveAppsComponent} from '../live-apps-component/live-apps-component.component';\nimport {TcCaseStatesService} from '../../services/tc-case-states.service';\nimport {StateAuditEvent} from '../../models/tc-case-states';\n\n\n/**\n * Provides case audit summary for states\n *\n * ![alt-text](../live-apps-case-state-audit.png \"Image\")\n *\n *@example <tcla-live-apps-case-state-audit></tcla-live-apps-case-state-audit>\n */\n@Component({\n  selector: 'tcla-live-apps-case-state-audit',\n  templateUrl: './live-apps-case-state-audit.component.html',\n  styleUrls: ['./live-apps-case-state-audit.component.css']\n})\nexport class LiveAppsCaseStateAuditComponent extends LiveAppsComponent implements OnInit {\n\n  /**\n   * The case reference\n   */\n  @Input() caseRef: string;\n\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  /**\n   * The LA Application Id\n   */\n  @Input() appId: string;\n\n  public auditEvents: StateAuditEvent[];\n  public errorMessage: string;\n\n\n  constructor(private caseStatesService: TcCaseStatesService) {\n    super();\n  }\n\n  public refresh = () => {\n    this.caseStatesService.getCaseStateAuditWithTerminal(this.caseRef, this.sandboxId, this.appId)\n      .pipe(\n        take(1),\n        takeUntil(this._destroyed$),\n        map(auditeventlist => {\n          this.auditEvents = auditeventlist.auditEvents;\n          if (!this.auditEvents || this.auditEvents.length <= 0) {\n            console.error('Unable to create states audit view. Case Audit likely removed due to subscription retention period.');\n          }\n        })\n      ).subscribe(\n      null, error => { this.errorMessage = 'Error retrieving case audit: ' + error.error.errorMsg; });\n  }\n\n  ngOnInit() {\n    this.refresh();\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {LiveAppsComponent} from '../live-apps-component/live-apps-component.component';\n\n\n/**\n * Editor component to edit a note\n *\n * ![alt-text](../live-apps-notes-editor.png \"\")\n *\n *@example <tcla-live-apps-notes-editor></tcla-live-apps-notes-editor>\n */\n@Component({\n  selector: 'tcla-live-apps-notes-editor',\n  templateUrl: './live-apps-notes-editor.component.html',\n  styleUrls: ['./live-apps-notes-editor.component.css']\n})\nexport class LiveAppsNotesEditorComponent extends LiveAppsComponent {\n  @Input() noteText: string; // use 'CASE_APP' to share notes with case manager\n  @Input() isReply = false;\n\n  /**\n   * ~event noteSubmitted : Internal\n   */\n\n  @Output() noteSubmitted = new EventEmitter(); // notify text submitted\n\n  constructor() {\n    super();\n  }\n\n  public submitNote = (noteText) => {\n    this.noteSubmitted.emit(noteText);\n    this.noteText = undefined;\n  }\n\n}\n","// Note: This may move to the core library\n\nimport {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {LoginContext} from '../../models/liveappsdata';\nimport {LoginPrefill} from '@tibco-tcstk/tc-core-lib';\nimport {LiveAppsService} from '../../services/live-apps.service';\nimport { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';\n\n/**\n * Component perform a Login in case there is no valid Session yet.\n *\n * If the user is not logged in the login component will be displayed automatically.\n *\n * ![alt-text](../Login.png \"Image\")\n */\n@Component({\n  selector: 'tcla-live-apps-login',\n  templateUrl: './live-apps-login.component.html',\n  styleUrls: ['./live-apps-login.component.css']\n})\nexport class LiveAppsLoginComponent extends LiveAppsComponent {\n\n  @Output() loginContext: EventEmitter<LoginContext> = new EventEmitter<LoginContext>();\n  @Input() loginPrefill: LoginPrefill;\n\n  constructor() {\n    super();\n  }\n\n  // run when logged in\n  handleLoggedIn = (loginInfo) => {\n    sessionStorage.setItem('loggedIn', Date.now().toString());\n\n    // emit useful details about the login and session/claims\n    this.loginContext.emit(new LoginContext().deserialize(\n        {\n          authInfo: loginInfo.authInfo,\n          accessToken: loginInfo.accessToken\n        }));\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {CaseSearchResults, CaseType} from '../../models/liveappsdata';\nimport {LiveAppsComponent} from '../live-apps-component/live-apps-component.component';\nimport {LiveAppsCaseSearchComponent} from '../live-apps-case-search/live-apps-case-search.component';\nimport {LiveAppsService} from '../../services/live-apps.service';\nimport {Subject} from 'rxjs';\n\n/**\n * High Level search widget component (wraps others)\n * This Component allows to search for existing Cases and list Case Cards.\n *\n * ![alt-text](../live-apps-search-widget.png \"\")\n *\n *@example <tcla-live-apps-search-widget></tcla-live-apps-search-widget>\n */\n\n@Component({\n  selector: 'tcla-live-apps-search-widget',\n  templateUrl: './live-apps-search-widget.component.html',\n  styleUrls: ['./live-apps-search-widget.component.css']\n})\nexport class LiveAppsSearchWidgetComponent extends LiveAppsComponent {\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  /**\n   * The Application ID of the UI (should ideally be unique as it is shared state key)\n   */\n  @Input() uiAppId: string;\n\n  /**\n   * The list of LA Application IDs you want to handle\n   */\n  @Input() appIds: string[];\n\n  /**\n   * ~event caseSelected : Case Clicked\n   * ~payload string : emits case reference when a case is clicked (so parent can navigate to case)\n   */\n  @Output() caseSelected: EventEmitter<string> = new EventEmitter<string>();\n\n\n  @ViewChild(LiveAppsCaseSearchComponent, {static: false}) caseSearchComponent: LiveAppsCaseSearchComponent;\n  // case search\n  matchedRefs: string[] = [];\n  searchString: string;\n  message: string;\n\n  constructor(private liveapps: LiveAppsService) {\n    super();\n  }\n\n  // handle case search results\n  public handleSearchResults = (data: CaseSearchResults) => {\n    this.message = undefined;\n    this.matchedRefs = data.caserefs;\n    this.searchString = data.searchString;\n  }\n\n  public handleClearMatches = () => {\n    this.caseSearchComponent.clearResults();\n    this.matchedRefs = [];\n    this.message = undefined;\n  }\n\n  // case clicked\n  public clickCaseAction = (caseReference) => {\n    this.caseSelected.emit(caseReference);\n  }\n\n  public refresh = () => {\n    if (this.caseSearchComponent) {\n      this.caseSearchComponent.refresh();\n    }\n  }\n\n  public searchCasesByState = (stateId: number, stateLabel: string, appId: string, typeId: string, message: string) => {\n    this.caseSearchComponent.setCaseType(new CaseType().deserialize( { applicationId : appId, id: typeId }));\n    this.caseSearchComponent.setSelectedStateId(stateId, stateLabel);\n    this.message = message;\n    this.liveapps.caseSearchEntries('', this.sandboxId, appId, typeId, true, 0, 1000, stateId).subscribe(\n      results => {\n        this.matchedRefs = results.caserefs;\n      }\n    );\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output, OnDestroy, SimpleChanges, OnChanges} from '@angular/core';\nimport {LiveAppsComponent} from '../live-apps-component/live-apps-component.component';\nimport {ProcessId} from '../../models/liveappsdata';\nimport {LaProcessSelection} from '../../models/tc-case-processes';\nimport {LiveAppsService} from '../../services/live-apps.service';\nimport {map, take, takeUntil} from 'rxjs/operators';\nimport {Subject} from 'rxjs';\nimport {CustomFormDefs} from '@tibco-tcstk/tc-forms-lib';\n\n/**\n * Handles rendering of case creator form.\n *\n *@example <tcla-live-apps-case-creator></tcla-live-apps-case-creator>\n */\n@Component({\n  selector: 'tcla-live-apps-case-creator',\n  templateUrl: './live-apps-case-creator.component.html',\n  styleUrls: ['./live-apps-case-creator.component.css']\n})\nexport class LiveAppsCaseCreatorComponent extends LiveAppsComponent implements OnInit, OnChanges {\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  /**\n   * LA application ID\n   */\n  @Input() applicationId: string;\n\n  /**\n   * The LA Application Type Id (generally 1)\n   */\n  @Input() typeId: string;\n\n  /**\n   * The process definition of the action or creator to execute\n   */\n  @Input() process: LaProcessSelection;\n\n  /**\n   * Data object that will be displayed on the form. Allows overriding over form data (eg. when selecting data in spotfire)\n   */\n  @Input() dataOverride: any;\n\n  /**\n   * Custom Form configuration file\n   */\n  @Input() customFormDefs: CustomFormDefs;\n\n\n  /**\n   * ~event caseChanged : Case action started (process started)\n   * ~payload ProcessId : ProcessId object passed when a case has been updated or created by a process (action/creator)\n   */\n  @Output() caseChanged: EventEmitter<ProcessId> = new EventEmitter<ProcessId>();\n\n  data: any;\n  schema: any;\n  layout: any[];\n  options: any;\n\n  handleSubmit = (data, caseRef) => {\n    // if no_process_submit then no need to run process as this was done inside a custom form app\n    if (data !== 'NO_PROCESS_SUBMIT') {\n      // run the process\n      this.liveapps.runProcess(this.sandboxId, this.applicationId, this.process.process.id, caseRef, data)\n        .pipe(\n          take(1),\n          takeUntil(this._destroyed$),\n          map(response => {\n            if (response) {\n              if (!response.data.errorMsg) {\n                // parse data to object\n                response.data = JSON.parse(response.data);\n                // case created send back response including caseIdentifier if one is present\n                let caseIdentifier;\n                let caseReference;\n                if (response.caseIdentifier) {\n                  caseIdentifier = response.caseIdentifier;\n                }\n                if (response.caseReference) {\n                  caseReference = response.caseReference;\n                }\n                const processResponse = new ProcessId().deserialize({'caseIdentifier': caseIdentifier, 'caseReference': caseReference});\n                this.caseChanged.emit(processResponse);\n                this.schema = undefined;\n                this.data = undefined;\n                this.layout = undefined;\n              } else {\n                console.error('Unable to run case creator');\n                console.error(response.data.errorMsg);\n              }\n            }\n          })\n        )\n        .subscribe(success => success, error => {\n            console.error('Unable to run case creator');\n            console.error(error);\n          }\n        );\n    } else {\n      const processResponse = new ProcessId().deserialize({'caseIdentifier': undefined, 'caseReference': undefined});\n      this.caseChanged.emit(processResponse);\n      this.schema = undefined;\n      this.data = undefined;\n      this.layout = undefined;\n    }\n  }\n\n  constructor(protected liveapps: LiveAppsService) {\n    super();\n  }\n\n  ngOnInit() {\n    this.options = {\n      defaultOptions: {\n        'appearance': 'legacy'\n      }\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // handle input param changes\n    if (changes.process && changes.process.currentValue && (changes.process.currentValue !== changes.process.previousValue)) {\n      if (changes.process.currentValue.process.jsonSchema.$schema === 'NOSCHEMA') {\n        this.schema = undefined;\n      } else {\n        this.schema = changes.process.currentValue.process.jsonSchema;\n      }\n    } else if (changes.applicationId && (changes.applicationId.currentValue !== changes.applicationId.previousValue)) {\n      // appId has changed: make sure no process selected/form displayed\n      this.process = undefined;\n    }\n    if (changes.layout && (changes.layout.currentValue !== changes.layout.previousValue)) {\n      this.layout = changes.layout.currentValue;\n    }\n    if (changes.dataOverride && (changes.dataOverride.currentValue !== changes.dataOverride.previousValue)) {\n      this.data = this.dataOverride;\n    }\n  }\n\n}\n","// todo: JS deprecate this since now using private API to allow only listing of enabled creators\n\nimport {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild} from '@angular/core';\nimport {CaseType, CaseTypesList, Process} from '../../models/liveappsdata';\nimport {LaProcessSelection} from '../../models/tc-case-processes';\nimport {LiveAppsComponent} from '../live-apps-component/live-apps-component.component';\nimport {LiveAppsService} from '../../services/live-apps.service';\nimport {map} from 'rxjs/operators';\nimport {LiveAppsStateIconComponent} from '../live-apps-state-icon/live-apps-state-icon.component';\nimport {MatSelect} from '@angular/material';\n\n@Component({\n  selector: 'tcla-live-apps-creator-selector',\n  templateUrl: './live-apps-creator-selector.component.html',\n  styleUrls: ['./live-apps-creator-selector.component.css']\n})\nexport class LiveAppsCreatorSelectorComponent extends LiveAppsComponent implements OnChanges {\n  @ViewChild('creatorSelector', {static: false}) creatorSelector: MatSelect;\n  @Input() sandboxId: number;\n  @Input() appId: string;\n  @Input() typeId: string;\n  /**\n   * ~event creatorSelection : Case Creator selected\n   * ~payload LaProcessSelection : LaProcessSelection object output when a creator is selected from a drop down\n   */\n\n  @Output() creatorSelection = new EventEmitter<LaProcessSelection>();\n\n  appSchema: CaseTypesList;\n  caseType: CaseType;\n  caseCreatorList: Process[];\n\n  // run when the user clicks on a case creator\n  public selectProcess = (process) => {\n    this.creatorSelection.emit(new LaProcessSelection('creator', this.appSchema, this.getCaseIDAttributeName(), process,\n      // Format of ref is <applicationName>.<applicationInternalName>.<processType>.<processName>\n      (this.caseType.applicationName + '.' + this.caseType.applicationInternalName + '.' + 'creator' + '.' + process.name),\n      undefined\n    ));\n  }\n\n  public reset = () => {\n    this.creatorSelector.value = undefined;\n  }\n\n  private getCaseIDAttributeName = () => {\n    let caseIdAttrib: any;\n    this.caseType.attributes.forEach((attribute) => {\n      if (attribute.isIdentifier) {\n        caseIdAttrib = attribute;\n      }\n    });\n    return caseIdAttrib;\n  }\n\n  public refresh = () => {\n    // retrieve the schema for this case type so we can display case creators and case actions for this case type\n    this.liveapps.getCaseTypeSchema(this.sandboxId, this.appId, 100).pipe(\n      map(schema => {\n          this.appSchema = schema;\n          schema.casetypes.forEach((casetype) => {\n              // the schema will contain definitions for both the 'case' and any defined types in that case.\n              // We want the schema for this 'case'.\n              if (casetype.applicationId === this.appId && casetype.id === this.typeId) {\n                if (casetype.jsonSchema !== undefined) {\n                  this.caseType = casetype;\n                  this.caseCreatorList = casetype.creators ? casetype.creators : [];\n                  if (this.caseCreatorList.length === 1) {\n                      this.selectProcess(this.caseCreatorList[0]);\n                  }\n                } else {\n                  console.error('No schema returned for this case type: You may need to update/re-deploy the live apps application');\n                }\n              }\n            }\n          );\n        }\n      )\n    ).subscribe();\n  }\n\n\n  constructor(private liveapps: LiveAppsService) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.appId && (changes.appId.currentValue !== changes.appId.previousValue)) {\n        this.caseCreatorList = [];\n      this.refresh();\n    }\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {ProcessId} from '../../models/liveappsdata';\nimport {LaProcessSelection} from '../../models/tc-case-processes';\nimport {LiveAppsCreatorSelectorComponent} from '../live-apps-creator-selector/live-apps-creator-selector.component';\nimport {CustomFormDefs} from '@tibco-tcstk/tc-forms-lib';\n\n/**\n * Wraps case creator selection and execution of creator\n *\n *@example <tcla-live-apps-creators></tcla-live-apps-creators>\n */\n\n@Component({\n  selector: 'tcla-live-apps-creators',\n  templateUrl: './live-apps-creators.component.html',\n  styleUrls: ['./live-apps-creators.component.css']\n})\nexport class LiveAppsCreatorsComponent implements OnInit {\n  @ViewChild('creatorSelector', {static: false}) creatorSelector: LiveAppsCreatorSelectorComponent;\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  /**\n   * lA appId ??\n   */\n  @Input() applicationId: string;\n\n  /**\n   * The LA Application Type Id (generally 1)\n   */\n  @Input() typeId: string;\n\n  /**\n   * Data object that will be displayed on the form. Allows overriding over form data (eg. when selecting data in spotfire)\n   */\n  @Input() dataOverride: any;\n\n  /**\n   * Custom Form configuration file\n   */\n  @Input() customFormDefs: CustomFormDefs;\n\n  /**\n   * ~event caseCreated : Case Creator started (process started)\n   * ~payload ProcessId : ProcessId object output on case creation (details of process started)\n   */\n  @Output() caseCreated: EventEmitter<ProcessId> = new EventEmitter<ProcessId>();\n\n  selectedProcess: LaProcessSelection;\n\n  // handle form submit\n  handleSubmit = (data: ProcessId) => {\n    this.caseCreated.emit(data);\n    /*if (this.creatorSelector) {\n      this.creatorSelector.reset();\n    }*/\n  }\n\n  // handle case creator selection\n  handleCreatorSelection = (process: LaProcessSelection) => {\n    this.selectedProcess = process;\n  }\n\n  constructor() { }\n\n  ngOnInit() {\n    console.log(this.applicationId);\n  }\n\n}\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild} from '@angular/core';\nimport {LiveAppsCaseCreatorComponent} from '../live-apps-case-creator/live-apps-case-creator.component';\nimport {LiveAppsService} from '../../services/live-apps.service';\nimport {map, take, takeUntil} from 'rxjs/operators';\nimport {CaseType, ProcessId} from '../../models/liveappsdata';\nimport {LaProcessSelection} from '../../models/tc-case-processes';\n\n\n/**\n * Wraps rendering an execution of an action\n *\n *@example <tcla-live-apps-case-action></tcla-live-apps-case-action>\n */\n\n@Component({\n  selector: 'tcla-live-apps-case-action',\n  templateUrl: './live-apps-case-action.component.html',\n  styleUrls: ['./live-apps-case-action.component.css']\n})\nexport class LiveAppsCaseActionComponent extends LiveAppsCaseCreatorComponent implements OnInit, OnChanges {\n  /**\n   * The case reference\n   */\n  @Input() caseRef: string;\n\n  /**\n   * Whether to show the header bar in the widget - eg. favorites on home page (contains icon etc) - if off icons still appear without bar\n   */\n  @Input() showHeader: boolean;\n\n  originalData: any;\n\n  private getMainCaseTypeFromSchema(typeId: string, process: LaProcessSelection): CaseType {\n    let requestedType: CaseType;\n    process.appSchema.casetypes.forEach((cType) => {\n      if (cType.id === typeId) {\n        requestedType = cType;\n      }\n    });\n    return requestedType;\n  }\n\n  private getCaseData = (caseRef) => {\n    // retrieve the case data for this case reference\n    this.liveapps.getCase(this.caseRef, this.sandboxId, this.applicationId, this.typeId )\n      .pipe(\n        take(1),\n        takeUntil(this._destroyed$),\n        map(result => {\n          if (result.metadata.applicationId === this.applicationId.toString()) {\n            const casedata = result.untaggedCasedataObj;\n            this.originalData = {\n              [this.process.process.name]: casedata\n            };\n            // JS: use name rather than internalObjectName to handle appliction name change\n            const caseTypeName = this.getMainCaseTypeFromSchema(this.typeId, this.process).name;\n            this.data = {\n              [caseTypeName]: casedata\n            };\n          } else {\n            console.error('The selected case is not the right case type for this action');\n          }\n        })\n    )\n      .subscribe(success => success, error => {\n        // Emit any error retrieving case data to the parent\n        console.error('Unable to retrieve case data');\n        console.error(error);\n      });\n  }\n\n  constructor(private lasvc: LiveAppsService) {\n    super(lasvc);\n  }\n\n  ngOnInit() {\n    // set default layout\n    // this.layout = [];\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // the extended class will detect change in the process and layout passed\n    super.ngOnChanges(changes);\n    // handle input param changes\n    if ((changes.caseRef && changes.caseRef.currentValue && (changes.caseRef.currentValue !== changes.caseRef.previousValue))\n      || (changes.process && changes.process.currentValue && (changes.process.currentValue !== changes.process.previousValue))) {\n      // get case data if anything changes\n      if (changes.process.currentValue) {\n        this.getCaseData(this.caseRef);\n      }\n    }\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {ProcessId} from '../../models/liveappsdata';\nimport {LaProcessSelection} from '../../models/tc-case-processes';\nimport {CustomFormDefs} from '@tibco-tcstk/tc-forms-lib';\nimport {LiveAppsCaseActionsComponent} from '../live-apps-case-actions/live-apps-case-actions.component';\n\n\n/**\n * Not used by app but wraps action list and action execution.\n *\n *@example <tcla-live-apps-actions></tcla-live-apps-actions>\n */\n@Component({\n  selector: 'tcla-live-apps-actions',\n  templateUrl: './live-apps-actions.component.html',\n  styleUrls: ['./live-apps-actions.component.css']\n})\nexport class LiveAppsActionsComponent implements OnInit {\n\n  @ViewChild(LiveAppsCaseActionsComponent, {static: false}) actionSelector: LiveAppsCaseActionsComponent\n\n  /**\n   * The case reference\n   */\n  @Input() caseRef: string;\n\n  /**\n   * The state of the case\n   */\n  @Input() caseState: string;\n\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  /**\n   * LA Application ID\n   */\n  @Input() applicationId: string;\n\n  /**\n   * The LA Application Type Id (generally 1)\n   */\n  @Input() typeId: string;\n\n  /**\n   * Custom Form configuration file\n   */\n  @Input() customFormDefs: CustomFormDefs;\n\n\n  /**\n   * ~event caseActioned : Case action starterd (process started)\n   * ~payload ProcessId : processId of started process in live apps (action)\n   */\n  @Output() caseActioned: EventEmitter<ProcessId> = new EventEmitter<ProcessId>();\n\n  selectedAction: LaProcessSelection;\n\n  // action clicked\n  handleActionCompleted = (result: ProcessId) => {\n    this.caseActioned.emit(result);\n    this.actionSelector.toggleEnable();\n  }\n\n\n  handleActionClicked = (action) => {\n    this.actionSelector.toggleEnable();\n    this.selectedAction = action;\n  }\n\n  constructor() { }\n\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport {LiveAppsService} from '../services/live-apps.service';\nimport {Claim} from '@tibco-tcstk/tc-core-lib';\nimport {map, mergeMap} from 'rxjs/operators';\n\n@Injectable()\nexport class ClaimsResolver implements Resolve<Observable<Claim>> {\n\n  constructor(public liveapps: LiveAppsService) {}\n\n  resolve(): Observable<Claim> {\n\n    // note claims will be cached at http level\n    // logout required to update them anyway\n\n    const claims = this.liveapps.getClaims()\n      .pipe(\n        map(claim => {\n          claim.sandboxes.forEach(sandbox => {\n            if (sandbox.type === 'Production') {\n              claim.primaryProductionSandbox = sandbox;\n            }\n          });\n          return claim;\n        })\n      );\n\n    return claims;\n  }\n\n}\n","// This guard is to check case Id is valid before loading route\n// We have to get sandbox Id then pass that to the getCaseByRef call\n// This will return (observable) true if the case exists or false if it doesnt\n\nimport {Inject, Injectable} from '@angular/core';\nimport {Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\nimport {LiveAppsService} from '../services/live-apps.service';\nimport {HttpClient, HttpHandler} from '@angular/common/http';\nimport {catchError, flatMap, map, mergeMap} from 'rxjs/operators';\nimport {Observable, of, throwError} from 'rxjs';\nimport {ClaimsResolver} from '../resolvers/claims.resolver';\nimport {Claim} from '@tibco-tcstk/tc-core-lib';\n\n@Injectable()\nexport class CaseGuard implements CanActivate {\n\n  constructor(private liveapps: LiveAppsService, private router: Router) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    // get app config\n    const caseRef = route.url[route.url.length - 1].path;\n\n    const claimsResolver = new ClaimsResolver(this.liveapps);\n\n    const decision: Observable<boolean> = claimsResolver.resolve()\n      .pipe(\n        // use flatMap so we can pass the config into the getCaseByRef call)\n        flatMap(\n          claims => {\n            return this.liveapps.getCaseByRef(claims.primaryProductionSandbox.id, caseRef)\n              .pipe(\n                map(caseinfo => {\n                  if (caseinfo) {\n                    return true;\n                  } else {\n                    // TODO: Externalize redirect URL\n                    this.router.navigate(['/starterApp/home'], {});\n                    return false;\n                  }\n                }),\n                catchError(error => {\n                  // if the case is not found (someone tried to manually route to an invalid caseref) then redirect back to home\n                  console.error('Unable to load case ' + caseRef + ' are you sure that is a valid case reference?');\n                  // TODO: Externalize redirect URL\n                  this.router.navigate(['/starterApp/home'], {});\n                  return throwError(error);\n                })\n              );\n          }\n        )\n      );\n\n    return decision;\n  }\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {CaseType, CaseTypesList, JsonSchema} from '../../models/liveappsdata';\nimport {LaProcessSelection} from '../../models/tc-case-processes';\nimport {CustomFormDefs} from '@tibco-tcstk/tc-forms-lib';\n\n/**\n * Renders case data in a form\n *\n * ![alt-text](../live-apps-case-data-display.png \"Image\")\n *\n *@example <tcla-live-apps-case-data-display></tcla-live-apps-case-data-display>\n */\n\n@Component({\n  selector: 'tcla-live-apps-case-data-display',\n  templateUrl: './live-apps-case-data-display.component.html',\n  styleUrls: ['./live-apps-case-data-display.component.css']\n})\nexport class LiveAppsCaseDataDisplayComponent implements OnInit {\n\n  DEFAULT_CASE_DATA_LAYOUT = [\n    '*',\n    { type: 'submit', title: 'Save', condition: '1===2' },\n    { type: 'actions', title: 'hello', condition: '1===2' }\n\n  ];\n\n  /**\n   * The case data\n   */\n  @Input() caseData: string;\n\n  /**\n   * The case reference\n   */\n\n  @Input() appId: string\n  /**\n   * The applicationId\n   */\n\n  @Input() caseRef: string;\n\n  /**\n   * The schema of the case type\n   */\n  @Input() schema: JsonSchema;\n\n  /**\n   * Layout object that can be passed to override default layout of the form renderer\n   */\n  @Input() layout: any[] = this.layout ? this.layout : this.DEFAULT_CASE_DATA_LAYOUT;\n\n  /**\n   * Custom Form configuration file\n   */\n  @Input() customFormDefs: CustomFormDefs;\n\n  /**\n   * Custom Form Reference\n   */\n  @Input() formRef: string;\n\n  options;\n\n  constructor() { }\n\n  ngOnInit() {\n    // since this is the 'display' of case data we set to readonly and no validation\n    // legacy makes the labels appear above the data\n    this.options = {\n      defaultOptions: {\n        'readonly': true,\n        'appearance': 'legacy'\n      },\n      'validateOnRender': false\n    };\n    console.log(this.schema);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Roles, RouteAccessControlConfig} from '../models/tc-groups-data';\nimport { RoleAttribute } from '@tibco-tcstk/tc-core-lib';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TcRolesService {\n    \n    constructor() { }\n\n    private currentRole = undefined;\n\n    private hasRoleAccess = (roleReq: string, roles: Roles): boolean => {\n        const reqRole = roles.roles.find(role => {\n            return (role.id === roleReq);\n        })\n        return reqRole ? true : false;\n    }\n\n    private hasButtonAccess = (buttonId: string, roles: Roles, access: RouteAccessControlConfig): boolean => {\n      // check which role required\n      const reqRole = access.buttons.find(buttonRec => {\n        return (buttonId === buttonRec.buttonId);\n      });\n      if (!reqRole) {\n        // nothing defined so return true;\n        return true;\n      } else {\n        const hasRole = roles.roles.find(role => {\n          return (role.id === reqRole.requiredRoleId);\n        });\n        return hasRole ? true : false;\n      }\n    }\n\n    checkRole(roleId: string, roles: Roles): boolean {\n        return this.hasRoleAccess(roleId, roles);\n    }\n\n    checkButton(buttonId: string, roles: Roles, access: RouteAccessControlConfig): boolean {\n        return this.hasButtonAccess(buttonId, roles, access);\n    }\n\n    amIConfigurator = (roles: Roles): boolean => {\n        const reqRole = roles.roles.find(role => {\n            return (role.configuration === true);\n        })\n        return reqRole ? true : false;\n    }\n    getCurrentRole = (): RoleAttribute => {\n        return this.currentRole;\n    }\n\n    setCurrentRole = (role: RoleAttribute): void => {\n        this.currentRole = role;\n    }\n}\n","import {\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {map, take, takeUntil} from 'rxjs/operators';\nimport {Subject} from 'rxjs';\nimport {LiveAppsCaseActionsComponent} from '../live-apps-case-actions/live-apps-case-actions.component';\nimport {LiveAppsCaseAuditComponent} from '../live-apps-case-audit/live-apps-case-audit.component';\nimport {LiveAppsCaseDataComponent} from '../live-apps-case-data/live-apps-case-data.component';\nimport {LiveAppsCaseStateAuditComponent} from '../live-apps-case-state-audit/live-apps-case-state-audit.component';\nimport {LiveAppsCaseStatesComponent} from '../live-apps-case-states/live-apps-case-states.component';\nimport {LiveAppsDocumentsComponent} from '../live-apps-documents/live-apps-documents.component';\nimport {LiveAppsNotesComponent} from '../live-apps-notes/live-apps-notes.component';\nimport {LiveAppsCaseSummaryComponent} from '../live-apps-case-summary/live-apps-case-summary.component';\nimport {LiveAppsService} from '../../services/live-apps.service';\nimport {ToolbarButton, TcButtonsHelperService} from '@tibco-tcstk/tc-core-lib';\nimport {LaProcessSelection} from '../../models/tc-case-processes';\nimport {MatTab, MatTabGroup} from '@angular/material';\nimport {QueryList} from '@angular/core';\nimport { RouteAction } from '@tibco-tcstk/tc-core-lib';\nimport {Roles, RouteAccessControlConfig} from '../../models/tc-groups-data';\nimport {TcRolesService} from '../../services/tc-roles-service.ts.service';\nimport {CustomFormDefs} from '@tibco-tcstk/tc-forms-lib';\n\n\n/**\n * High level component to allow interaction with case.\n *\n *  ![alt-text](../live-apps-case-cockpit.png \"Image\")\n *\n *@example <tcla-live-apps-case-cockpit></tcla-live-apps-case-cockpit>\n */\n@Component({\n  selector: 'tcla-live-apps-case-cockpit',\n  templateUrl: './live-apps-case-cockpit.component.html',\n  styleUrls: ['./live-apps-case-cockpit.component.css']\n})\nexport class LiveAppsCaseCockpitComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  @ViewChild('contextTabGroup', {static: false}) matTabGroup: MatTabGroup;\n  @ViewChildren('contextTabs') inclusiveTabs: QueryList<MatTab>;\n  @ContentChildren('projectedTab') tabsFromNgContent: QueryList<MatTab>;\n\n  // this default layout displays all data but will hide buttons\n  DEFAULT_CASE_DATA_LAYOUT = [\n    '*',\n    { type: 'submit', title: 'Save', condition: '1===2' },\n    { type: 'actions', title: 'Hidden', condition: '1===2' }\n  ];\n\n  /**\n   * The Application ID of the UI (should ideally be unique as it is shared state key)\n   */\n  @Input() uiAppId: string;\n\n  /**\n   * The LA Application Id\n   */\n  @Input() appId: string;\n\n  /**\n   * The LA Application Type Id (generally 1)\n   */\n  @Input() typeId: string;\n\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  /**\n   * The case reference\n   */\n  @Input() caseRef: string;\n\n  /**\n   * The ID of the logged user\n   */\n  @Input() userId: string;\n\n  /**\n   * The list of LA Application Ids you want to mark as recent cases when accessed\n   */\n  @Input() exclRecentAppIds: string[];\n\n  /**\n   * Roles - The users current roles\n   */\n  @Input() roles: Roles;\n\n  /**\n   * RouteAccessControlConfig - basically the config for access control\n   */\n  @Input() access: RouteAccessControlConfig;\n\n  /**\n   * Custom Form configuration file\n   */\n  @Input() customFormDefs: CustomFormDefs;\n\n  /**\n   * Layout object that can be passed to override default layout of the form renderer\n   */\n  @Input() layout: any[] = this.layout ?  this.layout : this.DEFAULT_CASE_DATA_LAYOUT;\n\n  /**\n   * Whether to show notes in context panel (default true)\n   */\n  @Input() showNotes: boolean = this.showNotes ? this.showNotes : true;\n\n  /**\n   * Whether to show documents in context panel (default true)\n   */\n  @Input() showDocuments: boolean = this.showDocuments ? this.showDocuments : true;\n\n  /**\n   * Whether to show states in context panel (default true)\n   */\n  @Input() showStates: boolean = this.showStates ? this.showStates :  true;\n\n  /**\n   * Whether to show audit in context panel (default true)\n   */\n  @Input() showAudit: boolean = this.showAudit ? this.showAudit :  true;\n\n\n  /**\n   * ~event routeAction : Component requests route to another page\n   * ~payload RouteAction : RouteAction object to tell caller to navigate somewhere\n   */\n  @Output() routeAction: EventEmitter<RouteAction> = new EventEmitter<RouteAction>();\n\n// The ViewChild declarations give access to components marked on the template so that I can call public functions like refresh\n  @ViewChild(LiveAppsCaseSummaryComponent, {static: false}) caseSummaryComponent: LiveAppsCaseSummaryComponent;\n  @ViewChild(LiveAppsCaseDataComponent, {static: false}) caseDataComponent: LiveAppsCaseDataComponent;\n  @ViewChild(LiveAppsCaseActionsComponent, {static: false}) caseActionsComponent: LiveAppsCaseActionsComponent;\n  @ViewChild(LiveAppsCaseAuditComponent, {static: false}) caseAuditComponent: LiveAppsCaseAuditComponent;\n  @ViewChild(LiveAppsDocumentsComponent, {static: false}) caseDocumentsComponent: LiveAppsDocumentsComponent;\n  @ViewChild(LiveAppsNotesComponent, {static: false}) caseNotesComponent: LiveAppsNotesComponent;\n  @ViewChild(LiveAppsCaseStatesComponent, {static: false}) caseStatesComponent: LiveAppsCaseStatesComponent;\n  @ViewChild(LiveAppsCaseStateAuditComponent, {static: false}) caseStateAuditComponent: LiveAppsCaseStateAuditComponent;\n  @ViewChild('dataTabGroup', {static: false}) dataTabGroups: MatTabGroup;\n\n  isFavorite: boolean;\n  valid = false;\n  toolbarButtons: ToolbarButton[] = [];\n  actionSelection: LaProcessSelection;\n  incConfigButton = true;\n  incFavButton = true;\n  incRefreshButton = true;\n  incHomeButton = true;\n  dataTabActive = 0;\n  dataTabId;\n  actionTabId;\n  actionTabActive = false;\n\n  // use the _destroyed$/takeUntil pattern to avoid memory leaks if a response was never received\n  protected _destroyed$ = new Subject();\n  protected errorMessage: string;\n\n  constructor(protected liveapps: LiveAppsService, protected buttonsHelper: TcButtonsHelperService, protected router: Router, protected rolesService: TcRolesService) {\n  }\n\n  protected createToolbarButtons = (): ToolbarButton[] => {\n    const buttons = [];\n    if (this.incConfigButton) {\n      const configButton = this.buttonsHelper.createButton('config', 'tcs-capabilities', true, 'Config', (this.access ? this.rolesService.checkButton('configure', this.roles, this.access) : true), true);\n      buttons.push(configButton);\n    }\n    if (this.incFavButton) {\n      const favButton = this.buttonsHelper.createButton('favorite', 'tcs-favorites-icon', this.isFavorite, 'Toggle Favorite', (this.access ? this.rolesService.checkButton('favorite', this.roles, this.access) : true), true);\n      buttons.push(favButton);\n    }\n    if (this.incRefreshButton) {\n      const refreshButton = this.buttonsHelper.createButton('refresh', 'tcs-refresh-icon', true, 'Refresh', (this.access ? this.rolesService.checkButton('refresh', this.roles, this.access) : true), true);\n      buttons.push(refreshButton);\n    }\n    if (this.incHomeButton) {\n      const homeButton = this.buttonsHelper.createButton('close', 'tcs-close-icon', true, 'Close', true, true);\n      buttons.push(homeButton);\n    }\n    return buttons;\n  }\n\n  public handleToolbarButtonEvent = (buttonId: string) => {\n    if (buttonId === 'favorite') {\n      this.toggleFavorite();\n    }\n    if (buttonId === 'refresh') {\n      this.refresh();\n    }\n    if (buttonId === 'close') {\n      this.routeAction.emit(new RouteAction('backClicked', null));\n    }\n    if (buttonId === 'config') {\n      this.routeAction.emit(new RouteAction('configClicked', null));\n    }\n  }\n\n  public handleActionSelection = (actionSelection) => {\n    this.caseActionsComponent.toggleEnable();\n    this.actionSelection = actionSelection;\n  }\n\n  public actionTabCreated = (data) => {\n    // the tab isn't actually in the tab-group at this point but this should still work as length is current tab + 1\n    this.dataTabGroups.selectedIndex = this.dataTabGroups._tabs.length;\n    this.actionTabId = this.dataTabGroups._tabs.length;\n    this.actionTabActive = true;\n  }\n\n  public handleCancelAction = () => {\n    this.actionSelection = undefined;\n    this.caseActionsComponent.toggleEnable();\n  }\n\n  public handleActionCompleted = (processId: string) => {\n    this.actionSelection = undefined;\n    this.caseActionsComponent.toggleEnable();\n    // to allow case to update async before we refresh\n    setTimeout(() => {\n      this.refresh();\n    }, 1000);\n  }\n\n  public handleDataTabChanged = (tabNumber: number) => {\n    this.dataTabId = tabNumber;\n    if (tabNumber === this.actionTabId) {\n      this.actionTabActive = true;\n    } else {\n      this.actionTabActive = false;\n    }\n  }\n\n  public refresh = () => {\n    if (this.caseSummaryComponent) {\n      this.caseSummaryComponent.refresh();\n    }\n    if (this.caseDataComponent) {\n      this.caseDataComponent.refresh();\n    }\n    if (this.caseStatesComponent) {\n      this.caseStatesComponent.refresh();\n    }\n    if (this.caseActionsComponent) {\n      this.caseActionsComponent.refresh();\n    }\n    if (this.caseAuditComponent) {\n      this.caseAuditComponent.refresh();\n    }\n    if (this.caseStateAuditComponent) {\n      this.caseStateAuditComponent.refresh();\n    }\n    if (this.caseStatesComponent) {\n      this.caseStatesComponent.refresh();\n    }\n    if (this.caseDocumentsComponent) {\n      this.caseDocumentsComponent.refresh();\n    }\n    if (this.caseNotesComponent) {\n      this.caseNotesComponent.refresh();\n    }\n  }\n\n  public toggleFavorite = () => {\n    this.liveapps.setFavoriteCase(this.caseRef, this.uiAppId, this.sandboxId);\n    this.isFavorite = !this.isFavorite;\n    const updatedFavButton = this.buttonsHelper.createButton(\n      'favorite', 'tcs-favorites-icon', this.isFavorite, 'Toggle Favorite', true, true);\n    this.toolbarButtons = this.buttonsHelper.updateButtons([updatedFavButton], this.toolbarButtons);\n  }\n\n  ngOnInit() {\n    if (!isNaN(Number(this.caseRef))) {\n      // dont set recent if it is in the exclude app list\n      if (!this.exclRecentAppIds || (this.exclRecentAppIds.indexOf(this.appId) === -1)) {\n        this.liveapps.setRecentCase(this.caseRef, this.uiAppId, this.sandboxId);\n      }\n      this.valid = true;\n    }\n    if (this.incFavButton) {\n      this.liveapps.isFavoriteCase(this.caseRef, this.uiAppId, this.sandboxId)\n        .pipe(\n          take(1),\n          takeUntil(this._destroyed$),\n          map(result => {\n            this.isFavorite = result;\n            this.toolbarButtons = this.toolbarButtons.concat(this.createToolbarButtons());\n            return result;\n          })\n        )\n        .subscribe(\n          null, error => {\n            this.errorMessage = 'Error retrieving isFavorite: ' + error.error.errorMsg;\n          }\n        );\n    } else {\n      this.toolbarButtons = this.toolbarButtons.concat(this.createToolbarButtons());\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed$.next();\n  }\n\n  ngAfterViewInit(): void {\n    this.matTabGroup._tabs.reset([...this.inclusiveTabs.toArray(), ...this.tabsFromNgContent.toArray()]);\n    // this.matTabGroup.afterViewInit();\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {SafeHtml} from '@angular/platform-browser';\nimport {TcCaseStatesService} from '../../services/tc-case-states.service';\n\n/**\n * Render a dynamic milestone SVG\n *\n * ![alt-text](../live-apps-milestone.png \"Documents Component Image\")\n *\n *@example <tcla-live-apps-milestone></tcla-live-apps-milestone>\n */\n@Component({\n  selector: 'tcla-live-apps-milestone',\n  templateUrl: './live-apps-milestone.component.html',\n  styleUrls: ['./live-apps-milestone.component.css']\n})\nexport class LiveAppsMilestoneComponent implements OnInit {\n  @Input() isFirst: boolean;\n  @Input() isLast: boolean;\n  @Input() status: string;\n  @Input() label: string;\n  @Input() isTerminal: boolean;\n  @Input() phase: string;\n  @Input() previousPhase: string;\n\n  public sectionSVG: SafeHtml;\n  public milestoneSvg: string;\n\n  constructor(private caseStatesService: TcCaseStatesService) { }\n\n  ngOnInit() {\n    // work out which section the MS trailer is (first/middle/end)\n    const section = this.isFirst ? 'first' : (this.isLast ? 'end' : 'middle');\n    // construct the icon filename\n    const svgFileName = section + '-section-' + this.status + '.svg';\n    // work out correct class\n    let bgClass;\n    if (this.status === 'completed' && this.isTerminal) {\n      bgClass = 'tc-ms-' + 'completed-terminal' + '-bg';\n    } else {\n      bgClass = 'tc-ms-' + this.status + '-bg';\n    }\n    this.milestoneSvg = 'tcs-milestone-' + this.status + (this.isTerminal ? '-terminal' : '');\n\n    this.sectionSVG = this.caseStatesService.getMilestoneSectionSvg(this.label, 'tc-ms-label', bgClass, svgFileName);\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {CaseType} from '../../models/liveappsdata';\nimport {CaseCardConfig} from '../../models/tc-case-card-config';\n\n\n/**\n * Manages liveapps settings for Config page\n *\n *@example <tcla-live-apps-app-configuration-widget></tcla-live-apps-app-configuration-widget>\n */\n@Component({\n  selector: 'tcla-live-apps-app-configuration-widget',\n  templateUrl: './live-apps-app-configuration-widget.component.html',\n  styleUrls: ['./live-apps-app-configuration-widget.component.css']\n})\n\n\nexport class LiveAppsAppConfigurationWidgetComponent implements OnInit {\n  /**\n   * The list of LA Application IDs you want to handle\n   */\n  @Input() appIds: string[];\n\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  /**\n   * The Application ID of the UI (should ideally be unique as it is shared state key)\n   */\n  @Input() uiAppId: string;\n\n  /**\n   * The organisation folder to store/retrieve documents\n   */\n  @Input() folderId: string;\n\n  /**\n   * ~event configChanged : Configuration values changed\n   * ~payload CaseCardConfig : CaseCardConfig object when configuration is changed (so called can do a save with data)\n   */\n  @Output() configChanged: EventEmitter<CaseCardConfig> = new EventEmitter<CaseCardConfig>();\n\n  /**\n   * ~event appSelected : Case Type selected\n   * ~payload CaseType : CaseType object of app selected\n   */\n  @Output() appSelected: EventEmitter<CaseType> = new EventEmitter<CaseType>();\n\n  public selectedAppConfig: CaseType;\n\n  constructor() { }\n\n  handleConfigAppSelection = (application: CaseType) => {\n    // handle selection of app to config\n    this.selectedAppConfig = application;\n    this.appSelected.emit(application);\n  }\n\n  handleConfigChanged = (caseCardConfig: CaseCardConfig) => {\n    this.configChanged.emit(caseCardConfig);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output} from '@angular/core';\nimport {CaseType, ProcessId} from '../../models/liveappsdata';\nimport {LaProcessSelection} from '../../models/tc-case-processes';\nimport {CustomFormDefs} from '@tibco-tcstk/tc-forms-lib';\n\n/**\n * Wraps case creators component (high level component)\n *\n *@example <tcla-live-apps-case-creator-widget></tcla-live-apps-case-creator-widget>\n */\n@Component({\n  selector: 'tcla-live-apps-case-creator-widget',\n  templateUrl: './live-apps-case-creator-widget.component.html',\n  styleUrls: ['./live-apps-case-creator-widget.component.css']\n})\nexport class LiveAppsCaseCreatorWidgetComponent implements OnInit {\n  /**\n   * CaseType model for the case type you want to run a case creator for (normally comes from an application selector component)\n   */\n  @Input() application: CaseType;\n\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  /**\n   * The Application ID of the UI (should ideally be unique as it is shared state key)\n   */\n  @Input() uiAppId: string;\n\n  /**\n   * override the initial data for a case creator\n   */\n  @Input() initialData: any;\n\n  /**\n   * Custom Form configuration file\n   */\n  @Input() customFormDefs: CustomFormDefs;\n\n\n  /**\n   * ~event caseCreated : Case Creator started (process started)\n   * ~payload ProcessId : ProcessId object output on case creation (details of process started)\n   */\n  @Output() caseCreated: EventEmitter<ProcessId> = new EventEmitter<ProcessId>();\n  constructor() { }\n\n  // handle case created\n  public handleCaseCreation = (processId: ProcessId) => {\n    this.caseCreated.emit(processId);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {Deserializable} from '@tibco-tcstk/tc-core-lib';\nimport {CaseType} from './liveappsdata';\nimport {CustomFormDefs} from '@tibco-tcstk/tc-forms-lib';\n\nexport class CaseCreatorSelectionContext {\n  constructor(public application: CaseType,\n              public initialData: any,\n              public sandboxId: number,\n              public customFormDefs: CustomFormDefs\n  ) {}\n}\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {CaseCreatorSelectionContext} from '../../models/tc-case-creator';\nimport {CaseRoute, CaseType, ProcessId} from '../../models/liveappsdata';\nimport {CustomFormDefs} from '@tibco-tcstk/tc-forms-lib';\n\n/**\n * Dialog used on home screen to allow case creation (wraps other components)\n *\n *@example <tcla-live-apps-creator-dialog></tcla-live-apps-creator-dialog>\n */\n@Component({\n  selector: 'tcla-live-apps-creator-dialog',\n  templateUrl: 'live-apps-creator-dialog.component.html',\n  styleUrls: ['live-apps-creator-dialog.component.css']\n})\nexport class LiveAppsCreatorDialogComponent {\n\n  public application: CaseType;\n  public sandboxId: number;\n  public initialData: any;\n  public createdCase: ProcessId;\n  public customFormDefs: CustomFormDefs;\n\n  constructor(\n    public dialogRef: MatDialogRef<LiveAppsCreatorDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: CaseCreatorSelectionContext) {\n    this.application = data.application;\n    this.sandboxId = data.sandboxId;\n    this.initialData = data.initialData;\n    this.customFormDefs = data.customFormDefs;\n  }\n\n  public handleCaseCreated = (createdCase: ProcessId) => {\n    this.createdCase = createdCase;\n  }\n\n  openCase = () => {\n    const caseRoute = new CaseRoute().deserialize(\n      { caseRef: this.createdCase.caseReference, appId: this.application.applicationId, typeId: this.application.id });\n    this.dialogRef.close(caseRoute);\n  }\n\n  closeDialog = () => {\n    this.dialogRef.close();\n  }\n\n}\n\n","import {Deserializable} from '@tibco-tcstk/tc-core-lib';\n\nexport class CaseTypeReportRecordInfo implements Deserializable {\n  id: string;\n  label: string;\n  name: string;\n  color: string;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class CaseTypeReportRecord implements Deserializable {\n  activeStateCaseCount: number;\n  applicationId: string;\n  terminalStateCaseCount: number;\n  incTerminal: boolean;\n  caseTypeInfo: CaseTypeReportRecordInfo;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class CaseTypesReport implements Deserializable {\n  caseTypes: CaseTypeReportRecord[];\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class CaseTypeStateReportStateInfo implements Deserializable {\n  id: string;\n  label: string;\n  value: string;\n  color: string;\n  isTerminal: boolean;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class CaseTypeStateReportRecord implements  Deserializable {\n  caseCount: number;\n  stateInfo: CaseTypeStateReportStateInfo;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class CaseTypeStateReport implements Deserializable {\n  caseStates: CaseTypeStateReportRecord[];\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {forkJoin, Observable} from 'rxjs';\nimport {flatMap, map, tap} from 'rxjs/operators';\nimport {CaseTypeReportRecord, CaseTypesReport, CaseTypeStateReport} from '../models/tc-live-apps-reporting';\nimport {TcCaseCardConfigService} from './tc-case-card-config.service';\nimport {StateColorMap, StateColorMapRec} from '../models/tc-case-card-config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TcLiveAppsReportingService {\n\n  constructor(private http: HttpClient, private caseConfigService: TcCaseCardConfigService) { }\n\n  public parseCaseTypesReport(report: CaseTypesReport, uiAppId: string): Observable<CaseTypesReport> {\n    // add state colors for the report entries\n    const caseStateColorMaps$: Observable<StateColorMap>[] = [];\n    report.caseTypes.forEach((caseType) => {\n      caseStateColorMaps$.push(this.caseConfigService.getStateColorInfo(caseType.applicationId, uiAppId).pipe(\n        map(stateColMap => {\n          return stateColMap;\n        })\n      ));\n    });\n    return forkJoin(caseStateColorMaps$).pipe(\n      map(resultArr => {\n        for (let x = 0; x < report.caseTypes.length; x++) {\n          report.caseTypes[x].caseTypeInfo.color = resultArr[x].caseTypeColor ? resultArr[x].caseTypeColor : undefined;\n        }\n        return report;\n      })\n    );\n  }\n\n  public parseCaseStateReport(report: CaseTypeStateReport, applicationId: string, uiAppId: string): Observable<CaseTypeStateReport> {\n    // add state colors for the report entries\n    return this.caseConfigService.getStateColorInfo(applicationId, uiAppId).pipe(\n      map(stateColorInfo => {\n        report.caseStates.forEach(caseState => {\n          let stateRecord: StateColorMapRec;\n          if (stateColorInfo && stateColorInfo.stateColorRecs) {\n             stateRecord = stateColorInfo.stateColorRecs.find(stateRec => {\n              return stateRec.state === caseState.stateInfo.value;\n            });\n          }\n          caseState.stateInfo.color = (stateRecord && stateRecord.color) ? stateRecord.color : undefined;\n        });\n        return report;\n      })\n    );\n  }\n\n  public getCaseTypesReport(sandboxId: number, appIds: string[], uiAppId: string): Observable<CaseTypesReport> {\n    const url = '/case/reports/v1/caseTypesReport?$sandbox=' + sandboxId;\n    return this.http.get(url).pipe(\n      tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n      flatMap(response => {\n        const originalResponse = new CaseTypesReport().deserialize(response);\n        function includeCaseType(element: CaseTypeReportRecord, index, array ) {\n          return (appIds.indexOf(element.applicationId) !== -1);\n        }\n        const filteredResponse = new CaseTypesReport();\n        if (appIds.length > 0) {\n          filteredResponse.caseTypes = originalResponse.caseTypes.filter(includeCaseType);\n        } else {\n          filteredResponse.caseTypes = originalResponse.caseTypes;\n        }\n        return this.parseCaseTypesReport(filteredResponse, uiAppId);\n      })\n    );\n  }\n\n  public getCaseTypeStateReport(sandboxId: number, appId: string, typeId: string, incTerminal: boolean, uiAppId: string): Observable<CaseTypeStateReport> {\n    const url = '/case/reports/v1/caseStatesReport?$sandbox=' + sandboxId\n      + '&$filter=applicationId eq ' + appId\n      + ' and typeId eq ' + typeId\n      + ' and includeTerminalStates eq ' + String(incTerminal).toUpperCase();\n    return this.http.get(url).pipe(\n      tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n      flatMap(response => {\n        const caseTypeStateReport = new CaseTypeStateReport().deserialize(response);\n        return this.parseCaseStateReport(caseTypeStateReport, appId, uiAppId);\n      })\n    );\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {CaseTypeReportRecord, CaseTypesReport} from '../../models/tc-live-apps-reporting';\nimport {BaseChartDirective, defaultColors, Label, MultiDataSet, SingleDataSet} from 'ng2-charts';\nimport {ChartType} from 'chart.js';\nimport {TcLiveAppsReportingService} from '../../services/tc-live-apps-reporting.service';\nimport {LiveAppsComponent} from '../live-apps-component/live-apps-component.component';\nimport {map, take, takeUntil} from 'rxjs/operators';\n\nimport {copy} from 'angular6-json-schema-form';\nimport {DEFAULT_COLORS, DEFAULT_TYPE_COLOR} from '../../services/tc-case-card-config.service';\n\n/**\n * Home page active cases widget sub component\n *\n *@example <tcla-live-apps-active-cases-report></tcla-live-apps-active-cases-report>\n */\n@Component({\n  selector: 'tcla-live-apps-active-cases-report',\n  templateUrl: './live-apps-active-cases-report.component.html',\n  styleUrls: ['./live-apps-active-cases-report.component.css']\n})\nexport class LiveAppsActiveCasesReportComponent extends LiveAppsComponent implements  OnInit {\n\n  constructor(private reportingService: TcLiveAppsReportingService) {\n    super();\n  }\n\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  /**\n   * The list of LA Application IDs you want to handle\n   */\n  @Input() appIds: string[];\n\n  /**\n   * Whether to show the header bar in the widget - eg. favorites on home page (contains icon etc) - if off icons still appear without bar\n   */\n  @Input() showHeader: boolean;\n\n  /**\n   * The Application ID of the UI (should ideally be unique as it is shared state key)\n   */\n  @Input() uiAppId: string;\n\n  /**\n   * Maximum rows to show in legend before it is hidden (otherwise would take whole widget)\n   */\n  @Input() maxLegendItems: number = this.maxLegendItems ? this.maxLegendItems : 8;\n\n  /**\n   * Whether to show percentages or raw case numbers on the doughnut chart\n   */\n  @Input() showPercentages = this.showPercentages ? this.showPercentages : false;\n\n\n  /**\n   * ~event selectedCaseType : Case Type selected in vizualization\n   * ~payload CaseTypeReportRecord : CaseTypeReportRecord object selected from component\n   */\n  @Output() selectedCaseType: EventEmitter<CaseTypeReportRecord> = new EventEmitter<CaseTypeReportRecord>();\n\n  @ViewChild(BaseChartDirective, {static: false}) caseReportChart: BaseChartDirective;\n\n  public errorMessage: string;\n  public caseTypesReport: CaseTypesReport;\n  public totalActiveCaseCount: number;\n  public totalTerminatedCaseCount: number;\n  public renderChart = false;\n\n  public doughnutChartLabels: Label[];\n  public doughnutChartData: SingleDataSet = [];\n  public doughnutChartType: ChartType = 'doughnut';\n  public chartColors: any[] = [];\n  public defaultColors: string[] = DEFAULT_COLORS.slice().reverse();\n\n  public legendData: any;\n\n  private getCaseCount = () => {\n    return this.totalActiveCaseCount;\n  }\n\n  public doughnutChartOptions: any = {\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n      position: 'left'\n    },\n    layout: {\n      padding: {\n        left: 0,\n        right: 0,\n        top: 10,\n        bottom: 10\n      }\n    },\n    plugins: {\n      doughnutlabel: {\n        labels: [\n          {\n            text: this.getCaseCount,\n            font: {\n              size: '20',\n              family: 'Source Sans Pro',\n              weight: 'bold'\n            },\n            color: '#b6b6b6'\n          },\n          {\n            text: 'cases',\n            font: {\n              size: '16',\n              family: 'Source Sans Pro',\n            },\n            color: '#b6b6b6'\n          }\n        ]\n      },\n      datalabels: {\n        anchor: 'end',\n        backgroundColor: function(context) {\n          return context.dataset.backgroundColor;\n        },\n        borderColor: 'white',\n        borderRadius: 25,\n        borderWidth: 2,\n        color: 'white',\n        display: function(context) {\n          const dataset = context.dataset;\n          const value = dataset.data[context.dataIndex];\n          return value > 0;\n        },\n        font: {\n          weight: 'bold'\n        },\n        formatter: (value, ctx) => {\n\n          const datasets = ctx.chart.data.datasets;\n\n          if (datasets.indexOf(ctx.dataset) === datasets.length - 1) {\n            if (this.showPercentages) {\n              const sum = datasets[0].data.reduce((a, b) => a + b, 0);\n              const percentage = Math.round((value / sum) * 100) + '%';\n              return percentage;\n            } else {\n              return value;\n            }\n          } else {\n            return 0;\n          }\n        }\n      }\n    }\n  };\n\n  private initReportDataToChart = (reportData: CaseTypesReport) => {\n    this.doughnutChartData = [];\n    this.totalActiveCaseCount = 0;\n    const activeCasesArray: any[] = [];\n    const labels: string[] = [];\n    const colorArray: string[] = [];\n    // remove any taken colors from the defaultColors\n    // we have to do this before parsing the record to avoid getting same colors\n    reportData.caseTypes.forEach(ct => {\n      // remove color from defaults\n      if (ct.caseTypeInfo.color) {\n        this.defaultColors = this.defaultColors.filter(item => item !== ct.caseTypeInfo.color);\n      }\n    });\n    // parse record\n    reportData.caseTypes.forEach(caseType => {\n      activeCasesArray.push(caseType.activeStateCaseCount);\n      this.totalActiveCaseCount = this.totalActiveCaseCount + caseType.activeStateCaseCount;\n      this.totalTerminatedCaseCount = this.totalTerminatedCaseCount + caseType.terminalStateCaseCount;\n      labels.push(caseType.caseTypeInfo.label);\n      // we will re-color anything that has the default color\n      let col: string;\n      if (caseType.caseTypeInfo.color && caseType.caseTypeInfo.color !== DEFAULT_TYPE_COLOR) {\n        // use the set color\n        col = caseType.caseTypeInfo.color;\n      } else {\n        // try and get a color from the palette\n        const palCol = this.defaultColors.pop();\n        if (palCol) {\n          col = palCol;\n        } else {\n          // if no more in palette use a random color!\n          const i = Math.random() * 0xffffff;\n          const p = parseInt(i.toString(), 0);\n          col = '#' + p.toString(16);\n        }\n      }\n      colorArray.push(col);\n    });\n    // showing more than 8 in the legend will take up too much space\n    this.doughnutChartOptions.legend.display = labels.length <= 8;\n    this.doughnutChartData = activeCasesArray;\n    this.doughnutChartLabels = labels;\n    this.chartColors.push( { backgroundColor: colorArray});\n    this.renderChart = true;\n  }\n\n  public refresh = () => {\n    this.reportingService.getCaseTypesReport(this.sandboxId, this.appIds, this.uiAppId).pipe(\n      take(1),\n      takeUntil(this._destroyed$),\n      map(report => {\n        this.caseTypesReport = report;\n        this.initReportDataToChart(report);\n        return report;\n      }))\n      .subscribe(\n        null, error => { this.errorMessage = 'Error retrieving case types report: ' + error.error.errorMsg; }\n      );\n  }\n\n  // events\n  public chartClicked({ event, active }: { event: MouseEvent, active: any }): void {\n    if (active.length > 0) {\n      const chart = active[0]._chart;\n      const activePoints: any = chart.getElementAtEvent(event);\n      if ( activePoints.length > 0) {\n        // get the internal index of slice in pie chart\n        const clickedElementIndex = activePoints[0]._index;\n        const label = chart.data.labels[clickedElementIndex];\n        // get value by index\n        const value = chart.data.datasets[0].data[clickedElementIndex];\n        this.caseTypesReport.caseTypes[clickedElementIndex].incTerminal = false;\n        this.selectedCaseType.emit(this.caseTypesReport.caseTypes[clickedElementIndex]);\n      }\n    }\n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    // console.log(event, active);\n  }\n\n  ngOnInit() {\n    this.refresh();\n  }\n\n}\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild} from '@angular/core';\nimport {ChartType} from 'chart.js';\nimport {Label, MultiDataSet} from 'ng2-charts';\nimport {LiveAppsComponent} from '../live-apps-component/live-apps-component.component';\nimport {TcLiveAppsReportingService} from '../../services/tc-live-apps-reporting.service';\nimport {CaseTypeStateReport, CaseTypeStateReportStateInfo} from '../../models/tc-live-apps-reporting';\nimport {map, take, takeUntil} from 'rxjs/operators';\nimport 'chartjs-plugin-datalabels';\nimport {DEFAULT_COLORS, DEFAULT_TYPE_COLOR} from '../../services/tc-case-card-config.service';\n\n\n/**\n * Home page active cases widget sub component\n *\n *@example <tcla-live-apps-active-cases-for-type-report></tcla-live-apps-active-cases-for-type-report>\n */\n@Component({\n  selector: 'tcla-live-apps-active-cases-for-type-report',\n  templateUrl: './live-apps-active-cases-for-type-report.component.html',\n  styleUrls: ['./live-apps-active-cases-for-type-report.component.css']\n})\nexport class LiveAppsActiveCasesForTypeReportComponent extends LiveAppsComponent implements OnInit, OnChanges {\n\n\n\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  /**\n   * The LA Application Id\n   */\n  @Input() appId: string;\n\n  /**\n   * The LA Application Type Id (generally 1)\n   */\n  @Input() typeId: string;\n\n  /**\n   * The Application ID of the UI (should ideally be unique as it is shared state key)\n   */\n  @Input() uiAppId: string;\n\n  /**\n   * Maximum rows to show in legend before it is hidden (otherwise would take whole widget)\n   */\n  @Input() maxLegendItems: number = this.maxLegendItems ? this.maxLegendItems : 8;\n\n  /**\n   * Whether to show percentages or raw case numbers on the doughnut chart\n   */\n  @Input() showPercentages = this.showPercentages ? this.showPercentages : false;\n\n  /**\n   * ~event selectedCaseTypeState : Case Type state selected in vizualization\n   * ~payload CaseTypeStateReportStateInfo : CaseTypeStateReportStateInfo object selected from component (to drive caller to display something different (drill down))\n   */\n  @Output() selectedCaseTypeState: EventEmitter<CaseTypeStateReportStateInfo> = new EventEmitter<CaseTypeStateReportStateInfo>();\n\n  // @ViewChild(BaseChartDirective) caseTypeStateReportChart: BaseChartDirective;\n\n  public errorMessage: string;\n  public caseTypeStateReport: CaseTypeStateReport;\n  public renderChart = false;\n\n  public doughnutChartLabels: Label[];\n  public doughnutChartData: MultiDataSet = [];\n  public doughnutChartType: ChartType = 'doughnut';\n  public chartColors: any[] = [];\n  public defaultColors: string[] = DEFAULT_COLORS.slice().reverse();\n\n  public legendData: any;\n  public totalActiveCaseCount: number;\n\n  private getCaseCount = () => {\n    return this.totalActiveCaseCount;\n  }\n\n  public doughnutChartOptions: any = {\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      position: 'left'\n    },\n    layout: {\n      padding: {\n        left: 0,\n        right: 0,\n        top: 10,\n        bottom: 10\n      }\n    },\n    plugins: {\n      doughnutlabel: {\n        labels: [\n          {\n            text: this.getCaseCount,\n            font: {\n              size: '20',\n              family: 'Source Sans Pro',\n              weight: 'bold'\n            },\n            color: '#FF7800'\n          },\n          {\n            text: 'cases',\n            font: {\n              size: '16',\n              family: 'Source Sans Pro',\n            },\n            color: '#FF7800'\n          }\n        ]\n      },\n      datalabels: {\n        anchor: 'end',\n        backgroundColor: function(context) {\n          return context.dataset.backgroundColor;\n        },\n        borderColor: 'white',\n        borderRadius: 25,\n        borderWidth: 2,\n        color: 'white',\n        display: function(context) {\n          const dataset = context.dataset;\n          const value = dataset.data[context.dataIndex];\n          return value > 0;\n        },\n        font: {\n          weight: 'bold'\n        },\n        formatter: (value, ctx) => {\n\n          const datasets = ctx.chart.data.datasets;\n\n          if (datasets.indexOf(ctx.dataset) === datasets.length - 1) {\n            if (this.showPercentages) {\n              const sum = datasets[0].data.reduce((a, b) => a + b, 0);\n              const percentage = Math.round((value / sum) * 100) + '%';\n              return percentage;\n            } else {\n              return value;\n            }\n          } else {\n            return 0;\n          }\n        }\n      }\n\n    }\n  };\n\n  constructor(private reportingService: TcLiveAppsReportingService) {\n    super();\n  }\n\n  private initReportDataToChart = (reportData: CaseTypeStateReport, status: string) => {\n    this.doughnutChartData = [];\n    this.totalActiveCaseCount = 0;\n    const casesByStateArray: number[] = [];\n    const labels: string[] = [];\n    const colorArray: string[] = [];\n    // remove any taken colors from the defaultColors\n    // we have to do this before parsing the record to avoid getting same colors\n    reportData.caseStates.forEach(cs => {\n      // remove color from defaults\n      if (cs.stateInfo.color) {\n        this.defaultColors = this.defaultColors.filter(item => item !== cs.stateInfo.color);\n      }\n    });\n    // parse record\n    reportData.caseStates.forEach(caseState => {\n        this.totalActiveCaseCount = this.totalActiveCaseCount + caseState.caseCount;\n        casesByStateArray.push(caseState.caseCount);\n        labels.push(caseState.stateInfo.label);\n      // we will re-color anything that has the default color\n      let col: string;\n      if (caseState.stateInfo.color && caseState.stateInfo.color !== DEFAULT_TYPE_COLOR) {\n        // use the set color\n        col = caseState.stateInfo.color;\n      } else {\n        // try and get a color from the palette\n        const palCol = this.defaultColors.pop();\n        if (palCol) {\n          col = palCol;\n        } else {\n          // if no more in palette use a random color!\n          const i = Math.random() * 0xffffff;\n          const p = parseInt(i.toString(), 0);\n          col = '#' + p.toString(16);\n        }\n      }\n      colorArray.push(col);\n    });\n    this.doughnutChartData.push(casesByStateArray);\n    this.doughnutChartLabels = labels;\n    this.chartColors.push( { backgroundColor: colorArray});\n    // showing more than 8 in the legend will take up too much space\n    this.doughnutChartOptions.legend.display = labels.length <= 8;\n    this.renderChart = true;\n  }\n\n  public refresh = () => {\n    this.reportingService.getCaseTypeStateReport(this.sandboxId, this.appId, this.typeId, false, this.uiAppId).pipe(\n      take(1),\n      takeUntil(this._destroyed$),\n      map(report => {\n        this.caseTypeStateReport = report;\n        this.initReportDataToChart(report, status);\n        return report;\n      }))\n      .subscribe(\n        null, error => { this.errorMessage = 'Error retrieving case types report: ' + error.error.errorMsg; }\n      );\n  }\n\n  // events\n  public chartClicked({ event, active }: { event: MouseEvent, active: any }): void {\n    if (active.length > 0) {\n      const chart = active[0]._chart;\n      const activePoints: any = chart.getElementAtEvent(event);\n      if ( activePoints.length > 0) {\n        // get the internal index of slice in pie chart\n        const clickedElementIndex = activePoints[0]._index;\n        const label = chart.data.labels[clickedElementIndex];\n        // get value by index\n        const value = chart.data.datasets[0].data[clickedElementIndex];\n        console.log(clickedElementIndex, label, value);\n        this.selectedCaseTypeState.emit(this.caseTypeStateReport.caseStates[clickedElementIndex].stateInfo);\n      }\n    }\n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    // console.log(event, active);\n  }\n\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.appId && (changes.firstChange || (changes.appId.currentValue !== changes.appId.previousValue))) {\n      this.refresh();\n    }\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {CaseTypeReportRecord, CaseTypesReport, CaseTypeStateReportStateInfo} from '../../models/tc-live-apps-reporting';\nimport {BaseChartDirective, Label, MultiDataSet} from 'ng2-charts';\nimport {ChartType} from 'chart.js';\nimport {TcLiveAppsReportingService} from '../../services/tc-live-apps-reporting.service';\nimport {LiveAppsComponent} from '../live-apps-component/live-apps-component.component';\nimport {map, take, takeUntil} from 'rxjs/operators';\nimport {LiveAppsActiveCasesReportComponent} from '../live-apps-active-cases-report/live-apps-active-cases-report.component';\nimport {LiveAppsActiveCasesForTypeReportComponent} from '../live-apps-active-cases-for-type-report/live-apps-active-cases-for-type-report.component';\n\n\n/**\n * Home page active cases widget main component\n *\n * ![alt-text](../live-apps-active-cases-widget.png \"Image\")\n *\n *@example <tcla-live-apps-active-cases-widget></tcla-live-apps-active-cases-widget>\n */\n\n@Component({\n  selector: 'tcla-live-apps-active-cases-widget',\n  templateUrl: './live-apps-active-cases-widget.component.html',\n  styleUrls: ['./live-apps-active-cases-widget.component.css']\n})\nexport class LiveAppsActiveCasesWidgetComponent extends LiveAppsComponent {\n\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  /**\n   * The list of LA Application IDs you want to handle\n   */\n  @Input() appIds: string[];\n\n  /**\n   * Whether to show the header bar in the widget - eg. favorites on home page (contains icon etc) - if off icons still appear without bar\n   */\n  @Input() showHeader: boolean;\n\n  /**\n   * The Application ID of the UI (should ideally be unique as it is shared state key)\n   */\n  @Input() uiAppId: string;\n\n  /**\n   * Maximum rows to show in legend before it is hidden (otherwise would take whole widget)\n   */\n  @Input() maxLegendItems: number = this.maxLegendItems ? this.maxLegendItems : 8;\n\n  /**\n   * Whether to show percentages or raw case numbers on the doughnut chart\n   */\n  @Input() showPercentages = this.showPercentages ? this.showPercentages : false;\n\n  /**\n   * ~event selectedCaseType : Case Type selected in vizualization\n   * ~payload CaseTypeReportRecord : CaseTypeReportRecord object selected from component\n   */\n  @Output() selectedCaseType: EventEmitter<CaseTypeReportRecord> = new EventEmitter<CaseTypeReportRecord>();\n\n  /**\n   * ~event selectedCaseTypeState : Case Type state selected in vizualization\n   * ~payload CaseTypeStateReportStateInfo : CaseTypeStateReportStateInfo object selected from component (to drive caller to display something different (drill down))\n   */\n  @Output() selectedCaseTypeState: EventEmitter<CaseTypeStateReportStateInfo> = new EventEmitter<CaseTypeStateReportStateInfo>();\n\n\n  @ViewChild(LiveAppsActiveCasesReportComponent, {static: false}) activeCasesComp: LiveAppsActiveCasesReportComponent;\n  @ViewChild(LiveAppsActiveCasesForTypeReportComponent, {static: false}) activeCaseTypeComp: LiveAppsActiveCasesForTypeReportComponent;\n\n  public selectedCaseTypeReport: CaseTypeReportRecord;\n\n  public handleCaseTypeSelected = (selected: CaseTypeReportRecord) => {\n    this.selectedCaseTypeReport = selected;\n    this.selectedCaseType.emit(selected);\n  }\n\n  public handleCaseTypeStateSelected = (selectedState: CaseTypeStateReportStateInfo) => {\n    this.selectedCaseTypeState.emit(selectedState);\n  }\n\n  public clearSelectedCaseType = () => {\n    this.selectedCaseTypeReport = undefined;\n  }\n\n  public refresh = () => {\n    if (this.activeCasesComp) {\n      this.activeCasesComp.refresh();\n    }\n    if (this.activeCaseTypeComp) {\n      this.activeCaseTypeComp.refresh();\n    }\n  }\n\n}\n","import {Component, EventEmitter, Inject, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {CaseRoute, CaseType} from '../../models/liveappsdata';\nimport {ToolbarButton, TcButtonsHelperService, RouteAction} from '@tibco-tcstk/tc-core-lib';\nimport {LiveAppsFavoriteCasesComponent} from '../live-apps-favorite-cases/live-apps-favorite-cases.component';\nimport {LiveAppsRecentCasesComponent} from '../live-apps-recent-cases/live-apps-recent-cases.component';\nimport {LiveAppsSearchWidgetComponent} from '../live-apps-search-widget/live-apps-search-widget.component';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material';\nimport {LiveAppsCreatorDialogComponent} from '../live-apps-creator-dialog/live-apps-creator-dialog.component';\nimport {CaseCreatorSelectionContext} from '../../models/tc-case-creator';\nimport {LiveAppsNotesComponent} from '../live-apps-notes/live-apps-notes.component';\nimport {LiveAppsDocumentsComponent} from '../live-apps-documents/live-apps-documents.component';\nimport {TcRolesService} from '../../services/tc-roles-service.ts.service';\nimport {Roles, RouteAccessControlConfig} from '../../models/tc-groups-data';\nimport {LiveAppsActiveCasesWidgetComponent} from '../live-apps-active-cases-widget/live-apps-active-cases-widget.component';\nimport {CaseTypeReportRecord, CaseTypeStateReportStateInfo} from '../../models/tc-live-apps-reporting';\nimport {CustomFormDefs} from '@tibco-tcstk/tc-forms-lib';\n\n\n/**\n * High level component to allow home page view of system\n *\n * ![alt-text](../live-apps-home-cockpit.png \"Documents Component Image\")\n *\n *@example <tcla-live-apps-home-cockpit></tcla-live-apps-home-cockpit>\n */\n@Component({\n  selector: 'tcla-live-apps-home-cockpit',\n  templateUrl: './live-apps-home-cockpit.component.html',\n  styleUrls: ['./live-apps-home-cockpit.component.css']\n})\nexport class LiveAppsHomeCockpitComponent implements OnInit {\n  /**\n   * The Application ID of the UI (should ideally be unique as it is shared state key)\n   */\n  @Input() uiAppId: string;\n\n  /**\n   * The list of LA Application IDs you want to handle\n   */\n  @Input() appIds: string[];\n\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  /**\n   * The name of the logged user\n   */\n  @Input() userName: string;\n\n  /**\n   * The ID of the logged user\n   */\n  @Input() userId: string;\n\n  /**\n   * * Email address of the user (comes from resolver)\n   */\n  @Input() email: string;\n\n  /**\n   * page title comes from config resolver\n   */\n  @Input() title: string;\n\n  /**\n   * Roles - The users current roles\n   */\n  @Input() roles: Roles;\n\n  /**\n   * RouteAccessControlConfig - basically the config for access control\n   */\n  @Input() access: RouteAccessControlConfig;\n\n  /**\n   * Custom Form configuration file\n   */\n  @Input() customFormDefs: CustomFormDefs;\n\n  /**\n   * ~event routeAction : Component requests route to another page\n   * ~payload RouteAction : RouteAction object to tell caller to navigate somewhere\n   */\n  @Output() routeAction: EventEmitter<RouteAction> = new EventEmitter<RouteAction>();\n\n  @ViewChild(LiveAppsFavoriteCasesComponent, {static: false}) favoritesComponent: LiveAppsFavoriteCasesComponent;\n  @ViewChild(LiveAppsRecentCasesComponent, {static: false}) recentsComponent: LiveAppsRecentCasesComponent;\n  @ViewChild(LiveAppsSearchWidgetComponent, {static: false}) searchComponent: LiveAppsSearchWidgetComponent;\n  @ViewChild(LiveAppsNotesComponent, {static: false}) collaborationComponent: LiveAppsNotesComponent;\n  @ViewChild(LiveAppsDocumentsComponent, {static: false}) documentsComponent: LiveAppsDocumentsComponent;\n  @ViewChild(LiveAppsActiveCasesWidgetComponent, {static: false}) activeCasesComponent: LiveAppsActiveCasesWidgetComponent;\n\n  public toolbarButtons: ToolbarButton[] = [];\n  public caseStartButtonActive: boolean;\n  public selectedCaseTypeReportRecord: CaseTypeReportRecord;\n\n  incConfigButton = true;\n  incRefreshButton = true;\n\n  public clickCaseAction = (caseRoute: CaseRoute) => {\n    // case clicked - tell parent (will pass caseRef and appId)\n    this.routeAction.emit(new RouteAction('caseClicked', caseRoute));\n  }\n\n  constructor(protected buttonsHelper: TcButtonsHelperService, public dialog: MatDialog, protected rolesService: TcRolesService) { }\n\n  protected createToolbarButtons = (): ToolbarButton[] => {\n    const buttons = [];\n\n    // you can use the rolesService to either disable or hide the button as required - it returns true if the user has the roleId specified\n    // const configButton = this.buttonsHelper.createButton('config', 'tcs-capabilities', true, 'Config', true, this.rolesService.checkRole('Partner Portal Configurator', this.roles));\n    if (this.incConfigButton) {\n      const configButton = this.buttonsHelper.createButton('config', 'tcs-capabilities', true, 'Config', (this.access ? this.rolesService.checkButton('configure', this.roles, this.access) : true), true);\n      buttons.push(configButton);\n    }\n    if (this.incRefreshButton) {\n      const refreshButton = this.buttonsHelper.createButton('refresh', 'tcs-refresh-icon', true, 'Refresh', (this.access ? this.rolesService.checkButton('refresh', this.roles, this.access) : true), true);\n      buttons.push(refreshButton);\n    }\n    return buttons;\n  }\n\n  public handleToolbarButtonEvent = (buttonId: string) => {\n    if (buttonId === 'config') {\n      this.routeAction.emit(new RouteAction('configClicked', null));\n    }\n    if (buttonId === 'refresh') {\n      this.refresh();\n    }\n  }\n\n  public handleCreatorAppSelection = (application: CaseType) => {\n    const EXAMPLE_INITIAL_DATA = {\n      PartnerRequest: {\n        Customer_v1: {\n          CustomerReference_v1: 'CST-1111',\n          Name_v1: 'Roger Willis',\n        },\n        RequestDescription_v1: 'Where is my order?',\n        RequestDetails_v1: {\n          OrderReference_v1: 'ORD-55333',\n          PartReference_v1: 'PRT-102020',\n        },\n        RequestType_v1: 'Packaging Supplies'\n      }\n    }\n    // this.openCreatorDialog(application, EXAMPLE_INITIAL_DATA, this.sandboxId);\n    this.openCreatorDialog(application, undefined, this.sandboxId, this.customFormDefs);\n  }\n\n  public handleReportCaseTypeSelection = (caseTypeReportRecord: CaseTypeReportRecord) => {\n    this.selectedCaseTypeReportRecord = caseTypeReportRecord;\n  }\n\n  public handleReportCaseTypeStateSelection = (state: CaseTypeStateReportStateInfo) => {\n    if (this.selectedCaseTypeReportRecord) {\n      this.searchComponent.searchCasesByState(Number(state.id), state.label, this.selectedCaseTypeReportRecord.applicationId, this.selectedCaseTypeReportRecord.caseTypeInfo.id, this.selectedCaseTypeReportRecord.caseTypeInfo.label + '|' + state.label );\n    }\n  }\n\n  openCreatorDialog = (application: CaseType, initialData, sandboxId, customFormDefs) => {\n    const dialogRef = this.dialog.open(LiveAppsCreatorDialogComponent, {\n      width: '60%',\n      height: '80%',\n      maxWidth: '100vw',\n      maxHeight: '100vh',\n      panelClass: 'tcs-style-dialog',\n      data: new CaseCreatorSelectionContext(application, initialData, sandboxId, customFormDefs)\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.routeAction.emit(new RouteAction('caseClicked', result));\n      }\n    });\n  }\n\n  public refresh = () => {\n    if (this.favoritesComponent) {\n      this.favoritesComponent.refresh();\n    }\n    if (this.recentsComponent) {\n      this.recentsComponent.refresh();\n    }\n    if (this.searchComponent) {\n      this.searchComponent.refresh();\n    }\n    if (this.collaborationComponent) {\n      this.collaborationComponent.refresh();\n    }\n    if (this.documentsComponent) {\n      this.documentsComponent.refresh();\n    }\n    if (this.activeCasesComponent) {\n      this.activeCasesComponent.refresh();\n    }\n  }\n\n  ngOnInit() {\n    this.toolbarButtons = this.toolbarButtons.concat(this.createToolbarButtons());\n    this.caseStartButtonActive = this.access ? this.rolesService.checkButton('caseStart', this.roles, this.access) : true;\n  }\n\n}\n","import {Deserializable, GeneralConfig} from '@tibco-tcstk/tc-core-lib';\n\nexport class LiveAppsConfig implements Deserializable {\n  id: string;\n  applicationIds: string[];\n  recentExcludedAppIds: string[];\n  caseIconsFolderId: string;\n  documentAppId: string;\n  collaborationAppId: string;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class LiveAppsConfigHolder implements Deserializable {\n  public generalConfig: GeneralConfig;\n  public liveAppsConfig: LiveAppsConfig;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {Location} from '@angular/common';\nimport {TcSharedStateService, TcCoreCommonFunctions, SharedStateContent, SharedStateEntry, SharedStateList} from '@tibco-tcstk/tc-core-lib';\nimport {LiveAppsConfig} from '../models/tc-liveapps-config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TcLiveAppsConfigService {\n\n  constructor(private location: Location, private sharedStateService: TcSharedStateService) {\n  }\n\n  public createLiveAppsConfig(sandboxId: number, uiAppId: string, liveappsConfig: LiveAppsConfig) {\n    const ssName = uiAppId + '.liveapps.config.tibcolabs.client.context.PUBLIC';\n    const content: SharedStateContent = new SharedStateContent();\n    content.json = TcCoreCommonFunctions.escapeString(JSON.stringify(liveappsConfig));\n\n    return this.sharedStateService.createSharedState(ssName, 'PUBLIC', '', sandboxId, undefined, undefined, undefined, content)\n      .pipe(\n        map(value => value)\n      );\n  }\n\n  public getLiveAppsConfig(uiAppId: string, useCache: boolean, flushCache: boolean): Observable<LiveAppsConfig> {\n    // if useCache is false this will trigger the service to update the cached version with latest\n    const ssName = uiAppId + '.liveapps.config.tibcolabs.client.context.PUBLIC';\n\n    return this.sharedStateService.getSharedState(ssName, 'PUBLIC', useCache, flushCache)\n      .pipe(\n        map(value => {\n            if (value.sharedStateEntries.length > 0) {\n              const ssresult = new LiveAppsConfig().deserialize(JSON.parse(value.sharedStateEntries[0].content.json));\n              ssresult.id = value.sharedStateEntries[0].id;\n              return ssresult;\n            } else {\n              return undefined;\n            }\n          }\n        )\n      );\n  }\n\n  public updateLiveAppsConfig(sandboxId: number, uiAppId: string, liveappsConfig: LiveAppsConfig, id: string) {\n    const ssName = uiAppId + '.liveapps.config.tibcolabs.client.context.PUBLIC';\n    const content: SharedStateContent = new SharedStateContent();\n    content.json = TcCoreCommonFunctions.escapeString(JSON.stringify(liveappsConfig));\n    const entry: SharedStateEntry = new SharedStateEntry();\n    entry.content = content;\n    entry.sandboxId = sandboxId;\n    entry.name = ssName;\n    entry.type = 'PUBLIC';\n    entry.id = id;\n    const ssList: SharedStateList = new SharedStateList();\n    ssList.sharedStateEntries = [];\n    ssList.sharedStateEntries.push(entry);\n\n    return this.sharedStateService.updateSharedState(ssList.sharedStateEntries)\n      .pipe(\n        map(value => {\n          // flush the cache\n          this.getLiveAppsConfig(uiAppId, true, true).subscribe();\n          return new LiveAppsConfig().deserialize((JSON.parse(value.sharedStateEntries[0].content.json)));\n        })\n      );\n  }\n}\n\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild} from '@angular/core';\nimport {CaseType} from '../../models/liveappsdata';\nimport {LiveAppsApplicationsComponent} from '../live-apps-applications/live-apps-applications.component';\nimport {map, take, takeUntil} from 'rxjs/operators';\nimport {MatSelectionList} from '@angular/material';\n\n\n/**\n * Special rendering of LiveAppsApplicationsComponent\n *\n *@example <tcla-live-apps-application-list></tcla-live-apps-application-list>\n */\n\n@Component({\n  selector: 'tcla-live-apps-application-list',\n  templateUrl: './live-apps-application-list.component.html',\n  styleUrls: ['./live-apps-application-list.component.css']\n})\nexport class LiveAppsApplicationListComponent extends LiveAppsApplicationsComponent implements OnInit, OnChanges {\n  @ViewChild (MatSelectionList, {static: false}) appSelectionList: MatSelectionList;\n\n  /**\n   * The app Ids selected (output)\n   */\n  @Input() selectedAppIds: string[] = [];\n\n  /**\n   * ~event appsSelected : Applications selected in component (CaseType objects)\n   * ~payload CaseType[] : Array of CaseType objects of what was selected\n   */\n  @Output() appsSelected: EventEmitter<CaseType[]> = new EventEmitter<CaseType[]>();\n\n  /**\n   * ~event appIdsSelected : Applications selected in component (appIds)\n   * ~payload string[] : selected App Ids from the application list (used on config)\n   */\n  @Output() appIdsSelected: EventEmitter<string[]> = new EventEmitter<string[]>();\n\n\n  public mySelectedOptions: CaseType[];\n\n  handleAppSelection = (selectionEvent: CaseType[]) => {\n    this.appsSelected.emit(selectionEvent);\n    const selIds = [];\n    selectionEvent.forEach((selected) => {\n      selIds.push(selected.applicationId);\n    });\n    this.appIdsSelected.emit(selIds);\n  }\n\n  handleSelectAll = () => {\n    this.mySelectedOptions = this.applications.casetypes;\n    this.appIdsSelected.emit(this.getAppIds(this.mySelectedOptions));\n    this.appsSelected.emit(this.applications.casetypes);\n  }\n\n  handleDeselectAll = () => {\n    this.mySelectedOptions = [];\n    this.appIdsSelected.emit([]);\n    this.appsSelected.emit([]);\n  }\n\n  private getAppIds = (casetypes: CaseType[]): string[] => {\n    const selIds = [];\n    casetypes.forEach((selected) => {\n      selIds.push(selected.applicationId);\n    });\n    return selIds;\n  }\n\n  public refresh = (bypassCache: boolean) => {\n    this.liveapps.getApplications(this.sandboxId, this.appIds, 100, bypassCache)\n      .pipe(\n        take(1),\n        takeUntil(this._destroyed$),\n        map(applicationList => {\n          this.applications = applicationList;\n          // handle single app selection input\n          if (this.selectedApp && this.selectedApp.applicationId) {\n            this.selectedApp = applicationList.casetypes.find((casetype) => {\n              return casetype.applicationId === this.selectedApp.applicationId;\n            });\n            // this.selection.emit(this.selectedApp);\n          } else if (this.selectedAppIds && this.selectedAppIds.length > 0) {\n            // pre select any casetypes that were passed in the selectedAppIds input attribute\n            this.mySelectedOptions = this.applications.casetypes.filter(casetype => {\n              return (this.selectedAppIds.findIndex((ct) => {\n                return ct === casetype.applicationId;\n              }\n              ) !== -1);\n            });\n          }\n        })\n      )\n      .subscribe(null, error => { this.errorMessage = 'Error retrieving applications: ' + error.error.errorMsg; });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // only interested in initial selection - catching every change would create an infinite loop!\n    if (changes.selectedAppIds && (changes.selectedAppIds.firstChange)) {\n      this.refresh(false);\n    }\n  }\n\n\n  ngOnInit(): void {\n    // leave this blank so superclass ngOnInit not called\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {LiveAppsApplicationsComponent} from '../live-apps-applications/live-apps-applications.component';\nimport {CaseType} from '../../models/liveappsdata';\n\n\n/**\n * Special rendering of LiveAppsApplicationsComponent\n *\n * ![alt-text](../live-apps-application-create-button.png \"Image\")\n *\n *@example <tcla-live-apps-application-create-button></tcla-live-apps-application-create-button>\n */\n@Component({\n  selector: 'tcla-live-apps-application-create-button',\n  templateUrl: './live-apps-application-create-button.component.html',\n  styleUrls: ['./live-apps-application-create-button.component.css']\n})\nexport class LiveAppsApplicationCreateButtonComponent extends LiveAppsApplicationsComponent {\n\n  public handleCreatorAppSelection = (application: CaseType) => {\n    this.selection.emit(application);\n  }\n\n  public handleCreateCaseClick = () => {\n    // console.log('Select Case: ' + this.applications.casetypes.length);\n    if (this.applications.casetypes.length === 1) {\n      // Open Case Directly\n      // console.log('Opening Case Directly...');\n      this.handleCreatorAppSelection(this.applications.casetypes[0]);\n    }\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {LiveAppsConfig} from '../../models/tc-liveapps-config';\nimport {ActivatedRoute} from '@angular/router';\nimport {GeneralConfig, Claim, Sandbox} from '@tibco-tcstk/tc-core-lib';\nimport {TcLiveAppsConfigService} from '../../services/tc-live-apps-config.service';\nimport {LiveAppsComponent} from '../live-apps-component/live-apps-component.component';\nimport { MatSnackBar } from '@angular/material';\n\n\n/**\n * Allow Selection of live apps applications (part of config)\n *\n * ![alt-text](../live-apps-settings.png \"\")\n *\n *@example <tcla-live-apps-settings></tcla-live-apps-settings>\n */\n@Component({\n  selector: 'tcla-live-apps-settings',\n  templateUrl: './live-apps-settings.component.html',\n  styleUrls: ['./live-apps-settings.component.css']\n})\nexport class LiveAppsSettingsComponent extends LiveAppsComponent implements OnInit {\n\n  LIVE_APPS_URL = '/apps/dt-app/index.html#/application-content/';\n\n  public sandboxId: number;\n  public selectedAppIds: string[];\n  public liveAppsConfig: LiveAppsConfig;\n  public generalConfig: GeneralConfig;\n  public claims: Claim;\n\n  constructor(protected route: ActivatedRoute, protected liveAppsConfigService: TcLiveAppsConfigService, protected snackBar: MatSnackBar) {\n    super();\n  }\n\n  protected getLiveAppsConfigService(): TcLiveAppsConfigService {\n    return this.liveAppsConfigService;\n  }\n\n  public handleAppIdSelection(appIds: string[]) {\n    console.log('Selected: ', appIds);\n    this.selectedAppIds = appIds;\n  }\n\n  public handleEditLiveAppClick = () => {\n    // window.open(this.LIVE_APPS_URL + applicationId);\n    // currently no public API to get the appId version for design time to populate the URL\n    window.open(this.LIVE_APPS_URL);\n  }\n\n  public ngOnInit() {\n    this.generalConfig = this.route.snapshot.data.laConfigHolder.generalConfig;\n    this.liveAppsConfig = this.route.snapshot.data.laConfigHolder.liveAppsConfig;\n    this.claims = this.route.snapshot.data.claims;\n    this.sandboxId = Number(this.claims.primaryProductionSandbox.id).valueOf();\n    this.selectedAppIds = this.liveAppsConfig.applicationIds;\n  }\n\n  public runSaveFunction = (): void => {\n    const liveAppsConfig = new LiveAppsConfig().deserialize({\n      applicationIds: this.selectedAppIds,\n      caseIconsFolderId: this.liveAppsConfig.caseIconsFolderId,\n      documentAppId: this.liveAppsConfig.documentAppId,\n      collaborationAppId: this.liveAppsConfig.documentAppId\n    });\n    this.liveAppsConfigService.updateLiveAppsConfig(this.sandboxId, this.generalConfig.uiAppId, liveAppsConfig, this.liveAppsConfig.id).subscribe(\n        result => {\n            this.snackBar.open('Live Apps App Selection Configuration settings saved', 'OK', {\n                duration: 3000\n            });\n        },\n        error => {\n            this.snackBar.open('Error saving Live Apps App Selection Configuration', 'OK', {\n                duration: 3000\n            });\n        }\n    );\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport {LiveAppsSettingsComponent} from '../live-apps-settings/live-apps-settings.component';\nimport {CaseCardConfig} from '../../models/tc-case-card-config';\nimport {map, take, takeUntil} from 'rxjs/operators';\nimport {TcCaseCardConfigService} from '../../services/tc-case-card-config.service';\nimport {HttpClient} from '@angular/common/http';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {ActivatedRoute} from '@angular/router';\nimport {TcLiveAppsConfigService} from '../../services/tc-live-apps-config.service';\nimport {CaseType} from '../../models/liveappsdata';\nimport { MatSnackBar } from '@angular/material';\n\n\n/**\n * Configuration of summary cards\n *\n * ![alt-text](../live-apps-settings-summary-cards.png \"\")\n *\n *@example <tcla-live-apps-settings-summary-cards></tcla-live-apps-settings-summary-cards>\n */\n@Component({\n  selector: 'tcla-live-apps-settings-summary-cards',\n  templateUrl: './live-apps-settings-summary-cards.component.html',\n  styleUrls: ['./live-apps-settings-summary-cards.component.css']\n})\nexport class LiveAppsSettingsSummaryCardsComponent extends LiveAppsSettingsComponent {\n\n  public caseCardConfig: CaseCardConfig;\n  public selectedApp: CaseType;\n\n  constructor(private caseCardConfigService: TcCaseCardConfigService, private routeExt: ActivatedRoute, private liveAppsConfigServiceExt: TcLiveAppsConfigService, protected snackBar: MatSnackBar) {\n    super(routeExt, liveAppsConfigServiceExt, snackBar);\n  }\n\n  public handleConfigChanged = (caseCardConfig: CaseCardConfig) => {\n    this.caseCardConfig = caseCardConfig;\n    console.log(caseCardConfig);\n  }\n\n  public handleAppSelection = (application: CaseType) => {\n    this.selectedApp = application;\n  }\n\n  public runSaveFunction = (): void => {\n    this.caseCardConfigService.updateCaseCardConfig(this.sandboxId, this.selectedApp.applicationId, this.generalConfig.uiAppId, this.caseCardConfig)\n      .pipe(\n        take(1),\n        takeUntil(this._destroyed$),\n        map(caseCardConfig => {\n          this.caseCardConfig = caseCardConfig;\n        })\n      ).subscribe(\n          result => {\n              this.snackBar.open('Summary cards settings saved', 'OK', {\n                  duration: 3000\n              });\n          },\n          error => {\n              this.snackBar.open('Error saving Summary Cards settings', 'OK', {\n                  duration: 3000\n              });\n              console.log('Unable to update case card config: ' + error.errorMsg);\n          }\n    );\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {LiveAppsConfig} from '../../models/tc-liveapps-config';\nimport {ActivatedRoute} from '@angular/router';\nimport {GeneralConfig, Claim, Sandbox} from '@tibco-tcstk/tc-core-lib';\nimport {TcLiveAppsConfigService} from '../../services/tc-live-apps-config.service';\nimport {LiveAppsComponent} from '../live-apps-component/live-apps-component.component';\nimport {LiveAppsSettingsComponent} from '../live-apps-settings/live-apps-settings.component';\n\n/**\n * Allow Selection of live apps applications (part of config)\n *\n * ![alt-text](../live-apps-settings-recent-cases.png \"\")\n *\n *@example <tcla-live-apps-settings-recent-cases></tcla-live-apps-settings-recent-cases>\n */\n\n@Component({\n  selector: 'tcla-live-apps-settings-recent-cases',\n  templateUrl: './live-apps-settings-recent-cases.component.html',\n  styleUrls: ['./live-apps-settings-recent-cases.component.css']\n})\nexport class LiveAppsSettingsRecentCasesComponent extends LiveAppsSettingsComponent implements OnInit {\n\n  LIVE_APPS_URL = '/apps/dt-app/index.html#/application-content/';\n    \n  public excludeRecentIds: string[];\n\n  public handleExcludeRecentAppIdSelection(appIds: string[]) {\n    this.excludeRecentIds = appIds;\n  }\n\n  public ngOnInit() {\n    super.ngOnInit();\n    this.excludeRecentIds = this.liveAppsConfig.recentExcludedAppIds;\n  }\n\n  public runSaveFunction = (): void => {\n    const liveAppsConfig = new LiveAppsConfig().deserialize({\n      applicationIds: this.selectedAppIds,\n      recentExcludedAppIds: this.excludeRecentIds,\n      caseIconsFolderId: this.liveAppsConfig.caseIconsFolderId,\n      documentAppId: this.liveAppsConfig.documentAppId,\n      collaborationAppId: this.liveAppsConfig.documentAppId\n    });\n    // unable to use super.liveAppsConfigService\n    super.getLiveAppsConfigService().updateLiveAppsConfig(this.sandboxId, this.generalConfig.uiAppId, liveAppsConfig, this.liveAppsConfig.id).subscribe(\n        result => {\n            this.snackBar.open('Recent cases settings saved', 'OK', {\n                duration: 3000\n            });\n        },\n        error => {\n            this.snackBar.open('Error saving Recent cases settings', 'OK', {\n                duration: 3000\n            });\n        }\n    );\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { TibcoCloudSettingsGeneralComponent, RoleAttribute, TcGeneralConfigService, TibcoCloudNewElementComponent } from '@tibco-tcstk/tc-core-lib';\nimport { Groups, Roles } from '../../models/tc-groups-data';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatSnackBar, MatDialog } from '@angular/material';\n\n/**\n * Configuration of roles\n *\n * ![alt-text](../live-apps-settings-roles.png \"\")\n *\n *@example <tcla-live-apps-settings-roles></tcla-live-apps-settings-roles>\n */\n@Component({\n    selector: 'tcla-live-apps-settings-roles',\n    templateUrl: './live-apps-settings-roles.component.html',\n    styleUrls: ['./live-apps-settings-roles.component.css']\n})\nexport class LiveAppsSettingsRolesComponent extends TibcoCloudSettingsGeneralComponent implements OnInit {\n\n    public roles: Roles;\n    public groups: Groups;\n\n    public currentRole: RoleAttribute;\n\n    constructor(protected route: ActivatedRoute, protected generalConfigService: TcGeneralConfigService, protected snackBar: MatSnackBar, private dialog: MatDialog) {\n        super(route, generalConfigService, snackBar);\n    }\n\n    ngOnInit() {\n        this.generalConfig = super.getRoute().snapshot.data.generalConfigHolder;\n        this.roles = super.getRoute().snapshot.data.allRoles;\n        this.groups = super.getRoute().snapshot.data.allGroups;\n        this.claims = super.getRoute().snapshot.data.claims;\n        this.sandboxId = Number(this.claims.primaryProductionSandbox.id).valueOf();\n    }\n\n    deleteRoleFunction = (): void => {\n        this.generalConfig.roles = this.generalConfig.roles.filter(element => element.id != this.currentRole.id);\n    }\n\n    selectedRole = (role: RoleAttribute): void => {\n        this.currentRole = role;\n    }\n\n    createRoleFunction = (): void => {\n        const dialogRef = this.dialog.open(TibcoCloudNewElementComponent, {\n            width: '50%',\n            height: '30%',\n            maxWidth: '100vw',\n            maxHeight: '100vh',\n            panelClass: 'tcs-style-dialog',\n            data: { resourceType: 'Role' }\n\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                const newRole = new RoleAttribute().deserialize({id: result.id, display: result.name, priority: 1 });\n                this.generalConfig.roles.push(newRole);\n            }\n        });\n    }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { RoleAttribute } from '@tibco-tcstk/tc-core-lib';\n\n/**\n * Switch roles\n *\n *@example <tcla-live-apps-role-switcher></tcla-live-apps-role-switcher>\n */\n\n@Component({\n    selector: 'tcla-live-apps-role-switcher',\n    templateUrl: './live-apps-role-switcher.component.html',\n    styleUrls: ['./live-apps-role-switcher.component.css']\n})\nexport class LiveAppsRoleSwitcherComponent implements OnInit {\n\n  /**\n   * Roles - The users current roles\n   */\n  @Input() roles: RoleAttribute[];\n\n  /**\n   * RoleAttribute - selected Role - check with MC\n   */\n  @Input() selectedRole: RoleAttribute;\n\n  /**\n   * ~event changeRoleEvent : Role selected\n   * ~payload RoleAttribute : RoleAttribute object emitted when role is c hanged by switcher\n   */\n  @Output() changeRoleEvent: EventEmitter<RoleAttribute> = new EventEmitter<RoleAttribute>();\n\n\n  constructor() { }\n\n    ngOnInit() {\n    }\n\n    public selectRole = (role: RoleAttribute) => {\n        this.changeRoleEvent.emit(role);\n    }\n\n    compareObjects = (o1: RoleAttribute, o2: RoleAttribute): boolean => {\n        return o1.id === o2.id;\n    }\n}\n","\n\nimport {Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {LiveAppsService} from '../../services/live-apps.service';\nimport {map, take, takeUntil, tap} from 'rxjs/operators';\nimport {CaseCreator, CaseType, CaseTypesList, Process} from '../../models/liveappsdata';\nimport {LaProcessSelection} from '../../models/tc-case-processes';\nimport {LiveAppsComponent} from '../live-apps-component/live-apps-component.component';\nimport {TcCaseProcessesService} from '../../services/tc-case-processes.service';\nimport {CustomFormDefs} from '@tibco-tcstk/tc-forms-lib';\n\n\n/**\n * Wraps case creator and case creator list\n *\n *@example <tcla-live-apps-case-creators></tcla-live-apps-case-creators>\n */\n@Component({\n  selector: 'tcla-live-apps-case-creators',\n  templateUrl: './live-apps-case-creators.component.html',\n  styleUrls: ['./live-apps-case-creators.component.css']\n})\nexport class LiveAppsCaseCreatorsComponent extends LiveAppsComponent implements OnInit {\n  /**\n   * The LA Application Id\n   */\n  @Input() appId: string;\n\n  /**\n   * The LA Application Type Id (generally 1)\n   */\n  @Input() typeId: string;\n\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  /**\n   * ~event creatorClicked : Case Creator selected\n   * ~payload LaProcessSelection : LaProcessSelection object output when an action is clicked (ie. message to parent to run creator component)\n   */\n  @Output() creatorClicked: EventEmitter<LaProcessSelection> = new EventEmitter<LaProcessSelection>();\n\n\n  public casecreators: CaseCreator[];\n  public errorMessage: string;\n\n  appSchema: CaseTypesList;\n  caseType: CaseType;\n  caseActionList: Process[];\n\n  constructor(protected liveapps: LiveAppsService, protected caseProcessesService: TcCaseProcessesService) {\n    super();\n  }\n\n  public refresh = () => {\n    this.caseProcessesService.getCaseCreators(this.sandboxId, this.appId, this.typeId)\n      .pipe(\n        take(1),\n        takeUntil(this._destroyed$),\n        map(casecreators => {\n          this.casecreators = casecreators.creators;\n          if (this.casecreators.length === 1) {\n            this.selectCreator(this.casecreators[0]);\n          }\n        })\n      ).subscribe(\n      null, error => { this.errorMessage = 'Error retrieving case actions: ' + error.error.errorMsg; });\n  }\n\n  public selectCreator(creator: CaseCreator) {\n    this.caseProcessesService.getProcessDetails(null, this.appId, this.typeId, this.sandboxId, null, creator, 100).pipe(\n      take(1),\n      takeUntil(this._destroyed$),\n      tap(processDetails => {\n        if (!processDetails || !processDetails.process || (processDetails.process.jsonSchema.$schema === 'NOSCHEMA')) {\n          // This will be triggered when no form schema is available\n          // Typically happens when:\n          // 1) The form has elements that are not supported by the Live Apps API for form schemas such as participant selectors\n          // 2) The Live Apps application is legacy and has no form schema at all, redeploying the live apps application would fix this.\n            console.error('No schema available for this case type: The form may not be supported or you may need to update/re-deploy the live apps application. Alternatively use a custom form.');\n          }\n        }\n      ),\n      map(processSchema => {\n        this.creatorClicked.emit(processSchema);\n        return processSchema;\n      })\n    )\n    .subscribe(null, error => { this.errorMessage = 'Error retrieving case actions: ' + error.error.errorMsg; });\n  }\n\n  ngOnInit() {\n    this.refresh();\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {AuditEvent} from '../models/tc-case-audit';\n\n@Pipe({\n  name: 'parseAuditMessage'\n})\nexport class ParseAuditMessagePipe implements PipeTransform {\n\n  transform(value: any, item: AuditEvent): any {\n    // replace any {{paramX}} with the value in the item\n    value = value.replace('{{param0}}', item.param0.value);\n    value = value.replace('{{param1}}', item.param1.value);\n    return value;\n  }\n\n}\n","import { Component, OnInit, Input, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { LiveAppsService } from '../../services/live-apps.service';\nimport { map, takeUntil, take, tap } from 'rxjs/operators';\nimport { Process, CaseAction } from '../../models/liveappsdata';\nimport { LaProcessSelection } from '../../models/tc-case-processes';\nimport { LiveAppsCaseActionsComponent } from '../live-apps-case-actions/live-apps-case-actions.component';\n\n\n/**\n * Special (option list) rendering of LiveAppsCaseActionsComponent\n *\n *@example <tcla-live-apps-case-actions-list></tcla-live-apps-case-actions-list>\n */\n\n@Component({\n    selector: 'tcla-live-apps-case-actions-list',\n    templateUrl: './live-apps-case-actions-list.component.html',\n    styleUrls: ['./live-apps-case-actions-list.component.css']\n})\nexport class LiveAppsCaseActionsListComponent extends LiveAppsCaseActionsComponent implements OnInit, OnChanges {\n  /**\n   * The actionId selected (output)\n   */\n  @Input() seletedActionId: string;\n\n    caseActionList: Process[];\n    selectedAction: Process;\n\n    public refresh = () => {\n        // retrieve the schema for this case type so we can display case creators and case actions for this case type\n        this.liveapps.getCaseTypeSchema(this.sandboxId, this.appId, 100).pipe(\n            map(schema => {\n                // this.appSchema = schema;\n                schema.casetypes.forEach((casetype) => {\n                    // the schema will contain definitions for both the 'case' and any defined types in that case.\n                    // We want the schema for this 'case'.\n                    if (casetype.applicationId === this.appId && casetype.id === this.typeId) {\n                        if (casetype.jsonSchema !== undefined) {\n                            // this.caseType = casetype;\n                            this.caseActionList = casetype.actions ? casetype.actions : [];\n                            // if (this.caseActionList.length == 1) {\n                            //     this.selectProcess(this.caseActionList[0]);\n                            // }\n                        } else {\n                            console.error('No schema returned for this case type: You may need to update/re-deploy the live apps application');\n                        }\n                    }\n                }\n                );\n            }\n            )\n        ).subscribe();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.appId && (changes.appId.currentValue !== changes.appId.previousValue)) {\n            this.caseActionList = [];\n            this.refresh();\n        }\n    }\n\n    compareObjects = (o1: any, o2: any): boolean => {\n        return o1.id === this.seletedActionId;\n    }\n\n    public selectAction(action: CaseAction) {\n        this.caseProcessesService.getProcessDetails(this.caseRef, this.appId, this.typeId, this.sandboxId, action, null, 100).pipe(\n            take(1),\n            takeUntil(this._destroyed$),\n            tap(processDetails => {\n                if (!processDetails || !processDetails.process) {\n                    // This will be triggered when no form schema is available\n                    // Typically happens when:\n                    // 1) The form has elements that are not supported by the Live Apps API for form schemas such as participant selectors\n                    // 2) The Live Apps application is legacy and has no form schema at all, redeploying the live apps application would fix this.\n                    console.error('No schema available for this case type: The form may not be supported or you may need to update/re-deploy the live apps application');\n                }\n            }\n            ),\n            map(processSchema => {\n                this.actionClicked.emit(processSchema);\n                return processSchema;\n            })\n        )\n            .subscribe(null, error => { this.errorMessage = 'Error retrieving case actions: ' + error.error.errorMsg; });\n    }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {DomSanitizer, SafeResourceUrl} from '@angular/platform-browser';\nimport {Document} from '../../models/tc-document';\nimport {TcDocumentService} from '../../services/tc-document.service';\nimport {TcCoreCommonFunctions} from '@tibco-tcstk/tc-core-lib';\nimport {Location} from '@angular/common';\n\n/**\n * Display document\n *\n *@example <tcla-live-apps-document-viewer></tcla-live-apps-document-viewer>\n */\n\n@Component({\n  selector: 'tcla-live-apps-document-viewer',\n  templateUrl: './live-apps-document-viewer.component.html',\n  styleUrls: ['./live-apps-document-viewer.component.css']\n})\nexport class LiveAppsDocumentViewerComponent implements OnInit {\n  /**\n   * Document metadata object from API - describes the document to display\n   */\n  @Input() document: Document;\n\n  /**\n   * orgFolders' or 'caseFolders' - different API calls made according to which one this is\n   */\n  @Input() folderType: string;\n\n  /**\n   * The organisation folder to store/retrieve documents\n   */\n  @Input() folderId: string;\n\n  /**\n   * sandboxId - this comes from claims resolver\n   */\n  @Input() sandboxId: number;\n\n  public sanitizedResourceUrl: SafeResourceUrl;\n\n  constructor(private sanitizer: DomSanitizer, private documentsService: TcDocumentService, private location: Location) { }\n\n  ngOnInit() {\n    const preparedUrl = TcCoreCommonFunctions.prepareUrlForNonStaticResource(this.location, this.documentsService.getUrlForDocument(this.folderType, this.folderId, this.document.name, this.document.artifactVersion, this.sandboxId));\n    this.sanitizedResourceUrl = this.sanitizer.bypassSecurityTrustResourceUrl(preparedUrl);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { TcCoreCommonFunctions, LandingPageItemConfig, TcGeneralLandingPageService } from '@tibco-tcstk/tc-core-lib';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { TcRolesService } from '../../services/tc-roles-service.ts.service';\n\n\n/**\n * Landing page\n *\n * This component allows a configurable landing page on a per role basis\n *\n * @example <tcla-live-apps-landing-page></tcla-live-apps-landing-page>\n */\n@Component({\n    selector: 'tcla-live-apps-landing-page',\n    templateUrl: './live-apps-landing-page.component.html',\n    styleUrls: ['./live-apps-landing-page.component.css']\n})\nexport class LiveAppsLandingPageComponent implements OnInit {\n\n    public title: string;\n    public subtitle: string;\n    public backgroundImage: string;\n    public highlights: LandingPageItemConfig[];\n    \n    private navigateURL: string;\n\n    constructor(\n        private location: Location,\n        private route: ActivatedRoute,\n        private router: Router,\n        private landingPageService: TcGeneralLandingPageService,\n        private rolesService: TcRolesService\n    ) { }\n\n    ngOnInit() {\n        const uiAppId = this.route.snapshot.data.generalConfigHolder.uiAppId;\n        const roleId = this.route.snapshot.data.activeRoleHolder.id;\n\n            this.landingPageService.getLandingPageForRole(roleId, uiAppId).pipe(\n                map(landingPage => {\n                    if (landingPage != undefined){\n                        this.title = landingPage.title;\n                        this.subtitle = landingPage.subtitle;\n                        this.backgroundImage = (landingPage.backgroundURL != '' ? TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, landingPage.backgroundURL) : '');\n\n                        this.highlights = new Array();\n                        this.highlights.push(new LandingPageItemConfig().deserialize({\n                            title: landingPage.highlights[0].title,\n                            content: landingPage.highlights[0].content,\n                            iconURL: landingPage.highlights[0].iconURL\n                        }));\n\n                        this.highlights.push(new LandingPageItemConfig().deserialize({\n                            title: landingPage.highlights[1].title,\n                            content: landingPage.highlights[1].content,\n                            iconURL: landingPage.highlights[1].iconURL\n                        }));\n\n                        this.highlights.push(new LandingPageItemConfig().deserialize({\n                            title: landingPage.highlights[2].title,\n                            content: landingPage.highlights[2].content,\n                            iconURL: landingPage.highlights[2].iconURL\n                        }));\n\n                        this.navigateURL = landingPage.homeRoute;\n                    } else {\n                        this.router.navigate(['errorHandler/NO_ROLE/NO_ROLE']);\n                    }\n                })\n            ).subscribe();\n    }\n\n    public moveHome = (): void => {\n        this.router.navigate([this.navigateURL]);\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Resolve} from '@angular/router';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {LiveAppsService} from '../services/live-apps.service';\nimport {Claim, GeneralConfigResolver, RoleAttribute, TcGeneralConfigService, TcSharedStateService} from '@tibco-tcstk/tc-core-lib';\nimport {flatMap, map, mergeMap, switchMap} from 'rxjs/operators';\nimport {Group, Groups, Roles} from '../models/tc-groups-data';\nimport {HttpClient} from '@angular/common/http';\nimport {TcCaseCardConfigService} from '../services/tc-case-card-config.service';\nimport {Location} from '@angular/common';\nimport {ClaimsResolver} from './claims.resolver';\nimport {group} from '@angular/animations';\n\n@Injectable()\nexport class RolesResolver implements Resolve<Observable<Roles>> {\n\n  constructor(private sharedStateService: TcSharedStateService, private generalConfigService: TcGeneralConfigService, private http: HttpClient, private liveapps: LiveAppsService, private location: Location) {\n  }\n\n  resolve(): Observable<Roles> {\n\n    // we will need the general config to understand the roles definition\n    const generalConfigResolver = new GeneralConfigResolver(this.sharedStateService, this.generalConfigService, this.http, this.location);\n\n    // aim is to return an object that only contains roles where the user is a member of the matching group\n\n    const claimResolver$ = new ClaimsResolver(this.liveapps).resolve().pipe(\n      flatMap(claiminfo => {\n          const sandboxId = claiminfo.primaryProductionSandbox.id;\n          generalConfigResolver.setSandbox(Number(sandboxId));\n          const generalConfig$ = generalConfigResolver.resolve();\n          const groups$ = this.liveapps.getGroupMemberships(+claiminfo.primaryProductionSandbox.id, claiminfo.id, 1000, true);\n          return forkJoin(generalConfig$, groups$).pipe(\n            map(([configData, groupData]) => {\n              return this.createRoles(groupData.groups, configData.roles);\n            }));\n        }\n      )\n    );\n\n    return claimResolver$;\n  }\n\n  private createRoles = (groups: Group[], roles: RoleAttribute[]): Roles => {\n    const calcRoles: RoleAttribute[] = [];\n    roles.forEach(role => {\n      const targetGroup = groups.find(grp => {\n        return (grp.name === role.group);\n      }\n      )\n      if (targetGroup) {\n        calcRoles.push(role);\n      }\n    })\n    return new Roles().deserialize(new Roles().deserialize( { roles: calcRoles } ));\n  }\n}\n","// This guard is to check whether the user has appropriate role to access a route based on config settings\n\nimport {Inject, Injectable} from '@angular/core';\nimport {Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\nimport {LiveAppsService} from '../services/live-apps.service';\nimport {HttpClient, HttpHandler, HttpHeaders} from '@angular/common/http';\nimport {catchError, flatMap, map, mergeMap} from 'rxjs/operators';\nimport {forkJoin, Observable, of, throwError} from 'rxjs';\nimport {ClaimsResolver} from '../resolvers/claims.resolver';\nimport {Claim, GeneralConfigResolver, TcCoreCommonFunctions, TcGeneralConfigService, TcSharedStateService} from '@tibco-tcstk/tc-core-lib';\nimport {Location} from '@angular/common';\nimport {Roles, RouteAccessControlConfig, RouteAccessDef} from '../models/tc-groups-data';\nimport {RolesResolver} from '../resolvers/roles.resolver';\n\n@Injectable()\nexport class RoleGuard implements CanActivate {\n\n  DEFAULT_CONFIG_URL = TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, 'assets/config/routeAccessControl.json');\n\n  constructor(private liveapps: LiveAppsService, private router: Router, private http: HttpClient, private location: Location, private sharedStateService: TcSharedStateService, private generalConfigService: TcGeneralConfigService) {\n  }\n\n  // can be used to load defaultAppConfig from a JSON config\n  private getRouteAccessControlConfig = (): Observable<RouteAccessControlConfig> => {\n    const headers = new HttpHeaders().set('cacheResponse', 'true');\n    return this.http.get(this.DEFAULT_CONFIG_URL, { headers }).pipe(\n      map(configContents => new RouteAccessControlConfig().deserialize(configContents))\n    );\n  }\n\n  private getRouteDef = (routeAccessConfig: RouteAccessControlConfig, route: ActivatedRouteSnapshot): RouteAccessDef => {\n    return routeAccessConfig.routes.find(routeRec => {\n      return (routeRec.routeUrl === route.routeConfig.path);\n    });\n  }\n\n  private hasAccess = (config: RouteAccessDef, roles: Roles): boolean => {\n    const reqRole = roles.roles.find(role => {\n      return (role.id === config.requiredRoleId);\n    })\n    return reqRole ? true : false;\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    // get route config\n    const routeConfig$ = this.getRouteAccessControlConfig();\n\n    // we will need the roles we currently have\n    const currentRolesRes = new RolesResolver(this.sharedStateService, this.generalConfigService, this.http, this.liveapps, this.location)\n    const currentRoles$ = currentRolesRes.resolve();\n\n    // run both in parallel then check access\n    const decision$ = forkJoin(routeConfig$, currentRoles$).pipe(\n      map(([routeConfig, currentRoles]) => {\n        const routeConfigRec = this.getRouteDef(routeConfig, route);\n        if (this.hasAccess(routeConfigRec, currentRoles)) {\n          return true;\n        } else {\n          console.error('You do not have access to this page: ', route);\n          this.router.navigate(['/errorHandler/' + 'NO_ROUTE_ACCESS/' + 'Route <' + route.url + '> requires role <' + routeConfigRec.requiredRoleId + '>' ]);\n          return false;\n        }\n      }));\n\n    return decision$;\n  }\n\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport {\n  MatAccordion,\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatOptionModule,\n  MatSelectModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatSnackBarModule,\n  MatSlideToggleModule,\n  MatIconRegistry,\n  MatProgressBarModule\n} from '@angular/material';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {BrowserModule, DomSanitizer} from '@angular/platform-browser';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { ColorPickerModule } from 'ngx-color-picker';\nimport {CachingInterceptor, DurationSincePipe, TcCoreCommonFunctions} from '@tibco-tcstk/tc-core-lib';\nimport { RequestCacheService } from '@tibco-tcstk/tc-core-lib';\nimport { LiveAppsCaseSearchComponent } from './components/live-apps-case-search/live-apps-case-search.component';\nimport { LiveAppsCaseListComponent } from './components/live-apps-case-list/live-apps-case-list.component';\nimport { LiveAppsCaseSummaryComponent } from './components/live-apps-case-summary/live-apps-case-summary.component';\nimport { LiveAppsStateIconComponent } from './components/live-apps-state-icon/live-apps-state-icon.component';\nimport { LiveAppsApplicationsComponent } from './components/live-apps-applications/live-apps-applications.component';\nimport { LiveAppsNotesComponent } from './components/live-apps-notes/live-apps-notes.component';\nimport {\n  LiveAppsDocumentsComponent,\n  LiveAppsDocumentUploadDialogComponent, LiveAppsDocumentViewerDialogComponent\n} from './components/live-apps-documents/live-apps-documents.component';\nimport { LiveAppsCaseStatesComponent } from './components/live-apps-case-states/live-apps-case-states.component';\nimport {\n    LiveAppsApplicationConfigurationComponent,\n    LiveAppsStateIconUploadDialogComponent\n} from './components/live-apps-application-configuration/live-apps-application-configuration.component';\nimport { LiveAppsFavoriteCasesComponent } from './components/live-apps-favorite-cases/live-apps-favorite-cases.component';\nimport { LiveAppsCaseAuditComponent } from './components/live-apps-case-audit/live-apps-case-audit.component';\nimport { LiveAppsCaseDataComponent } from './components/live-apps-case-data/live-apps-case-data.component';\nimport { LiveAppsCaseActionsComponent } from './components/live-apps-case-actions/live-apps-case-actions.component';\nimport { LiveAppsRecentCasesComponent } from './components/live-apps-recent-cases/live-apps-recent-cases.component';\nimport { LiveAppsCaseStateAuditComponent } from './components/live-apps-case-state-audit/live-apps-case-state-audit.component';\nimport { LiveAppsNotesEditorComponent } from './components/live-apps-notes-editor/live-apps-notes-editor.component';\nimport { LiveAppsService } from './services/live-apps.service';\nimport { LiveAppsLoginComponent } from './components/live-apps-login/live-apps-login.component';\nimport { LiveAppsSearchWidgetComponent } from './components/live-apps-search-widget/live-apps-search-widget.component';\nimport { LiveAppsComponent } from './components/live-apps-component/live-apps-component.component';\nimport { MockingInterceptor } from '@tibco-tcstk/tc-core-lib';\nimport { LiveAppsCaseCreatorComponent } from './components/live-apps-case-creator/live-apps-case-creator.component';\nimport { LiveAppsCreatorSelectorComponent } from './components/live-apps-creator-selector/live-apps-creator-selector.component';\nimport { LiveAppsCreatorsComponent } from './components/live-apps-creators/live-apps-creators.component';\nimport { LiveAppsCaseActionComponent } from './components/live-apps-case-action/live-apps-case-action.component';\nimport { LiveAppsActionsComponent } from './components/live-apps-actions/live-apps-actions.component';\nimport { TcCoreLibModule } from '@tibco-tcstk/tc-core-lib';\nimport { TcFormsLibModule } from '@tibco-tcstk/tc-forms-lib';\nimport { CaseGuard } from './guards/case.guard';\nimport { TcCaseDataService } from './services/tc-case-data.service';\nimport { LiveAppsCaseDataDisplayComponent } from './components/live-apps-case-data-display/live-apps-case-data-display.component';\nimport { LiveAppsCaseCockpitComponent } from './components/live-apps-case-cockpit/live-apps-case-cockpit.component';\nimport { TcCaseProcessesService } from './services/tc-case-processes.service';\nimport { LiveAppsMilestoneComponent } from './components/live-apps-milestone/live-apps-milestone.component';\nimport { TcDocumentService } from './services/tc-document.service';\nimport { LiveAppsAppConfigurationWidgetComponent } from './components/live-apps-app-configuration-widget/live-apps-app-configuration-widget.component';\nimport { LiveAppsCaseCreatorWidgetComponent } from './components/live-apps-case-creator-widget/live-apps-case-creator-widget.component';\nimport { LiveAppsHomeCockpitComponent } from './components/live-apps-home-cockpit/live-apps-home-cockpit.component';\nimport { TcLiveAppsConfigService } from './services/tc-live-apps-config.service';\nimport { LiveAppsApplicationListComponent } from './components/live-apps-application-list/live-apps-application-list.component';\nimport { LiveAppsApplicationCreateButtonComponent } from './components/live-apps-application-create-button/live-apps-application-create-button.component';\nimport { LiveAppsCreatorDialogComponent } from './components/live-apps-creator-dialog/live-apps-creator-dialog.component';\nimport { LiveAppsSettingsComponent } from './components/live-apps-settings/live-apps-settings.component';\nimport { LiveAppsSettingsSummaryCardsComponent } from './components/live-apps-settings-summary-cards/live-apps-settings-summary-cards.component';\nimport { LiveAppsSettingsRecentCasesComponent } from './components/live-apps-settings-recent-cases/live-apps-settings-recent-cases.component';\nimport { LiveAppsSettingsRolesComponent } from './components/live-apps-settings-roles/live-apps-settings-roles.component';\nimport { TcRolesService } from './services/tc-roles-service.ts.service';\nimport { LiveAppsRoleSwitcherComponent } from './components/live-apps-role-switcher/live-apps-role-switcher.component';\nimport {LiveAppsCaseCreatorsComponent} from './components/live-apps-case-creators/live-apps-case-creators.component';\nimport {ParseAuditMessagePipe} from './pipes/audit.pipe';\nimport {LiveAppsCaseActionsListComponent} from './components/live-apps-case-actions-list/live-apps-case-actions-list.component';\nimport { LiveAppsDocumentViewerComponent } from './components/live-apps-document-viewer/live-apps-document-viewer.component';\nimport { LiveAppsLandingPageComponent } from './components/live-apps-landing-page/live-apps-landing-page.component';\nimport {ChartsModule} from 'ng2-charts';\nimport {TcLiveAppsReportingService} from './services/tc-live-apps-reporting.service';\nimport {Location} from '@angular/common';\nimport {RoleGuard} from './guards/role.guard';\nimport { LiveAppsActiveCasesWidgetComponent } from './components/live-apps-active-cases-widget/live-apps-active-cases-widget.component';\nimport { LiveAppsActiveCasesReportComponent } from './components/live-apps-active-cases-report/live-apps-active-cases-report.component';\nimport { LiveAppsActiveCasesForTypeReportComponent } from './components/live-apps-active-cases-for-type-report/live-apps-active-cases-for-type-report.component';\n\n@NgModule({\n    declarations: [\n        LiveAppsLoginComponent,\n        LiveAppsApplicationsComponent,\n        LiveAppsCaseDataComponent,\n        LiveAppsCaseStatesComponent,\n        LiveAppsCaseActionsComponent,\n        LiveAppsCaseAuditComponent,\n        LiveAppsCaseStateAuditComponent,\n        LiveAppsRecentCasesComponent,\n        LiveAppsFavoriteCasesComponent,\n        LiveAppsDocumentsComponent,\n        LiveAppsNotesComponent,\n        LiveAppsNotesEditorComponent,\n        LiveAppsDocumentUploadDialogComponent,\n        LiveAppsDocumentViewerDialogComponent,\n        LiveAppsCaseSummaryComponent,\n        LiveAppsStateIconComponent,\n        LiveAppsApplicationConfigurationComponent,\n        LiveAppsStateIconUploadDialogComponent,\n        LiveAppsCaseListComponent,\n        LiveAppsCaseSearchComponent,\n        LiveAppsSearchWidgetComponent,\n        LiveAppsComponent,\n        LiveAppsCaseCreatorComponent,\n        LiveAppsCreatorSelectorComponent,\n        LiveAppsCreatorsComponent,\n        LiveAppsCaseActionComponent,\n        LiveAppsActionsComponent,\n        LiveAppsCaseDataDisplayComponent,\n        LiveAppsCaseCockpitComponent,\n        LiveAppsMilestoneComponent,\n        LiveAppsAppConfigurationWidgetComponent,\n        LiveAppsCaseCreatorWidgetComponent,\n        LiveAppsHomeCockpitComponent,\n        LiveAppsApplicationListComponent,\n        LiveAppsApplicationCreateButtonComponent,\n        LiveAppsCreatorDialogComponent,\n        LiveAppsSettingsComponent,\n        LiveAppsSettingsSummaryCardsComponent,\n        LiveAppsSettingsRecentCasesComponent,\n        LiveAppsSettingsRolesComponent,\n        LiveAppsRoleSwitcherComponent,\n        LiveAppsCaseCreatorsComponent,\n        ParseAuditMessagePipe,\n        LiveAppsCaseActionsListComponent,\n        LiveAppsDocumentViewerComponent,\n        LiveAppsLandingPageComponent,\n        LiveAppsActiveCasesWidgetComponent,\n        LiveAppsActiveCasesReportComponent,\n        LiveAppsActiveCasesForTypeReportComponent\n    ],\n  imports: [\n    TcCoreLibModule,\n    TcFormsLibModule,\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatCardModule,\n    MatTooltipModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    ScrollDispatchModule,\n    MatSlideToggleModule,\n    MatProgressBarModule,\n    FormsModule,\n    FlexLayoutModule,\n    ColorPickerModule,\n    ScrollingModule,\n    ReactiveFormsModule,\n    ChartsModule\n  ],\n  exports: [\n    LiveAppsLoginComponent,\n    LiveAppsApplicationsComponent,\n    LiveAppsCaseDataComponent,\n    LiveAppsCaseStatesComponent,\n    LiveAppsCaseActionsComponent,\n    LiveAppsCaseAuditComponent,\n    LiveAppsCaseStateAuditComponent,\n    LiveAppsRecentCasesComponent,\n    LiveAppsFavoriteCasesComponent,\n    LiveAppsDocumentsComponent,\n    LiveAppsNotesComponent,\n    LiveAppsNotesEditorComponent,\n    LiveAppsDocumentUploadDialogComponent,\n    LiveAppsDocumentViewerDialogComponent,\n    LiveAppsCaseSummaryComponent,\n    LiveAppsStateIconComponent,\n    LiveAppsApplicationConfigurationComponent,\n    LiveAppsStateIconUploadDialogComponent,\n    LiveAppsCaseListComponent,\n    LiveAppsCaseSearchComponent,\n    LiveAppsSearchWidgetComponent,\n    LiveAppsComponent,\n    LiveAppsCreatorSelectorComponent,\n    LiveAppsCaseCreatorComponent,\n    LiveAppsCreatorsComponent,\n    LiveAppsCaseActionComponent,\n    LiveAppsActionsComponent,\n    LiveAppsCaseDataDisplayComponent,\n    LiveAppsCaseCockpitComponent,\n    LiveAppsAppConfigurationWidgetComponent,\n    LiveAppsCaseCreatorWidgetComponent,\n    LiveAppsHomeCockpitComponent,\n    LiveAppsApplicationListComponent,\n    LiveAppsApplicationCreateButtonComponent,\n    LiveAppsCreatorDialogComponent,\n    LiveAppsSettingsComponent,\n    LiveAppsSettingsSummaryCardsComponent,\n    LiveAppsSettingsRolesComponent,\n    LiveAppsRoleSwitcherComponent,\n    LiveAppsCaseCreatorsComponent,\n    ParseAuditMessagePipe,\n    LiveAppsCaseActionsListComponent,\n    LiveAppsDocumentViewerComponent,\n    LiveAppsLandingPageComponent,\n    LiveAppsActiveCasesWidgetComponent,\n    LiveAppsActiveCasesReportComponent\n  ],\n    entryComponents: [LiveAppsStateIconUploadDialogComponent, LiveAppsDocumentUploadDialogComponent, LiveAppsDocumentViewerDialogComponent, LiveAppsCreatorDialogComponent],\n    providers: [\n        RequestCacheService,\n        CaseGuard,\n        RoleGuard,\n        DurationSincePipe,\n        { provide: HTTP_INTERCEPTORS, useClass: CachingInterceptor, multi: true }\n        // { provide: HTTP_INTERCEPTORS, useClass: MockingInterceptor, multi: true }\n    ]\n})\nexport class TcLiveappsLibModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: TcLiveappsLibModule,\n            providers: [LiveAppsService, TcCaseDataService, TcCaseProcessesService, TcDocumentService, TcLiveAppsConfigService, TcRolesService, TcLiveAppsReportingService]\n        };\n    }\n  constructor(private matIconRegistry: MatIconRegistry, private domSanitizer: DomSanitizer, private location: Location) {\n    this.matIconRegistry.addSvgIconLiteral(\n      'ic-no-cases-icon',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\\n' +\n        '    <g fill=\"none\" fill-rule=\"nonzero\">\\n' +\n        '        <circle cx=\"24\" cy=\"24\" r=\"24\" fill=\"#F4F4F4\"/>\\n' +\n        '        <path fill=\"#B6B6B6\" d=\"M30.936 13.835h7.553c.835 0 1.511.676 1.511 1.51V36.49A1.51 1.51 0 0 1 38.49 38H17.34a1.51 1.51 0 0 1-1.51-1.51V15.345c0-.834.676-1.51 1.51-1.51h7.553v-.023l-8.397-2.25a1.51 1.51 0 0 0-1.85 1.069L9.563 31.596a1.51 1.51 0 0 0 1.068 1.85l3.717.995a.755.755 0 1 1-.391 1.459l-3.717-.996a3.02 3.02 0 0 1-2.136-3.7l5.083-18.964a3.021 3.021 0 0 1 3.7-2.136l8.395 2.249a3.021 3.021 0 0 1 5.654 1.482zm-.404 1.51a3.02 3.02 0 0 1-5.234 0H18.85a1.51 1.51 0 0 0-1.51 1.51V34.98c0 .834.675 1.51 1.51 1.51h18.128a1.51 1.51 0 0 0 1.51-1.51V16.855a1.51 1.51 0 0 0-1.51-1.51h-6.447zm-2.617 0a1.51 1.51 0 1 0 0-3.02 1.51 1.51 0 0 0 0 3.02zm-7.554 4.531h13.596a.755.755 0 1 1 0 1.51H20.361a.755.755 0 1 1 0-1.51zm0 3.02h13.596a.755.755 0 1 1 0 1.511H20.361a.755.755 0 1 1 0-1.51zm0 2.962h6.043a.755.755 0 1 1 0 1.51h-6.043a.755.755 0 1 1 0-1.51z\"/>\\n' +\n        '    </g>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'ic-no-tasks-icon',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\\n' +\n        '    <g fill=\"none\" fill-rule=\"nonzero\">\\n' +\n        '        <circle cx=\"24\" cy=\"24\" r=\"24\" fill=\"#F4F4F4\"/>\\n' +\n        '        <path fill=\"#B6B6B6\" d=\"M40 16.652v16.023a2.662 2.662 0 0 1-2.667 2.658H10.667A2.667 2.667 0 0 1 8 32.654l.123-16.007c0-.04.004-.078.01-.115V15a3 3 0 0 1 3-3H37a3 3 0 0 1 3 3v1.652zm-1.333 0H9.457v.005l-.124 16.008a1.331 1.331 0 0 0 1.323 1.339h26.677c.737 0 1.334-.595 1.334-1.33V16.653zM36.3 29.81c.226.225.366.537.366.88 0 .689-.56 1.246-1.25 1.246-.345 0-.658-.139-.884-.364L30.87 27.92a4.982 4.982 0 0 1-2.536.694c-2.762 0-5-2.231-5-4.984s2.238-4.985 5-4.985c2.76 0 5 2.232 5 4.985 0 .924-.257 1.786-.696 2.528L36.3 29.81zm-7.967-9.918a3.744 3.744 0 0 0-3.75 3.738 3.744 3.744 0 0 0 3.75 3.738 3.744 3.744 0 0 0 3.75-3.738 3.744 3.744 0 0 0-3.75-3.738zm-16.336 2.076h9.338a.665.665 0 0 1 0 1.33h-9.338a.665.665 0 0 1 0-1.33zm0 2.658h6.671a.665.665 0 0 1 0 1.33H12a.665.665 0 0 1 0-1.33z\"/>\\n' +\n        '    </g>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'ic-no-docs-icon',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\\n' +\n        '    <g fill=\"none\" fill-rule=\"nonzero\">\\n' +\n        '        <circle cx=\"24\" cy=\"24\" r=\"24\" fill=\"#F4F4F4\"/>\\n' +\n        '        <path fill=\"#B6B6B6\" d=\"M36.315 12.568c.737-.01 1.342.555 1.352 1.261v.648c0 .354-.299.64-.667.64a.654.654 0 0 1-.667-.64v-.63l-14.335.185a.678.678 0 0 1-.527-.237l-1.722-2.041a1.356 1.356 0 0 0-1.036-.475H11v3.199c0 .353-.316.64-.685.64a.638.638 0 0 1-.648-.64v-3.199c0-.706.597-1.279 1.333-1.279h7.713c.804 0 1.566.349 2.072.949l1.519 1.8 14.011-.181zM10 15.61h28c1.105 0 2 .86 2 1.92v18.55c0 1.06-.895 1.919-2 1.919H10c-1.105 0-2-.86-2-1.919v-18.55c0-1.06.895-1.92 2-1.92zm0 1.28a.654.654 0 0 0-.667.64v18.55c0 .353.299.64.667.64h28a.654.654 0 0 0 .667-.64v-18.55a.654.654 0 0 0-.667-.64H10zm2.333 3.984a.654.654 0 0 1-.666-.64c0-.353.298-.64.666-.64h12c.369 0 .667.287.667.64 0 .353-.298.64-.667.64h-12zm0 2.718a.654.654 0 0 1-.666-.64c0-.353.298-.64.666-.64h10c.369 0 .667.287.667.64 0 .354-.298.64-.667.64h-10z\"/>\\n' +\n        '    </g>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'ic-no-notes-icon',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\\n' +\n        '    <g fill=\"none\" fill-rule=\"nonzero\">\\n' +\n        '        <circle cx=\"24\" cy=\"24\" r=\"24\" fill=\"#F4F4F4\"/>\\n' +\n        '        <path fill=\"#B6B6B6\" d=\"M10.517 31.347v-3.918H9.079c-.596 0-1.079-.439-1.079-.98 0-.541.483-.98 1.079-.98h1.438v-4.571H9.079c-.596 0-1.079-.439-1.079-.98 0-.54.483-.98 1.079-.98h1.438v-3.983H9.079c-.596 0-1.079-.438-1.079-.98 0-.54.483-.98 1.079-.98h1.438v-2.383C10.517 9.17 11.805 8 13.393 8h21.573c1.589 0 2.877 1.17 2.877 2.612V35.43c0 1.442-1.288 2.612-2.877 2.612H13.393c-1.588 0-2.876-1.17-2.876-2.612v-2.123H9.079c-.596 0-1.079-.438-1.079-.98 0-.54.483-.98 1.079-.98h1.438zm1.438 0h.72c.595 0 1.078.439 1.078.98 0 .54-.483.98-1.079.98h-.719v2.122c0 .72.644 1.306 1.438 1.306h21.573c.795 0 1.438-.585 1.438-1.306V10.612c0-.721-.643-1.306-1.438-1.306H13.393c-.794 0-1.438.585-1.438 1.306v2.384h.72c.595 0 1.078.438 1.078.98 0 .54-.483.98-1.079.98h-.719v3.983h.72c.595 0 1.078.438 1.078.98 0 .54-.483.979-1.079.979h-.719v4.571h.72c.595 0 1.078.439 1.078.98 0 .541-.483.98-1.079.98h-.719v3.918zM16.277 40c-.398 0-.72-.292-.72-.653 0-.36.322-.653.72-.653h19.408c1.589 0 2.877-1.17 2.877-2.612V11.467c0-.36.322-.653.719-.653.397 0 .719.292.719.653v24.615C40 38.246 38.068 40 35.685 40H16.277zm3.871-26.595h6.518c.45 0 .815.331.815.74 0 .408-.365.74-.815.74h-6.518c-.45 0-.815-.332-.815-.74 0-.409.365-.74.815-.74zm.48 3.333h10.355c.715 0 1.294.331 1.294.74 0 .408-.58.74-1.294.74H20.628c-.715 0-1.295-.332-1.295-.74 0-.409.58-.74 1.295-.74zm0 3.334h10.355c.715 0 1.294.33 1.294.74 0 .408-.58.739-1.294.739H20.628c-.715 0-1.295-.331-1.295-.74 0-.408.58-.74 1.295-.74z\"/>\\n' +\n        '    </g>\\n' +\n        '</svg>\\n')\n    );\n\n    this.matIconRegistry.addSvgIconLiteral(\n      'ic-active-case-widget-icon',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path  class=\"svg-content\" fill=\"#727272\" d=\"M11 2v20c-5.07-.5-9-4.79-9-10s3.93-9.5 9-10zm2.03 0v8.99H22c-.47-4.74-4.24-8.52-8.97-8.99zm0 11.01V22c4.74-.47 8.5-4.25 8.97-8.99h-8.97z\"/></svg>')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-collaboration-reply',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><g class=\"svg-content\" fill=\"none\" fill-rule=\"evenodd\"><g mask=\"url(#b)\"><mask id=\"b\" fill=\"#fff\">       <path d=\"M4 14.027C4 11.298 6.192 9.07 8.876 9.07h7.357l-2.141-2.159a1.15 1.15 0 0 1 0-1.588 1.105 1.105 0 0 1 1.563 0l4.026 4.092a1.15 1.15 0 0 1 0 1.589l-4.026 4.092a1.07 1.07 0 0 1-.782.329 1.07 1.07 0 0 1-.781-.329 1.15 1.15 0 0 1 0-1.588l2.14-2.176H8.877c-1.461 0-2.667 1.209-2.667 2.711 0 1.485 1.189 2.711 2.667 2.711.612 0 1.104.5 1.104 1.123 0 .621-.492 1.122-1.104 1.122C6.192 18.983 4 16.772 4 14.027z\"/></mask><path d=\"M0 0h24v24H0z\" fill=\"black\"/></g></g></svg>')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-collaboration-delete',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '  <path class=\"svg-content\" d=\"M17.188 19.158c0 .54-.42.978-.938.978s-.938-.438-.938-.978v-8.8c0-.54.42-.977.938-.977.517 0 .938.438.938.978v8.799zm-3.75 0c0 .54-.42.978-.938.978s-.938-.438-.938-.978v-8.8c0-.54.42-.977.938-.977s.938.438.938.978v8.799zm-3.75 0c0 .54-.42.978-.938.978s-.938-.438-.938-.978v-8.8c0-.54.42-.977.938-.977s.938.438.938.978v8.799zM5.938 7.335v12.743c0 1.08.839 1.922 1.875 1.922h9.375c1.035 0 1.875-.842 1.875-1.922V7.335H5.938zm10.312-3.38h-7.5C8.75 2.875 9.59 2 10.625 2h3.75c1.036 0 1.875.875 1.875 1.955zm2.813 1.956H5.938C5.42 5.91 5 5.473 5 4.933s.42-.978.938-.978h13.125c.517 0 .937.438.937.978s-.42.978-.938.978\"/>\\n' +\n        '  <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\\n' +\n        '</svg>')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-application-edit',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/></svg>')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-collaboration-edit',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '  <path class=\"svg-content\"\\n' +\n        '    d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"/>\\n' +\n        '  <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-collaboration-send',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '  <path class=\"svg-content\" fill=\"#727272\" d=\"M1 12C1 5.925 5.924 1 12 1c6.075 0 11 4.924 11 11 0 6.075-4.924 11-11 11-6.075 0-11-4.924-11-11zm17.33.03L7.77 7.98v3.15l7.542.9-7.543.9v3.15l10.56-4.05z\"/>\\n' +\n        '  <path fill=\"none\" d=\"M0 0h24v24H0z\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-collaboration-subscribed',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\">\\n' +\n        '  <defs>\\n' +\n        '    <rect id=\"path-1\" x=\"0\" y=\"0\" width=\"355\" height=\"950\"></rect>\\n' +\n        '    <filter x=\"-3.7%\" y=\"-1.2%\" width=\"107.3%\" height=\"102.7%\" filterUnits=\"objectBoundingBox\" id=\"filter-2\">\\n' +\n        '      <feOffset dx=\"0\" dy=\"2\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\"></feOffset>\\n' +\n        '      <feGaussianBlur stdDeviation=\"4\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\"></feGaussianBlur>\\n' +\n        '      <feColorMatrix values=\"0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.5 0\" type=\"matrix\" in=\"shadowBlurOuter1\"></feColorMatrix>\\n' +\n        '    </filter>\\n' +\n        '    <path d=\"M7.02092272,9.64382773 L10.429694,12.9694583 C10.2893638,12.9895851 10.1458982,13 10,13 C8.34314575,13 7,11.6568542 7,10 C7,9.87948409 7.0071063,9.76062794 7.02092272,9.64382773 Z M12.9979012,9.88673222 C12.9388301,8.29534999 11.6402099,7.02078376 10.0392586,7.00025162 L12.9979019,9.88673289 Z M5.39239715,8.05502229 C5.13971651,8.65288074 5,9.3101241 5,10 C5,12.7614237 7.23857625,15 10,15 C10.7336604,15 11.4304146,14.8419859 12.0580864,14.5581338 L13.8229037,16.2799067 C12.6354037,16.7451582 11.3468341,17 10,17 C5.45454545,17 1.57272727,14.0973333 -7.10542736e-15,10 C0.642490676,8.32615705 1.67034243,6.85169041 2.97137252,5.69304704 L5.39239715,8.05502229 Z M8.2947756,5.29831698 L6.53943522,3.58578978 C7.62510828,3.20602952 8.78900189,3 10,3 C14.5454545,3 18.4272727,5.90266667 20,10 C19.4004851,11.5618806 18.4654382,12.9501651 17.2860026,14.0702457 L14.742345,11.5886286 C14.9094634,11.089535 15,10.5553405 15,10 C15,7.23857625 12.7614237,5 10,5 C9.40117224,5 8.82693188,5.10527121 8.2947756,5.29831698 Z M0.292893219,1.70710678 C-0.0976310729,1.31658249 -0.0976310729,0.683417511 0.292893219,0.292893219 C0.683417511,-0.0976310729 1.31658249,-0.0976310729 1.70710678,0.292893219 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3165825,20.0976311 18.6834175,20.0976311 18.2928932,19.7071068 L0.292893219,1.70710678 Z\" id=\"path-3\"></path>\\n' +\n        '  </defs>\\n' +\n        '  <g id=\"Pages/Desktop\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\\n' +\n        '    <g id=\"Reporting-Dashboard/Page/Dashboard-comments/1440-01\" transform=\"translate(-1360.000000, -154.000000)\">\\n' +\n        '      <rect fill=\"#F4F4F4\" x=\"0\" y=\"0\" width=\"1440\" height=\"1072\"></rect>\\n' +\n        '      <g id=\"Group-5\">\\n' +\n        '        <rect id=\"Mask\" fill=\"#D8D8D8\" opacity=\"0\" x=\"1\" y=\"0\" width=\"1438\" height=\"1072\"></rect>\\n' +\n        '        <g id=\"modal/header/tabs\">\\n' +\n        '          <g transform=\"translate(25.000000, 163.000000)\"></g>\\n' +\n        '        </g>\\n' +\n        '      </g>\\n' +\n        '      <rect id=\"Rectangle-2\" stroke=\"#232323\" x=\"0.5\" y=\"0.5\" width=\"1439\" height=\"1071\"></rect>\\n' +\n        '      <g id=\"cmpt/comments\" transform=\"translate(1085.000000, 122.000000)\">\\n' +\n        '        <g id=\"Rectangle\">\\n' +\n        '          <use fill=\"black\" fill-opacity=\"1\" filter=\"url(#filter-2)\" xlink:href=\"#path-1\"></use>\\n' +\n        '          <use fill=\"#FFFFFF\" fill-rule=\"evenodd\" xlink:href=\"#path-1\"></use>\\n' +\n        '        </g>\\n' +\n        '        <g id=\"cmpt/card/little-card-04\" transform=\"translate(0.000000, 16.000000)\">\\n' +\n        '          <g id=\"Group\">\\n' +\n        '            <g id=\"comments-header\" transform=\"translate(16.000000, 0.000000)\">\\n' +\n        '              <g id=\"toggle/off\" transform=\"translate(259.000000, 16.000000)\">\\n' +\n        '                <g id=\"icon/eye/off\" transform=\"translate(2.000000, 2.000000)\">\\n' +\n        '                  <mask id=\"mask-4\" fill=\"white\">\\n' +\n        '                    <use xlink:href=\"#path-3\"></use>\\n' +\n        '                  </mask>\\n' +\n        '                  <use id=\"Mask\" fill=\"#000000\" fill-rule=\"nonzero\" xlink:href=\"#path-3\"></use>\\n' +\n        '                  <g id=\"color/gray/dark\" mask=\"url(#mask-4)\" class=\"svg-content\" fill=\"#727272\">\\n' +\n        '                    <g transform=\"translate(-2.000000, -2.000000)\" id=\"blue\">\\n' +\n        '                      <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\"></rect>\\n' +\n        '                    </g>\\n' +\n        '                  </g>\\n' +\n        '                </g>\\n' +\n        '              </g>\\n' +\n        '            </g>\\n' +\n        '          </g>\\n' +\n        '        </g>\\n' +\n        '      </g>\\n' +\n        '    </g>\\n' +\n        '  </g>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-collaboration-unsubscribed',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '  <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\\n' +\n        '  <path class=\"svg-content\" fill=\"#727272\"\\n' +\n        '        d=\"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-collaboration-feed',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"18\" viewBox=\"0 0 22 18\">\\n' +\n        '    <path class=\"svg-content\" fill=\"#727272\" fill-rule=\"evenodd\" d=\"M13.377 15c-1.268 2-2.06 3-2.377 3-.316 0-1.109-1-2.377-3H2.5A2.5 2.5 0 0 1 0 12.5v-10A2.5 2.5 0 0 1 2.5 0h17A2.5 2.5 0 0 1 22 2.5v10a2.5 2.5 0 0 1-2.5 2.5h-6.123zM4.5 3a.5.5 0 0 0 0 1h13a.5.5 0 1 0 0-1h-13zm-2 4a.5.5 0 1 0 0 1h17a.5.5 0 1 0 0-1h-17zm2 4a.5.5 0 1 0 0 1h13a.5.5 0 1 0 0-1h-13z\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-document-library',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\\n' +\n        '    <path class=\"svg-content\" fill=\"#727272\" d=\"M7.683 2.481H14a2 2 0 0 1 2 2v7.852a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V4.481c0-.247.045-.484.127-.703A1.996 1.996 0 0 1 0 3.074V3a2 2 0 0 1 2-2h3.43a2 2 0 0 1 1.44.612c.304.316.575.606.813.87zm-5.98 9.63a.37.37 0 1 0 0 .74h12.593a.37.37 0 1 0 0-.74H1.704z\"/>\\n' +\n        '    <path d=\"M0 0h16v16H0z\" fill=\"none\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-document-action',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '  <path class=\"svg-content\" fill=\"#727272\" fill-rule=\"evenodd\" d=\"M10 4.91a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm0 7a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm0 7a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-document-upload',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '  <path class=\"svg-content\" fill=\"#727272\" d=\"M17.313 17.6a.932.932 0 0 1-.938-.927c0-.512.42-.927.938-.927 1.553 0 2.813-1.246 2.813-2.783a2.758 2.758 0 0 0-1.15-2.238 2.687 2.687 0 0 0-.453-.27 2.728 2.728 0 0 0-.175-.076l-.079-.029a2.834 2.834 0 0 0-.162-.054l-.11-.028c-.048-.012-.095-.024-.144-.034-.05-.009-.102-.016-.153-.023-.037-.005-.074-.012-.112-.015a2.937 2.937 0 0 0-.275-.014c-.03 0-.058.004-.087.005a5.234 5.234 0 0 0-.107-.468c-.01-.038-.025-.073-.036-.11a5.286 5.286 0 0 0-.113-.344c-.013-.034-.029-.066-.043-.1a4.76 4.76 0 0 0-.148-.337c-.012-.027-.028-.053-.04-.079A5.312 5.312 0 0 0 12 5.854 5.312 5.312 0 0 0 7.26 8.75c-.012.026-.027.052-.04.079-.054.11-.102.222-.148.337-.014.034-.03.066-.043.1a5.282 5.282 0 0 0-.113.344c-.011.037-.025.072-.036.11a5.404 5.404 0 0 0-.107.468c-.029-.001-.057-.005-.086-.005-.094 0-.185.005-.276.014-.038.003-.074.01-.111.015a3.802 3.802 0 0 0-.154.023c-.048.01-.096.022-.143.034-.037.01-.075.018-.11.028a2.947 2.947 0 0 0-.163.054l-.08.03a2.728 2.728 0 0 0-.44.22c-.065.04-.127.08-.188.125-.004.003-.009.006-.012.01a2.757 2.757 0 0 0-1.136 2.229c0 1.536 1.259 2.782 2.813 2.782.518 0 .937.415.937.927s-.42.927-.937.927C4.098 17.6 2 15.525 2 12.963 2 10.876 3.397 9.11 5.316 8.53A7.172 7.172 0 0 1 12 4a7.17 7.17 0 0 1 6.684 4.53c1.92.58 3.316 2.346 3.316 4.433 0 2.562-2.098 4.637-4.687 4.637m-8.822-2.166l2.812-3.09.003.002a.934.934 0 0 1 1.389 0l.002-.003 2.813 3.091-.003.003a.91.91 0 0 1 .243.617.936.936 0 1 1-1.632.618l-.002.003-1.178-1.294v4.692c0 .512-.42.927-.938.927a.933.933 0 0 1-.938-.927V15.38l-1.178 1.294-.002-.002a.937.937 0 0 1-1.632-.619c0-.238.094-.453.243-.617l-.002-.003\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-document-zip',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '    <path class=\"svg-content\" fill=\"#B6B6B6\" fill-rule=\"evenodd\" d=\"M15 0H3C1.343 0 0 1.264 0 2.824v18.352C0 22.736 1.343 24 3 24h18c1.657 0 3-1.264 3-2.824V8.471L15 0zm0 8.47V1.413l7.62 7.059H15zM9.6 1.2H12v1.2H9.6V1.2zm0 2.4H12v1.2H9.6V3.6zm0 2.4H12v1.2H9.6V6zm0 2.4H12v1.2H9.6V8.4zm0 2.4H12V12H9.6v-1.2zm0 2.4H12V18H9.6v-4.8z\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-document-image',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '    <path class=\"svg-content\" fill=\"#B6B6B6\" fill-rule=\"evenodd\" d=\"M24 20.273V21.5a2.5 2.5 0 0 1-2.5 2.5h-3.046a.751.751 0 0 0-.096-.163l-4.063-5.283 4.651-4.154L24 20.273zm0-2.3l-4.415-5.13a.75.75 0 0 0-1.068-.071l-5.14 4.59-6.642-8.636a.75.75 0 0 0-1.181-.01L0 15.696V2.5A2.5 2.5 0 0 1 2.5 0h19A2.5 2.5 0 0 1 24 2.5v15.473zM16.592 24H2.5A2.5 2.5 0 0 1 0 21.5v-3.394L6.13 10.4 16.593 24zm-2.59-14.25a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0-1.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-document-doc',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '    <path class=\"svg-content\" fill=\"#B6B6B6\" fill-rule=\"evenodd\" d=\"M15 0H3C1.343 0 0 1.264 0 2.824v18.352C0 22.736 1.343 24 3 24h18c1.657 0 3-1.264 3-2.824V8.471L15 0zM3.6 9.882h6.212c.429 0 .776.316.776.706 0 .39-.347.706-.776.706H3.6c-.429 0-.776-.316-.776-.706 0-.39.347-.706.776-.706zm13.306 9.883H3.565c-.41 0-.741-.316-.741-.706 0-.39.331-.706.74-.706h13.342c.41 0 .741.316.741.706 0 .39-.332.706-.741.706zm0-4.236H3.565c-.41 0-.741-.316-.741-.705 0-.39.331-.706.74-.706h13.342c.41 0 .741.316.741.706 0 .39-.332.705-.741.705zm-2.082-7.058V1.41l7.764 7.06h-7.764z\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-summary-details-button',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '  <path fill=\"none\" d=\"M0 0h24v24H0z\"/>\\n' +\n        '  <path class=\"svg-content\" fill=\"#0081cb\" d=\"M17.24 12.703l-9.449 9.005c-.41.39-1.074.39-1.484 0a.969.969 0 0 1 0-1.415l8.725-8.313-8.683-8.273a.969.969 0 0 1 0-1.414c.41-.39 1.075-.39 1.484 0l9.407 8.963a1 1 0 0 1 0 1.447z\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-favorites-icon',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\\n' +\n        '  <path class=\"svg-content\" fill=\"#727272\"\\n' +\n        '        d=\"M8 12.708l-4.225 2.221a.5.5 0 0 1-.726-.527l.807-4.705L.438 6.365a.5.5 0 0 1 .277-.853l4.724-.686L7.552.546a.5.5 0 0 1 .896 0l2.113 4.28 4.724.686a.5.5 0 0 1 .277.853l-3.418 3.332.807 4.705a.5.5 0 0 1-.726.527L8 12.708z\"/>\\n' +\n        '  <path d=\"M0 0h16v16H0z\" fill=\"none\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-config-icon',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '  <path class=\"svg-content\" fill=\"#727272\" d=\"M21.91 13.12a9.346 9.346 0 0 0 0-1.1 9.508 9.508 0 0 0 0-1.12 32.759 32.759 0 0 0-2.213-.307 7.42 7.42 0 0 0-1.306-3.087c.454-.578.998-1.264 1.342-1.805a9.436 9.436 0 0 0-.743-.849 9.453 9.453 0 0 0-.852-.74c-.49.343-1.18.867-1.814 1.336a7.49 7.49 0 0 0-3.028-1.246c0-.74-.181-1.588-.308-2.202h-2.176a32.34 32.34 0 0 0-.309 2.202 7.488 7.488 0 0 0-3.1 1.354c-.58-.45-1.27-.992-1.814-1.336-.298.23-.583.477-.852.74-.254.253-.49.524-.762.85l1.36 1.804a7.4 7.4 0 0 0-1.106 2.961c-.743 0-1.596.18-2.212.307a9.274 9.274 0 0 0 0 1.12 9.094 9.094 0 0 0 0 1.1c.616.109 1.487.235 2.212.307a7.402 7.402 0 0 0 1.251 3.015L4.12 18.23c.272.324.508.595.762.848s.526.487.852.758l1.814-1.354a7.471 7.471 0 0 0 3.028 1.246c0 .74.181 1.589.308 2.202a9.107 9.107 0 0 0 2.249 0c.109-.613.235-1.48.308-2.202a7.47 7.47 0 0 0 3.028-1.3l1.814 1.354c.326-.27.598-.505.852-.758.265-.268.513-.551.743-.849-.344-.487-.87-1.173-1.341-1.805a7.42 7.42 0 0 0 1.25-3.015c.744 0 1.596-.18 2.213-.307m-10.064 3.304a4.35 4.35 0 0 1-1.705-.343 4.451 4.451 0 0 1-2.339-2.31 4.477 4.477 0 0 1 0-3.413 4.451 4.451 0 0 1 2.34-2.31 4.534 4.534 0 0 1 3.427 0 4.451 4.451 0 0 1 2.32 2.31 4.477 4.477 0 0 1 0 3.412 4.451 4.451 0 0 1-2.32 2.311 4.387 4.387 0 0 1-1.723.343\"/>\\n' +\n        '  <path fill=\"none\" d=\"M0 0h24v24H0z\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-case-start-icon',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '    <path class=\"svg-content\" fill=\"#0081CB\" id=\"a\" d=\"M12 4c-4.416 0-8 3.584-8 8s3.584 8 8 8 8-3.584 8-8-3.584-8-8-8m3.2 8.801h-2.4V15.2a.8.8 0 1 1-1.6 0v-2.399H8.8a.8.8 0 0 1 0-1.601h2.4V8.801a.8.8 0 1 1 1.6 0V11.2h2.4a.8.8 0 0 1 0 1.601\"/>\\n' +\n        '    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-refresh-icon',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '    <path class=\"svg-content\" fill=\"#727272\" d=\"M20.157 9.468H16.5a.843.843 0 1 1 0-1.686h1.467A7.295 7.295 0 0 0 12 4.688 7.312 7.312 0 1 0 19.313 12 .843.843 0 1 1 21 12a9 9 0 0 1-9 9 9 9 0 0 1-9-9 9 9 0 0 1 9-9 8.98 8.98 0 0 1 7.313 3.766V5.25a.843.843 0 1 1 1.687 0v3.375a.843.843 0 0 1-.843.843\"/>\\n' +\n        '    <path fill=\"none\" d=\"M0 0h24v24H0z\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-recent-icon',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\\n' +\n        '  <path class=\"svg-content\" fill=\"#727272\" id=\"a\" d=\"M8.727 8.727H5.818a.727.727 0 1 1 0-1.454H8V5.09a.727.727 0 1 1 1.455 0V8a.727.727 0 0 1-.728.727zm-.242 5.755a6.46 6.46 0 0 0 2.23-.575l.753 1.304c-.912.44-1.92.711-2.983.775v-1.504zm-1.455-.054v1.514A8.001 8.001 0 0 1 8 0a7.982 7.982 0 0 1 6.5 3.347V2A.75.75 0 1 1 16 2v3a.75.75 0 0 1-.75.75H12a.75.75 0 1 1 0-1.5h1.304A6.484 6.484 0 0 0 8 1.5a6.5 6.5 0 0 0-.97 12.928zm4.93-1.273a6.536 6.536 0 0 0 1.513-1.647l1.3.75a8.043 8.043 0 0 1-2.057 2.205l-.756-1.308zm2.158-2.954A6.488 6.488 0 0 0 14.5 8 .75.75 0 1 1 16 8c0 1.046-.2 2.045-.566 2.96l-1.316-.76z\"/>\\n' +\n        '  <path fill=\"none\" d=\"M0 0h16v16H0z\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-clear-icon',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '  <path class=\"svg-content\" fill=\"#727272\"\\n' +\n        '    d=\"M19.81 14.99l1.19-.92-1.43-1.43-1.19.92 1.43 1.43zm-.45-4.72L21 9l-9-7-2.91 2.27 7.87 7.88 2.4-1.88zM3.27 1L2 2.27l4.22 4.22L3 9l1.63 1.27L12 16l2.1-1.63 1.43 1.43L12 18.54l-7.37-5.73L3 14.07l9 7 4.95-3.85L20.73 21 22 19.73 3.27 1z\"/>\\n' +\n        '    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\\n' +\n        '</svg>')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-customization-icon',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '  <path class=\"svg-content\" fill=\"#727272\" d=\"M21.91 13.12a9.346 9.346 0 0 0 0-1.1 9.508 9.508 0 0 0 0-1.12 32.759 32.759 0 0 0-2.213-.307 7.42 7.42 0 0 0-1.306-3.087c.454-.578.998-1.264 1.342-1.805a9.436 9.436 0 0 0-.743-.849 9.453 9.453 0 0 0-.852-.74c-.49.343-1.18.867-1.814 1.336a7.49 7.49 0 0 0-3.028-1.246c0-.74-.181-1.588-.308-2.202h-2.176a32.34 32.34 0 0 0-.309 2.202 7.488 7.488 0 0 0-3.1 1.354c-.58-.45-1.27-.992-1.814-1.336-.298.23-.583.477-.852.74-.254.253-.49.524-.762.85l1.36 1.804a7.4 7.4 0 0 0-1.106 2.961c-.743 0-1.596.18-2.212.307a9.274 9.274 0 0 0 0 1.12 9.094 9.094 0 0 0 0 1.1c.616.109 1.487.235 2.212.307a7.402 7.402 0 0 0 1.251 3.015L4.12 18.23c.272.324.508.595.762.848s.526.487.852.758l1.814-1.354a7.471 7.471 0 0 0 3.028 1.246c0 .74.181 1.589.308 2.202a9.107 9.107 0 0 0 2.249 0c.109-.613.235-1.48.308-2.202a7.47 7.47 0 0 0 3.028-1.3l1.814 1.354c.326-.27.598-.505.852-.758.265-.268.513-.551.743-.849-.344-.487-.87-1.173-1.341-1.805a7.42 7.42 0 0 0 1.25-3.015c.744 0 1.596-.18 2.213-.307m-10.064 3.304a4.35 4.35 0 0 1-1.705-.343 4.451 4.451 0 0 1-2.339-2.31 4.477 4.477 0 0 1 0-3.413 4.451 4.451 0 0 1 2.34-2.31 4.534 4.534 0 0 1 3.427 0 4.451 4.451 0 0 1 2.32 2.31 4.477 4.477 0 0 1 0 3.412 4.451 4.451 0 0 1-2.32 2.311 4.387 4.387 0 0 1-1.723.343\"/>\\n' +\n        '  <path fill=\"none\" d=\"M0 0h24v24H0z\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-caselist-icon',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 48 48\">\\n' +\n        '  <path class=\"svg-content\" fill=\"#727272\" fill-rule=\"evenodd\" d=\"M42 42H6c-1.103 0-2-.898-2-2V26.61c4.43 2.623 10.208 3.96 15.729 4.422v1.504c0 1.326.948 2.4 2.118 2.4h4.764c1.17 0 2.118-1.074 2.118-2.4V31.04c6.16-.503 11.505-2.008 15.271-4.264v13.223c0 1.103-.897 2-2 2zM6 15.995h36c1.103 0 2 .898 2 2v3.583c-2.798 2.727-8.447 4.664-15.271 5.268v-1.511c0-1.326-.948-2.4-2.117-2.4h-4.765c-1.17 0-2.118 1.074-2.118 2.4v1.51c-6.651-.6-12.41-2.518-15.729-5.348v-3.501c0-1.103.897-2 2-2zm10.655-8.89c0-.063.023-.098.016-.106l14.944-.011s.04.033.04.117v4.89h-15v-4.89zM42 11.996h-6.345v-4.89C35.655 4.842 33.861 3 31.657 3H16.653c-2.204 0-3.998 1.842-3.998 4.106v4.89H6c-3.308 0-6 2.692-6 6V40c0 3.31 2.692 6 6 6h36c3.309 0 6-2.69 6-6V17.997c0-3.31-2.691-6.001-6-6.001z\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-search-icon',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '  <path class=\"svg-content\" fill=\"#727272\" d=\"M21.451 18.8a1.874 1.874 0 1 1-2.652 2.651l-5.495-5.495A7.455 7.455 0 0 1 9.5 17 7.5 7.5 0 1 1 17 9.5c0 1.39-.385 2.688-1.044 3.804l5.495 5.496zM9.5 3.876a5.625 5.625 0 1 0 0 11.25 5.625 5.625 0 0 0 0-11.25z\"/>\\n' +\n        '  <path fill=\"none\" d=\"M0 0h24v24H0z\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-case-data-icon',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\\n' +\n        '    <path class=\"svg-content\" fill=\"#727272\" fill-rule=\"evenodd\" d=\"M42 42H6c-1.103 0-2-.898-2-2V26.61c4.43 2.623 10.208 3.96 15.729 4.422v1.504c0 1.326.948 2.4 2.118 2.4h4.764c1.17 0 2.118-1.074 2.118-2.4V31.04c6.16-.503 11.505-2.008 15.271-4.264v13.223c0 1.103-.897 2-2 2zM6 15.995h36c1.103 0 2 .898 2 2v3.583c-2.798 2.727-8.447 4.664-15.271 5.268v-1.511c0-1.326-.948-2.4-2.117-2.4h-4.765c-1.17 0-2.118 1.074-2.118 2.4v1.51c-6.651-.6-12.41-2.518-15.729-5.348v-3.501c0-1.103.897-2 2-2zm10.655-8.89c0-.063.023-.098.016-.106l14.944-.011s.04.033.04.117v4.89h-15v-4.89zM42 11.996h-6.345v-4.89C35.655 4.842 33.861 3 31.657 3H16.653c-2.204 0-3.998 1.842-3.998 4.106v4.89H6c-3.308 0-6 2.692-6 6V40c0 3.31 2.692 6 6 6h36c3.309 0 6-2.69 6-6V17.997c0-3.31-2.691-6.001-6-6.001z\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-close-icon',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '  <path class=\"svg-content\" fill=\"#727272\" d=\"M21.483 5.012L14.495 12l6.988 6.987a1.766 1.766 0 0 1-2.495 2.495L12 14.495l-6.987 6.987a1.766 1.766 0 0 1-2.495-2.495L9.504 12 2.517 5.012a1.765 1.765 0 0 1 2.495-2.495L12 9.504l6.987-6.987a1.765 1.765 0 0 1 2.495 2.495\"/>\\n' +\n        '  <path fill=\"none\" d=\"M0 0h24v24H0z\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-case-state-audit-icon',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '  <path fill=\"none\" d=\"M0 0h24v24H0V0zm0 0h24v24H0V0z\"/>\\n' +\n        '  <path class=\"svg-content\" fill=\"#727272\" d=\"M16.59 7.58L10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-milestone-completed',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\" viewBox=\"0 0 36 36\">\\n' +\n        '    <g fill=\"none\" fill-rule=\"evenodd\">\\n' +\n        '        <circle cx=\"18\" cy=\"18\" r=\"18\" fill=\"#062E79\"/>\\n' +\n        '        <path fill=\"#FFF\" d=\"M22.716 16.63l-5.16 5.09a.97.97 0 0 1-.685.28.972.972 0 0 1-.685-.28l-2.903-2.863a.943.943 0 0 1-.283-.675c0-.527.434-.954.967-.954.268 0 .51.106.685.28l2.22 2.188 4.476-4.416a.973.973 0 0 1 .685-.28c.533 0 .967.428.967.954a.945.945 0 0 1-.284.676z\"/>\\n' +\n        '    </g>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-milestone-completed-terminal',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\" viewBox=\"0 0 36 36\">\\n' +\n        '    <g fill=\"none\" fill-rule=\"evenodd\">\\n' +\n        '        <circle cx=\"18\" cy=\"18\" r=\"16\" fill=\"#04BE5B\" stroke=\"#04BE5B\" stroke-width=\"4\"/>\\n' +\n        '        <path fill=\"#FFF\" d=\"M17.11 24.441c-.35.346-.833.559-1.368.559a1.943 1.943 0 0 1-1.37-.559l-5.805-5.728A1.886 1.886 0 0 1 8 17.363c0-1.054.867-1.908 1.935-1.908.534 0 1.018.214 1.37.56l4.437 4.377 8.954-8.832c.35-.345.835-.56 1.369-.56 1.068 0 1.935.855 1.935 1.909a1.89 1.89 0 0 1-.568 1.35L17.111 24.441z\"/>\\n' +\n        '    </g>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-milestone-inprogress',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\" viewBox=\"0 0 36 36\">\\n' +\n        '    <circle cx=\"18\" cy=\"18\" r=\"17\" fill=\"none\" fill-rule=\"evenodd\" stroke=\"#0081CB\" stroke-width=\"2\"/>\\n' +\n        '</svg>')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-milestone-inprogress-terminal',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\" viewBox=\"0 0 36 36\">\\n' +\n        '    <circle cx=\"18\" cy=\"18\" r=\"17\" fill=\"none\" fill-rule=\"evenodd\" stroke=\"#0081CB\" stroke-width=\"2\"/>\\n' +\n        '</svg>')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-milestone-pending',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\" viewBox=\"0 0 36 36\">\\n' +\n        '    <circle cx=\"18\" cy=\"18\" r=\"17\" fill=\"#FFF\" fill-rule=\"evenodd\" stroke=\"#DEDEDE\" stroke-width=\"2\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-milestone-pending-terminal',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\" viewBox=\"0 0 36 36\">\\n' +\n        '    <circle cx=\"18\" cy=\"18\" r=\"17\" fill=\"#FFF\" fill-rule=\"evenodd\" stroke=\"#DEDEDE\" stroke-width=\"2\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-mini-state-completed',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '    <g fill=\"none\" fill-rule=\"evenodd\">\\n' +\n        '        <circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"#062E79\"/>\\n' +\n        '        <path fill=\"#FFF\" d=\"M15.144 11.086l-3.44 3.394a.648.648 0 0 1-.913 0l-1.935-1.909a.629.629 0 0 1-.19-.45.648.648 0 1 1 1.101-.45l1.48 1.46 2.985-2.944a.649.649 0 0 1 .456-.187c.356 0 .645.285.645.636a.63.63 0 0 1-.189.45z\"/>\\n' +\n        '    </g>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-mini-state-current',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '    <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"white\" fill-rule=\"evenodd\" stroke=\"#0081CB\" stroke-width=\"2\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-mini-state-terminal-completed',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '    <g fill=\"none\" fill-rule=\"evenodd\">\\n' +\n        '        <circle cx=\"12\" cy=\"12\" r=\"10\" fill=\"#04BE5B\" stroke=\"#04BE5B\" stroke-width=\"4\"/>\\n' +\n        '        <path fill=\"#FFF\" d=\"M11.407 16.294c-.233.23-.556.373-.912.373-.357 0-.68-.142-.913-.373l-3.87-3.818a1.257 1.257 0 0 1-.379-.9c0-.703.578-1.273 1.29-1.273.357 0 .68.143.913.374l2.959 2.918 5.969-5.888c.233-.23.556-.374.913-.374.712 0 1.29.57 1.29 1.273 0 .352-.145.67-.379.9l-6.881 6.788z\"/>\\n' +\n        '    </g>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-capabilities',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '  <path class=\"svg-content\" fill=\"#727272\" d=\"M20.063 19.5H19c-.815 0-1.5-.6-1.5-1.375V12.5h-2.566A7.501 7.501 0 0 1 0 11.5a7.5 7.5 0 0 1 15 0h2.5V5.875c0-.775.685-1.375 1.5-1.375h1.063a2 2 0 1 1 0 1H19c-.29 0-.5.184-.5.375V11.5h1.563a2 2 0 1 1 0 1H18.5v5.625c0 .191.21.375.5.375h1.063a2 2 0 1 1 0 1zm-8.67-10.717L9.5 10.685 7.65 10.35 7.319 8.5 9.214 6.6c-.426-.426-1.033-.62-1.483-.597-.452.023-1.418.278-2.166 1.073-.725.765-1.486 2.191-.812 3.775.08.19.171.442-.097.71-.133.132-.256.385-1.993 2.022-1.737 1.638.31 3.417 1.88 1.749 1.569-1.669 1.746-1.845 1.897-1.992.285-.279.54-.185.711-.098 1.194.618 2.894.081 3.776-.801.882-.883 1.043-1.735 1.07-2.17.027-.434-.124-1.007-.604-1.487z\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-home',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" fill=\"#727272\"  class=\"svg-content\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-starters-icon',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"96\" height=\"96\" viewBox=\"0 0 96 96\">\\n' +\n        '    <path class=\"svg-content\" fill=\"#0081CB\" fill-rule=\"nonzero\" d=\"M62.514 55.14l-7.72 13.272h-15.44L31.633 55.14l7.721-13.271h15.44l7.72 13.271zm-21.18 9.867h11.48l5.739-9.867-5.74-9.866H41.335l-5.74 9.866 5.74 9.867zM29.41 58.212l7.683 13.21-2.07 4.155h1.466v3.405h-3.602v-2.626l-1.672-.82 1.99-3.99-5.776-9.93H15.95l-2.82 4.847.346.806-3.144 1.36-1.425-3.31 1.223-.507 3.839-6.6h15.44zm31.508-23.27l-.616-3.346 3.464-.587.576 3.357-3.424.575zm-28.38-6.88l-2.036 2.924-2.828-1.928 2.05-2.943 2.814 1.947zm17.04-8.579l-.468 3.374-3.556-.484.462-3.373 3.563.483zM29.476 33.247l-.84 3.467-3.336-.797.841-3.467 3.335.797zm13.573-10.752l-3.485.805-.793-3.314 3.515-.812.763 3.32zm-5.773 1.792l-2.961 2.02-1.942-2.807 2.962-2.018 1.941 2.805zm24.2 3.23l-2.646 2.167-2.292-2.709 2.607-2.212 2.332 2.753zm-5.19-5.11L54.6 25.375l-3.123-1.726 1.65-2.984 3.158 1.742zM25.2 40.183l-.065-.546.04-.005-.002-.04.555-.026 2.813-.333.203 1.691-1.697.201 1.7-.177.243 1.834-1.944.133-1.715.078-.13-2.81zm46.174-8.67l-.524 3.364-3.543-.524.485-3.369 3.582.53zM86.576 53.21l-.569-3.51 3.384-.56.576 3.55-3.39.52zm-2.331-7.86l-.817-1.498 3.02-1.619.91 1.68.784 1.515-3.053 1.554-.844-1.632zm-5.886-11.06l-1.536 3.046-3.224-1.61 1.551-3.038 3.209 1.602zm-55.725 9.37L19.38 45.15l-1.452-3.085 3.286-1.504 1.42 3.1zm61.501-4.554l-2.424 2.406-2.548-2.484 2.384-2.45 2.588 2.528zm-16.533 36.15l3.553-.588.563 3.357-3.552.589-.564-3.359zm-20.706 3.726v-3.405h3.602v3.405h-3.602zm7.005 0v-3.405h3.602v3.405h-3.602zm21.636-6.069l1.508-.81 1.631 2.997-1.692.903-1.526.778-1.567-3.03 1.646-.838zm11.067-16.817l3.396.481-.535 3.555-3.388-.52.527-3.516zm-1.941 7.357l.564-1.11 3.06 1.536-1.615 3.186-2.29-1.138-1.696.958-3.808-6.63H67.406l-5.79 9.954 2.162 4.655-1.558.712h2.287v3.405h-3.6v-2.803l-.244.111-2.907-6.255 7.669-13.185h15.448l3.79 6.604zm-5.265 6.941l2.506-2.53 2.465 2.37-2.545 2.567-2.426-2.407zM11.43 57.746l.064 3.554-3.43.079L8 57.785l3.43-.04zm1.178 14.222l2.425-2.407 2.548 2.507-2.406 2.428-2.567-2.528zm4.518-25.21l-2.459 2.61-2.505-2.326 2.458-2.61 2.506 2.326zm22.766 32.224v-3.405h3.602v3.405h-3.602zM13.197 51.707l-1.28 3.314-3.214-1.196 1.301-3.361 3.193 1.243zm5.35 25.04l1.338-3.135 3.307 1.367-1.302 3.15-3.342-1.382zm7.32 2.212l.04-3.405 3.601.042-.04 3.404-3.6-.041z\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-spotfire-icon',\n      this.domSanitizer.bypassSecurityTrustHtml('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n' +\n        '<svg width=\"48px\" height=\"48px\" viewBox=\"0 0 48 48\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n' +\n        '    <!-- Generator: sketchtool 51.1 (57501) - http://www.bohemiancoding.com/sketch -->\\n' +\n        '    <title>EBCCA156-217F-4BF2-B9AE-89A324E485CB</title>\\n' +\n        '    <desc>Created with sketchtool.</desc>\\n' +\n        '    <defs></defs>\\n' +\n        '    <g id=\"Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\\n' +\n        '        <g id=\"UI-Icons\" transform=\"translate(-1159.000000, -384.000000)\" fill=\"#062E79\" fill-rule=\"nonzero\">\\n' +\n        '            <g id=\"ic-spotfire\" transform=\"translate(1159.000000, 384.000000)\">\\n' +\n        '                <path d=\"M31.655908,37.8577116 C31.6187835,37.9325874 31.5686986,38.0002953 31.5079727,38.0576995 C30.0186764,39.0509358 28.3403185,39.725664 26.5781297,40.0395797 C25.9600776,40.1670374 25.331823,40.2386547 24.700951,40.2535668 C24.4690525,40.2655661 24.2351548,40.2735656 23.9992581,40.2735656 C23.7633613,40.2735656 23.5294636,40.2735656 23.2975651,40.2535668 C22.6666932,40.2386547 22.0384385,40.1670374 21.4203864,40.0395797 C19.6581976,39.725664 17.9798398,39.0509358 16.4905434,38.0576995 C16.4298491,38.0002673 16.3797686,37.9325654 16.3426081,37.8577116 L16.3426081,37.8757105 C16.3426081,38.0756985 16.3705959,38.5056725 16.4025819,39.1576331 C16.4112843,40.1848682 16.771857,41.1780523 17.4241349,41.971463 C17.7213044,42.3282281 18.0978654,42.6104129 18.5236538,42.7954132 L18.9394719,42.9814019 C19.1273897,43.0493978 19.3159738,43.1160604 19.5052244,43.1813898 C20.7873656,43.5886091 22.1242824,43.797012 23.4694898,43.7993525 L24.5370228,43.7993525 C25.8822302,43.797012 27.2191471,43.5886091 28.5012883,43.1813898 C28.6905388,43.1213935 28.879123,43.0547308 29.0670407,42.9814019 L29.4828588,42.7954132 C29.9086472,42.6104129 30.2852082,42.3282281 30.5823777,41.971463 C31.2346556,41.1780523 31.5952283,40.1848682 31.6039308,39.1576331 C31.6359168,38.5036726 31.6599063,38.0656991 31.6619054,37.8757105 L31.6619054,37.8577116 L31.655908,37.8577116 Z M28.0135017,45.1232725 C26.8981784,45.4558873 25.7408294,45.6262885 24.5770053,45.6292419 L23.4215108,45.6292419 C22.2576867,45.6262885 21.1003377,45.4558873 19.9850144,45.1232725 C19.9196684,45.1020458 19.8582213,45.0702975 19.803094,45.0292781 L19.803094,45.047277 L19.8250844,45.0912744 C20.3479711,46.870118 22.0111732,48.0669219 23.8633175,47.9970987 L24.1851767,47.9970987 C26.0235414,48.0511974 27.6666746,46.857011 28.1834273,45.0912744 L28.2054177,45.047277 L28.2054177,45.0292781 C28.1472452,45.0712842 28.082345,45.1030703 28.0135017,45.1232725 Z M39.440502,11.5493019 C38.2118114,8.22698136 35.6152604,5.59303051 32.3116211,4.31773901 C31.6784657,4.02511059 31.0242466,3.78043801 30.3544774,3.58578325 C28.4207231,3.04109155 26.4238709,2.7526457 24.4150761,2.72783511 L23.5854391,2.72783511 C21.5766444,2.7526457 19.5797922,3.04109155 17.6460378,3.58578325 C16.9762662,3.78043086 16.3220467,4.02510364 15.6888941,4.31773901 C12.3843501,5.59233242 9.78692567,8.22643056 8.55801413,11.5493019 C8.09229392,12.9677014 7.87914956,14.45689 7.92828965,15.9490359 C8.05342939,19.1784343 9.17030681,22.2908091 11.1268902,24.8624971 C11.4287581,25.3064703 11.7706085,25.758443 12.1724327,26.2444136 C12.5322753,26.6783874 12.8881196,27.0803631 13.2659542,27.5043375 L13.4658668,27.7383233 C13.629795,27.9383112 13.9556525,28.3202881 14.2955038,28.7982592 C14.8648102,29.6467696 15.2940987,30.5812968 15.5669475,31.5660919 C15.6332301,31.8081577 15.6852964,32.0538963 15.7228793,32.3020475 L15.7228793,33.4399787 C15.7228793,33.4519779 15.7228793,33.4739766 15.7228793,33.5039748 L15.7228793,33.5979691 C15.8655353,35.4784435 17.2354149,37.0372691 19.0814098,37.4197381 C19.3144881,37.5003865 19.5521331,37.5671659 19.7930984,37.619726 L19.8710643,37.6377249 C20.2309068,37.7437185 20.760675,37.8537119 20.760675,37.8537119 L20.7366855,37.8317132 L20.7166943,37.8137143 L20.7166943,37.801715 L20.6947039,37.801715 C20.5988668,37.6190578 20.526972,37.4248013 20.4807975,37.22375 L20.4807975,37.1977515 C20.456808,37.1097568 20.4368167,37.0277618 20.4208237,36.9617658 C20.3722617,36.7305623 20.3362249,36.4969023 20.312871,36.2618081 C20.2688902,35.8618323 20.2429016,35.40386 20.232906,34.8318945 C20.232906,34.6099079 20.232906,34.3739222 20.232906,34.1179377 L20.232906,32.9060109 C20.2556365,32.6124684 20.2556365,32.3176068 20.232906,32.0240643 C20.1500645,30.2470055 19.5588879,28.5311141 18.5296512,27.0803631 C18.3937107,26.8803752 18.30375,26.7623823 18.2917553,26.7463833 L18.2777614,26.7283844 C17.8119652,26.1124216 17.3181813,25.560455 16.8403903,25.0264872 C16.1838726,24.3220373 15.5760655,23.5736849 15.0211863,22.7866226 C13.4884627,20.8088263 12.6019693,18.4067104 12.4822971,15.9070385 C12.4212405,14.5715773 12.6681723,13.2399693 13.2039814,12.0152737 C14.1476214,10.1238325 15.7673659,8.65623324 17.7419958,7.90352226 L17.8019696,7.87552395 C18.2197025,7.68419657 18.6514373,7.52507644 19.0934045,7.39955272 C22.3062638,6.53033188 25.6922524,6.53033188 28.9051116,7.39955272 C29.3472483,7.5270227 29.7789869,7.68814998 30.1965465,7.88152359 L30.2585194,7.9095219 C32.2313608,8.66119746 33.8501851,10.1264683 34.7945348,12.0152737 C35.3323297,13.2360794 35.5826578,14.5641401 35.5262146,15.8970391 C35.4065424,18.396711 34.520049,20.7988269 32.9873255,22.7766232 C32.4324462,23.5636855 31.8246391,24.3120379 31.1681214,25.0164878 C30.6903305,25.5524554 30.1985457,26.1024222 29.7307503,26.718385 L29.7167565,26.7363839 C29.7047617,26.7523829 29.6148011,26.8683759 29.4788605,27.0703637 C28.4496238,28.5211147 27.8584473,30.2370061 27.7756058,32.0140649 C27.7528753,32.3076074 27.7528753,32.602469 27.7756058,32.8960115 L27.7756058,34.1079383 C27.7756058,34.3639228 27.7756058,34.5999086 27.7756058,34.8218951 C27.7656102,35.3938606 27.7396215,35.8598324 27.6956408,36.2518087 C27.6723023,36.4869049 27.6362653,36.7205657 27.587688,36.9517664 C27.571695,37.0177624 27.5517037,37.0997574 27.5277142,37.1877521 L27.5277142,37.2137506 C27.4815398,37.4148019 27.4096449,37.6090584 27.3138078,37.7917156 L27.2918175,37.7917156 L27.2918175,37.8037149 L27.2718262,37.8217138 L27.2478367,37.8437125 C27.2478367,37.8437125 27.7776049,37.7337191 28.1374475,37.6277255 L28.2154133,37.6097266 C28.4563787,37.5571665 28.6940236,37.4903872 28.927102,37.4097387 C30.7595312,37.0182197 32.1158115,35.4669029 32.2596439,33.5979691 L32.2596439,33.5139742 C32.2596439,33.483976 32.2596439,33.4639772 32.2596439,33.4499781 L32.2596439,32.3120468 C32.2972268,32.0638957 32.349293,31.8181571 32.4155756,31.5760913 C32.6884244,30.5912962 33.1177129,29.6567689 33.6870193,28.8082586 C34.0248715,28.3302875 34.3527281,27.9383112 34.5166563,27.7483227 L34.7165689,27.5143369 C35.0944036,27.0903625 35.4502479,26.6883868 35.8100904,26.254413 C36.2099155,25.7684424 36.553765,25.3164697 36.855633,24.8724965 C38.8122163,22.3008085 39.9290937,19.1884337 40.0542335,15.9590353 C40.1096642,14.4644973 39.901923,12.971852 39.440502,11.5493019 Z M5.01956232,29.4342208 L4.81964979,29.5202156 C2.99649784,30.24534 1.85508545,32.0706689 2.00088309,34.0279431 C1.99079072,34.2320879 2.0220709,34.436166 2.09284286,34.6279069 C2.17769818,34.5000153 2.28465758,34.3882751 2.40870466,34.2979268 C3.71962504,33.6820391 5.08489381,33.1892859 6.4869203,32.8260158 L6.56288706,32.7940177 C8.63845686,31.774723 9.76597305,29.4835152 9.30768612,27.2163549 C8.01974086,28.202048 6.56814236,28.9528311 5.01956232,29.4342208 Z M2.92247986,5.61166079 C4.42182385,6.21162453 6.9687095,6.77759032 7.33255031,7.411552 C7.76708764,5.27599244 6.62333345,3.13284827 4.6077425,2.30586062 L4.40782997,2.21986582 C2.85268539,1.74008838 1.39479082,0.988522387 0.101714043,0 C-0.357566659,2.26781936 0.770104541,4.56016384 2.8465131,5.57966273 L2.92247986,5.61166079 Z M43.1908611,29.5202156 L42.9909486,29.4342208 C41.4397007,28.9543066 39.9853373,28.2041706 38.6948282,27.2183547 C38.2336029,29.4832433 39.3558916,31.7746595 41.4276326,32.7980175 L41.5035993,32.8300155 C42.9056258,33.1932856 44.2708946,33.6860389 45.581815,34.3019266 C45.7121319,34.3925677 45.8246299,34.506464 45.9136698,34.6379063 C45.9844417,34.4461654 46.0157219,34.2420873 46.0056295,34.0379425 C46.1565658,32.078134 45.0161733,30.2477944 43.1908611,29.5202156 Z M47.8968021,0 C46.6035778,0.987814389 45.1456919,1.73869885 43.5906861,2.21786594 L43.3907736,2.30386074 C41.3708198,3.13157773 40.2261321,5.28067168 40.6659658,7.41955151 C41.0298066,6.77559044 43.5766923,6.21962404 45.0760363,5.61966031 L45.152003,5.58766224 C47.2317709,4.56734959 48.3600632,2.27045415 47.8968021,1.97774277e-15 Z\"></path>\\n' +\n        '            </g>\\n' +\n        '        </g>\\n' +\n        '    </g>\\n' +\n        '</svg>')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-liveapps-sm-icon',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n' +\n        '    <g id=\"Symbols\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\\n' +\n        '        <g id=\"ic-liveapps-sm\" class=\"svg-content\" fill=\"#062E79\">\\n' +\n        '            <path d=\"M21,20.4997221 L3,20.4997221 C2.4485,20.4997221 2,20.0511709 2,19.4996081 L2,12.8053453 C4.215,14.1167447 7.104,14.7848208 9.8645,15.0158472 L9.8645,15.7681829 C9.8645,16.4310084 10.3385,16.9683196 10.9235,16.9683196 L13.30575,16.9683196 C13.8905,16.9683196 14.3645,16.4310084 14.3645,15.7681829 L14.3645,15.0198476 C17.4445,14.7683189 20.117,14.0159832 22,12.8878547 L22,19.4996081 C22,20.0511709 21.5515,20.4997221 21,20.4997221 Z M3,7.4982405 L21,7.4982405 C21.5515,7.4982405 22,7.94679161 22,8.49835446 L22,10.2893085 C20.60075,11.653214 17.77625,12.6213243 14.3645,12.9236087 L14.3645,12.1677726 C14.3645,11.5049471 13.8905,10.9676358 13.30575,10.9676358 L10.9235,10.9676358 C10.3385,10.9676358 9.8645,11.5049471 9.8645,12.1677726 L9.8645,12.9226086 C6.539,12.6230745 3.65925,11.6639652 2,10.2488039 L2,8.49835446 C2,7.94679161 2.4485,7.4982405 3,7.4982405 Z M8.3275,3.05298394 C8.3275,3.02148035 8.339,3.00422839 8.3355,3.00022793 L15.80725,2.99447728 C15.80725,2.99472731 15.8275,3.01097916 15.8275,3.05298394 L15.8275,5.49801256 L8.3275,5.49801256 L8.3275,3.05298394 Z M21,5.49801256 L17.8275,5.49801256 L17.8275,3.05298394 C17.8275,1.92085493 16.93075,1 15.8285,1 L8.3265,1 C7.22425,1 6.3275,1.92085493 6.3275,3.05298394 L6.3275,5.49801256 L3,5.49801256 C1.34575,5.49801256 0,6.84391593 0,8.49835446 L0,19.4996081 C0,21.1540466 1.34575,22.49995 3,22.49995 L21,22.49995 C22.65425,22.49995 24,21.1540466 24,19.4996081 L24,8.49835446 C24,6.84391593 22.65425,5.49801256 21,5.49801256 Z\" id=\"ic-liveapps\"></path>\\n' +\n        '        </g>\\n' +\n        '    </g>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-integration-icon',\n      this.domSanitizer.bypassSecurityTrustHtml('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n' +\n        '<svg width=\"48px\" height=\"48px\" viewBox=\"0 0 48 48\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n' +\n        '    <!-- Generator: sketchtool 51.1 (57501) - http://www.bohemiancoding.com/sketch -->\\n' +\n        '    <title>327208F2-CA57-4974-A537-97E9D3200E7B</title>\\n' +\n        '    <desc>Created with sketchtool.</desc>\\n' +\n        '    <defs></defs>\\n' +\n        '    <g id=\"Symbols\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\\n' +\n        '        <g id=\"ic-integration-md\" fill=\"#062E79\">\\n' +\n        '            <path d=\"M48.0993789,27.3367089 C48.0993789,24.9822785 47.4355072,22.7979747 46.1253002,20.8450633 C45.0896605,19.3012658 43.7769482,18.0582278 42.2107122,17.1362025 C42.1520911,13.5448101 40.7872712,10.4344304 38.1523271,7.88708861 C35.4833126,5.3078481 32.2240787,4 28.4648116,4 C25.6635238,4 23.0831925,4.76759494 20.7964679,6.28202532 C19.1580828,7.36556962 17.8238261,8.70582278 16.8097308,10.2810127 C15.8687867,9.88810127 14.8451718,9.68962025 13.7484058,9.68962025 C11.6059793,9.68962025 9.74663768,10.436962 8.22248861,11.9098734 C6.67278675,13.4081013 5.88666253,15.2481013 5.88666253,17.3792405 C5.88666253,18.0248101 5.96532505,18.6516456 6.121147,19.2562025 C4.69169358,19.92 3.44411594,20.8870886 2.39595031,22.1473418 C0.806165631,24.0592405 0,26.2835443 0,28.7589873 C0,31.6724051 1.0762236,34.1893671 3.19810766,36.24 C5.04141615,38.0217722 7.2429648,39.0298734 9.75315114,39.2475949 C10.1018716,41.9286076 12.3660497,44 15.1137267,44 L18.5307867,44 L18.5307867,30.5878481 L15.1137267,30.5878481 C12.4071346,30.5878481 10.1710145,32.598481 9.77118841,35.2207595 C8.29814493,35.0273418 7.03052588,34.4146835 5.92574327,33.3468354 C4.59649689,32.0622785 3.95016149,30.561519 3.95016149,28.7589873 C3.95016149,27.2313924 4.43015321,25.9113924 5.41719255,24.7240506 C6.4272795,23.5098734 7.67535818,22.7493671 9.23257557,22.3994937 C9.87189648,22.2551899 10.3994865,21.8 10.6404845,21.1827848 C10.8819834,20.5660759 10.8053251,19.8683544 10.4365631,19.32 C10.0327288,18.7210127 9.83682402,18.0860759 9.83682402,17.3792405 C9.83682402,16.3559494 10.1905549,15.5372152 10.9501242,14.8035443 C11.7362484,14.0435443 12.6250849,13.6896203 13.7484058,13.6896203 C14.7469689,13.6896203 15.5786874,13.9858228 16.2901573,14.5949367 C16.7671429,15.003038 17.4069648,15.1579747 18.0142195,15.0156962 C18.6219752,14.8718987 19.1275197,14.4455696 19.3765342,13.8663291 C20.1305921,12.1108861 21.3020124,10.7255696 22.9574327,9.62987342 C24.6143561,8.53316456 26.4155776,8 28.4648116,8 C31.2124886,8 33.4891925,8.90936709 35.4246915,10.7802532 C37.3341366,12.6263291 38.2625549,14.7848101 38.2625549,17.3792405 C38.2625549,17.4987342 38.2555404,17.7351899 38.221971,18.1848101 C38.1593416,19.0278481 38.6268075,19.8197468 39.3898841,20.163038 C40.8373747,20.8146835 41.9722195,21.7726582 42.8575487,23.0926582 C43.7268447,24.3883544 44.1492174,25.7762025 44.1492174,27.3367089 C44.1492174,29.5275949 43.360087,31.355443 41.7367329,32.924557 C40.7076066,33.9194937 39.5672505,34.5949367 38.2891097,34.9625316 C37.7870725,32.4663291 35.6035611,30.5878481 32.9856522,30.5878481 L29.5685921,30.5878481 L29.5685921,33.2202532 L25.153971,33.2202532 C24.5442112,33.2202532 24.0496894,33.7194937 24.0496894,34.3356962 L24.0496894,34.3397468 C24.0496894,34.955443 24.5442112,35.4551899 25.153971,35.4551899 L29.5685921,35.4551899 L29.5685921,38.8167089 L25.153971,38.8167089 C24.5442112,38.8167089 24.0496894,39.3164557 24.0496894,39.9321519 L24.0496894,39.9362025 C24.0496894,40.5524051 24.5442112,41.0516456 25.153971,41.0516456 L29.5685921,41.0516456 L29.5685921,44 L32.9856522,44 C35.802472,44 38.1147495,41.8248101 38.3722816,39.0460759 C40.6635155,38.5939241 42.706236,37.516962 44.4643685,35.8177215 C46.876352,33.4865823 48.0993789,30.6329114 48.0993789,27.3367089\" id=\"ic-integration-large\"></path>\\n' +\n        '        </g>\\n' +\n        '    </g>\\n' +\n        '</svg>')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-info-icon',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" fill=\"green\"/></svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-chevron-right',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path class=\"svg-content\" fill=\"#727272\" d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-chevron-left',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path  class=\"svg-content\" fill=\"#727272\" d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\\n')\n    );\n    // *JS*?\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-delete-sweep',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path class=\"svg-content\" fill=\"#727272\" d=\"M15 16h4v2h-4zm0-8h7v2h-7zm0 4h6v2h-6zM3 18c0 1.1.9 2 2 2h6c1.1 0 2-.9 2-2V8H3v10zM14 5h-3l-1-1H6L5 5H2v2h12z\"/><path fill=\"none\" d=\"M0 0h24v24H0z\"/></svg>\\n')\n    );\n    // *JS*?\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-euro-symbol',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path class=\"svg-content\" fill=\"#727272\"  d=\"M15 18.5c-2.51 0-4.68-1.42-5.76-3.5H15v-2H8.58c-.05-.33-.08-.66-.08-1s.03-.67.08-1H15V9H9.24C10.32 6.92 12.5 5.5 15 5.5c1.61 0 3.09.59 4.23 1.57L21 5.3C19.41 3.87 17.3 3 15 3c-3.92 0-7.24 2.51-8.48 6H3v2h3.06c-.04.33-.06.66-.06 1 0 .34.02.67.06 1H3v2h3.52c1.24 3.49 4.56 6 8.48 6 2.31 0 4.41-.87 6-2.3l-1.78-1.77c-1.13.98-2.6 1.57-4.22 1.57z\"/><path fill=\"none\" d=\"M0 0h24v24H0z\"/></svg>\\n')\n    );\n// *JS*?\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-flash-on',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M7 2v11h3v9l7-12h-4l4-8z\"/></svg>')\n    );\n// *JS*?\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-incandescent',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path fill=\"#727272\"  class=\"svg-content\" d=\"M3.55 18.54l1.41 1.41 1.79-1.8-1.41-1.41-1.79 1.8zM11 22.45h2V19.5h-2v2.95zM4 10.5H1v2h3v-2zm11-4.19V1.5H9v4.81C7.21 7.35 6 9.28 6 11.5c0 3.31 2.69 6 6 6s6-2.69 6-6c0-2.22-1.21-4.15-3-5.19zm5 4.19v2h3v-2h-3zm-2.76 7.66l1.79 1.8 1.41-1.41-1.8-1.79-1.4 1.4z\"/></svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-cloud-download',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path class=\"svg-content\" fill=\"#727272\" d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM17 13l-5 5-5-5h3V9h4v4h3z\"/></svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-visibility',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path class=\"svg-content\" fill=\"#727272\" d=\"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"/></svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcs-pie-chart',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path  class=\"svg-content\" fill=\"#727272\" d=\"M11 2v20c-5.07-.5-9-4.79-9-10s3.93-9.5 9-10zm2.03 0v8.99H22c-.47-4.74-4.24-8.52-8.97-8.99zm0 11.01V22c4.74-.47 8.5-4.25 8.97-8.99h-8.97z\"/></svg>\\n')\n    );\n\n    /* audit icons */\n    this.matIconRegistry.addSvgIconLiteral(\n      'BP_AUTO_STARTED_INSTANCE',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\">\\n' +\n        '  <g fill=\"none\" fill-rule=\"evenodd\" transform=\"translate(-4 -4)\">\\n' +\n        '    <polygon points=\"0 0 48 0 48 48 0 48\"/>\\n' +\n        '    <path fill=\"#0081CB\" fill-rule=\"nonzero\" d=\"M20,33 L32,24 L20,15 L20,33 Z M24,4 C12.96,4 4,12.96 4,24 C4,35.04 12.96,44 24,44 C35.04,44 44,35.04 44,24 C44,12.96 35.04,4 24,4 Z M24,40 C15.18,40 8,32.82 8,24 C8,15.18 15.18,8 24,8 C32.82,8 40,15.18 40,24 C40,32.82 32.82,40 24,40 Z\"/>\\n' +\n        '  </g>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'BP_DELAYED_AUTO_START_TIMER_EXPIRED',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        ' <g>\\n' +\n        '  <ellipse stroke=\"null\" ry=\"7.351296\" rx=\"7.524559\" id=\"svg_4\" cy=\"13.658373\" cx=\"12.074255\" stroke-opacity=\"null\" stroke-width=\"null\" fill=\"#0081cb\"/>\\n' +\n        '  <path id=\"svg_1\" fill=\"none\" d=\"m-12.870959,2.227668l24,0l0,24l-24,0l0,-24z\"/>\\n' +\n        '  <path fill=\"#0081cb\" id=\"svg_2\" d=\"m15.247519,1.792059l-6,0l0,2l6,0l0,-2zm-4,13l2,0l0,-6l-2,0l0,6zm8.03,-6.61l1.42,-1.42c-0.43,-0.51 -0.9,-0.99 -1.41,-1.41l-1.42,1.42c-1.55,-1.24 -3.5,-1.98 -5.62,-1.98c-4.97,0 -9,4.03 -9,9s4.02,9 9,9s9,-4.03 9,-9c0,-2.12 -0.74,-4.07 -1.97,-5.61zm-7.03,12.61c-3.87,0 -7,-3.13 -7,-7s3.13,-7 7,-7s7,3.13 7,7s-3.13,7 -7,7z\"/>\\n' +\n        '  <rect stroke-dasharray=\"2,2\" stroke=\"#ffffff\" id=\"svg_3\" height=\"6.088952\" width=\"2.079155\" y=\"6.653602\" x=\"11.18319\" stroke-width=\"0\" fill=\"#ffffff\"/>\\n' +\n        ' </g>\\n' +\n        '</svg>')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'BP_DELAYED_AUTO_STARTED_INSTANCE',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\\n' +\n        '    <path d=\"M15 1H9v2h6V1zm-4 13h2V8h-2v6zm8.03-6.61l1.42-1.42c-.43-.51-.9-.99-1.41-1.41l-1.42 1.42C16.07 4.74 14.12 4 12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9 9-4.03 9-9c0-2.12-.74-4.07-1.97-5.61zM12 20c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\" fill=\"#0081cb\" />\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'BP_DELAYED_AUTO_STARTED_INSTANCE_CANCELLED',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '    <path d=\"M0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0z\" fill=\"none\"/>\\n' +\n        '    <path d=\"M19.04 4.55l-1.42 1.42C16.07 4.74 14.12 4 12 4c-1.83 0-3.53.55-4.95 1.48l1.46 1.46C9.53 6.35 10.73 6 12 6c3.87 0 7 3.13 7 7 0 1.27-.35 2.47-.94 3.49l1.45 1.45C20.45 16.53 21 14.83 21 13c0-2.12-.74-4.07-1.97-5.61l1.42-1.42-1.41-1.42zM15 1H9v2h6V1zm-4 8.44l2 2V8h-2v1.44zM3.02 4L1.75 5.27 4.5 8.03C3.55 9.45 3 11.16 3 13c0 4.97 4.02 9 9 9 1.84 0 3.55-.55 4.98-1.5l2.5 2.5 1.27-1.27-7.71-7.71L3.02 4zM12 20c-3.87 0-7-3.13-7-7 0-1.28.35-2.48.95-3.52l9.56 9.56c-1.03.61-2.23.96-3.51.96z\" fill=\"#0081cb\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'BP_DELAYED_AUTO_STARTED_INSTANCE_CANCELLED_DUE_TO_STATE_CHANGE',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\\n' +\n        '    <path d=\"M0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0z\" fill=\"none\"/>\\n' +\n        '    <path d=\"M19.04 4.55l-1.42 1.42C16.07 4.74 14.12 4 12 4c-1.83 0-3.53.55-4.95 1.48l1.46 1.46C9.53 6.35 10.73 6 12 6c3.87 0 7 3.13 7 7 0 1.27-.35 2.47-.94 3.49l1.45 1.45C20.45 16.53 21 14.83 21 13c0-2.12-.74-4.07-1.97-5.61l1.42-1.42-1.41-1.42zM15 1H9v2h6V1zm-4 8.44l2 2V8h-2v1.44zM3.02 4L1.75 5.27 4.5 8.03C3.55 9.45 3 11.16 3 13c0 4.97 4.02 9 9 9 1.84 0 3.55-.55 4.98-1.5l2.5 2.5 1.27-1.27-7.71-7.71L3.02 4zM12 20c-3.87 0-7-3.13-7-7 0-1.28.35-2.48.95-3.52l9.56 9.56c-1.03.61-2.23.96-3.51.96z\" fill=\"#0081cb\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'BP_INSTANCE_COMPLETED',\n      this.domSanitizer.bypassSecurityTrustHtml('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n' +\n        '<svg width=\"12px\" height=\"9px\" viewBox=\"0 0 12 9\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n' +\n        '    <!-- Generator: sketchtool 39 (31667) - http://www.bohemiancoding.com/sketch -->\\n' +\n        '    <title>6FF6D773-32D5-44FF-9BA8-ED1ACBAF56A8</title>\\n' +\n        '    <desc>Created with sketchtool.</desc>\\n' +\n        '    <defs></defs>\\n' +\n        '    <g id=\"Case-Management-\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\\n' +\n        '        <g id=\"8.-Tibco-Case-Management---Detail-Page--collapsed\" transform=\"translate(-73.000000, -753.000000)\" fill=\"#58A400\">\\n' +\n        '            <g id=\"check\" transform=\"translate(68.000000, 745.000000)\">\\n' +\n        '                <path d=\"M16.8612947,9.80440476 L9.9853348,16.6789202 C9.80100552,16.8624718 9.50267875,16.8624718 9.31912723,16.6789202 L5.13766364,12.4706795 C4.95411212,12.2863502 4.95411212,11.9869123 5.13766364,11.8036941 L6.13675278,10.8053827 C6.32097095,10.6214979 6.61940883,10.6214979 6.80296035,10.8053827 L9.65578649,13.6770974 L15.1948869,8.13766364 C15.3784384,7.95411212 15.6767652,7.95411212 15.8617611,8.13766364 L16.8609614,9.13741943 C17.0462906,9.32141538 17.0462906,9.62085324 16.8612947,9.80440476\" id=\"Fill-1\"></path>\\n' +\n        '            </g>\\n' +\n        '        </g>\\n' +\n        '    </g>\\n' +\n        '</svg>')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'BP_INSTANCE_CREATED',\n      this.domSanitizer.bypassSecurityTrustHtml('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n' +\n        '<svg width=\"12px\" height=\"16px\" viewBox=\"0 0 12 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n' +\n        '    <!-- Generator: sketchtool 39 (31667) - http://www.bohemiancoding.com/sketch -->\\n' +\n        '    <title>DA1993B0-7B6B-42BA-814D-097AD18D0114</title>\\n' +\n        '    <desc>Created with sketchtool.</desc>\\n' +\n        '    <defs></defs>\\n' +\n        '    <g id=\"Case-Management-\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\\n' +\n        '        <g id=\"8.-Tibco-Case-Management---Detail-Page--collapsed\" transform=\"translate(-75.000000, -366.000000)\">\\n' +\n        '            <g id=\"location\" transform=\"translate(69.000000, 362.000000)\">\\n' +\n        '                <g id=\"Group-3\" transform=\"translate(6.000000, 4.000000)\">\\n' +\n        '                    <g id=\"Page-1\">\\n' +\n        '                        <path d=\"M5.66894679,7.39006239 C4.65859817,7.39006239 3.83966239,6.57112661 3.83966239,5.56077798 C3.83966239,4.55057615 4.65859817,3.73164037 5.66894679,3.73164037 C6.67929541,3.73164037 7.49823119,4.55057615 7.49823119,5.56077798 C7.49823119,6.57112661 6.67929541,7.39006239 5.66894679,7.39006239 M9.53346055,1.69626422 L9.53346055,1.69626422 C7.36949725,-0.467699083 3.8608,-0.467699083 1.69654312,1.69626422 C-0.253401835,3.64620917 -0.472998165,7.3178422 1.18190092,9.52408073 L5.61492844,15.9264294 L10.0481028,9.52408073 C11.702855,7.3178422 11.4834055,3.64620917 9.53346055,1.69626422\" id=\"Fill-1\" fill=\"#0081CB\"></path>\\n' +\n        '                        <path d=\"M5.66894679,7.39006239 C4.65859817,7.39006239 3.83966239,6.57112661 3.83966239,5.56077798 C3.83966239,4.55057615 4.65859817,3.73164037 5.66894679,3.73164037 C6.67929541,3.73164037 7.49823119,4.55057615 7.49823119,5.56077798 C7.49823119,6.57112661 6.67929541,7.39006239 5.66894679,7.39006239 L5.66894679,7.39006239 Z M9.53346055,1.69626422 L9.53346055,1.69626422 C7.36949725,-0.467699083 3.8608,-0.467699083 1.69654312,1.69626422 C-0.253401835,3.64620917 -0.472998165,7.3178422 1.18190092,9.52408073 L5.61492844,15.9264294 L10.0481028,9.52408073 C11.702855,7.3178422 11.4834055,3.64620917 9.53346055,1.69626422 L9.53346055,1.69626422 Z\" id=\"Stroke-3\"></path>\\n' +\n        '                    </g>\\n' +\n        '                </g>\\n' +\n        '            </g>\\n' +\n        '        </g>\\n' +\n        '    </g>\\n' +\n        '</svg>')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'BP_TASK_COMPLETED',\n      this.domSanitizer.bypassSecurityTrustHtml('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n' +\n        '<svg width=\"12px\" height=\"9px\" viewBox=\"0 0 12 9\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n' +\n        '    <!-- Generator: sketchtool 39 (31667) - http://www.bohemiancoding.com/sketch -->\\n' +\n        '    <title>6FF6D773-32D5-44FF-9BA8-ED1ACBAF56A8</title>\\n' +\n        '    <desc>Created with sketchtool.</desc>\\n' +\n        '    <defs></defs>\\n' +\n        '    <g id=\"Case-Management-\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\\n' +\n        '        <g id=\"8.-Tibco-Case-Management---Detail-Page--collapsed\" transform=\"translate(-73.000000, -753.000000)\" fill=\"#58A400\">\\n' +\n        '            <g id=\"check\" transform=\"translate(68.000000, 745.000000)\">\\n' +\n        '                <path d=\"M16.8612947,9.80440476 L9.9853348,16.6789202 C9.80100552,16.8624718 9.50267875,16.8624718 9.31912723,16.6789202 L5.13766364,12.4706795 C4.95411212,12.2863502 4.95411212,11.9869123 5.13766364,11.8036941 L6.13675278,10.8053827 C6.32097095,10.6214979 6.61940883,10.6214979 6.80296035,10.8053827 L9.65578649,13.6770974 L15.1948869,8.13766364 C15.3784384,7.95411212 15.6767652,7.95411212 15.8617611,8.13766364 L16.8609614,9.13741943 C17.0462906,9.32141538 17.0462906,9.62085324 16.8612947,9.80440476\" id=\"Fill-1\"></path>\\n' +\n        '            </g>\\n' +\n        '        </g>\\n' +\n        '    </g>\\n' +\n        '</svg>')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'BP_TASK_CREATED',\n      this.domSanitizer.bypassSecurityTrustHtml('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n' +\n        '<svg width=\"12px\" height=\"16px\" viewBox=\"0 0 12 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n' +\n        '    <!-- Generator: sketchtool 39 (31667) - http://www.bohemiancoding.com/sketch -->\\n' +\n        '    <title>DA1993B0-7B6B-42BA-814D-097AD18D0114</title>\\n' +\n        '    <desc>Created with sketchtool.</desc>\\n' +\n        '    <defs></defs>\\n' +\n        '    <g id=\"Case-Management-\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\\n' +\n        '        <g id=\"8.-Tibco-Case-Management---Detail-Page--collapsed\" transform=\"translate(-75.000000, -366.000000)\">\\n' +\n        '            <g id=\"location\" transform=\"translate(69.000000, 362.000000)\">\\n' +\n        '                <g id=\"Group-3\" transform=\"translate(6.000000, 4.000000)\">\\n' +\n        '                    <g id=\"Page-1\">\\n' +\n        '                        <path d=\"M5.66894679,7.39006239 C4.65859817,7.39006239 3.83966239,6.57112661 3.83966239,5.56077798 C3.83966239,4.55057615 4.65859817,3.73164037 5.66894679,3.73164037 C6.67929541,3.73164037 7.49823119,4.55057615 7.49823119,5.56077798 C7.49823119,6.57112661 6.67929541,7.39006239 5.66894679,7.39006239 M9.53346055,1.69626422 L9.53346055,1.69626422 C7.36949725,-0.467699083 3.8608,-0.467699083 1.69654312,1.69626422 C-0.253401835,3.64620917 -0.472998165,7.3178422 1.18190092,9.52408073 L5.61492844,15.9264294 L10.0481028,9.52408073 C11.702855,7.3178422 11.4834055,3.64620917 9.53346055,1.69626422\" id=\"Fill-1\" fill=\"#0081CB\"></path>\\n' +\n        '                        <path d=\"M5.66894679,7.39006239 C4.65859817,7.39006239 3.83966239,6.57112661 3.83966239,5.56077798 C3.83966239,4.55057615 4.65859817,3.73164037 5.66894679,3.73164037 C6.67929541,3.73164037 7.49823119,4.55057615 7.49823119,5.56077798 C7.49823119,6.57112661 6.67929541,7.39006239 5.66894679,7.39006239 L5.66894679,7.39006239 Z M9.53346055,1.69626422 L9.53346055,1.69626422 C7.36949725,-0.467699083 3.8608,-0.467699083 1.69654312,1.69626422 C-0.253401835,3.64620917 -0.472998165,7.3178422 1.18190092,9.52408073 L5.61492844,15.9264294 L10.0481028,9.52408073 C11.702855,7.3178422 11.4834055,3.64620917 9.53346055,1.69626422 L9.53346055,1.69626422 Z\" id=\"Stroke-3\"></path>\\n' +\n        '                    </g>\\n' +\n        '                </g>\\n' +\n        '            </g>\\n' +\n        '        </g>\\n' +\n        '    </g>\\n' +\n        '</svg>')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'Calculation Task',\n      this.domSanitizer.bypassSecurityTrustHtml('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n' +\n        '<svg width=\"18px\" height=\"18px\" viewBox=\"0 0 16 22\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n' +\n        '    <!-- Generator: sketchtool 39 (31667) - http://www.bohemiancoding.com/sketch -->\\n' +\n        '    <title>icon-ic_calc_task</title>\\n' +\n        '    <desc>icon-ic_calc_task</desc>\\n' +\n        '    <defs></defs>\\n' +\n        '\\n' +\n        '\\t<g id=\"icon-ic_calc_task\" fill=\"#0081CB\">\\n' +\n        '\\t\\t<title>icon-ic_calc_task</title>\\n' +\n        '\\t\\t<path class=\"path1\" d=\"M0,1.991155 C0,0.891470458 0.894513756,0 1.99406028,0 L14.0059397,0 C15.1072288,0 16,0.889673948 16,1.991155 L16,20.008845 C16,21.1085295 15.1054862,22 14.0059397,22 L1.99406028,22 C0.892771196,22 0,21.1103261 0,20.008845 L0,1.991155 Z M11.02,7.6 L11.02,10.8933333 L14.3133333,10.8933333 L14.3133333,7.6 L11.02,7.6 Z M6.46,7.6 L6.46,10.8933333 L9.75333333,10.8933333 L9.75333333,7.6 L6.46,7.6 Z M1.9,7.6 L1.9,10.8933333 L5.19333333,10.8933333 L5.19333333,7.6 L1.9,7.6 Z M11.02,12.16 L11.02,15.4533333 L14.3133333,15.4533333 L14.3133333,12.16 L11.02,12.16 Z M6.46,12.16 L6.46,15.4533333 L9.75333333,15.4533333 L9.75333333,12.16 L6.46,12.16 Z M1.9,12.16 L1.9,15.4533333 L5.19333333,15.4533333 L5.19333333,12.16 L1.9,12.16 Z M11.02,16.72 L11.02,20.0133333 L14.3133333,20.0133333 L14.3133333,16.72 L11.02,16.72 Z M6.46,16.72 L6.46,20.0133333 L9.75333333,20.0133333 L9.75333333,16.72 L6.46,16.72 Z M1.9,16.72 L1.9,20.0133333 L5.19333333,20.0133333 L5.19333333,16.72 L1.9,16.72 Z M1.90321615,1.92560547 L1.90321615,6.23227214 L14.4432161,6.23227214 L14.4432161,1.92560547 L1.90321615,1.92560547 Z\" id=\"Combined-Shape\"></path>\\n' +\n        '\\t</g>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'CM_CASE_CREATED',\n      this.domSanitizer.bypassSecurityTrustHtml('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n' +\n        '<svg width=\"12px\" height=\"16px\" viewBox=\"0 0 12 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n' +\n        '    <!-- Generator: sketchtool 39 (31667) - http://www.bohemiancoding.com/sketch -->\\n' +\n        '    <title>DA1993B0-7B6B-42BA-814D-097AD18D0114</title>\\n' +\n        '    <desc>Created with sketchtool.</desc>\\n' +\n        '    <defs></defs>\\n' +\n        '    <g id=\"Case-Management-\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\\n' +\n        '        <g id=\"8.-Tibco-Case-Management---Detail-Page--collapsed\" transform=\"translate(-75.000000, -366.000000)\">\\n' +\n        '            <g id=\"location\" transform=\"translate(69.000000, 362.000000)\">\\n' +\n        '                <g id=\"Group-3\" transform=\"translate(6.000000, 4.000000)\">\\n' +\n        '                    <g id=\"Page-1\">\\n' +\n        '                        <path d=\"M5.66894679,7.39006239 C4.65859817,7.39006239 3.83966239,6.57112661 3.83966239,5.56077798 C3.83966239,4.55057615 4.65859817,3.73164037 5.66894679,3.73164037 C6.67929541,3.73164037 7.49823119,4.55057615 7.49823119,5.56077798 C7.49823119,6.57112661 6.67929541,7.39006239 5.66894679,7.39006239 M9.53346055,1.69626422 L9.53346055,1.69626422 C7.36949725,-0.467699083 3.8608,-0.467699083 1.69654312,1.69626422 C-0.253401835,3.64620917 -0.472998165,7.3178422 1.18190092,9.52408073 L5.61492844,15.9264294 L10.0481028,9.52408073 C11.702855,7.3178422 11.4834055,3.64620917 9.53346055,1.69626422\" id=\"Fill-1\" fill=\"#0081CB\"></path>\\n' +\n        '                        <path d=\"M5.66894679,7.39006239 C4.65859817,7.39006239 3.83966239,6.57112661 3.83966239,5.56077798 C3.83966239,4.55057615 4.65859817,3.73164037 5.66894679,3.73164037 C6.67929541,3.73164037 7.49823119,4.55057615 7.49823119,5.56077798 C7.49823119,6.57112661 6.67929541,7.39006239 5.66894679,7.39006239 L5.66894679,7.39006239 Z M9.53346055,1.69626422 L9.53346055,1.69626422 C7.36949725,-0.467699083 3.8608,-0.467699083 1.69654312,1.69626422 C-0.253401835,3.64620917 -0.472998165,7.3178422 1.18190092,9.52408073 L5.61492844,15.9264294 L10.0481028,9.52408073 C11.702855,7.3178422 11.4834055,3.64620917 9.53346055,1.69626422 L9.53346055,1.69626422 Z\" id=\"Stroke-3\"></path>\\n' +\n        '                    </g>\\n' +\n        '                </g>\\n' +\n        '            </g>\\n' +\n        '        </g>\\n' +\n        '    </g>\\n' +\n        '</svg>')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'CM_CASE_UPDATED',\n      this.domSanitizer.bypassSecurityTrustHtml('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n' +\n        '<svg width=\"13px\" height=\"12px\" viewBox=\"0 0 13 12\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n' +\n        '    <!-- Generator: sketchtool 39 (31667) - http://www.bohemiancoding.com/sketch -->\\n' +\n        '    <title>FBF578C4-F30A-4646-A5DA-0753816A90AE</title>\\n' +\n        '    <desc>Created with sketchtool.</desc>\\n' +\n        '    <defs></defs>\\n' +\n        '    <g id=\"Case-Management-\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\\n' +\n        '        <g id=\"8.-Tibco-Case-Management---Detail-Page--collapsed\" transform=\"translate(-75.000000, -424.000000)\" fill=\"#0081CB\">\\n' +\n        '            <g id=\"Edit-icon\" transform=\"translate(69.000000, 418.000000)\">\\n' +\n        '                <path d=\"M6.00682619,17.6598257 C5.96218426,17.8607372 6.14357915,18.0407641 6.34451344,17.9919042 L9.07799944,17.329138 L6.62636407,14.8761346 L6.00682619,17.6598257 Z M17.8128382,7.41103724 L16.7188829,6.31708196 C16.296107,5.89430601 15.6096062,5.89430601 15.1853939,6.31708196 L14.1374941,7.36498172 L16.5905203,9.81800788 L17.8128382,8.59568996 C18.1407444,8.26776101 18.1407444,7.73894338 17.8128382,7.41103724 L17.8128382,7.41103724 Z M13.4984397,8.0026454 L15.9514658,10.4556488 L9.74217924,16.6649354 L7.29054387,14.211932 L13.4984397,8.0026454 Z\" id=\"Fill-1\"></path>\\n' +\n        '            </g>\\n' +\n        '        </g>\\n' +\n        '    </g>\\n' +\n        '</svg>')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'CM_CASE_UPDATED_STATE_CHANGED',\n      this.domSanitizer.bypassSecurityTrustHtml('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n' +\n        '<svg width=\"14px\" height=\"12px\" viewBox=\"0 0 14 12\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n' +\n        '    <!-- Generator: sketchtool 39 (31667) - http://www.bohemiancoding.com/sketch -->\\n' +\n        '    <title>2E4A2B33-18E9-42A0-857D-D8F21B671B64</title>\\n' +\n        '    <desc>Created with sketchtool.</desc>\\n' +\n        '    <defs></defs>\\n' +\n        '    <g id=\"Case-Management-\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\\n' +\n        '        <g id=\"8.-Tibco-Case-Management---Detail-Page--collapsed\" transform=\"translate(-75.000000, -643.000000)\" fill=\"#0081CB\">\\n' +\n        '            <g id=\"change\" transform=\"translate(69.000000, 636.000000)\">\\n' +\n        '                <g id=\"task-complete\" transform=\"translate(6.000000, 7.000000)\">\\n' +\n        '                    <g id=\"Capa_1\">\\n' +\n        '                        <g id=\"change-icon\">\\n' +\n        '                            <path d=\"M6.0006733,6.2048608 C6.22449716,5.67444886 6.41423864,5.25835227 6.56997443,4.95662216 C6.68676989,4.7327983 6.79635511,4.54420739 6.89855114,4.39090057 C7.00064489,4.23759375 7.12482955,4.08794318 7.27077273,3.94197443 C7.41689489,3.79595455 7.58469886,3.68634375 7.77459375,3.6134233 C7.96428409,3.54042614 8.1759375,3.50391477 8.40965625,3.50391477 L10.2782812,3.50391477 L10.2782812,4.90551136 C10.2782812,4.96876705 10.3013693,5.02355966 10.347571,5.0697358 C10.3937727,5.11598864 10.4485398,5.1390767 10.5117187,5.1390767 C10.5799602,5.1390767 10.6359545,5.11724148 10.6795227,5.07341761 L13.0155597,2.73753409 C13.0594858,2.69368466 13.0813466,2.63779261 13.0813466,2.56962784 C13.0813466,2.50146307 13.0594858,2.44554545 13.0155597,2.40154261 L10.6868864,0.07284375 C10.6286165,0.0242130682 10.5699886,0 10.5116932,0 C10.4434517,0 10.3876108,0.0218607955 10.3437102,0.0657102273 C10.300142,0.109508523 10.2782557,0.165426136 10.2782557,0.233565341 L10.2782557,1.63505966 L8.40963068,1.63505966 C8.078625,1.63505966 7.76720455,1.67530398 7.4751392,1.75558807 C7.18307386,1.83587216 6.9238892,1.93801705 6.69763636,2.06217614 C6.47130682,2.18628409 6.25234091,2.3529375 6.0406108,2.56223864 C5.82890625,2.7714375 5.64880398,2.97347727 5.50045739,3.16812784 C5.35205966,3.36272727 5.19627273,3.60603409 5.03327557,3.89807386 C4.87030398,4.1900625 4.73888352,4.44559091 4.63911648,4.66455682 C4.53932386,4.88357386 4.41889773,5.15367614 4.27778693,5.4748892 C4.05388636,6.0053267 3.86409375,6.42147443 3.70838352,6.72317898 C3.59161364,6.94700284 3.48202841,7.13564489 3.37990909,7.28892614 C3.27773864,7.44223295 3.15355398,7.59185795 3.00758523,7.7378267 C2.86156534,7.88394886 2.69365909,7.99348295 2.50386648,8.06648011 C2.314125,8.1394517 2.10236932,8.1760142 1.86880398,8.1760142 L0.233667614,8.1760142 C0.165502841,8.1760142 0.109508523,8.19772159 0.0657613636,8.24162216 C0.0220653409,8.28536932 0.000102272727,8.34121023 0.000102272727,8.40942614 L0.000102272727,9.81115057 C0.000102272727,9.87923864 0.0221420455,9.93523295 0.0659403409,9.97913352 C0.109764205,10.0229063 0.165784091,10.044767 0.233846591,10.044767 L1.86903409,10.044767 C2.20003977,10.044767 2.51143466,10.0045227 2.80347443,9.9241875 C3.09546307,9.84385227 3.3546733,9.74165625 3.58090057,9.61759943 C3.80725568,9.49344034 4.02622159,9.3267358 4.23792614,9.11743466 C4.44957955,8.9083125 4.62973295,8.70619602 4.77813068,8.51162216 C4.92647727,8.31692045 5.08223864,8.07366477 5.24528693,7.7817017 C5.40825852,7.4896108 5.53973011,7.23413352 5.63944602,7.01519318 C5.73913636,6.79617614 5.85953693,6.52615057 6.0006733,6.2048608\" id=\"Fill-1\"></path>\\n' +\n        '                            <path d=\"M0.233565341,3.50383807 L1.86875284,3.50383807 C2.08288636,3.50383807 2.28116761,3.53914773 2.46369886,3.60976705 C2.64623011,3.68038636 2.79951136,3.76550284 2.92359375,3.86532102 C3.0477017,3.9651392 3.17178409,4.10256818 3.29589205,4.2777358 C3.41997443,4.45300568 3.51853977,4.60756534 3.59153693,4.7413125 C3.66448295,4.8751875 3.75450852,5.05163352 3.86158807,5.27059943 C4.23639205,4.38975 4.5696733,3.72546307 4.8616875,3.27773864 C4.08303409,2.18278125 3.0853892,1.63521307 1.86872727,1.63521307 L0.233565341,1.63521307 C0.165400568,1.63521307 0.10940625,1.65707386 0.0656590909,1.7009233 C0.0219630682,1.74467045 0,1.80058807 0,1.86875284 L0,3.27034943 C0,3.33853977 0.0218607955,3.39438068 0.0656590909,3.43815341 C0.109508523,3.48200284 0.165502841,3.50383807 0.233565341,3.50383807\" id=\"Fill-3\"></path>\\n' +\n        '                            <path d=\"M10.6870653,6.61382386 C10.6286165,6.56519318 10.5701676,6.54103125 10.5117188,6.54103125 C10.4436563,6.54103125 10.3876364,6.56281534 10.3439148,6.6066392 C10.3001676,6.65038636 10.2783068,6.70638068 10.2783068,6.77444318 L10.2783068,8.17616761 L8.40950284,8.17616761 C8.19529261,8.17616761 7.99703693,8.14080682 7.81450568,8.07013636 C7.63197443,7.99959375 7.47866761,7.91447727 7.3546108,7.81463352 C7.23063068,7.71489205 7.10647159,7.5773608 6.9823892,7.40209091 C6.85823011,7.22689773 6.75961364,7.0723125 6.68664205,6.93841193 C6.61372159,6.80479261 6.52369602,6.62814205 6.41661648,6.40932955 C6.04191477,7.28526989 5.71103693,7.94955682 5.42385511,8.40219034 C5.55519886,8.59195739 5.69147727,8.76109091 5.83261364,8.90941193 C5.97369886,9.05780966 6.10757386,9.18800284 6.23408523,9.29999148 C6.36062216,9.4118267 6.5041875,9.50929261 6.66475568,9.59187784 C6.82540057,9.67464205 6.96646023,9.74395739 7.08824148,9.79997727 C7.21022727,9.85594602 7.36335511,9.90094602 7.54821307,9.93505398 C7.73309659,9.96900852 7.88883239,9.99473011 8.01536932,10.0115284 C8.14188068,10.0285057 8.31469602,10.0407528 8.5336875,10.0481165 C8.75260227,10.0554545 8.93025,10.0577301 9.066375,10.0554545 C9.20278125,10.053 9.39991193,10.050392 9.65786932,10.0481165 C9.9158267,10.0457386 10.1226733,10.0444347 10.2784347,10.0444347 L10.2784347,11.4460568 C10.2784347,11.5093125 10.3015227,11.5640795 10.3477244,11.6102812 C10.3939261,11.6565085 10.4486932,11.6795966 10.5118722,11.6795966 C10.5801136,11.6795966 10.636108,11.6577358 10.6796761,11.6139886 L13.0157131,9.27813068 C13.0594602,9.23420455 13.081321,9.1783892 13.081321,9.11014773 C13.081321,9.04198295 13.0594602,8.98606534 13.0155341,8.94234375 L10.6870653,6.61382386 Z\" id=\"Fill-5\"></path>\\n' +\n        '                        </g>\\n' +\n        '                    </g>\\n' +\n        '                </g>\\n' +\n        '            </g>\\n' +\n        '        </g>\\n' +\n        '    </g>\\n' +\n        '</svg>')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'Email Task',\n      this.domSanitizer.bypassSecurityTrustHtml('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n' +\n        '<svg width=\"10px\" height=\"12px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n' +\n        '    <!-- Generator: sketchtool 39 (31667) - http://www.bohemiancoding.com/sketch -->\\n' +\n        '    <title>icon-ic_email_task</title>\\n' +\n        '    <desc>icon-ic_email_task</desc>\\n' +\n        '    <defs></defs>\\n' +\n        '\\n' +\n        '\\t<g id=\"icon-ic_email_task\" fill=\"#0081CB\">\\n' +\n        '\\t\\t<title>icon-ic_email_task</title>\\n' +\n        '\\t\\t<path class=\"path1\" d=\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\" ></path>\\n' +\n        '\\t</g>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'ERROR',\n      this.domSanitizer.bypassSecurityTrustHtml('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n' +\n        '<svg width=\"4px\" height=\"13px\" viewBox=\"0 0 4 13\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n' +\n        '    <!-- Generator: sketchtool 39 (31667) - http://www.bohemiancoding.com/sketch -->\\n' +\n        '    <title>D5AA7459-8549-4B01-9408-40A6047FEBD2</title>\\n' +\n        '    <desc>Created with sketchtool.</desc>\\n' +\n        '    <defs></defs>\\n' +\n        '    <g id=\"Symbols\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" font-size=\"16\" font-family=\"SourceSansPro-Black, Source Sans Pro\" font-weight=\"700\">\\n' +\n        '        <g id=\"horizontal-stepper\" transform=\"translate(-1017.000000, -46.000000)\">\\n' +\n        '            <g id=\"Group-2\">\\n' +\n        '                <g transform=\"translate(180.000000, 0.000000)\">\\n' +\n        '                    <g id=\"error\" transform=\"translate(820.000000, 10.000000)\">\\n' +\n        '                        <text id=\"!\">\\n' +\n        '                            <tspan x=\"16\" y=\"48\" fill=\"#E60000\">!</tspan>\\n' +\n        '                            <tspan x=\"21.76\" y=\"48\" fill=\"#FEFCFC\"> </tspan>\\n' +\n        '                        </text>\\n' +\n        '                    </g>\\n' +\n        '                </g>\\n' +\n        '            </g>\\n' +\n        '        </g>\\n' +\n        '    </g>\\n' +\n        '</svg>')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'TCI Task',\n      this.domSanitizer.bypassSecurityTrustHtml('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n' +\n        '<svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n' +\n        '    <!-- Generator: sketchtool 39 (31667) - http://www.bohemiancoding.com/sketch -->\\n' +\n        '    <title>icon-ic_tci_service_task</title>\\n' +\n        '    <desc>icon-ic_tci_service_task</desc>\\n' +\n        '    <defs></defs>\\n' +\n        '\\n' +\n        '\\t<g id=\"icon-ic_tci_service_task\" fill=\"#0081CB\">\\n' +\n        '\\t\\t<title>icon-ic_tci_service_task</title>\\n' +\n        '\\t\\t<path class=\"path1\"\\n' +\n        '\\t\\t\\t  d=\"M19.6,2.4H2.4c-1,0-1.9,0.9-1.9,1.9v13.4c0,1,0.9,1.9,1.9,1.9h17.2c1,0,1.9-0.9,1.9-1.9V4.3C21.5,3.3,20.6,2.4,19.6,2.4z M7.2,15.8v3.8H5.3v-3.8H2.4L6.2,12l3.8,3.8H7.2z M11,10H2.4V8.1H11V10z M11,6.2H2.4V4.3H11V6.2zM15.9,18.6L12,14.8h2.9V11h1.9v3.8h2.9L15.9,18.6z\"></path>\\n' +\n        '\\t</g>\\n' +\n        '</svg>')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'User Task',\n      this.domSanitizer.bypassSecurityTrustHtml('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n' +\n        '<svg width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n' +\n        '    <!-- Generator: sketchtool 39 (31667) - http://www.bohemiancoding.com/sketch -->\\n' +\n        '    <title>icon-ic_person</title>\\n' +\n        '    <desc>icon-ic_person</desc>\\n' +\n        '    <defs></defs>\\n' +\n        '\\n' +\n        '\\t<g id=\"icon-ic_person\" fill=\"#0081CB\">\\n' +\n        '\\t\\t<title>ic_person</title>\\n' +\n        '\\t\\t<path class=\"path1\"\\n' +\n        '\\t\\t\\t  d=\"M16 16c2.947 0 5.333-2.387 5.333-5.333s-2.387-5.333-5.333-5.333-5.333 2.387-5.333 5.333 2.387 5.333 5.333 5.333zM16 18.667c-3.56 0-10.667 1.787-10.667 5.333v2.667h21.333v-2.667c0-3.547-7.107-5.333-10.667-5.333z\"></path>\\n' +\n        '\\t</g>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'WR_FOLDER_ARTIFACT_CREATED',\n      this.domSanitizer.bypassSecurityTrustHtml('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n' +\n        '<svg width=\"12px\" height=\"16px\" viewBox=\"0 0 12 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n' +\n        '    <!-- Generator: sketchtool 39 (31667) - http://www.bohemiancoding.com/sketch -->\\n' +\n        '    <title>DA1993B0-7B6B-42BA-814D-097AD18D0114</title>\\n' +\n        '    <desc>Created with sketchtool.</desc>\\n' +\n        '    <defs></defs>\\n' +\n        '    <g id=\"Case-Management-\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\\n' +\n        '        <g id=\"8.-Tibco-Case-Management---Detail-Page--collapsed\" transform=\"translate(-75.000000, -366.000000)\">\\n' +\n        '            <g id=\"location\" transform=\"translate(69.000000, 362.000000)\">\\n' +\n        '                <g id=\"Group-3\" transform=\"translate(6.000000, 4.000000)\">\\n' +\n        '                    <g id=\"Page-1\">\\n' +\n        '                        <path d=\"M5.66894679,7.39006239 C4.65859817,7.39006239 3.83966239,6.57112661 3.83966239,5.56077798 C3.83966239,4.55057615 4.65859817,3.73164037 5.66894679,3.73164037 C6.67929541,3.73164037 7.49823119,4.55057615 7.49823119,5.56077798 C7.49823119,6.57112661 6.67929541,7.39006239 5.66894679,7.39006239 M9.53346055,1.69626422 L9.53346055,1.69626422 C7.36949725,-0.467699083 3.8608,-0.467699083 1.69654312,1.69626422 C-0.253401835,3.64620917 -0.472998165,7.3178422 1.18190092,9.52408073 L5.61492844,15.9264294 L10.0481028,9.52408073 C11.702855,7.3178422 11.4834055,3.64620917 9.53346055,1.69626422\" id=\"Fill-1\" fill=\"#0081CB\"></path>\\n' +\n        '                        <path d=\"M5.66894679,7.39006239 C4.65859817,7.39006239 3.83966239,6.57112661 3.83966239,5.56077798 C3.83966239,4.55057615 4.65859817,3.73164037 5.66894679,3.73164037 C6.67929541,3.73164037 7.49823119,4.55057615 7.49823119,5.56077798 C7.49823119,6.57112661 6.67929541,7.39006239 5.66894679,7.39006239 L5.66894679,7.39006239 Z M9.53346055,1.69626422 L9.53346055,1.69626422 C7.36949725,-0.467699083 3.8608,-0.467699083 1.69654312,1.69626422 C-0.253401835,3.64620917 -0.472998165,7.3178422 1.18190092,9.52408073 L5.61492844,15.9264294 L10.0481028,9.52408073 C11.702855,7.3178422 11.4834055,3.64620917 9.53346055,1.69626422 L9.53346055,1.69626422 Z\" id=\"Stroke-3\"></path>\\n' +\n        '                    </g>\\n' +\n        '                </g>\\n' +\n        '            </g>\\n' +\n        '        </g>\\n' +\n        '    </g>\\n' +\n        '</svg>')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'WR_FOLDER_ARTIFACT_DELETED',\n      this.domSanitizer.bypassSecurityTrustHtml('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n' +\n        '<svg width=\"4px\" height=\"13px\" viewBox=\"0 0 4 13\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n' +\n        '    <!-- Generator: sketchtool 39 (31667) - http://www.bohemiancoding.com/sketch -->\\n' +\n        '    <title>D5AA7459-8549-4B01-9408-40A6047FEBD2</title>\\n' +\n        '    <desc>Created with sketchtool.</desc>\\n' +\n        '    <defs></defs>\\n' +\n        '    <g id=\"Symbols\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" font-size=\"16\" font-family=\"SourceSansPro-Black, Source Sans Pro\" font-weight=\"700\">\\n' +\n        '        <g id=\"horizontal-stepper\" transform=\"translate(-1017.000000, -46.000000)\">\\n' +\n        '            <g id=\"Group-2\">\\n' +\n        '                <g transform=\"translate(180.000000, 0.000000)\">\\n' +\n        '                    <g id=\"error\" transform=\"translate(820.000000, 10.000000)\">\\n' +\n        '                        <text id=\"!\">\\n' +\n        '                            <tspan x=\"16\" y=\"48\" fill=\"#E60000\">!</tspan>\\n' +\n        '                            <tspan x=\"21.76\" y=\"48\" fill=\"#FEFCFC\"> </tspan>\\n' +\n        '                        </text>\\n' +\n        '                    </g>\\n' +\n        '                </g>\\n' +\n        '            </g>\\n' +\n        '        </g>\\n' +\n        '    </g>\\n' +\n        '</svg>')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'WR_FOLDER_ARTIFACT_UPDATED',\n      this.domSanitizer.bypassSecurityTrustHtml('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\n' +\n        '<svg width=\"13px\" height=\"12px\" viewBox=\"0 0 13 12\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n' +\n        '    <!-- Generator: sketchtool 39 (31667) - http://www.bohemiancoding.com/sketch -->\\n' +\n        '    <title>FBF578C4-F30A-4646-A5DA-0753816A90AE</title>\\n' +\n        '    <desc>Created with sketchtool.</desc>\\n' +\n        '    <defs></defs>\\n' +\n        '    <g id=\"Case-Management-\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\\n' +\n        '        <g id=\"8.-Tibco-Case-Management---Detail-Page--collapsed\" transform=\"translate(-75.000000, -424.000000)\" fill=\"#0081CB\">\\n' +\n        '            <g id=\"Edit-icon\" transform=\"translate(69.000000, 418.000000)\">\\n' +\n        '                <path d=\"M6.00682619,17.6598257 C5.96218426,17.8607372 6.14357915,18.0407641 6.34451344,17.9919042 L9.07799944,17.329138 L6.62636407,14.8761346 L6.00682619,17.6598257 Z M17.8128382,7.41103724 L16.7188829,6.31708196 C16.296107,5.89430601 15.6096062,5.89430601 15.1853939,6.31708196 L14.1374941,7.36498172 L16.5905203,9.81800788 L17.8128382,8.59568996 C18.1407444,8.26776101 18.1407444,7.73894338 17.8128382,7.41103724 L17.8128382,7.41103724 Z M13.4984397,8.0026454 L15.9514658,10.4556488 L9.74217924,16.6649354 L7.29054387,14.211932 L13.4984397,8.0026454 Z\" id=\"Fill-1\"></path>\\n' +\n        '            </g>\\n' +\n        '        </g>\\n' +\n        '    </g>\\n' +\n        '</svg>')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'AuditSafe Task',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"20\" viewBox=\"0 0 17 20\">\\n' +\n        '  <path fill=\"#0081CB\" d=\"M8.18181818,20 C3.49090909,18.8545455 0,14.1363636 0,9.09090909 L0,0 C1.85406953,0.606060606 3.38118361,0.909090909 4.58134225,0.909090909 C5.7815009,0.909090909 6.98165954,0.606060606 8.18181818,3.67564428e-16 C9.12173722,0.606060606 10.3441345,0.909090909 11.8490099,0.909090909 C13.3538854,0.909090909 14.8587609,0.606060606 16.3636364,0 L16.3636364,9.09090909 C16.3636364,14.1363636 12.8727273,18.8545455 8.18181818,20 Z M8.18181818,18.1818182 C11.5909091,17.2727273 14.5454545,13.2181818 14.5454545,9.29090909 L14.5454545,2.09090909 L3.48421678,14.5663657 C3.9802662,15.2961162 4.61784565,15.9703577 5.39695512,16.5890903 C6.17606458,17.2078229 7.10435227,17.7387322 8.18181818,18.1818182 Z\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'round',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg fill=\"#000000\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\\n' +\n        '    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\\n' +\n        '    <path d=\"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"/>\\n' +\n        '</svg>')\n    );\n    // *JS*?\n    this.matIconRegistry.addSvgIconLiteral(\n      'tcpd-database-blue',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg id=\"ic-database\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 24 24\">\\n' +\n        '  <defs>\\n' +\n        '    <style>\\n' +\n        '      .cls-1 {\\n' +\n        '        fill: none;\\n' +\n        '        clip-rule: evenodd;\\n' +\n        '      }\\n' +\n        '\\n' +\n        '      .cls-2 {\\n' +\n        '        clip-path: url(#clip-path);\\n' +\n        '      }\\n' +\n        '\\n' +\n        '      .cls-3 {\\n' +\n        '        clip-path: url(#clip-path-2);\\n' +\n        '      }\\n' +\n        '\\n' +\n        '      .cls-4 {\\n' +\n        '        fill: #0081cb;\\n' +\n        '      }\\n' +\n        '    </style>\\n' +\n        '    <clipPath id=\"clip-path\">\\n' +\n        '      <path class=\"cls-1\" d=\"M-284,390.5h-12a2.49,2.49,0,0,1-1.76-.73,2.49,2.49,0,0,1-.73-1.76V376a2.49,2.49,0,0,1,.73-1.76,2.49,2.49,0,0,1,1.76-.73h12a2.49,2.49,0,0,1,1.76.73,2.49,2.49,0,0,1,.73,1.76v12a2.49,2.49,0,0,1-.73,1.76A2.49,2.49,0,0,1-284,390.5Z\"/>\\n' +\n        '    </clipPath>\\n' +\n        '    <clipPath id=\"clip-path-2\">\\n' +\n        '      <path class=\"cls-1\" d=\"M-298,376a2,2,0,0,1,2-2h12a2,2,0,0,1,2,2v12a2,2,0,0,1-2,2h-12a2,2,0,0,1-2-2Zm-10-12h36v36h-36Z\"/>\\n' +\n        '    </clipPath>\\n' +\n        '  </defs>\\n' +\n        '  <title>ic-database-blue</title>\\n' +\n        '  <g>\\n' +\n        '    <ellipse class=\"cls-4\" cx=\"12\" cy=\"5\" rx=\"9\" ry=\"3\"/>\\n' +\n        '    <path class=\"cls-4\" d=\"M12,10C7,10,3,8.66,3,7v5c0,1.66,4,3,9,3s9-1.34,9-3V7C21,8.66,17,10,12,10Z\"/>\\n' +\n        '    <path class=\"cls-4\" d=\"M12,17c-5,0-9-1.34-9-3v5c0,1.66,4,3,9,3s9-1.34,9-3V14C21,15.66,17,17,12,17Z\"/>\\n' +\n        '  </g>\\n' +\n        '</svg>\\n')\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport {TcCoreCommonFunctions, UiAppConfig, UiAppIdConfig} from '@tibco-tcstk/tc-core-lib';\nimport {flatMap, map, mergeMap, switchMap} from 'rxjs/operators';\nimport {TcSharedStateService} from '@tibco-tcstk/tc-core-lib';\nimport {HttpClient} from '@angular/common/http';\nimport {TcLiveAppsConfigService} from '../services/tc-live-apps-config.service';\nimport {LiveAppsConfig} from '../models/tc-liveapps-config';\nimport {TcCaseCardConfigService} from '../services/tc-case-card-config.service';\nimport {Location} from '@angular/common';\n\n@Injectable()\nexport class LiveAppsConfigResolver implements Resolve<Observable<LiveAppsConfig>> {\n\n  DEFAULT_CONFIG_URL = TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, 'assets/config/liveAppsConfig.json');\n  APP_ID_URL = TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, 'assets/config/uiAppId.json');\n\n  private sandboxId: number;\n  public defaultAppConfig: LiveAppsConfig;\n  private uiAppId: string;\n\n  constructor(private tcSharedState: TcSharedStateService, private liveAppsConfigService: TcLiveAppsConfigService, private caseCardConfigService: TcCaseCardConfigService, private http: HttpClient, private location: Location) {}\n  // note appConfigResolver will need sandboxId to create app config state record.\n  // So we expect this to have been set by caller (done by tc-liveapps-lib/laConfigResolver).\n\n  public setSandbox = (sandboxId: number) => {\n    this.sandboxId = sandboxId;\n  }\n\n  // can be used to load defaultAppConfig from a JSON config\n  private getDefaultAppConfig = () => {\n    return this.http.get(this.DEFAULT_CONFIG_URL);\n  }\n\n  // loads uiAppId from json file in assets (appId.json)\n  private getAppId = (): Observable<UiAppIdConfig> => {\n    return this.http.get(this.APP_ID_URL).pipe(\n      map(uiAppId => {\n          const uiAppIdConfig = new UiAppIdConfig().deserialize(uiAppId);\n          this.uiAppId = uiAppIdConfig.uiAppId;\n          return uiAppIdConfig;\n        }\n      )\n    );\n  }\n\n  private triggerCardConfigFetch = (liveAppsConfig: LiveAppsConfig) => {\n    // optimization: I want to avoid reading the card config when we display a large list of cards in the calling app\n    // therefore we can trigger of a read of the card configs for each app in the config to ensure they are cached by\n    // http interceptor\n    const laConfig = new LiveAppsConfig().deserialize(liveAppsConfig);\n    laConfig.applicationIds.forEach(appId => {\n      this.caseCardConfigService.getCardConfig(this.uiAppId, appId, true, false).subscribe();\n    });\n  }\n\n  resolve(routeSnapshot: ActivatedRouteSnapshot): Observable<LiveAppsConfig> {\n    const appConfig = this.getAppId().pipe(\n      switchMap(uiAppId => this.liveAppsConfigService.getLiveAppsConfig(uiAppId.uiAppId, true, false)\n        .pipe(\n          mergeMap(\n            liveAppsConfig => {\n              if (liveAppsConfig === undefined) {\n                return this.getDefaultAppConfig().pipe(\n                  flatMap(config => {\n                    this.defaultAppConfig = new LiveAppsConfig().deserialize(config);\n                    this.defaultAppConfig.caseIconsFolderId = this.uiAppId + '_Icons';\n                    return this.liveAppsConfigService.createLiveAppsConfig(\n                      this.sandboxId,\n                      uiAppId.uiAppId,\n                      this.defaultAppConfig)\n                      .pipe(\n                        map(\n                          result => {\n                            const newAppConfig = this.defaultAppConfig;\n                            newAppConfig.id = result;\n                            this.liveAppsConfigService.updateLiveAppsConfig(\n                              this.sandboxId,\n                              uiAppId.uiAppId,\n                              newAppConfig,\n                              result).subscribe(\n                              // trigger a read to flush the cache since we changed it\n                              updatedConf => {\n                                this.liveAppsConfigService.getLiveAppsConfig(this.uiAppId, true, true).subscribe();\n                              }\n                            );\n                            this.triggerCardConfigFetch(newAppConfig);\n                            return newAppConfig;\n                          })\n                      );\n                  })\n                );\n              } else {\n                this.triggerCardConfigFetch(liveAppsConfig);\n                return of(liveAppsConfig);\n              }\n            }\n          )\n        )\n      )\n    )\n    return appConfig;\n  }\n\n}\n","// this resolver wraps claims and appConfig resolvers because we need claims to get and set AppConfig to default values.\n// we actually cache the claims call using a HTTP interceptor to avoid making multiple REST calls\n// note: claims only changes on logout/login so no point making lots of calls to claims\n\nimport { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve} from '@angular/router';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {GeneralConfigResolver, UiAppConfig, GeneralConfig, TcGeneralConfigService} from '@tibco-tcstk/tc-core-lib';\nimport {flatMap, map, mergeMap} from 'rxjs/operators';\nimport {TcSharedStateService} from '@tibco-tcstk/tc-core-lib';\nimport {Claim} from '@tibco-tcstk/tc-core-lib';\nimport {ClaimsResolver} from './claims.resolver';\nimport {LiveAppsService} from '../services/live-apps.service';\nimport {HttpClient} from '@angular/common/http';\nimport {TcDocumentService} from '../services/tc-document.service';\nimport {LiveAppsConfig, LiveAppsConfigHolder} from '../models/tc-liveapps-config';\nimport {LiveAppsConfigResolver} from './liveapps-config.resolver';\nimport {TcLiveAppsConfigService} from '../services/tc-live-apps-config.service';\nimport {TcCaseCardConfigService} from '../services/tc-case-card-config.service';\nimport {Location} from '@angular/common';\n\n@Injectable()\nexport class LaConfigResolver implements Resolve<Observable<LiveAppsConfigHolder>> {\n\n  constructor(private sharedStateService: TcSharedStateService, private generalConfigService: TcGeneralConfigService, private liveAppsConfigService: TcLiveAppsConfigService, private documentService: TcDocumentService, private http: HttpClient, private liveAppsService: LiveAppsService, private caseCardConfigService: TcCaseCardConfigService, private location: Location) {}\n\n  resolve(routeSnapshot: ActivatedRouteSnapshot): Observable<LiveAppsConfigHolder> {\n    // we will return a holder object that contains both general config and live apps config\n\n    const generalConfigResolver = new GeneralConfigResolver(this.sharedStateService, this.generalConfigService, this.http, this.location);\n    const liveAppsConfigResolver = new LiveAppsConfigResolver(this.sharedStateService, this.liveAppsConfigService, this.caseCardConfigService, this.http, this.location);\n\n    const claimResolver$ = new ClaimsResolver(this.liveAppsService).resolve().pipe(\n      flatMap(value => {\n          const sandboxId = value.primaryProductionSandbox.id;\n          generalConfigResolver.setSandbox(Number(sandboxId));\n          liveAppsConfigResolver.setSandbox(Number(sandboxId));\n\n          const generalConfig$ = generalConfigResolver.resolve();\n          const liveAppsConfig$ = liveAppsConfigResolver.resolve(routeSnapshot);\n          const forkJoinArray = [generalConfig$, liveAppsConfig$];\n          return forkJoin(forkJoinArray).pipe(\n            map(resultArr => {\n              return new LiveAppsConfigHolder().deserialize({ generalConfig: resultArr[0], liveAppsConfig: resultArr[1] });\n            }));\n        }\n        )\n    );\n\n    const resolveResp$ = claimResolver$.pipe(\n      flatMap(liveAppsConfigHolder => {\n        const iconsFolder$ = this.documentService.initOrgFolder(liveAppsConfigHolder.generalConfig.uiAppId + '_Icons');\n        const docsFolder$ = this.documentService.initOrgFolder(liveAppsConfigHolder.generalConfig.uiAppId + '_Docs');\n        const forkJoinArray = [iconsFolder$, docsFolder$];\n        return forkJoin(forkJoinArray).pipe(\n          map(\n            resultArr => {\n              return liveAppsConfigHolder;\n            }\n          )\n        );\n      })\n    )\n\n    return resolveResp$;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport {LiveAppsService} from '../services/live-apps.service';\nimport {Claim} from '@tibco-tcstk/tc-core-lib';\nimport {flatMap, map, mergeMap, switchMap} from 'rxjs/operators';\nimport {Groups} from '../models/tc-groups-data';\n\n@Injectable()\nexport class GroupsResolver implements Resolve<Observable<Groups>> {\n\n  constructor(public liveapps: LiveAppsService) {\n  }\n\n  resolve(): Observable<Groups> {\n\n    const claims$ = this.liveapps.getClaims()\n      .pipe(\n        map(claim => {\n          claim.sandboxes.forEach(sandbox => {\n            if (sandbox.type === 'Production') {\n              claim.primaryProductionSandbox = sandbox;\n            }\n          });\n          return claim;\n        })\n      );\n\n    return claims$.pipe(\n      switchMap(claiminfo => {\n          return this.liveapps.getGroupMemberships(+claiminfo.primaryProductionSandbox.id, claiminfo.id, 1000, true).pipe(\n            map(groupinfo => {\n              return new Groups().deserialize(groupinfo);\n            })\n          );\n        }\n      )\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport {LiveAppsService} from '../services/live-apps.service';\nimport {Claim} from '@tibco-tcstk/tc-core-lib';\nimport {flatMap, map, mergeMap, switchMap} from 'rxjs/operators';\nimport {Groups} from '../models/tc-groups-data';\n\n@Injectable()\nexport class AllGroupsResolver implements Resolve<Observable<Groups>> {\n\n  constructor(public liveapps: LiveAppsService) {\n  }\n\n  resolve(): Observable<Groups> {\n\n    const claims$ = this.liveapps.getClaims()\n      .pipe(\n        map(claim => {\n          claim.sandboxes.forEach(sandbox => {\n            if (sandbox.type === 'Production') {\n              claim.primaryProductionSandbox = sandbox;\n            }\n          });\n          return claim;\n        })\n      );\n\n    return claims$.pipe(\n      switchMap(claiminfo => {\n          return this.liveapps.getGroups(+claiminfo.primaryProductionSandbox.id, 1000, true).pipe(\n            map(groupinfo => {\n              return new Groups().deserialize(groupinfo);\n            })\n          );\n        }\n      )\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve} from '@angular/router';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {LiveAppsService} from '../services/live-apps.service';\nimport {Claim, GeneralConfigResolver, RoleAttribute, TcGeneralConfigService, TcSharedStateService} from '@tibco-tcstk/tc-core-lib';\nimport {flatMap, map, mergeMap, switchMap} from 'rxjs/operators';\nimport {Group, Groups, Roles} from '../models/tc-groups-data';\nimport {HttpClient} from '@angular/common/http';\nimport {TcCaseCardConfigService} from '../services/tc-case-card-config.service';\nimport {Location} from '@angular/common';\nimport {ClaimsResolver} from './claims.resolver';\nimport {group} from '@angular/animations';\n\n@Injectable()\nexport class AllRolesResolver implements Resolve<Observable<Roles>> {\n\n  constructor(private sharedStateService: TcSharedStateService, private generalConfigService: TcGeneralConfigService, private http: HttpClient, private liveapps: LiveAppsService, private location: Location) {\n  }\n\n  resolve(routeSnapshot: ActivatedRouteSnapshot): Observable<Roles> {\n\n    const claims$ = this.liveapps.getClaims()\n      .pipe(\n        map(claim => {\n          claim.sandboxes.forEach(sandbox => {\n            if (sandbox.type === 'Production') {\n              claim.primaryProductionSandbox = sandbox;\n            }\n          });\n          return claim;\n        })\n      );\n\n    const generalConfigResolver = new GeneralConfigResolver(this.sharedStateService, this.generalConfigService, this.http, this.location);\n\n    return claims$.pipe(\n      switchMap(claiminfo => {\n          generalConfigResolver.setSandbox(Number(claiminfo.primaryProductionSandbox.id));\n          const generalConfig$ = generalConfigResolver.resolve().pipe(\n            map(generalConfig => {\n              return new Roles().deserialize({ roles: generalConfig.roles });\n            })\n          );\n          return generalConfig$;\n        }\n      )\n    );\n\n  }\n\n}\n","\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { LiveAppsService } from '../services/live-apps.service';\nimport { Claim, GeneralConfigResolver, RoleAttribute, TcGeneralConfigService, TcSharedStateService } from '@tibco-tcstk/tc-core-lib';\nimport { flatMap, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Location } from '@angular/common';\nimport { ClaimsResolver } from './claims.resolver';\nimport { CaseInfo } from '../models/liveappsdata';\n\n@Injectable()\nexport class CaseDataResolver implements Resolve<Observable<CaseInfo>> {\n\n    constructor(private liveapps: LiveAppsService) {\n    }\n\n    resolve(routeSnapshot: ActivatedRouteSnapshot): Observable<CaseInfo> {\n\n        const claims$ = this.liveapps.getClaims()\n            .pipe(\n                map(claim => {\n                    claim.sandboxes.forEach(sandbox => {\n                        if (sandbox.type === 'Production') {\n                            claim.primaryProductionSandbox = sandbox;\n                        }\n                    });\n                    return claim;\n                })\n            );\n\n        return claims$.pipe(\n            switchMap(claiminfo => {\n                return this.liveapps.getCase(routeSnapshot.params.caseRef, +claiminfo.primaryProductionSandbox.id, routeSnapshot.params.appId, routeSnapshot.params.typeId)\n                    .pipe(\n                        map(caseInfo => {\n                            return caseInfo;\n                        })\n                    );\n            })\n        );\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Resolve} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {\n  TcCoreCommonFunctions,\n} from '@tibco-tcstk/tc-core-lib';\nimport {map} from 'rxjs/operators';\nimport {RouteAccessControlConfig} from '../models/tc-groups-data';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Location} from '@angular/common';\n\n@Injectable()\nexport class AccessResolver implements Resolve<Observable<RouteAccessControlConfig>> {\n\n  ACCESS_CONTROL_CONFIG_URL = 'assets/config/routeAccessControl.json';\n\n  constructor(private http: HttpClient, private location: Location) {\n  }\n\n  resolve(): Observable<RouteAccessControlConfig> {\n    const headers = new HttpHeaders().set('cacheResponse', 'true');\n    return this.http.get(TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, this.ACCESS_CONTROL_CONFIG_URL), { headers }).pipe(\n      map(accessControl => {\n        const routeAccessControlConfig = new RouteAccessControlConfig().deserialize(accessControl);\n        return routeAccessControlConfig;\n      })\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRoute } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { LiveAppsService } from '../services/live-apps.service';\nimport { GeneralConfigResolver, RoleAttribute, TcGeneralConfigService, TcSharedStateService } from '@tibco-tcstk/tc-core-lib';\nimport { flatMap, map} from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Location } from '@angular/common';\nimport { ClaimsResolver } from './claims.resolver';\nimport { TcRolesService } from '../services/tc-roles-service.ts.service';\n\n@Injectable()\nexport class RoleActiveResolver implements Resolve<Observable<RoleAttribute>> {\n\n    constructor(\n        private rolesService: TcRolesService, \n        private liveAppsService: LiveAppsService, \n        private route: ActivatedRoute,\n        private tcSharedStateService: TcSharedStateService,\n        private generalConfigService: TcGeneralConfigService, \n        private httpClient: HttpClient,\n        private location: Location) {\n    }\n\n    resolve(): Observable<RoleAttribute> {\n\n        const currentRole = this.rolesService.getCurrentRole();\n\n        if (currentRole == undefined){\n            let generalConfigResolver = new GeneralConfigResolver(this.tcSharedStateService, this.generalConfigService, this.httpClient, this.location);\n            const claimResolver$ = new ClaimsResolver(this.liveAppsService);\n            return claimResolver$.resolve().pipe(\n                flatMap(claim => {\n                    const sandboxId = claim.primaryProductionSandbox.id;\n                    generalConfigResolver.setSandbox(Number(sandboxId));\n\n                    return generalConfigResolver.resolve().pipe(\n                        map(generalConfig => {\n                            const highestRole = generalConfig.roles.reduce(function (prev, current) {\n                                return (prev.priority > current.priority) ? prev : current\n                            });\n                            this.rolesService.setCurrentRole(highestRole);\n                            return highestRole;                            \n                        })\n                    );\n                })\n            );\n         }else {\n            return of(currentRole);            \n        }\n    }\n}\n"]}