/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
export class StateAuditEvent {
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    deserialize(input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    }
}
if (false) {
    /** @type {?} */
    StateAuditEvent.prototype.caseState;
    /** @type {?} */
    StateAuditEvent.prototype.type;
    /** @type {?} */
    StateAuditEvent.prototype.phaseLabel;
    /** @type {?} */
    StateAuditEvent.prototype.previousPhaseLabel;
    /** @type {?} */
    StateAuditEvent.prototype.messageId;
    /** @type {?} */
    StateAuditEvent.prototype.principalName;
    /** @type {?} */
    StateAuditEvent.prototype.creationTime;
    /** @type {?} */
    StateAuditEvent.prototype.isTerminal;
}
export class StateAuditEventList {
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    deserialize(input) {
        (/** @type {?} */ (this)).auditEvents = [];
        Object.assign((/** @type {?} */ (this)).auditEvents, input);
        return (/** @type {?} */ (this));
    }
}
if (false) {
    /** @type {?} */
    StateAuditEventList.prototype.auditEvents;
}
export class StateTrackerData {
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    deserialize(input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    }
}
if (false) {
    /** @type {?} */
    StateTrackerData.prototype.possibleStates;
    /** @type {?} */
    StateTrackerData.prototype.currentState;
    /** @type {?} */
    StateTrackerData.prototype.phase;
    /** @type {?} */
    StateTrackerData.prototype.caseAudit;
}
export class TrackerState {
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    deserialize(input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    }
}
if (false) {
    /** @type {?} */
    TrackerState.prototype.name;
    /** @type {?} */
    TrackerState.prototype.label;
    /** @type {?} */
    TrackerState.prototype.phase;
    /** @type {?} */
    TrackerState.prototype.previousPhase;
    /** @type {?} */
    TrackerState.prototype.isTerminal;
    /** @type {?} */
    TrackerState.prototype.status;
    /** @type {?} */
    TrackerState.prototype.user;
    /** @type {?} */
    TrackerState.prototype.changed;
}
export class StateTracker {
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    deserialize(input) {
        (/** @type {?} */ (this)).states = [];
        Object.assign((/** @type {?} */ (this)).states, input);
        return (/** @type {?} */ (this));
    }
}
if (false) {
    /** @type {?} */
    StateTracker.prototype.states;
    /** @type {?} */
    StateTracker.prototype.valid;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGMtY2FzZS1zdGF0ZXMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGliY28tdGNzdGsvdGMtbGl2ZWFwcHMtbGliLyIsInNvdXJjZXMiOlsibGliL21vZGVscy90Yy1jYXNlLXN0YXRlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBSUEsTUFBTSxPQUFPLGVBQWU7Ozs7Ozs7SUFTMUIsV0FBVyxDQUFDLEtBQVU7UUFDcEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxtQkFBQSxJQUFJLEVBQUEsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUMzQixPQUFPLG1CQUFBLElBQUksRUFBQSxDQUFDO0lBQ2QsQ0FBQztDQUNGOzs7SUFaQyxvQ0FBK0I7O0lBQy9CLCtCQUEwQjs7SUFDMUIscUNBQWdDOztJQUNoQyw2Q0FBd0M7O0lBQ3hDLG9DQUErQjs7SUFDL0Isd0NBQW1DOztJQUNuQyx1Q0FBa0M7O0lBQ2xDLHFDQUFvQjs7QUFPdEIsTUFBTSxPQUFPLG1CQUFtQjs7Ozs7OztJQUU5QixXQUFXLENBQUMsS0FBVTtRQUNwQixtQkFBQSxJQUFJLEVBQUEsQ0FBQyxXQUFXLEdBQUcsRUFBRSxDQUFDO1FBQ3RCLE1BQU0sQ0FBQyxNQUFNLENBQUMsbUJBQUEsSUFBSSxFQUFBLENBQUMsV0FBVyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ3ZDLE9BQU8sbUJBQUEsSUFBSSxFQUFBLENBQUM7SUFDZCxDQUFDO0NBQ0Y7OztJQU5DLDBDQUErQjs7QUFRakMsTUFBTSxPQUFPLGdCQUFnQjs7Ozs7OztJQUszQixXQUFXLENBQUMsS0FBVTtRQUNwQixNQUFNLENBQUMsTUFBTSxDQUFDLG1CQUFBLElBQUksRUFBQSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzNCLE9BQU8sbUJBQUEsSUFBSSxFQUFBLENBQUM7SUFDZCxDQUFDO0NBQ0Y7OztJQVJDLDBDQUFtQzs7SUFDbkMsd0NBQXFCOztJQUNyQixpQ0FBYzs7SUFDZCxxQ0FBNkI7O0FBTy9CLE1BQU0sT0FBTyxZQUFZOzs7Ozs7O0lBU3ZCLFdBQVcsQ0FBQyxLQUFVO1FBQ3BCLE1BQU0sQ0FBQyxNQUFNLENBQUMsbUJBQUEsSUFBSSxFQUFBLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDM0IsT0FBTyxtQkFBQSxJQUFJLEVBQUEsQ0FBQztJQUNkLENBQUM7Q0FDRjs7O0lBWkMsNEJBQWE7O0lBQ2IsNkJBQWM7O0lBQ2QsNkJBQWM7O0lBQ2QscUNBQXNCOztJQUN0QixrQ0FBb0I7O0lBQ3BCLDhCQUFlOztJQUNmLDRCQUFhOztJQUNiLCtCQUFnQjs7QUFPbEIsTUFBTSxPQUFPLFlBQVk7Ozs7Ozs7SUFHdkIsV0FBVyxDQUFDLEtBQVU7UUFDcEIsbUJBQUEsSUFBSSxFQUFBLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztRQUNqQixNQUFNLENBQUMsTUFBTSxDQUFDLG1CQUFBLElBQUksRUFBQSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNsQyxPQUFPLG1CQUFBLElBQUksRUFBQSxDQUFDO0lBQ2QsQ0FBQztDQUNGOzs7SUFQQyw4QkFBdUI7O0lBQ3ZCLDZCQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEZXNlcmlhbGl6YWJsZX0gZnJvbSAnQHRpYmNvLXRjc3RrL3RjLWNvcmUtbGliJztcbmltcG9ydCB7Q2FzZVR5cGVTdGF0ZXNMaXN0fSBmcm9tICcuL2xpdmVhcHBzZGF0YSc7XG5pbXBvcnQge0F1ZGl0RXZlbnRBdHRyaWJ1dGUsIEF1ZGl0RXZlbnRMaXN0fSBmcm9tICcuL3RjLWNhc2UtYXVkaXQnO1xuXG5leHBvcnQgY2xhc3MgU3RhdGVBdWRpdEV2ZW50IGltcGxlbWVudHMgRGVzZXJpYWxpemFibGUge1xuICBjYXNlU3RhdGU6IEF1ZGl0RXZlbnRBdHRyaWJ1dGU7XG4gIHR5cGU6IEF1ZGl0RXZlbnRBdHRyaWJ1dGU7XG4gIHBoYXNlTGFiZWw6IEF1ZGl0RXZlbnRBdHRyaWJ1dGU7XG4gIHByZXZpb3VzUGhhc2VMYWJlbDogQXVkaXRFdmVudEF0dHJpYnV0ZTtcbiAgbWVzc2FnZUlkOiBBdWRpdEV2ZW50QXR0cmlidXRlO1xuICBwcmluY2lwYWxOYW1lOiBBdWRpdEV2ZW50QXR0cmlidXRlO1xuICBjcmVhdGlvblRpbWU6IEF1ZGl0RXZlbnRBdHRyaWJ1dGU7XG4gIGlzVGVybWluYWw6IGJvb2xlYW47XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgU3RhdGVBdWRpdEV2ZW50TGlzdCBpbXBsZW1lbnRzIERlc2VyaWFsaXphYmxlIHtcbiAgYXVkaXRFdmVudHM6IFN0YXRlQXVkaXRFdmVudFtdO1xuICBkZXNlcmlhbGl6ZShpbnB1dDogYW55KSB7XG4gICAgdGhpcy5hdWRpdEV2ZW50cyA9IFtdO1xuICAgIE9iamVjdC5hc3NpZ24odGhpcy5hdWRpdEV2ZW50cywgaW5wdXQpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBTdGF0ZVRyYWNrZXJEYXRhIGltcGxlbWVudHMgRGVzZXJpYWxpemFibGUge1xuICBwb3NzaWJsZVN0YXRlczogQ2FzZVR5cGVTdGF0ZXNMaXN0O1xuICBjdXJyZW50U3RhdGU6IHN0cmluZztcbiAgcGhhc2U6IHN0cmluZztcbiAgY2FzZUF1ZGl0OiBTdGF0ZUF1ZGl0RXZlbnRbXTtcbiAgZGVzZXJpYWxpemUoaW5wdXQ6IGFueSkge1xuICAgIE9iamVjdC5hc3NpZ24odGhpcywgaW5wdXQpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBUcmFja2VyU3RhdGUgaW1wbGVtZW50cyBEZXNlcmlhbGl6YWJsZSB7XG4gIG5hbWU6IHN0cmluZztcbiAgbGFiZWw6IHN0cmluZztcbiAgcGhhc2U6IHN0cmluZztcbiAgcHJldmlvdXNQaGFzZTogc3RyaW5nO1xuICBpc1Rlcm1pbmFsOiBib29sZWFuO1xuICBzdGF0dXM6IHN0cmluZztcbiAgdXNlcjogc3RyaW5nO1xuICBjaGFuZ2VkOiBzdHJpbmc7XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgU3RhdGVUcmFja2VyIGltcGxlbWVudHMgRGVzZXJpYWxpemFibGUge1xuICBzdGF0ZXM6IFRyYWNrZXJTdGF0ZVtdO1xuICB2YWxpZDogYm9vbGVhbjtcbiAgZGVzZXJpYWxpemUoaW5wdXQ6IGFueSkge1xuICAgIHRoaXMuc3RhdGVzID0gW107XG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLnN0YXRlcywgaW5wdXQpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG4iXX0=