/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
export class CaseTypeReportRecordInfo {
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    deserialize(input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    }
}
if (false) {
    /** @type {?} */
    CaseTypeReportRecordInfo.prototype.id;
    /** @type {?} */
    CaseTypeReportRecordInfo.prototype.label;
    /** @type {?} */
    CaseTypeReportRecordInfo.prototype.name;
    /** @type {?} */
    CaseTypeReportRecordInfo.prototype.color;
}
export class CaseTypeReportRecord {
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    deserialize(input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    }
}
if (false) {
    /** @type {?} */
    CaseTypeReportRecord.prototype.activeStateCaseCount;
    /** @type {?} */
    CaseTypeReportRecord.prototype.applicationId;
    /** @type {?} */
    CaseTypeReportRecord.prototype.terminalStateCaseCount;
    /** @type {?} */
    CaseTypeReportRecord.prototype.incTerminal;
    /** @type {?} */
    CaseTypeReportRecord.prototype.caseTypeInfo;
}
export class CaseTypesReport {
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    deserialize(input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    }
}
if (false) {
    /** @type {?} */
    CaseTypesReport.prototype.caseTypes;
}
export class CaseTypeStateReportStateInfo {
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    deserialize(input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    }
}
if (false) {
    /** @type {?} */
    CaseTypeStateReportStateInfo.prototype.id;
    /** @type {?} */
    CaseTypeStateReportStateInfo.prototype.label;
    /** @type {?} */
    CaseTypeStateReportStateInfo.prototype.value;
    /** @type {?} */
    CaseTypeStateReportStateInfo.prototype.color;
    /** @type {?} */
    CaseTypeStateReportStateInfo.prototype.isTerminal;
}
export class CaseTypeStateReportRecord {
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    deserialize(input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    }
}
if (false) {
    /** @type {?} */
    CaseTypeStateReportRecord.prototype.caseCount;
    /** @type {?} */
    CaseTypeStateReportRecord.prototype.stateInfo;
}
export class CaseTypeStateReport {
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    deserialize(input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    }
}
if (false) {
    /** @type {?} */
    CaseTypeStateReport.prototype.caseStates;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGMtbGl2ZS1hcHBzLXJlcG9ydGluZy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0aWJjby10Y3N0ay90Yy1saXZlYXBwcy1saWIvIiwic291cmNlcyI6WyJsaWIvbW9kZWxzL3RjLWxpdmUtYXBwcy1yZXBvcnRpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLE1BQU0sT0FBTyx3QkFBd0I7Ozs7Ozs7SUFLbkMsV0FBVyxDQUFDLEtBQVU7UUFDcEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxtQkFBQSxJQUFJLEVBQUEsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUMzQixPQUFPLG1CQUFBLElBQUksRUFBQSxDQUFDO0lBQ2QsQ0FBQztDQUNGOzs7SUFSQyxzQ0FBVzs7SUFDWCx5Q0FBYzs7SUFDZCx3Q0FBYTs7SUFDYix5Q0FBYzs7QUFPaEIsTUFBTSxPQUFPLG9CQUFvQjs7Ozs7OztJQU0vQixXQUFXLENBQUMsS0FBVTtRQUNwQixNQUFNLENBQUMsTUFBTSxDQUFDLG1CQUFBLElBQUksRUFBQSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzNCLE9BQU8sbUJBQUEsSUFBSSxFQUFBLENBQUM7SUFDZCxDQUFDO0NBQ0Y7OztJQVRDLG9EQUE2Qjs7SUFDN0IsNkNBQXNCOztJQUN0QixzREFBK0I7O0lBQy9CLDJDQUFxQjs7SUFDckIsNENBQXVDOztBQU96QyxNQUFNLE9BQU8sZUFBZTs7Ozs7OztJQUUxQixXQUFXLENBQUMsS0FBVTtRQUNwQixNQUFNLENBQUMsTUFBTSxDQUFDLG1CQUFBLElBQUksRUFBQSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzNCLE9BQU8sbUJBQUEsSUFBSSxFQUFBLENBQUM7SUFDZCxDQUFDO0NBQ0Y7OztJQUxDLG9DQUFrQzs7QUFPcEMsTUFBTSxPQUFPLDRCQUE0Qjs7Ozs7OztJQU12QyxXQUFXLENBQUMsS0FBVTtRQUNwQixNQUFNLENBQUMsTUFBTSxDQUFDLG1CQUFBLElBQUksRUFBQSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzNCLE9BQU8sbUJBQUEsSUFBSSxFQUFBLENBQUM7SUFDZCxDQUFDO0NBQ0Y7OztJQVRDLDBDQUFXOztJQUNYLDZDQUFjOztJQUNkLDZDQUFjOztJQUNkLDZDQUFjOztJQUNkLGtEQUFvQjs7QUFPdEIsTUFBTSxPQUFPLHlCQUF5Qjs7Ozs7OztJQUdwQyxXQUFXLENBQUMsS0FBVTtRQUNwQixNQUFNLENBQUMsTUFBTSxDQUFDLG1CQUFBLElBQUksRUFBQSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzNCLE9BQU8sbUJBQUEsSUFBSSxFQUFBLENBQUM7SUFDZCxDQUFDO0NBQ0Y7OztJQU5DLDhDQUFrQjs7SUFDbEIsOENBQXdDOztBQU8xQyxNQUFNLE9BQU8sbUJBQW1COzs7Ozs7O0lBRTlCLFdBQVcsQ0FBQyxLQUFVO1FBQ3BCLE1BQU0sQ0FBQyxNQUFNLENBQUMsbUJBQUEsSUFBSSxFQUFBLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDM0IsT0FBTyxtQkFBQSxJQUFJLEVBQUEsQ0FBQztJQUNkLENBQUM7Q0FDRjs7O0lBTEMseUNBQXdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEZXNlcmlhbGl6YWJsZX0gZnJvbSAnQHRpYmNvLXRjc3RrL3RjLWNvcmUtbGliJztcblxuZXhwb3J0IGNsYXNzIENhc2VUeXBlUmVwb3J0UmVjb3JkSW5mbyBpbXBsZW1lbnRzIERlc2VyaWFsaXphYmxlIHtcbiAgaWQ6IHN0cmluZztcbiAgbGFiZWw6IHN0cmluZztcbiAgbmFtZTogc3RyaW5nO1xuICBjb2xvcjogc3RyaW5nO1xuICBkZXNlcmlhbGl6ZShpbnB1dDogYW55KSB7XG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLCBpbnB1dCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENhc2VUeXBlUmVwb3J0UmVjb3JkIGltcGxlbWVudHMgRGVzZXJpYWxpemFibGUge1xuICBhY3RpdmVTdGF0ZUNhc2VDb3VudDogbnVtYmVyO1xuICBhcHBsaWNhdGlvbklkOiBzdHJpbmc7XG4gIHRlcm1pbmFsU3RhdGVDYXNlQ291bnQ6IG51bWJlcjtcbiAgaW5jVGVybWluYWw6IGJvb2xlYW47XG4gIGNhc2VUeXBlSW5mbzogQ2FzZVR5cGVSZXBvcnRSZWNvcmRJbmZvO1xuICBkZXNlcmlhbGl6ZShpbnB1dDogYW55KSB7XG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLCBpbnB1dCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENhc2VUeXBlc1JlcG9ydCBpbXBsZW1lbnRzIERlc2VyaWFsaXphYmxlIHtcbiAgY2FzZVR5cGVzOiBDYXNlVHlwZVJlcG9ydFJlY29yZFtdO1xuICBkZXNlcmlhbGl6ZShpbnB1dDogYW55KSB7XG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLCBpbnB1dCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENhc2VUeXBlU3RhdGVSZXBvcnRTdGF0ZUluZm8gaW1wbGVtZW50cyBEZXNlcmlhbGl6YWJsZSB7XG4gIGlkOiBzdHJpbmc7XG4gIGxhYmVsOiBzdHJpbmc7XG4gIHZhbHVlOiBzdHJpbmc7XG4gIGNvbG9yOiBzdHJpbmc7XG4gIGlzVGVybWluYWw6IGJvb2xlYW47XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ2FzZVR5cGVTdGF0ZVJlcG9ydFJlY29yZCBpbXBsZW1lbnRzICBEZXNlcmlhbGl6YWJsZSB7XG4gIGNhc2VDb3VudDogbnVtYmVyO1xuICBzdGF0ZUluZm86IENhc2VUeXBlU3RhdGVSZXBvcnRTdGF0ZUluZm87XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ2FzZVR5cGVTdGF0ZVJlcG9ydCBpbXBsZW1lbnRzIERlc2VyaWFsaXphYmxlIHtcbiAgY2FzZVN0YXRlczogQ2FzZVR5cGVTdGF0ZVJlcG9ydFJlY29yZFtdO1xuICBkZXNlcmlhbGl6ZShpbnB1dDogYW55KSB7XG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLCBpbnB1dCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cbiJdfQ==