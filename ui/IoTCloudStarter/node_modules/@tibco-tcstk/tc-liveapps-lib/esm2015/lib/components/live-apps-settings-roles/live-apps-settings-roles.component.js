/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { TibcoCloudSettingsGeneralComponent, RoleAttribute, TcGeneralConfigService, TibcoCloudNewElementComponent } from '@tibco-tcstk/tc-core-lib';
import { ActivatedRoute } from '@angular/router';
import { MatSnackBar, MatDialog } from '@angular/material';
/**
 * Configuration of roles
 *
 * ![alt-text](../live-apps-settings-roles.png "")
 *
 * \@example <tcla-live-apps-settings-roles></tcla-live-apps-settings-roles>
 */
export class LiveAppsSettingsRolesComponent extends TibcoCloudSettingsGeneralComponent {
    /**
     * @param {?} route
     * @param {?} generalConfigService
     * @param {?} snackBar
     * @param {?} dialog
     */
    constructor(route, generalConfigService, snackBar, dialog) {
        super(route, generalConfigService, snackBar);
        this.route = route;
        this.generalConfigService = generalConfigService;
        this.snackBar = snackBar;
        this.dialog = dialog;
        this.deleteRoleFunction = (/**
         * @return {?}
         */
        () => {
            this.generalConfig.roles = this.generalConfig.roles.filter((/**
             * @param {?} element
             * @return {?}
             */
            element => element.id != this.currentRole.id));
        });
        this.selectedRole = (/**
         * @param {?} role
         * @return {?}
         */
        (role) => {
            this.currentRole = role;
        });
        this.createRoleFunction = (/**
         * @return {?}
         */
        () => {
            /** @type {?} */
            const dialogRef = this.dialog.open(TibcoCloudNewElementComponent, {
                width: '50%',
                height: '30%',
                maxWidth: '100vw',
                maxHeight: '100vh',
                panelClass: 'tcs-style-dialog',
                data: { resourceType: 'Role' }
            });
            dialogRef.afterClosed().subscribe((/**
             * @param {?} result
             * @return {?}
             */
            result => {
                if (result) {
                    /** @type {?} */
                    const newRole = new RoleAttribute().deserialize({ id: result.id, display: result.name, priority: 1 });
                    this.generalConfig.roles.push(newRole);
                }
            }));
        });
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.generalConfig = super.getRoute().snapshot.data.generalConfigHolder;
        this.roles = super.getRoute().snapshot.data.allRoles;
        this.groups = super.getRoute().snapshot.data.allGroups;
        this.claims = super.getRoute().snapshot.data.claims;
        this.sandboxId = Number(this.claims.primaryProductionSandbox.id).valueOf();
    }
}
LiveAppsSettingsRolesComponent.decorators = [
    { type: Component, args: [{
                selector: 'tcla-live-apps-settings-roles',
                template: "<div fxLayout=\"column\" fxFill>\n    <tc-tibco-cloud-widget-header style=\"height: 40px;\" [icon]=\"'tcs-capabilities'\" [headerText]=\"'Role Configuration'\">\n    </tc-tibco-cloud-widget-header>\n    <div fxFlex style=\"padding: 20px; overflow: hidden\" fxLayout=\"column\">\n        <div style=\"overflow: auto;\">\n            <div fxLayout=\"column\" fxFlex>\n                <p>You can configure roles by here:</p>\n                <br>\n                <!-- Role specific -->\n                <mat-accordion>\n                    <mat-expansion-panel *ngFor=\"let role of generalConfig.roles\" (opened)=\"selectedRole(role)\">\n                        <mat-expansion-panel-header>\n                            <mat-panel-title>{{role.display}}</mat-panel-title>\n                        </mat-expansion-panel-header>\n                        <div fxLayout=\"column\">\n                            <div fxLayoutGap=\"10px\">\n                                <mat-form-field fxFlex=\"20\" style=\"min-width: 100px;\">\n                                    <input matInput placeholder=\"Id\" [(ngModel)]=\"role.id\" readonly>\n                                </mat-form-field>\n                                <mat-form-field fxFlex=\"40\" style=\"min-width: 400px;\">\n                                    <input matInput placeholder=\"Display Name\" [(ngModel)]=\"role.display\">\n                                </mat-form-field>\n                                <mat-form-field fxFlex=\"40\" style=\"min-width: 400px;\">\n                                    <mat-select [disableOptionCentering]=\"true\" placeholder=\"Live Apps Group\" [(value)]=\"role.group\">\n                                        <mat-option *ngFor=\"let group of groups.groups\" [value]=\"group.name\">\n                                            <span matTooltip=\"{{group.description}}\" matTooltipShowDelay=\"1000\"\n                                                matTooltipPosition=\"below\">{{group.name}}</span>\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n                            <div fxLayoutGap=\"5px\">\n                                <mat-form-field fxFlex=\"20\">\n                                    <input matInput type=\"number\" min=\"0\" max=\"10\" placeholder=\"Priority\" [(ngModel)]=\"role.priority\">\n                                </mat-form-field>\n                                <mat-slide-toggle [(ngModel)]=\"role.configuration\">Configuration role</mat-slide-toggle>\n                            </div>\n                        </div>\n                    </mat-expansion-panel>\n                </mat-accordion>\n            </div>\n\n        </div>\n        <div fxFlex class=\"tcs-filler-panel\"></div>\n        <div fxLayout=\"row\" fxLayoutAlign=\"end end\" fxLayoutGap=\"10px\" style=\"min-height: 50px\">\n            <button mat-raised-button color=\"secondary\" [disabled]=\"!currentRole\"\n                (click)=\"deleteRoleFunction()\">Delete</button>\n            <button mat-raised-button color=\"secondary\" (click)=\"createRoleFunction()\">New</button>\n            <button mat-raised-button color=\"primary\" (click)=\"runSaveFunction()\">Save</button>\n        </div>\n    </div>\n</div>",
                styles: [""]
            }] }
];
/** @nocollapse */
LiveAppsSettingsRolesComponent.ctorParameters = () => [
    { type: ActivatedRoute },
    { type: TcGeneralConfigService },
    { type: MatSnackBar },
    { type: MatDialog }
];
if (false) {
    /** @type {?} */
    LiveAppsSettingsRolesComponent.prototype.roles;
    /** @type {?} */
    LiveAppsSettingsRolesComponent.prototype.groups;
    /** @type {?} */
    LiveAppsSettingsRolesComponent.prototype.currentRole;
    /** @type {?} */
    LiveAppsSettingsRolesComponent.prototype.deleteRoleFunction;
    /** @type {?} */
    LiveAppsSettingsRolesComponent.prototype.selectedRole;
    /** @type {?} */
    LiveAppsSettingsRolesComponent.prototype.createRoleFunction;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsSettingsRolesComponent.prototype.route;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsSettingsRolesComponent.prototype.generalConfigService;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsSettingsRolesComponent.prototype.snackBar;
    /**
     * @type {?}
     * @private
     */
    LiveAppsSettingsRolesComponent.prototype.dialog;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLXNldHRpbmdzLXJvbGVzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0aWJjby10Y3N0ay90Yy1saXZlYXBwcy1saWIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9saXZlLWFwcHMtc2V0dGluZ3Mtcm9sZXMvbGl2ZS1hcHBzLXNldHRpbmdzLXJvbGVzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQUUsa0NBQWtDLEVBQUUsYUFBYSxFQUFFLHNCQUFzQixFQUFFLDZCQUE2QixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFFcEosT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7Ozs7Ozs7O0FBYzNELE1BQU0sT0FBTyw4QkFBK0IsU0FBUSxrQ0FBa0M7Ozs7Ozs7SUFPbEYsWUFBc0IsS0FBcUIsRUFBWSxvQkFBNEMsRUFBWSxRQUFxQixFQUFVLE1BQWlCO1FBQzNKLEtBQUssQ0FBQyxLQUFLLEVBQUUsb0JBQW9CLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFEM0IsVUFBSyxHQUFMLEtBQUssQ0FBZ0I7UUFBWSx5QkFBb0IsR0FBcEIsb0JBQW9CLENBQXdCO1FBQVksYUFBUSxHQUFSLFFBQVEsQ0FBYTtRQUFVLFdBQU0sR0FBTixNQUFNLENBQVc7UUFZL0osdUJBQWtCOzs7UUFBRyxHQUFTLEVBQUU7WUFDNUIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsTUFBTTs7OztZQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsRUFBQyxDQUFDO1FBQzdHLENBQUMsRUFBQTtRQUVELGlCQUFZOzs7O1FBQUcsQ0FBQyxJQUFtQixFQUFRLEVBQUU7WUFDekMsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7UUFDNUIsQ0FBQyxFQUFBO1FBRUQsdUJBQWtCOzs7UUFBRyxHQUFTLEVBQUU7O2tCQUN0QixTQUFTLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsNkJBQTZCLEVBQUU7Z0JBQzlELEtBQUssRUFBRSxLQUFLO2dCQUNaLE1BQU0sRUFBRSxLQUFLO2dCQUNiLFFBQVEsRUFBRSxPQUFPO2dCQUNqQixTQUFTLEVBQUUsT0FBTztnQkFDbEIsVUFBVSxFQUFFLGtCQUFrQjtnQkFDOUIsSUFBSSxFQUFFLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRTthQUVqQyxDQUFDO1lBRUYsU0FBUyxDQUFDLFdBQVcsRUFBRSxDQUFDLFNBQVM7Ozs7WUFBQyxNQUFNLENBQUMsRUFBRTtnQkFDdkMsSUFBSSxNQUFNLEVBQUU7OzBCQUNGLE9BQU8sR0FBRyxJQUFJLGFBQWEsRUFBRSxDQUFDLFdBQVcsQ0FBQyxFQUFDLEVBQUUsRUFBRSxNQUFNLENBQUMsRUFBRSxFQUFFLE9BQU8sRUFBRSxNQUFNLENBQUMsSUFBSSxFQUFFLFFBQVEsRUFBRSxDQUFDLEVBQUUsQ0FBQztvQkFDcEcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO2lCQUMxQztZQUNMLENBQUMsRUFBQyxDQUFDO1FBQ1AsQ0FBQyxFQUFBO0lBbkNELENBQUM7Ozs7SUFFRCxRQUFRO1FBQ0osSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQztRQUN4RSxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUNyRCxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztRQUN2RCxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUNwRCxJQUFJLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLHdCQUF3QixDQUFDLEVBQUUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQy9FLENBQUM7OztZQXRCSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLCtCQUErQjtnQkFDekMseXpHQUF3RDs7YUFFM0Q7Ozs7WUFkUSxjQUFjO1lBRnFDLHNCQUFzQjtZQUd6RSxXQUFXO1lBQUUsU0FBUzs7OztJQWdCM0IsK0NBQW9COztJQUNwQixnREFBc0I7O0lBRXRCLHFEQUFrQzs7SUFjbEMsNERBRUM7O0lBRUQsc0RBRUM7O0lBRUQsNERBaUJDOzs7OztJQXJDVywrQ0FBK0I7Ozs7O0lBQUUsOERBQXNEOzs7OztJQUFFLGtEQUErQjs7Ozs7SUFBRSxnREFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVGliY29DbG91ZFNldHRpbmdzR2VuZXJhbENvbXBvbmVudCwgUm9sZUF0dHJpYnV0ZSwgVGNHZW5lcmFsQ29uZmlnU2VydmljZSwgVGliY29DbG91ZE5ld0VsZW1lbnRDb21wb25lbnQgfSBmcm9tICdAdGliY28tdGNzdGsvdGMtY29yZS1saWInO1xuaW1wb3J0IHsgR3JvdXBzLCBSb2xlcyB9IGZyb20gJy4uLy4uL21vZGVscy90Yy1ncm91cHMtZGF0YSc7XG5pbXBvcnQgeyBBY3RpdmF0ZWRSb3V0ZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBNYXRTbmFja0JhciwgTWF0RGlhbG9nIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwnO1xuXG4vKipcbiAqIENvbmZpZ3VyYXRpb24gb2Ygcm9sZXNcbiAqXG4gKiAhW2FsdC10ZXh0XSguLi9saXZlLWFwcHMtc2V0dGluZ3Mtcm9sZXMucG5nIFwiXCIpXG4gKlxuICpAZXhhbXBsZSA8dGNsYS1saXZlLWFwcHMtc2V0dGluZ3Mtcm9sZXM+PC90Y2xhLWxpdmUtYXBwcy1zZXR0aW5ncy1yb2xlcz5cbiAqL1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0Y2xhLWxpdmUtYXBwcy1zZXR0aW5ncy1yb2xlcycsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2xpdmUtYXBwcy1zZXR0aW5ncy1yb2xlcy5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vbGl2ZS1hcHBzLXNldHRpbmdzLXJvbGVzLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBMaXZlQXBwc1NldHRpbmdzUm9sZXNDb21wb25lbnQgZXh0ZW5kcyBUaWJjb0Nsb3VkU2V0dGluZ3NHZW5lcmFsQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAgIHB1YmxpYyByb2xlczogUm9sZXM7XG4gICAgcHVibGljIGdyb3VwczogR3JvdXBzO1xuXG4gICAgcHVibGljIGN1cnJlbnRSb2xlOiBSb2xlQXR0cmlidXRlO1xuXG4gICAgY29uc3RydWN0b3IocHJvdGVjdGVkIHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZSwgcHJvdGVjdGVkIGdlbmVyYWxDb25maWdTZXJ2aWNlOiBUY0dlbmVyYWxDb25maWdTZXJ2aWNlLCBwcm90ZWN0ZWQgc25hY2tCYXI6IE1hdFNuYWNrQmFyLCBwcml2YXRlIGRpYWxvZzogTWF0RGlhbG9nKSB7XG4gICAgICAgIHN1cGVyKHJvdXRlLCBnZW5lcmFsQ29uZmlnU2VydmljZSwgc25hY2tCYXIpO1xuICAgIH1cblxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICB0aGlzLmdlbmVyYWxDb25maWcgPSBzdXBlci5nZXRSb3V0ZSgpLnNuYXBzaG90LmRhdGEuZ2VuZXJhbENvbmZpZ0hvbGRlcjtcbiAgICAgICAgdGhpcy5yb2xlcyA9IHN1cGVyLmdldFJvdXRlKCkuc25hcHNob3QuZGF0YS5hbGxSb2xlcztcbiAgICAgICAgdGhpcy5ncm91cHMgPSBzdXBlci5nZXRSb3V0ZSgpLnNuYXBzaG90LmRhdGEuYWxsR3JvdXBzO1xuICAgICAgICB0aGlzLmNsYWltcyA9IHN1cGVyLmdldFJvdXRlKCkuc25hcHNob3QuZGF0YS5jbGFpbXM7XG4gICAgICAgIHRoaXMuc2FuZGJveElkID0gTnVtYmVyKHRoaXMuY2xhaW1zLnByaW1hcnlQcm9kdWN0aW9uU2FuZGJveC5pZCkudmFsdWVPZigpO1xuICAgIH1cblxuICAgIGRlbGV0ZVJvbGVGdW5jdGlvbiA9ICgpOiB2b2lkID0+IHtcbiAgICAgICAgdGhpcy5nZW5lcmFsQ29uZmlnLnJvbGVzID0gdGhpcy5nZW5lcmFsQ29uZmlnLnJvbGVzLmZpbHRlcihlbGVtZW50ID0+IGVsZW1lbnQuaWQgIT0gdGhpcy5jdXJyZW50Um9sZS5pZCk7XG4gICAgfVxuXG4gICAgc2VsZWN0ZWRSb2xlID0gKHJvbGU6IFJvbGVBdHRyaWJ1dGUpOiB2b2lkID0+IHtcbiAgICAgICAgdGhpcy5jdXJyZW50Um9sZSA9IHJvbGU7XG4gICAgfVxuXG4gICAgY3JlYXRlUm9sZUZ1bmN0aW9uID0gKCk6IHZvaWQgPT4ge1xuICAgICAgICBjb25zdCBkaWFsb2dSZWYgPSB0aGlzLmRpYWxvZy5vcGVuKFRpYmNvQ2xvdWROZXdFbGVtZW50Q29tcG9uZW50LCB7XG4gICAgICAgICAgICB3aWR0aDogJzUwJScsXG4gICAgICAgICAgICBoZWlnaHQ6ICczMCUnLFxuICAgICAgICAgICAgbWF4V2lkdGg6ICcxMDB2dycsXG4gICAgICAgICAgICBtYXhIZWlnaHQ6ICcxMDB2aCcsXG4gICAgICAgICAgICBwYW5lbENsYXNzOiAndGNzLXN0eWxlLWRpYWxvZycsXG4gICAgICAgICAgICBkYXRhOiB7IHJlc291cmNlVHlwZTogJ1JvbGUnIH1cblxuICAgICAgICB9KTtcblxuICAgICAgICBkaWFsb2dSZWYuYWZ0ZXJDbG9zZWQoKS5zdWJzY3JpYmUocmVzdWx0ID0+IHtcbiAgICAgICAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBuZXdSb2xlID0gbmV3IFJvbGVBdHRyaWJ1dGUoKS5kZXNlcmlhbGl6ZSh7aWQ6IHJlc3VsdC5pZCwgZGlzcGxheTogcmVzdWx0Lm5hbWUsIHByaW9yaXR5OiAxIH0pO1xuICAgICAgICAgICAgICAgIHRoaXMuZ2VuZXJhbENvbmZpZy5yb2xlcy5wdXNoKG5ld1JvbGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59XG4iXX0=