/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { map, take, takeUntil } from 'rxjs/operators';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
import { TcCaseStatesService } from '../../services/tc-case-states.service';
import { DurationSincePipe } from '@tibco-tcstk/tc-core-lib';
/**
 * Case States/Milestone view
 *
 * ![alt-text](../live-apps-case-states.png "Image")
 *
 * \@example <tcla-live-apps-case-states></tcla-live-apps-case-states>
 */
export class LiveAppsCaseStatesComponent extends LiveAppsComponent {
    /**
     * @param {?} caseStatesService
     * @param {?} durationSince
     */
    constructor(caseStatesService, durationSince) {
        super();
        this.caseStatesService = caseStatesService;
        this.durationSince = durationSince;
        this.getToolTipText = (/**
         * @param {?} trackerState
         * @return {?}
         */
        (trackerState) => {
            /** @type {?} */
            let toolTipText = '';
            if (trackerState.status != 'pending') {
                toolTipText = toolTipText + trackerState.user + ' ' + this.durationSince.transform(trackerState.changed);
            }
            return toolTipText;
        });
        this.refresh = (/**
         * @return {?}
         */
        () => {
            this.caseStatesService.getTracker(this.caseRef, this.sandboxId, this.appId).pipe(take(1), takeUntil(this._destroyed$), map((/**
             * @param {?} tracker
             * @return {?}
             */
            tracker => {
                this.tracker = tracker;
                if (!tracker.valid) {
                    console.error('Unable to create milestone trailer. Case Audit likely removed due to subscription retention period.');
                }
                return tracker;
            }))).subscribe(null, (/**
             * @param {?} error
             * @return {?}
             */
            error => { this.errorMessage = 'Error constructing state tracker: ' + error.error.errorMsg; }));
        });
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.refresh();
    }
}
LiveAppsCaseStatesComponent.decorators = [
    { type: Component, args: [{
                selector: 'tcla-live-apps-case-states',
                template: "<div fxFlex class=\"starters-case-states-container\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n  <div *ngIf=\"tracker && tracker.valid\">\n    <span class=\"tc-milestone-title\" fxLayoutAlign=\"start center\">Milestones</span>\n    <div fxFlex class=\"starters-milestone-trailer\" fxLayout=\"row wrap\">\n      <div class=\"starters-ms-wrapper\" *ngFor=\"let trackerState of tracker.states; first as isFirst; last as isLast\" ngclass=\"{'starters-milestone-first-section': isFirst, 'starters-milestone-mid-section': (!isFirst && !isLast), 'starters-milestone-end-section': isLast}\">\n        <tcla-live-apps-milestone [isFirst]=\"isFirst\" [isLast]=\"isLast\" [isTerminal]=\"trackerState.isTerminal\" [label]=\"trackerState.label\" [phase]=\"trackerState.phase\" [previousPhase]=\"trackerState.previousPhase\" [status]=\"trackerState.status\" [matTooltip]=\"getToolTipText(trackerState)\" matTooltipShowDelay=\"1000\" matTooltipPosition=\"below\"></tcla-live-apps-milestone>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"tracker && !tracker.valid\">\n    <span class=\"tc-milestone-title\">Milestone data not available</span>\n  </div>\n</div>\n\n\n",
                styles: [".tc-milestone-title{min-width:150px;font-family:Source Sans Pro;font-size:18px;font-weight:600;font-style:normal;font-stretch:normal;line-height:1.5;letter-spacing:.3px;color:#000}:host ::ng-deep tcla-live-apps-milestone .tc-ms-pending-bg{fill:#dedede}:host ::ng-deep tcla-live-apps-milestone .tc-ms-inprogress-bg{fill:#0081cb}:host ::ng-deep tcla-live-apps-milestone .tc-ms-completed-bg{fill:#062e79}:host ::ng-deep tcla-live-apps-milestone .tc-ms-completed-terminal-bg{fill:#04be5b}:host ::ng-deep tcla-live-apps-milestone .tc-ms-label{color:#000}"]
            }] }
];
/** @nocollapse */
LiveAppsCaseStatesComponent.ctorParameters = () => [
    { type: TcCaseStatesService },
    { type: DurationSincePipe }
];
LiveAppsCaseStatesComponent.propDecorators = {
    appId: [{ type: Input }],
    sandboxId: [{ type: Input }],
    caseRef: [{ type: Input }]
};
if (false) {
    /**
     * The LA Application Id
     * @type {?}
     */
    LiveAppsCaseStatesComponent.prototype.appId;
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsCaseStatesComponent.prototype.sandboxId;
    /**
     * The case reference
     * @type {?}
     */
    LiveAppsCaseStatesComponent.prototype.caseRef;
    /** @type {?} */
    LiveAppsCaseStatesComponent.prototype.states;
    /** @type {?} */
    LiveAppsCaseStatesComponent.prototype.tracker;
    /** @type {?} */
    LiveAppsCaseStatesComponent.prototype.errorMessage;
    /** @type {?} */
    LiveAppsCaseStatesComponent.prototype.getToolTipText;
    /** @type {?} */
    LiveAppsCaseStatesComponent.prototype.refresh;
    /**
     * @type {?}
     * @private
     */
    LiveAppsCaseStatesComponent.prototype.caseStatesService;
    /**
     * @type {?}
     * @private
     */
    LiveAppsCaseStatesComponent.prototype.durationSince;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLWNhc2Utc3RhdGVzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0aWJjby10Y3N0ay90Yy1saXZlYXBwcy1saWIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9saXZlLWFwcHMtY2FzZS1zdGF0ZXMvbGl2ZS1hcHBzLWNhc2Utc3RhdGVzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxLQUFLLEVBQW9CLE1BQU0sZUFBZSxDQUFDO0FBSWxFLE9BQU8sRUFBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ3BELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHNEQUFzRCxDQUFDO0FBRXZGLE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLHVDQUF1QyxDQUFDO0FBQzFFLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLDBCQUEwQixDQUFDOzs7Ozs7OztBQWUzRCxNQUFNLE9BQU8sMkJBQTRCLFNBQVEsaUJBQWlCOzs7OztJQTZDaEUsWUFBb0IsaUJBQXNDLEVBQVUsYUFBZ0M7UUFDbEcsS0FBSyxFQUFFLENBQUM7UUFEVSxzQkFBaUIsR0FBakIsaUJBQWlCLENBQXFCO1FBQVUsa0JBQWEsR0FBYixhQUFhLENBQW1CO1FBeEI3RixtQkFBYzs7OztRQUFHLENBQUMsWUFBMEIsRUFBVSxFQUFFOztnQkFDekQsV0FBVyxHQUFHLEVBQUU7WUFDcEIsSUFBSSxZQUFZLENBQUMsTUFBTSxJQUFJLFNBQVMsRUFBRTtnQkFDcEMsV0FBVyxHQUFHLFdBQVcsR0FBRyxZQUFZLENBQUMsSUFBSSxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUM7YUFDMUc7WUFDRCxPQUFPLFdBQVcsQ0FBQztRQUNyQixDQUFDLEVBQUE7UUFFTSxZQUFPOzs7UUFBRyxHQUFHLEVBQUU7WUFDcEIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FDOUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUNQLFNBQVMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQzNCLEdBQUc7Ozs7WUFBQyxPQUFPLENBQUMsRUFBRTtnQkFDWixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztnQkFDdkIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUU7b0JBQ2xCLE9BQU8sQ0FBQyxLQUFLLENBQUMscUdBQXFHLENBQUMsQ0FBQztpQkFDdEg7Z0JBQ0QsT0FBTyxPQUFPLENBQUM7WUFDakIsQ0FBQyxFQUNFLENBQ0osQ0FBQyxTQUFTLENBQ1QsSUFBSTs7OztZQUFFLEtBQUssQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLFlBQVksR0FBRyxvQ0FBb0MsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDO1FBQ3pHLENBQUMsRUFBQTtJQUlELENBQUM7Ozs7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ2pCLENBQUM7OztZQXhERixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLDRCQUE0QjtnQkFDdEMsd3BDQUFxRDs7YUFFdEQ7Ozs7WUFmTyxtQkFBbUI7WUFDbkIsaUJBQWlCOzs7b0JBbUJ0QixLQUFLO3dCQUtMLEtBQUs7c0JBS0wsS0FBSzs7Ozs7OztJQVZOLDRDQUF1Qjs7Ozs7SUFLdkIsZ0RBQTJCOzs7OztJQUszQiw4Q0FBeUI7O0lBR3pCLDZDQUErQjs7SUFDL0IsOENBQTZCOztJQUM3QixtREFBNEI7O0lBRTVCLHFEQU1DOztJQUVELDhDQWNDOzs7OztJQUVXLHdEQUE4Qzs7Ozs7SUFBRSxvREFBd0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Q2FzZVR5cGVTdGF0ZSwgQ2FzZVR5cGVTdGF0ZXNMaXN0LCBNZXRhZGF0YX0gZnJvbSAnLi4vLi4vbW9kZWxzL2xpdmVhcHBzZGF0YSc7XG5pbXBvcnQge1N1YmplY3R9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtMaXZlQXBwc1NlcnZpY2V9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2xpdmUtYXBwcy5zZXJ2aWNlJztcbmltcG9ydCB7bWFwLCB0YWtlLCB0YWtlVW50aWx9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7TGl2ZUFwcHNDb21wb25lbnR9IGZyb20gJy4uL2xpdmUtYXBwcy1jb21wb25lbnQvbGl2ZS1hcHBzLWNvbXBvbmVudC5jb21wb25lbnQnO1xuaW1wb3J0IHtTdGF0ZVRyYWNrZXIsIFRyYWNrZXJTdGF0ZX0gZnJvbSAnLi4vLi4vbW9kZWxzL3RjLWNhc2Utc3RhdGVzJztcbmltcG9ydCB7VGNDYXNlU3RhdGVzU2VydmljZX0gZnJvbSAnLi4vLi4vc2VydmljZXMvdGMtY2FzZS1zdGF0ZXMuc2VydmljZSc7XG5pbXBvcnQge0R1cmF0aW9uU2luY2VQaXBlfSBmcm9tICdAdGliY28tdGNzdGsvdGMtY29yZS1saWInO1xuXG5cbi8qKlxuICogQ2FzZSBTdGF0ZXMvTWlsZXN0b25lIHZpZXdcbiAqXG4gKiAhW2FsdC10ZXh0XSguLi9saXZlLWFwcHMtY2FzZS1zdGF0ZXMucG5nIFwiSW1hZ2VcIilcbiAqXG4gKkBleGFtcGxlIDx0Y2xhLWxpdmUtYXBwcy1jYXNlLXN0YXRlcz48L3RjbGEtbGl2ZS1hcHBzLWNhc2Utc3RhdGVzPlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0Y2xhLWxpdmUtYXBwcy1jYXNlLXN0YXRlcycsXG4gIHRlbXBsYXRlVXJsOiAnLi9saXZlLWFwcHMtY2FzZS1zdGF0ZXMuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9saXZlLWFwcHMtY2FzZS1zdGF0ZXMuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIExpdmVBcHBzQ2FzZVN0YXRlc0NvbXBvbmVudCBleHRlbmRzIExpdmVBcHBzQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgLyoqXG4gICAqIFRoZSBMQSBBcHBsaWNhdGlvbiBJZFxuICAgKi9cbiAgQElucHV0KCkgYXBwSWQ6IHN0cmluZztcblxuICAvKipcbiAgICogc2FuZGJveElkIC0gdGhpcyBjb21lcyBmcm9tIGNsYWltcyByZXNvbHZlclxuICAgKi9cbiAgQElucHV0KCkgc2FuZGJveElkOiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFRoZSBjYXNlIHJlZmVyZW5jZVxuICAgKi9cbiAgQElucHV0KCkgY2FzZVJlZjogc3RyaW5nO1xuXG5cbiAgcHVibGljIHN0YXRlczogQ2FzZVR5cGVTdGF0ZVtdO1xuICBwdWJsaWMgdHJhY2tlcjogU3RhdGVUcmFja2VyO1xuICBwdWJsaWMgZXJyb3JNZXNzYWdlOiBzdHJpbmc7XG5cbiAgcHVibGljIGdldFRvb2xUaXBUZXh0ID0gKHRyYWNrZXJTdGF0ZTogVHJhY2tlclN0YXRlKTogc3RyaW5nID0+IHtcbiAgICBsZXQgdG9vbFRpcFRleHQgPSAnJztcbiAgICBpZiAodHJhY2tlclN0YXRlLnN0YXR1cyAhPSAncGVuZGluZycpIHtcbiAgICAgIHRvb2xUaXBUZXh0ID0gdG9vbFRpcFRleHQgKyB0cmFja2VyU3RhdGUudXNlciArICcgJyArIHRoaXMuZHVyYXRpb25TaW5jZS50cmFuc2Zvcm0odHJhY2tlclN0YXRlLmNoYW5nZWQpO1xuICAgIH1cbiAgICByZXR1cm4gdG9vbFRpcFRleHQ7XG4gIH1cblxuICBwdWJsaWMgcmVmcmVzaCA9ICgpID0+IHtcbiAgICB0aGlzLmNhc2VTdGF0ZXNTZXJ2aWNlLmdldFRyYWNrZXIodGhpcy5jYXNlUmVmLCB0aGlzLnNhbmRib3hJZCwgdGhpcy5hcHBJZCkucGlwZShcbiAgICAgIHRha2UoMSksXG4gICAgICB0YWtlVW50aWwodGhpcy5fZGVzdHJveWVkJCksXG4gICAgICBtYXAodHJhY2tlciA9PiB7XG4gICAgICAgIHRoaXMudHJhY2tlciA9IHRyYWNrZXI7XG4gICAgICAgIGlmICghdHJhY2tlci52YWxpZCkge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1VuYWJsZSB0byBjcmVhdGUgbWlsZXN0b25lIHRyYWlsZXIuIENhc2UgQXVkaXQgbGlrZWx5IHJlbW92ZWQgZHVlIHRvIHN1YnNjcmlwdGlvbiByZXRlbnRpb24gcGVyaW9kLicpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cmFja2VyO1xuICAgICAgfVxuICAgICAgICApXG4gICAgKS5zdWJzY3JpYmUoXG4gICAgICBudWxsLCBlcnJvciA9PiB7IHRoaXMuZXJyb3JNZXNzYWdlID0gJ0Vycm9yIGNvbnN0cnVjdGluZyBzdGF0ZSB0cmFja2VyOiAnICsgZXJyb3IuZXJyb3IuZXJyb3JNc2c7IH0pO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjYXNlU3RhdGVzU2VydmljZTogVGNDYXNlU3RhdGVzU2VydmljZSwgcHJpdmF0ZSBkdXJhdGlvblNpbmNlOiBEdXJhdGlvblNpbmNlUGlwZSkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLnJlZnJlc2goKTtcbiAgfVxuXG59XG4iXX0=