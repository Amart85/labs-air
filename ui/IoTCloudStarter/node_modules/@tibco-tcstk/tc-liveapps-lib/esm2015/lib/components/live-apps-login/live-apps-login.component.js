/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// Note: This may move to the core library
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { LoginContext } from '../../models/liveappsdata';
import { LoginPrefill } from '@tibco-tcstk/tc-core-lib';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
/**
 * Component perform a Login in case there is no valid Session yet.
 *
 * If the user is not logged in the login component will be displayed automatically.
 *
 * ![alt-text](../Login.png "Image")
 */
export class LiveAppsLoginComponent extends LiveAppsComponent {
    constructor() {
        super();
        this.loginContext = new EventEmitter();
        // run when logged in
        this.handleLoggedIn = (/**
         * @param {?} loginInfo
         * @return {?}
         */
        (loginInfo) => {
            sessionStorage.setItem('loggedIn', Date.now().toString());
            // emit useful details about the login and session/claims
            this.loginContext.emit(new LoginContext().deserialize({
                authInfo: loginInfo.authInfo,
                accessToken: loginInfo.accessToken
            }));
        });
    }
}
LiveAppsLoginComponent.decorators = [
    { type: Component, args: [{
                selector: 'tcla-live-apps-login',
                template: "<tc-tibco-cloud-login fxFill (loggedIn)=\"handleLoggedIn($event)\" [loginPrefill]=\"loginPrefill\"></tc-tibco-cloud-login>\n",
                styles: [""]
            }] }
];
/** @nocollapse */
LiveAppsLoginComponent.ctorParameters = () => [];
LiveAppsLoginComponent.propDecorators = {
    loginContext: [{ type: Output }],
    loginPrefill: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    LiveAppsLoginComponent.prototype.loginContext;
    /** @type {?} */
    LiveAppsLoginComponent.prototype.loginPrefill;
    /** @type {?} */
    LiveAppsLoginComponent.prototype.handleLoggedIn;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLWxvZ2luLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0aWJjby10Y3N0ay90Yy1saXZlYXBwcy1saWIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9saXZlLWFwcHMtbG9naW4vbGl2ZS1hcHBzLWxvZ2luLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUVBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDckUsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBQ3ZELE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQUV0RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzREFBc0QsQ0FBQzs7Ozs7Ozs7QUFjekYsTUFBTSxPQUFPLHNCQUF1QixTQUFRLGlCQUFpQjtJQUszRDtRQUNFLEtBQUssRUFBRSxDQUFDO1FBSkEsaUJBQVksR0FBK0IsSUFBSSxZQUFZLEVBQWdCLENBQUM7O1FBUXRGLG1CQUFjOzs7O1FBQUcsQ0FBQyxTQUFTLEVBQUUsRUFBRTtZQUM3QixjQUFjLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztZQUUxRCx5REFBeUQ7WUFDekQsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxZQUFZLEVBQUUsQ0FBQyxXQUFXLENBQ2pEO2dCQUNFLFFBQVEsRUFBRSxTQUFTLENBQUMsUUFBUTtnQkFDNUIsV0FBVyxFQUFFLFNBQVMsQ0FBQyxXQUFXO2FBQ25DLENBQUMsQ0FBQyxDQUFDO1FBQ1YsQ0FBQyxFQUFBO0lBWkQsQ0FBQzs7O1lBWkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxzQkFBc0I7Z0JBQ2hDLHdJQUErQzs7YUFFaEQ7Ozs7OzJCQUdFLE1BQU07MkJBQ04sS0FBSzs7OztJQUROLDhDQUFzRjs7SUFDdEYsOENBQW9DOztJQU9wQyxnREFTQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIE5vdGU6IFRoaXMgbWF5IG1vdmUgdG8gdGhlIGNvcmUgbGlicmFyeVxuXG5pbXBvcnQge0NvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7TG9naW5Db250ZXh0fSBmcm9tICcuLi8uLi9tb2RlbHMvbGl2ZWFwcHNkYXRhJztcbmltcG9ydCB7TG9naW5QcmVmaWxsfSBmcm9tICdAdGliY28tdGNzdGsvdGMtY29yZS1saWInO1xuaW1wb3J0IHtMaXZlQXBwc1NlcnZpY2V9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2xpdmUtYXBwcy5zZXJ2aWNlJztcbmltcG9ydCB7IExpdmVBcHBzQ29tcG9uZW50IH0gZnJvbSAnLi4vbGl2ZS1hcHBzLWNvbXBvbmVudC9saXZlLWFwcHMtY29tcG9uZW50LmNvbXBvbmVudCc7XG5cbi8qKlxuICogQ29tcG9uZW50IHBlcmZvcm0gYSBMb2dpbiBpbiBjYXNlIHRoZXJlIGlzIG5vIHZhbGlkIFNlc3Npb24geWV0LlxuICpcbiAqIElmIHRoZSB1c2VyIGlzIG5vdCBsb2dnZWQgaW4gdGhlIGxvZ2luIGNvbXBvbmVudCB3aWxsIGJlIGRpc3BsYXllZCBhdXRvbWF0aWNhbGx5LlxuICpcbiAqICFbYWx0LXRleHRdKC4uL0xvZ2luLnBuZyBcIkltYWdlXCIpXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RjbGEtbGl2ZS1hcHBzLWxvZ2luJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xpdmUtYXBwcy1sb2dpbi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2xpdmUtYXBwcy1sb2dpbi5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgTGl2ZUFwcHNMb2dpbkNvbXBvbmVudCBleHRlbmRzIExpdmVBcHBzQ29tcG9uZW50IHtcblxuICBAT3V0cHV0KCkgbG9naW5Db250ZXh0OiBFdmVudEVtaXR0ZXI8TG9naW5Db250ZXh0PiA9IG5ldyBFdmVudEVtaXR0ZXI8TG9naW5Db250ZXh0PigpO1xuICBASW5wdXQoKSBsb2dpblByZWZpbGw6IExvZ2luUHJlZmlsbDtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgLy8gcnVuIHdoZW4gbG9nZ2VkIGluXG4gIGhhbmRsZUxvZ2dlZEluID0gKGxvZ2luSW5mbykgPT4ge1xuICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ2xvZ2dlZEluJywgRGF0ZS5ub3coKS50b1N0cmluZygpKTtcblxuICAgIC8vIGVtaXQgdXNlZnVsIGRldGFpbHMgYWJvdXQgdGhlIGxvZ2luIGFuZCBzZXNzaW9uL2NsYWltc1xuICAgIHRoaXMubG9naW5Db250ZXh0LmVtaXQobmV3IExvZ2luQ29udGV4dCgpLmRlc2VyaWFsaXplKFxuICAgICAgICB7XG4gICAgICAgICAgYXV0aEluZm86IGxvZ2luSW5mby5hdXRoSW5mbyxcbiAgICAgICAgICBhY2Nlc3NUb2tlbjogbG9naW5JbmZvLmFjY2Vzc1Rva2VuXG4gICAgICAgIH0pKTtcbiAgfVxuXG59XG4iXX0=