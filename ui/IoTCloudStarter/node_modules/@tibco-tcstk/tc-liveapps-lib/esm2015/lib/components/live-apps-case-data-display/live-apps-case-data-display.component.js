/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { JsonSchema } from '../../models/liveappsdata';
import { CustomFormDefs } from '@tibco-tcstk/tc-forms-lib';
/**
 * Renders case data in a form
 *
 * ![alt-text](../live-apps-case-data-display.png "Image")
 *
 * \@example <tcla-live-apps-case-data-display></tcla-live-apps-case-data-display>
 */
export class LiveAppsCaseDataDisplayComponent {
    constructor() {
        this.DEFAULT_CASE_DATA_LAYOUT = [
            '*',
            { type: 'submit', title: 'Save', condition: '1===2' },
            { type: 'actions', title: 'hello', condition: '1===2' }
        ];
        /**
         * Layout object that can be passed to override default layout of the form renderer
         */
        this.layout = this.layout ? this.layout : this.DEFAULT_CASE_DATA_LAYOUT;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        // since this is the 'display' of case data we set to readonly and no validation
        // legacy makes the labels appear above the data
        this.options = {
            defaultOptions: {
                'readonly': true,
                'appearance': 'legacy'
            },
            'validateOnRender': false
        };
        console.log(this.schema);
    }
}
LiveAppsCaseDataDisplayComponent.decorators = [
    { type: Component, args: [{
                selector: 'tcla-live-apps-case-data-display',
                template: "<tcfrm-rendered-form *ngIf=\"schema && caseData && options\" [schema]=\"schema\" [layout]=\"layout\" [data]=\"caseData\" [caseRef]=\"caseRef\" [appId]=\"appId\" [options]=\"options\" [customFormDefs]=\"customFormDefs\" [formRef]=\"formRef\"></tcfrm-rendered-form>\n",
                styles: [":host ::ng-deep button{visibility:hidden}"]
            }] }
];
/** @nocollapse */
LiveAppsCaseDataDisplayComponent.ctorParameters = () => [];
LiveAppsCaseDataDisplayComponent.propDecorators = {
    caseData: [{ type: Input }],
    appId: [{ type: Input }],
    caseRef: [{ type: Input }],
    schema: [{ type: Input }],
    layout: [{ type: Input }],
    customFormDefs: [{ type: Input }],
    formRef: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    LiveAppsCaseDataDisplayComponent.prototype.DEFAULT_CASE_DATA_LAYOUT;
    /**
     * The case data
     * @type {?}
     */
    LiveAppsCaseDataDisplayComponent.prototype.caseData;
    /**
     * The case reference
     * @type {?}
     */
    LiveAppsCaseDataDisplayComponent.prototype.appId;
    /**
     * The applicationId
     * @type {?}
     */
    LiveAppsCaseDataDisplayComponent.prototype.caseRef;
    /**
     * The schema of the case type
     * @type {?}
     */
    LiveAppsCaseDataDisplayComponent.prototype.schema;
    /**
     * Layout object that can be passed to override default layout of the form renderer
     * @type {?}
     */
    LiveAppsCaseDataDisplayComponent.prototype.layout;
    /**
     * Custom Form configuration file
     * @type {?}
     */
    LiveAppsCaseDataDisplayComponent.prototype.customFormDefs;
    /**
     * Custom Form Reference
     * @type {?}
     */
    LiveAppsCaseDataDisplayComponent.prototype.formRef;
    /** @type {?} */
    LiveAppsCaseDataDisplayComponent.prototype.options;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLWNhc2UtZGF0YS1kaXNwbGF5LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0aWJjby10Y3N0ay90Yy1saXZlYXBwcy1saWIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9saXZlLWFwcHMtY2FzZS1kYXRhLWRpc3BsYXkvbGl2ZS1hcHBzLWNhc2UtZGF0YS1kaXNwbGF5LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxLQUFLLEVBQVMsTUFBTSxlQUFlLENBQUM7QUFDdkQsT0FBTyxFQUEwQixVQUFVLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUU5RSxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sMkJBQTJCLENBQUM7Ozs7Ozs7O0FBZXpELE1BQU0sT0FBTyxnQ0FBZ0M7SUErQzNDO1FBN0NBLDZCQUF3QixHQUFHO1lBQ3pCLEdBQUc7WUFDSCxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFO1lBQ3JELEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUU7U0FFeEQsQ0FBQzs7OztRQTBCTyxXQUFNLEdBQVUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLHdCQUF3QixDQUFDO0lBY25FLENBQUM7Ozs7SUFFakIsUUFBUTtRQUNOLGdGQUFnRjtRQUNoRixnREFBZ0Q7UUFDaEQsSUFBSSxDQUFDLE9BQU8sR0FBRztZQUNiLGNBQWMsRUFBRTtnQkFDZCxVQUFVLEVBQUUsSUFBSTtnQkFDaEIsWUFBWSxFQUFFLFFBQVE7YUFDdkI7WUFDRCxrQkFBa0IsRUFBRSxLQUFLO1NBQzFCLENBQUM7UUFDRixPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMzQixDQUFDOzs7WUFqRUYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxrQ0FBa0M7Z0JBQzVDLHFSQUEyRDs7YUFFNUQ7Ozs7O3VCQWFFLEtBQUs7b0JBTUwsS0FBSztzQkFLTCxLQUFLO3FCQUtMLEtBQUs7cUJBS0wsS0FBSzs2QkFLTCxLQUFLO3NCQUtMLEtBQUs7Ozs7SUF6Q04sb0VBS0U7Ozs7O0lBS0Ysb0RBQTBCOzs7OztJQU0xQixpREFBc0I7Ozs7O0lBS3RCLG1EQUF5Qjs7Ozs7SUFLekIsa0RBQTRCOzs7OztJQUs1QixrREFBbUY7Ozs7O0lBS25GLDBEQUF3Qzs7Ozs7SUFLeEMsbURBQXlCOztJQUV6QixtREFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBJbnB1dCwgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Q2FzZVR5cGUsIENhc2VUeXBlc0xpc3QsIEpzb25TY2hlbWF9IGZyb20gJy4uLy4uL21vZGVscy9saXZlYXBwc2RhdGEnO1xuaW1wb3J0IHtMYVByb2Nlc3NTZWxlY3Rpb259IGZyb20gJy4uLy4uL21vZGVscy90Yy1jYXNlLXByb2Nlc3Nlcyc7XG5pbXBvcnQge0N1c3RvbUZvcm1EZWZzfSBmcm9tICdAdGliY28tdGNzdGsvdGMtZm9ybXMtbGliJztcblxuLyoqXG4gKiBSZW5kZXJzIGNhc2UgZGF0YSBpbiBhIGZvcm1cbiAqXG4gKiAhW2FsdC10ZXh0XSguLi9saXZlLWFwcHMtY2FzZS1kYXRhLWRpc3BsYXkucG5nIFwiSW1hZ2VcIilcbiAqXG4gKkBleGFtcGxlIDx0Y2xhLWxpdmUtYXBwcy1jYXNlLWRhdGEtZGlzcGxheT48L3RjbGEtbGl2ZS1hcHBzLWNhc2UtZGF0YS1kaXNwbGF5PlxuICovXG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RjbGEtbGl2ZS1hcHBzLWNhc2UtZGF0YS1kaXNwbGF5JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xpdmUtYXBwcy1jYXNlLWRhdGEtZGlzcGxheS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2xpdmUtYXBwcy1jYXNlLWRhdGEtZGlzcGxheS5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgTGl2ZUFwcHNDYXNlRGF0YURpc3BsYXlDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIERFRkFVTFRfQ0FTRV9EQVRBX0xBWU9VVCA9IFtcbiAgICAnKicsXG4gICAgeyB0eXBlOiAnc3VibWl0JywgdGl0bGU6ICdTYXZlJywgY29uZGl0aW9uOiAnMT09PTInIH0sXG4gICAgeyB0eXBlOiAnYWN0aW9ucycsIHRpdGxlOiAnaGVsbG8nLCBjb25kaXRpb246ICcxPT09MicgfVxuXG4gIF07XG5cbiAgLyoqXG4gICAqIFRoZSBjYXNlIGRhdGFcbiAgICovXG4gIEBJbnB1dCgpIGNhc2VEYXRhOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBjYXNlIHJlZmVyZW5jZVxuICAgKi9cblxuICBASW5wdXQoKSBhcHBJZDogc3RyaW5nXG4gIC8qKlxuICAgKiBUaGUgYXBwbGljYXRpb25JZFxuICAgKi9cblxuICBASW5wdXQoKSBjYXNlUmVmOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBzY2hlbWEgb2YgdGhlIGNhc2UgdHlwZVxuICAgKi9cbiAgQElucHV0KCkgc2NoZW1hOiBKc29uU2NoZW1hO1xuXG4gIC8qKlxuICAgKiBMYXlvdXQgb2JqZWN0IHRoYXQgY2FuIGJlIHBhc3NlZCB0byBvdmVycmlkZSBkZWZhdWx0IGxheW91dCBvZiB0aGUgZm9ybSByZW5kZXJlclxuICAgKi9cbiAgQElucHV0KCkgbGF5b3V0OiBhbnlbXSA9IHRoaXMubGF5b3V0ID8gdGhpcy5sYXlvdXQgOiB0aGlzLkRFRkFVTFRfQ0FTRV9EQVRBX0xBWU9VVDtcblxuICAvKipcbiAgICogQ3VzdG9tIEZvcm0gY29uZmlndXJhdGlvbiBmaWxlXG4gICAqL1xuICBASW5wdXQoKSBjdXN0b21Gb3JtRGVmczogQ3VzdG9tRm9ybURlZnM7XG5cbiAgLyoqXG4gICAqIEN1c3RvbSBGb3JtIFJlZmVyZW5jZVxuICAgKi9cbiAgQElucHV0KCkgZm9ybVJlZjogc3RyaW5nO1xuXG4gIG9wdGlvbnM7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICAvLyBzaW5jZSB0aGlzIGlzIHRoZSAnZGlzcGxheScgb2YgY2FzZSBkYXRhIHdlIHNldCB0byByZWFkb25seSBhbmQgbm8gdmFsaWRhdGlvblxuICAgIC8vIGxlZ2FjeSBtYWtlcyB0aGUgbGFiZWxzIGFwcGVhciBhYm92ZSB0aGUgZGF0YVxuICAgIHRoaXMub3B0aW9ucyA9IHtcbiAgICAgIGRlZmF1bHRPcHRpb25zOiB7XG4gICAgICAgICdyZWFkb25seSc6IHRydWUsXG4gICAgICAgICdhcHBlYXJhbmNlJzogJ2xlZ2FjeSdcbiAgICAgIH0sXG4gICAgICAndmFsaWRhdGVPblJlbmRlcic6IGZhbHNlXG4gICAgfTtcbiAgICBjb25zb2xlLmxvZyh0aGlzLnNjaGVtYSk7XG4gIH1cblxufVxuIl19