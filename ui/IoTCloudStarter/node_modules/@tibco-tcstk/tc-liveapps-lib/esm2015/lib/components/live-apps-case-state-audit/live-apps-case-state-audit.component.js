/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { map, take, takeUntil } from 'rxjs/operators';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
import { TcCaseStatesService } from '../../services/tc-case-states.service';
/**
 * Provides case audit summary for states
 *
 * ![alt-text](../live-apps-case-state-audit.png "Image")
 *
 * \@example <tcla-live-apps-case-state-audit></tcla-live-apps-case-state-audit>
 */
export class LiveAppsCaseStateAuditComponent extends LiveAppsComponent {
    /**
     * @param {?} caseStatesService
     */
    constructor(caseStatesService) {
        super();
        this.caseStatesService = caseStatesService;
        this.refresh = (/**
         * @return {?}
         */
        () => {
            this.caseStatesService.getCaseStateAuditWithTerminal(this.caseRef, this.sandboxId, this.appId)
                .pipe(take(1), takeUntil(this._destroyed$), map((/**
             * @param {?} auditeventlist
             * @return {?}
             */
            auditeventlist => {
                this.auditEvents = auditeventlist.auditEvents;
                if (!this.auditEvents || this.auditEvents.length <= 0) {
                    console.error('Unable to create states audit view. Case Audit likely removed due to subscription retention period.');
                }
            }))).subscribe(null, (/**
             * @param {?} error
             * @return {?}
             */
            error => { this.errorMessage = 'Error retrieving case audit: ' + error.error.errorMsg; }));
        });
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.refresh();
    }
}
LiveAppsCaseStateAuditComponent.decorators = [
    { type: Component, args: [{
                selector: 'tcla-live-apps-case-state-audit',
                template: "<div class=\"tcs-state-audit-pane\" fxLayout=\"column\" fxFill style=\"overflow: hidden;\">\n  <tc-tibco-cloud-widget-header fxFlex=\"nogrow\" [headerText]=\"'States'\" [icon]=\"'tcs-case-state-audit-icon'\"></tc-tibco-cloud-widget-header>\n  <div *ngIf=\"auditEvents && auditEvents.length > 0\" class=\"tcs-state-audit-container\">\n    <div class=\"tcs-state-audit-details\" fxLayout=\"column\" fxLayoutAlign=\"start start\">\n      <div *ngFor=\"let state of auditEvents; first as isFirst; last as isLast\"\n           [ngClass]=\"isFirst ? 'tcs-mini-state-item-first' : (isLast ? 'tcs-mini-state-item-last' : 'tcs-mini-state-item-middle')\">\n        <div fxLayout=\"row\">\n          <mat-icon class=\"tcs-mini-state-icon\"\n                    [svgIcon]=\"isLast ? (state.isTerminal ? 'tcs-mini-state-terminal-completed' : 'tcs-mini-state-current') : 'tcs-mini-state-completed'\"></mat-icon>\n          <li class=\"tcs-mini-state-details\" fxLayout=\"column\" fxLayoutAlign=\"start start\"\n              ng-class=\"{'underline':smallContainer}\">\n            <div class=\"tcs-mini-state-primary-label\"><span>{{state.caseState.value}}</span></div>\n            <div class=\"tcs-mini-state-secondary-label\">\n              <span *ngIf=\"state.principalName\">By {{state.principalName.value}}</span>\n              <span class=\"tcs-mini-state-spanPadding\"> on {{state.creationTime.value | date: \"medium\"}}</span>\n            </div>\n          </li>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"!auditEvents || auditEvents.length <= 0\">\n    <span class=\"tc-no-audit-data\">Audit data not available</span>\n  </div>\n</div>\n",
                styles: [".tcs-state-audit-pane{border-radius:3px;box-shadow:0 2px 4px 0 rgba(0,0,0,.33);background-color:#fff}.tcs-mini-state-item-middle{padding-top:30px;border-left:3px solid #062e79;margin-top:-10px}.tcs-mini-state-item-first{border-left:3px solid #062e79}.tcs-mini-state-item-last{margin-top:-10px;padding-top:30px;border-left:3px solid #062e79}.tcs-state-audit-container{height:100%;overflow-x:auto;padding:11px}.tc-no-audit-data{padding:20px;min-width:150px;font-family:Source Sans Pro;font-size:18px;font-weight:600;font-style:normal;font-stretch:normal;line-height:1.5;letter-spacing:.3px;color:#000}.tcs-mini-state-item-last:after{content:'';display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-align:center;align-items:center;position:relative;left:-46px;top:0;background-color:red;width:10px;height:0;margin-top:-12px}.tcs-mini-state-icon{position:relative;left:-13px}.tcs-state-audit-details{padding:10px 20px}.tcs-mini-state-details{margin-left:10px}.tcs-mini-state-primary-label{font-family:Source Sans Pro;font-size:14px;font-weight:600;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:.2px;color:#212121}.tcs-mini-state-secondary-label{font-family:Source Sans Pro;font-size:14px;font-weight:400;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:.2px;color:#b6b6b6}"]
            }] }
];
/** @nocollapse */
LiveAppsCaseStateAuditComponent.ctorParameters = () => [
    { type: TcCaseStatesService }
];
LiveAppsCaseStateAuditComponent.propDecorators = {
    caseRef: [{ type: Input }],
    sandboxId: [{ type: Input }],
    appId: [{ type: Input }]
};
if (false) {
    /**
     * The case reference
     * @type {?}
     */
    LiveAppsCaseStateAuditComponent.prototype.caseRef;
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsCaseStateAuditComponent.prototype.sandboxId;
    /**
     * The LA Application Id
     * @type {?}
     */
    LiveAppsCaseStateAuditComponent.prototype.appId;
    /** @type {?} */
    LiveAppsCaseStateAuditComponent.prototype.auditEvents;
    /** @type {?} */
    LiveAppsCaseStateAuditComponent.prototype.errorMessage;
    /** @type {?} */
    LiveAppsCaseStateAuditComponent.prototype.refresh;
    /**
     * @type {?}
     * @private
     */
    LiveAppsCaseStateAuditComponent.prototype.caseStatesService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLWNhc2Utc3RhdGUtYXVkaXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpYmNvLXRjc3RrL3RjLWxpdmVhcHBzLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2xpdmUtYXBwcy1jYXNlLXN0YXRlLWF1ZGl0L2xpdmUtYXBwcy1jYXNlLXN0YXRlLWF1ZGl0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxLQUFLLEVBQW9CLE1BQU0sZUFBZSxDQUFDO0FBRWxFLE9BQU8sRUFBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRXBELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHNEQUFzRCxDQUFDO0FBQ3ZGLE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLHVDQUF1QyxDQUFDOzs7Ozs7OztBQWdCMUUsTUFBTSxPQUFPLCtCQUFnQyxTQUFRLGlCQUFpQjs7OztJQXFCcEUsWUFBb0IsaUJBQXNDO1FBQ3hELEtBQUssRUFBRSxDQUFDO1FBRFUsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFxQjtRQUluRCxZQUFPOzs7UUFBRyxHQUFHLEVBQUU7WUFDcEIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLDZCQUE2QixDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDO2lCQUMzRixJQUFJLENBQ0gsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUNQLFNBQVMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQzNCLEdBQUc7Ozs7WUFBQyxjQUFjLENBQUMsRUFBRTtnQkFDbkIsSUFBSSxDQUFDLFdBQVcsR0FBRyxjQUFjLENBQUMsV0FBVyxDQUFDO2dCQUM5QyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7b0JBQ3JELE9BQU8sQ0FBQyxLQUFLLENBQUMscUdBQXFHLENBQUMsQ0FBQztpQkFDdEg7WUFDSCxDQUFDLEVBQUMsQ0FDSCxDQUFDLFNBQVMsQ0FDWCxJQUFJOzs7O1lBQUUsS0FBSyxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsWUFBWSxHQUFHLCtCQUErQixHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUM7UUFDcEcsQ0FBQyxFQUFBO0lBZkQsQ0FBQzs7OztJQWlCRCxRQUFRO1FBQ04sSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ2pCLENBQUM7OztZQS9DRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGlDQUFpQztnQkFDM0MseW9EQUEwRDs7YUFFM0Q7Ozs7WUFmTyxtQkFBbUI7OztzQkFxQnhCLEtBQUs7d0JBS0wsS0FBSztvQkFLTCxLQUFLOzs7Ozs7O0lBVk4sa0RBQXlCOzs7OztJQUt6QixvREFBMkI7Ozs7O0lBSzNCLGdEQUF1Qjs7SUFFdkIsc0RBQXNDOztJQUN0Qyx1REFBNEI7O0lBTzVCLGtEQWFDOzs7OztJQWpCVyw0REFBOEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7U3ViamVjdH0gZnJvbSAncnhqcyc7XG5pbXBvcnQge21hcCwgdGFrZSwgdGFrZVVudGlsfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQge0F1ZGl0RXZlbnR9IGZyb20gJy4uLy4uL21vZGVscy90Yy1jYXNlLWF1ZGl0JztcbmltcG9ydCB7TGl2ZUFwcHNDb21wb25lbnR9IGZyb20gJy4uL2xpdmUtYXBwcy1jb21wb25lbnQvbGl2ZS1hcHBzLWNvbXBvbmVudC5jb21wb25lbnQnO1xuaW1wb3J0IHtUY0Nhc2VTdGF0ZXNTZXJ2aWNlfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy90Yy1jYXNlLXN0YXRlcy5zZXJ2aWNlJztcbmltcG9ydCB7U3RhdGVBdWRpdEV2ZW50fSBmcm9tICcuLi8uLi9tb2RlbHMvdGMtY2FzZS1zdGF0ZXMnO1xuXG5cbi8qKlxuICogUHJvdmlkZXMgY2FzZSBhdWRpdCBzdW1tYXJ5IGZvciBzdGF0ZXNcbiAqXG4gKiAhW2FsdC10ZXh0XSguLi9saXZlLWFwcHMtY2FzZS1zdGF0ZS1hdWRpdC5wbmcgXCJJbWFnZVwiKVxuICpcbiAqQGV4YW1wbGUgPHRjbGEtbGl2ZS1hcHBzLWNhc2Utc3RhdGUtYXVkaXQ+PC90Y2xhLWxpdmUtYXBwcy1jYXNlLXN0YXRlLWF1ZGl0PlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0Y2xhLWxpdmUtYXBwcy1jYXNlLXN0YXRlLWF1ZGl0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xpdmUtYXBwcy1jYXNlLXN0YXRlLWF1ZGl0LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbGl2ZS1hcHBzLWNhc2Utc3RhdGUtYXVkaXQuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIExpdmVBcHBzQ2FzZVN0YXRlQXVkaXRDb21wb25lbnQgZXh0ZW5kcyBMaXZlQXBwc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgLyoqXG4gICAqIFRoZSBjYXNlIHJlZmVyZW5jZVxuICAgKi9cbiAgQElucHV0KCkgY2FzZVJlZjogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBzYW5kYm94SWQgLSB0aGlzIGNvbWVzIGZyb20gY2xhaW1zIHJlc29sdmVyXG4gICAqL1xuICBASW5wdXQoKSBzYW5kYm94SWQ6IG51bWJlcjtcblxuICAvKipcbiAgICogVGhlIExBIEFwcGxpY2F0aW9uIElkXG4gICAqL1xuICBASW5wdXQoKSBhcHBJZDogc3RyaW5nO1xuXG4gIHB1YmxpYyBhdWRpdEV2ZW50czogU3RhdGVBdWRpdEV2ZW50W107XG4gIHB1YmxpYyBlcnJvck1lc3NhZ2U6IHN0cmluZztcblxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY2FzZVN0YXRlc1NlcnZpY2U6IFRjQ2FzZVN0YXRlc1NlcnZpY2UpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgcHVibGljIHJlZnJlc2ggPSAoKSA9PiB7XG4gICAgdGhpcy5jYXNlU3RhdGVzU2VydmljZS5nZXRDYXNlU3RhdGVBdWRpdFdpdGhUZXJtaW5hbCh0aGlzLmNhc2VSZWYsIHRoaXMuc2FuZGJveElkLCB0aGlzLmFwcElkKVxuICAgICAgLnBpcGUoXG4gICAgICAgIHRha2UoMSksXG4gICAgICAgIHRha2VVbnRpbCh0aGlzLl9kZXN0cm95ZWQkKSxcbiAgICAgICAgbWFwKGF1ZGl0ZXZlbnRsaXN0ID0+IHtcbiAgICAgICAgICB0aGlzLmF1ZGl0RXZlbnRzID0gYXVkaXRldmVudGxpc3QuYXVkaXRFdmVudHM7XG4gICAgICAgICAgaWYgKCF0aGlzLmF1ZGl0RXZlbnRzIHx8IHRoaXMuYXVkaXRFdmVudHMubGVuZ3RoIDw9IDApIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1VuYWJsZSB0byBjcmVhdGUgc3RhdGVzIGF1ZGl0IHZpZXcuIENhc2UgQXVkaXQgbGlrZWx5IHJlbW92ZWQgZHVlIHRvIHN1YnNjcmlwdGlvbiByZXRlbnRpb24gcGVyaW9kLicpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICkuc3Vic2NyaWJlKFxuICAgICAgbnVsbCwgZXJyb3IgPT4geyB0aGlzLmVycm9yTWVzc2FnZSA9ICdFcnJvciByZXRyaWV2aW5nIGNhc2UgYXVkaXQ6ICcgKyBlcnJvci5lcnJvci5lcnJvck1zZzsgfSk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLnJlZnJlc2goKTtcbiAgfVxufVxuIl19