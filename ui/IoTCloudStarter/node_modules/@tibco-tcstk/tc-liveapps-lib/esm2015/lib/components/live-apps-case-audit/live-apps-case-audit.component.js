/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { map, take, takeUntil } from 'rxjs/operators';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
import { TcCaseAuditService } from '../../services/tc-case-audit.service';
/**
 * Render audit trail for a case
 *
 *  ![alt-text](../live-apps-case-audit.png "Image")
 *
 * \@example <tcla-live-apps-case-audit></tcla-live-apps-case-audit>
 */
export class LiveAppsCaseAuditComponent extends LiveAppsComponent {
    /**
     * @param {?} caseAuditService
     */
    constructor(caseAuditService) {
        super();
        this.caseAuditService = caseAuditService;
        this.auditEvents = [];
        this.startat = undefined;
        this.top = 20;
        this.end = false;
        this.refresh = (/**
         * @return {?}
         */
        () => {
            this.startat = undefined;
            this.top = 20;
            this.end = false;
            this.auditEvents = [];
            this.getAuditEvents(this.caseRef, this.sandboxId, this.startat, this.top);
        });
        this.getAuditEvents = (/**
         * @param {?} caseRef
         * @param {?} sandboxId
         * @param {?} startAt
         * @param {?} top
         * @return {?}
         */
        (caseRef, sandboxId, startAt, top) => {
            this.caseAuditService.getCaseAudit(this.caseRef, this.sandboxId, this.startat, this.top)
                .pipe(take(1), takeUntil(this._destroyed$), map((/**
             * @param {?} auditeventlist
             * @return {?}
             */
            auditeventlist => {
                // this will strip any duplicates that may have been retrieved due to fast scrolling
                /** @type {?} */
                const filteredEvents = auditeventlist.auditevents.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                x => this.auditEvents.every((/**
                 * @param {?} y
                 * @return {?}
                 */
                y => y.key.value !== x.key.value))));
                this.auditEvents = this.auditEvents.concat(filteredEvents);
                if (auditeventlist.auditevents.length < this.top) {
                    this.end = true;
                }
                else {
                    this.startat = auditeventlist.auditevents[auditeventlist.auditevents.length - 1].key.value;
                }
            }))).subscribe(null, (/**
             * @param {?} error
             * @return {?}
             */
            error => {
                this.errorMessage = 'Error retrieving case audit: ' + error.error.errorMsg;
            }));
        });
        this.getNextBatch = (/**
         * @param {?} event
         * @return {?}
         */
        (event) => {
            if (!this.end) {
                this.getAuditEvents(this.caseRef, this.sandboxId, this.startat, this.top);
            }
        });
    }
}
LiveAppsCaseAuditComponent.decorators = [
    { type: Component, args: [{
                selector: 'tcla-live-apps-case-audit',
                template: "<div class=\"tcs-case-audit-pane\" fxLayout=\"column\" fxFill style=\"overflow: hidden;\">\n  <tc-tibco-cloud-widget-header fxFlex=\"nogrow\" [headerText]=\"'Audit'\"\n                                [icon]=\"'tcs-recent-icon'\"></tc-tibco-cloud-widget-header>\n\n\n  <!--div *ngIf=\"auditEvents && auditEvents.length > 0\" class=\"tcs-case-audit-container\">\n\n  </div-->\n  <div class=\"audit-template\" style=\"height: 100%\">\n  <cdk-virtual-scroll-viewport style=\"height: 100%\" itemSize=\"50\" (scrolledIndexChange)=\"getNextBatch($event)\">\n    <ul style=\"\"\n         *cdkVirtualFor=\"let item of auditEvents; let i = index\">\n      <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'BP_INSTANCE_CREATED'\">\n        <div class=\"audit-icon-container\">\n          <mat-icon svgIcon=\"BP_INSTANCE_CREATED\"></mat-icon>\n        </div>\n        <div class=\"audit-details\">\n          <li>\n            <span *ngIf=\"item.principalName\">{{item.principalName.value}} </span>\n            <span>\n                      <span> started </span>\n                      <b>{{item.procName.value}}</b>\n                      <span> on {{item.creationTime.value | date:'full'}}</span>\n                  </span>\n          </li>\n        </div>\n        <div class=\"audit-line\"></div>\n      </div>\n      <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'BP_AUTO_STARTED_INSTANCE'\">\n        <div class=\"audit-icon-container\">\n          <mat-icon svgIcon=\"BP_AUTO_STARTED_INSTANCE\"></mat-icon>\n        </div>\n        <li>\n          <!--span *ngIf=\"item.principalName\">{{item.principalName.value}} </span-->\n          <span>\n                    <b>{{item.procName.value}}</b>\n                    <span> auto initiated on {{item.creationTime.value | date:'full'}}</span>\n                </span>\n        </li>\n        <div class=\"audit-line\"></div>\n      </div>\n      <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'BP_DELAYED_AUTO_STARTED_INSTANCE'\">\n        <!-- todo: JS fix this -->\n        <div class=\"audit-icon-container\">\n          <mat-icon svgIcon=\"BP_DELAYED_AUTO_STARTED_INSTANCE\"></mat-icon>\n        </div>\n        <li>\n          <span>\n                    <b>{{item.procName.value}}</b>\n\t\t\t\t\t<span> deadline auto initiated on {{item.creationTime.value | date:'full'}}</span>\n          <span>. </span>\n          <span> Time to deadline {{item.delayTime.value}}></span>. </span>\n          <!--span class=\"skip-delay\" *ngIf=\"isInstanceDelayed(item)\" ng-click=\"skipDelay(item)\" skip\"></span>\n                </span-->\n        </li>\n        <div class=\"audit-line\"></div>\n      </div>\n      <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'BP_DELAYED_AUTO_START_TIMER_EXPIRED'\">\n        <div class=\"audit-icon-container\">\n          <mat-icon svgIcon=\"BP_DELAYED_AUTO_START_TIMER_EXPIRED\"></mat-icon>\n        </div>\n        <li>\n          <span>\n            <b>{{item.procName.value}}</b>\n\t\t\t\t\t  <span> deadline reached {{item.creationTime.value | date: 'full'}}></span>\n          </span>\n        </li>\n        <div class=\"audit-line\"></div>\n      </div>\n      <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'BP_DELAYED_AUTO_STARTED_INSTANCE_CANCELLED_DUE_TO_STATE_CHANGE'\">\n        <div class=\"audit-icon-container\">\n          <mat-icon svgIcon=\"BP_DELAYED_AUTO_STARTED_INSTANCE_CANCELLED_DUE_TO_STATE_CHANGE\"></mat-icon>\n        </div>\n        <li>\n          <!--span *ngIf=\"item.principalName\">{{item.principalName.value}} </span-->\n          <span>\n                    <b>{{item.procName.value}}</b>\n            <span> deadline cancelled {{item.creationTime.value | date: 'full'}}</span>\n          </span>\n        </li>\n        <div class=\"audit-line\"></div>\n      </div>\n      <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'BP_TASK_CREATED' && ['User Task','Email Task','Calculation Task','TCI Task','AuditSafe Task'].indexOf(item.taskType.value) > -1\">\n        <div class=\"audit-icon-container\">\n          <mat-icon svgIcon=\"{{item.taskType.value}}\"></mat-icon>\n        </div>\n        <li>\n                <span>\n                    <b>{{item.taskName.value}}</b>\n                    <span> initiated on {{item.creationTime.value | date: 'full'}}</span>\n                </span>\n        </li>\n        <div class=\"audit-line\"></div>\n      </div>\n\n      <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'CM_CASE_CREATED'\">\n        <div class=\"audit-icon-container\">\n          <mat-icon svgIcon=\"CM_CASE_CREATED\"></mat-icon>\n        </div>\n        <li>\n          <span *ngIf=\"item.principalName\">{{item.principalName.value}}</span>\n          <span class=\"spanPadding\">\n                    <span> created </span>\n                    <b> {{item.label.value}}</b>\n                    <span> in state</span>\n                    <span class=\"audit-state\">\"{{item.caseState.value}}\"</span>\n                    <span> on {{item.creationTime.value | date: 'full'}}</span>\n                </span>\n        </li>\n        <div class=\"audit-line\"></div>\n      </div>\n\n      <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'CM_CASE_UPDATED_STATE_CHANGED'\">\n        <div class=\"audit-icon-container\">\n          <mat-icon svgIcon=\"CM_CASE_UPDATED_STATE_CHANGED\"></mat-icon>\n        </div>\n        <li>\n          <span *ngIf=\"item.principalName\">{{item.principalName.value}}</span>\n          <span class=\"spanPadding\">\n                    <span> updated </span>\n                    <b> {{item.label.value}}</b>\n                    <span>, new state is></span>\n                    <span class=\"audit-state\"> \"{{item.caseState.value}}\" </span>\n                    <span> on {{item.creationTime.value | date: 'full'}}</span>\n                </span>\n        </li>\n        <div class=\"audit-line\"></div>\n      </div>\n\n      <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'CM_CASE_UPDATED'\">\n        <div class=\"audit-icon-container\">\n          <mat-icon svgIcon=\"CM_CASE_UPDATED\"></mat-icon>\n        </div>\n        <li>\n          <span *ngIf=\"item.principalName\">{{item.principalName.value}}</span>\n          <span class=\"spanPadding\">\n                    <span> updated </span>\n                    <b> {{item.label.value}} </b>\n                    <span> on {{item.creationTime.value | date: 'full'}}</span>\n                </span>\n        </li>\n        <div class=\"audit-line\"></div>\n      </div>\n\n      <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'WR_FOLDER_ARTIFACT_CREATED'\">\n        <div class=\"audit-icon-container\">\n          <mat-icon svgIcon=\"WR_FOLDER_ARTIFACT_CREATED\"></mat-icon>\n        </div>\n        <li>\n          <span *ngIf=\"item.principalName\">{{item.principalName.value}}</span>\n          <span class=\"spanPadding\">\n                    <span> uploaded </span>\n                    <span>{{item.artifactName.value}}</span>\n                    <span> on {{item.creationTime.value | date:'full'}}</span>\n                </span>\n        </li>\n        <div class=\"audit-line\"></div>\n      </div>\n\n      <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'WR_FOLDER_ARTIFACT_UPDATED'\">\n        <div class=\"audit-icon-container\">\n          <mat-icon svgIcon=\"WR_FOLDER_ARTIFACT_UPDATED\"></mat-icon>\n        </div>\n        <li>\n          <span *ngIf=\"item.principalName\">{{item.principalName.value}}</span>\n          <span class=\"spanPadding\">\n                    <span> updated </span>\n                    <span>{{item.artifactName.value}}</span>\n                    <span> on {{item.creationTime.value | date:'full'}}</span>\n                </span>\n        </li>\n        <div class=\"audit-line\"></div>\n      </div>\n\n      <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'WR_FOLDER_ARTIFACT_DELETED'\">\n        <div class=\"audit-icon-container\">\n          <mat-icon svgIcon=\"WR_FOLDER_ARTIFACT_DELETED\"></mat-icon>\n        </div>\n        <li>\n          <span *ngIf=\"item.principalName\">{{item.principalName.value}}</span>\n          <span class=\"spanPadding\">\n                    <span> deleted </span>\n                    <span>{{item.artifactName.value}}</span>\n                    <span> on {{item.creationTime.value | date:'full'}}</span>\n                </span>\n        </li>\n        <div class=\"audit-line\"></div>\n      </div>\n\n      <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'BP_TASK_COMPLETED' && ['User Task','Email Task','Calculation Task','TCI Task','AuditSafe Task'].indexOf(item.taskType.value) > -1\">\n        <div class=\"audit-icon-container\">\n          <mat-icon svgIcon=\"{{item.taskType.value}}\"></mat-icon>\n        </div>\n        <li>\n          <span *ngIf=\"item.principalName\">{{item.principalName.value}} </span>\n          <span>\n                    <span> completed </span>\n                    <b> {{item.taskName.value}} </b>\n                    <span> on {{item.creationTime.value | date: 'full'}}</span>\n                </span>\n        </li>\n        <div class=\"audit-line\"></div>\n      </div>\n      <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'BP_INSTANCE_COMPLETED'\">\n        <div class=\"audit-icon-container\">\n          <mat-icon svgIcon=\"BP_INSTANCE_COMPLETED\"></mat-icon>\n        </div>\n        <li>\n                <span>\n                    <b>{{item.procName.value}} </b>\n                    <span> on {{item.creationTime.value | date: 'full'}}</span>\n                </span>\n        </li>\n        <div class=\"audit-line\"></div>\n      </div>\n      <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.severity.value === 'ERROR'\">\n        <div class=\"audit-icon-container\">\n          <mat-icon svgIcon=\"ERROR\"></mat-icon>\n        </div>\n        <li>\n                <span *ngIf=\"item.principalName\">{{item.principalName.value}} has error at {{item.taskName.value}}\n                </span>\n          <b> {{item.message.value | parseAuditMessage : item }}</b>\n          <span> on {{item.creationTime.value | date: 'full'}}</span>\n        </li>\n        <div class=\"audit-line\"></div>\n      </div>\n      <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.severity.value === 'WARN'\">\n        <div class=\"audit-icon-container warn-icon\">\n          <mat-icon svgIcon=\"ERROR\"></mat-icon>\n        </div>\n        <li>\n                <span *ngIf=\"item.principalName\">{{item.principalName.value}} has warning at {{item.taskName.value}}>\n                </span>\n          <b> {{item.message.value | parseAuditMessage : item }}</b>\n          <span> on {{item.creationTime.value | date: 'full'}}</span>\n        </li>\n        <div class=\"audit-line\"></div>\n      </div>\n\n\n    </ul>\n  </cdk-virtual-scroll-viewport>\n  </div>\n</div>\n",
                styles: [".tcs-case-audit-pane{border-radius:3px;box-shadow:0 2px 4px 0 rgba(0,0,0,.33);background-color:#fff}.tcs-case-audit-container{height:100%;overflow-x:auto;padding:11px}.tcs-case-audit-dtl{height:70px}.audit-template{padding:20px}.audit-template span{font-family:Source Sans Pro;font-size:12px;font-weight:400;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal}.audit-template ul{padding-left:25px;border-left:2px solid #bfbfbf;display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-align:center;align-items:center;position:relative;margin-left:20px;margin-right:20px}.audit-icon-container{background-color:#fff;padding:5px;position:absolute;left:-19px;border-radius:50%;border:1px solid #0081cb}.audit-icon-container mat-icon{padding:4px}"]
            }] }
];
/** @nocollapse */
LiveAppsCaseAuditComponent.ctorParameters = () => [
    { type: TcCaseAuditService }
];
LiveAppsCaseAuditComponent.propDecorators = {
    caseRef: [{ type: Input }],
    sandboxId: [{ type: Input }]
};
if (false) {
    /**
     * The case reference
     * @type {?}
     */
    LiveAppsCaseAuditComponent.prototype.caseRef;
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsCaseAuditComponent.prototype.sandboxId;
    /** @type {?} */
    LiveAppsCaseAuditComponent.prototype.auditEvents;
    /** @type {?} */
    LiveAppsCaseAuditComponent.prototype.errorMessage;
    /** @type {?} */
    LiveAppsCaseAuditComponent.prototype.startat;
    /** @type {?} */
    LiveAppsCaseAuditComponent.prototype.top;
    /** @type {?} */
    LiveAppsCaseAuditComponent.prototype.end;
    /** @type {?} */
    LiveAppsCaseAuditComponent.prototype.refresh;
    /** @type {?} */
    LiveAppsCaseAuditComponent.prototype.getAuditEvents;
    /** @type {?} */
    LiveAppsCaseAuditComponent.prototype.getNextBatch;
    /**
     * @type {?}
     * @private
     */
    LiveAppsCaseAuditComponent.prototype.caseAuditService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLWNhc2UtYXVkaXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpYmNvLXRjc3RrL3RjLWxpdmVhcHBzLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2xpdmUtYXBwcy1jYXNlLWF1ZGl0L2xpdmUtYXBwcy1jYXNlLWF1ZGl0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxLQUFLLEVBQW9CLE1BQU0sZUFBZSxDQUFDO0FBQ2xFLE9BQU8sRUFBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRXBELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHNEQUFzRCxDQUFDO0FBQ3ZGLE9BQU8sRUFBQyxrQkFBa0IsRUFBQyxNQUFNLHNDQUFzQyxDQUFDOzs7Ozs7OztBQWN4RSxNQUFNLE9BQU8sMEJBQTJCLFNBQVEsaUJBQWlCOzs7O0lBcUQvRCxZQUFvQixnQkFBb0M7UUFDdEQsS0FBSyxFQUFFLENBQUM7UUFEVSxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQW9CO1FBekNqRCxnQkFBVyxHQUFpQixFQUFFLENBQUM7UUFFL0IsWUFBTyxHQUFHLFNBQVMsQ0FBQztRQUNwQixRQUFHLEdBQUcsRUFBRSxDQUFDO1FBQ1QsUUFBRyxHQUFHLEtBQUssQ0FBQztRQUVaLFlBQU87OztRQUFHLEdBQUcsRUFBRTtZQUNwQixJQUFJLENBQUMsT0FBTyxHQUFHLFNBQVMsQ0FBQztZQUN6QixJQUFJLENBQUMsR0FBRyxHQUFHLEVBQUUsQ0FBQztZQUNkLElBQUksQ0FBQyxHQUFHLEdBQUcsS0FBSyxDQUFDO1lBQ2pCLElBQUksQ0FBQyxXQUFXLEdBQUcsRUFBRSxDQUFDO1lBQ3RCLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzVFLENBQUMsRUFBQTtRQUVNLG1CQUFjOzs7Ozs7O1FBQUcsQ0FBQyxPQUFlLEVBQUUsU0FBaUIsRUFBRSxPQUFlLEVBQUUsR0FBVyxFQUFFLEVBQUU7WUFDM0YsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDO2lCQUNyRixJQUFJLENBQ0gsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUNQLFNBQVMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQzNCLEdBQUc7Ozs7WUFBQyxjQUFjLENBQUMsRUFBRTs7O3NCQUViLGNBQWMsR0FBRyxjQUFjLENBQUMsV0FBVyxDQUFDLE1BQU07Ozs7Z0JBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUs7Ozs7Z0JBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBQyxFQUFDO2dCQUN2SCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxDQUFDO2dCQUMzRCxJQUFJLGNBQWMsQ0FBQyxXQUFXLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUU7b0JBQ2hELElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDO2lCQUNqQjtxQkFBTTtvQkFDTCxJQUFJLENBQUMsT0FBTyxHQUFHLGNBQWMsQ0FBQyxXQUFXLENBQUMsY0FBYyxDQUFDLFdBQVcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQztpQkFDNUY7WUFDSCxDQUFDLEVBQUMsQ0FDSCxDQUFDLFNBQVMsQ0FDWCxJQUFJOzs7O1lBQUUsS0FBSyxDQUFDLEVBQUU7Z0JBQ1osSUFBSSxDQUFDLFlBQVksR0FBRywrQkFBK0IsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQztZQUM3RSxDQUFDLEVBQUMsQ0FBQztRQUNQLENBQUMsRUFBQTtRQUVNLGlCQUFZOzs7O1FBQUcsQ0FBQyxLQUFLLEVBQUUsRUFBRTtZQUM5QixJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRTtnQkFDYixJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQzthQUMzRTtRQUNILENBQUMsRUFBQTtJQUlELENBQUM7OztZQTVERixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLDJCQUEyQjtnQkFDckMsczJWQUFvRDs7YUFFckQ7Ozs7WUFiTyxrQkFBa0I7OztzQkFtQnZCLEtBQUs7d0JBS0wsS0FBSzs7Ozs7OztJQUxOLDZDQUF5Qjs7Ozs7SUFLekIsK0NBQTJCOztJQUUzQixpREFBc0M7O0lBQ3RDLGtEQUE0Qjs7SUFDNUIsNkNBQTJCOztJQUMzQix5Q0FBZ0I7O0lBQ2hCLHlDQUFtQjs7SUFFbkIsNkNBTUM7O0lBRUQsb0RBbUJDOztJQUVELGtEQUlDOzs7OztJQUVXLHNEQUE0QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHttYXAsIHRha2UsIHRha2VVbnRpbH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHtBdWRpdEV2ZW50fSBmcm9tICcuLi8uLi9tb2RlbHMvdGMtY2FzZS1hdWRpdCc7XG5pbXBvcnQge0xpdmVBcHBzQ29tcG9uZW50fSBmcm9tICcuLi9saXZlLWFwcHMtY29tcG9uZW50L2xpdmUtYXBwcy1jb21wb25lbnQuY29tcG9uZW50JztcbmltcG9ydCB7VGNDYXNlQXVkaXRTZXJ2aWNlfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy90Yy1jYXNlLWF1ZGl0LnNlcnZpY2UnO1xuXG4vKipcbiAqIFJlbmRlciBhdWRpdCB0cmFpbCBmb3IgYSBjYXNlXG4gKlxuICogICFbYWx0LXRleHRdKC4uL2xpdmUtYXBwcy1jYXNlLWF1ZGl0LnBuZyBcIkltYWdlXCIpXG4gKlxuICpAZXhhbXBsZSA8dGNsYS1saXZlLWFwcHMtY2FzZS1hdWRpdD48L3RjbGEtbGl2ZS1hcHBzLWNhc2UtYXVkaXQ+XG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RjbGEtbGl2ZS1hcHBzLWNhc2UtYXVkaXQnLFxuICB0ZW1wbGF0ZVVybDogJy4vbGl2ZS1hcHBzLWNhc2UtYXVkaXQuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9saXZlLWFwcHMtY2FzZS1hdWRpdC5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgTGl2ZUFwcHNDYXNlQXVkaXRDb21wb25lbnQgZXh0ZW5kcyBMaXZlQXBwc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG5cbiAgLyoqXG4gICAqIFRoZSBjYXNlIHJlZmVyZW5jZVxuICAgKi9cbiAgQElucHV0KCkgY2FzZVJlZjogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBzYW5kYm94SWQgLSB0aGlzIGNvbWVzIGZyb20gY2xhaW1zIHJlc29sdmVyXG4gICAqL1xuICBASW5wdXQoKSBzYW5kYm94SWQ6IG51bWJlcjtcblxuICBwdWJsaWMgYXVkaXRFdmVudHM6IEF1ZGl0RXZlbnRbXSA9IFtdO1xuICBwdWJsaWMgZXJyb3JNZXNzYWdlOiBzdHJpbmc7XG4gIHB1YmxpYyBzdGFydGF0ID0gdW5kZWZpbmVkO1xuICBwdWJsaWMgdG9wID0gMjA7XG4gIHB1YmxpYyBlbmQgPSBmYWxzZTtcblxuICBwdWJsaWMgcmVmcmVzaCA9ICgpID0+IHtcbiAgICB0aGlzLnN0YXJ0YXQgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy50b3AgPSAyMDtcbiAgICB0aGlzLmVuZCA9IGZhbHNlO1xuICAgIHRoaXMuYXVkaXRFdmVudHMgPSBbXTtcbiAgICB0aGlzLmdldEF1ZGl0RXZlbnRzKHRoaXMuY2FzZVJlZiwgdGhpcy5zYW5kYm94SWQsIHRoaXMuc3RhcnRhdCwgdGhpcy50b3ApO1xuICB9XG5cbiAgcHVibGljIGdldEF1ZGl0RXZlbnRzID0gKGNhc2VSZWY6IHN0cmluZywgc2FuZGJveElkOiBudW1iZXIsIHN0YXJ0QXQ6IG51bWJlciwgdG9wOiBudW1iZXIpID0+IHtcbiAgICB0aGlzLmNhc2VBdWRpdFNlcnZpY2UuZ2V0Q2FzZUF1ZGl0KHRoaXMuY2FzZVJlZiwgdGhpcy5zYW5kYm94SWQsIHRoaXMuc3RhcnRhdCwgdGhpcy50b3ApXG4gICAgICAucGlwZShcbiAgICAgICAgdGFrZSgxKSxcbiAgICAgICAgdGFrZVVudGlsKHRoaXMuX2Rlc3Ryb3llZCQpLFxuICAgICAgICBtYXAoYXVkaXRldmVudGxpc3QgPT4ge1xuICAgICAgICAgIC8vIHRoaXMgd2lsbCBzdHJpcCBhbnkgZHVwbGljYXRlcyB0aGF0IG1heSBoYXZlIGJlZW4gcmV0cmlldmVkIGR1ZSB0byBmYXN0IHNjcm9sbGluZ1xuICAgICAgICAgIGNvbnN0IGZpbHRlcmVkRXZlbnRzID0gYXVkaXRldmVudGxpc3QuYXVkaXRldmVudHMuZmlsdGVyKHggPT4gdGhpcy5hdWRpdEV2ZW50cy5ldmVyeSh5ID0+IHkua2V5LnZhbHVlICE9PSB4LmtleS52YWx1ZSkpXG4gICAgICAgICAgdGhpcy5hdWRpdEV2ZW50cyA9IHRoaXMuYXVkaXRFdmVudHMuY29uY2F0KGZpbHRlcmVkRXZlbnRzKTtcbiAgICAgICAgICBpZiAoYXVkaXRldmVudGxpc3QuYXVkaXRldmVudHMubGVuZ3RoIDwgdGhpcy50b3ApIHtcbiAgICAgICAgICAgIHRoaXMuZW5kID0gdHJ1ZTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5zdGFydGF0ID0gYXVkaXRldmVudGxpc3QuYXVkaXRldmVudHNbYXVkaXRldmVudGxpc3QuYXVkaXRldmVudHMubGVuZ3RoIC0gMV0ua2V5LnZhbHVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICkuc3Vic2NyaWJlKFxuICAgICAgbnVsbCwgZXJyb3IgPT4ge1xuICAgICAgICB0aGlzLmVycm9yTWVzc2FnZSA9ICdFcnJvciByZXRyaWV2aW5nIGNhc2UgYXVkaXQ6ICcgKyBlcnJvci5lcnJvci5lcnJvck1zZztcbiAgICAgIH0pO1xuICB9XG5cbiAgcHVibGljIGdldE5leHRCYXRjaCA9IChldmVudCkgPT4ge1xuICAgIGlmICghdGhpcy5lbmQpIHtcbiAgICAgIHRoaXMuZ2V0QXVkaXRFdmVudHModGhpcy5jYXNlUmVmLCB0aGlzLnNhbmRib3hJZCwgdGhpcy5zdGFydGF0LCB0aGlzLnRvcCk7XG4gICAgfVxuICB9XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjYXNlQXVkaXRTZXJ2aWNlOiBUY0Nhc2VBdWRpdFNlcnZpY2UpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbn1cbiJdfQ==