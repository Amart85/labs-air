/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { take, takeUntil } from 'rxjs/operators';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
import { TcCaseAuditService } from '../../services/tc-case-audit.service';
/**
 * Render audit trail for a case
 *
 *  ![alt-text](../live-apps-case-audit.png "Image")
 *
 * \@example <tcla-live-apps-case-audit></tcla-live-apps-case-audit>
 */
export class LiveAppsCaseAuditComponent extends LiveAppsComponent {
    /**
     * @param {?} caseAuditService
     */
    constructor(caseAuditService) {
        super();
        this.caseAuditService = caseAuditService;
        this.auditEvents = [];
        this.startat = undefined;
        this.top = 20;
        this.end = false;
        this.refresh = (/**
         * @return {?}
         */
        () => {
            this.startat = undefined;
            this.top = 20;
            this.end = false;
            this.auditEvents = [];
            this.getAuditEvents(this.caseRef, this.sandboxId, this.startat, this.top);
        });
        this.getAuditEvents = (/**
         * @param {?} caseRef
         * @param {?} sandboxId
         * @param {?} startAt
         * @param {?} top
         * @return {?}
         */
        (caseRef, sandboxId, startAt, top) => {
            this.caseAuditService.getCaseAudit(this.caseRef, this.sandboxId, this.startat, this.top)
                .pipe(take(1), takeUntil(this._destroyed$)).subscribe((/**
             * @param {?} auditeventlist
             * @return {?}
             */
            auditeventlist => {
                // this will strip any duplicates that may have been retrieved due to fast scrolling
                /** @type {?} */
                const filteredEvents = auditeventlist.auditevents.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                x => this.auditEvents.every((/**
                 * @param {?} y
                 * @return {?}
                 */
                y => y.key.value !== x.key.value))));
                this.auditEvents = this.auditEvents.concat(filteredEvents);
                if (auditeventlist.auditevents.length < this.top) {
                    this.end = true;
                }
                else {
                    this.startat = auditeventlist.auditevents[auditeventlist.auditevents.length - 1].key.value;
                }
            }), (/**
             * @param {?} error
             * @return {?}
             */
            error => {
                this.errorMessage = 'Error retrieving case audit: ' + error.error.errorMsg;
            }));
        });
        this.getNextBatch = (/**
         * @param {?} event
         * @return {?}
         */
        (event) => {
            if (!this.end) {
                this.getAuditEvents(this.caseRef, this.sandboxId, this.startat, this.top);
            }
        });
    }
}
LiveAppsCaseAuditComponent.decorators = [
    { type: Component, args: [{
                selector: 'tcla-live-apps-case-audit',
                template: "<div class=\"tcs-case-audit-pane\" fxLayout=\"column\" fxFill style=\"overflow: hidden;\">\n  <tc-tibco-cloud-widget-header fxFlex=\"nogrow\" [headerText]=\"'Audit'\"\n                                [icon]=\"'tcs-recent-icon'\"></tc-tibco-cloud-widget-header>\n\n\n  <!--div *ngIf=\"auditEvents && auditEvents.length > 0\" class=\"tcs-case-audit-container\">\n\n  </div-->\n  <div class=\"audit-template\" fxFlex>\n    <cdk-virtual-scroll-viewport style=\"height: 100%\" itemSize=\"50\" (scrolledIndexChange)=\"getNextBatch($event)\">\n      <ul style=\"\"\n          *cdkVirtualFor=\"let item of auditEvents; let i = index\">\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'BP_INSTANCE_CREATED'\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"BP_INSTANCE_CREATED\"></mat-icon>\n          </div>\n          <div class=\"audit-details\">\n            <li>\n              <span *ngIf=\"item.principalName\">{{item.principalName.value}} </span>\n              <span>\n                      <span> started </span>\n                      <b>{{item.procName.value}}</b>\n                      <span> on {{item.creationTime.value | date:'full'}}</span>\n                  </span>\n            </li>\n          </div>\n          <div class=\"audit-line\"></div>\n        </div>\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'BP_AUTO_STARTED_INSTANCE'\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"BP_AUTO_STARTED_INSTANCE\"></mat-icon>\n          </div>\n          <li>\n            <!--span *ngIf=\"item.principalName\">{{item.principalName.value}} </span-->\n            <span>\n                    <b>{{item.procName.value}}</b>\n                    <span> auto initiated on {{item.creationTime.value | date:'full'}}</span>\n                </span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'BP_DELAYED_AUTO_STARTED_INSTANCE'\">\n          <!-- todo: JS fix this -->\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"BP_DELAYED_AUTO_STARTED_INSTANCE\"></mat-icon>\n          </div>\n          <li>\n          <span>\n                    <b>{{item.procName.value}}</b>\n\t\t\t\t\t<span> deadline auto initiated on {{item.creationTime.value | date:'full'}}</span>\n          <span>. </span>\n          <span> Time to deadline {{item.delayTime.value}}></span>. </span>\n            <!--span class=\"skip-delay\" *ngIf=\"isInstanceDelayed(item)\" ng-click=\"skipDelay(item)\" skip\"></span>\n                  </span-->\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'BP_DELAYED_AUTO_START_TIMER_EXPIRED'\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"BP_DELAYED_AUTO_START_TIMER_EXPIRED\"></mat-icon>\n          </div>\n          <li>\n          <span>\n            <b>{{item.procName.value}}</b>\n\t\t\t\t\t  <span> deadline reached {{item.creationTime.value | date: 'full'}}></span>\n          </span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n        <div class=\"tcs-case-audit-dtl\"\n             *ngIf=\"item.messageId.value === 'BP_DELAYED_AUTO_STARTED_INSTANCE_CANCELLED_DUE_TO_STATE_CHANGE'\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"BP_DELAYED_AUTO_STARTED_INSTANCE_CANCELLED_DUE_TO_STATE_CHANGE\"></mat-icon>\n          </div>\n          <li>\n            <!--span *ngIf=\"item.principalName\">{{item.principalName.value}} </span-->\n            <span>\n                    <b>{{item.procName.value}}</b>\n            <span> deadline cancelled {{item.creationTime.value | date: 'full'}}</span>\n          </span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n        <div class=\"tcs-case-audit-dtl\"\n             *ngIf=\"item.messageId.value === 'BP_TASK_CREATED' && ['User Task','Email Task','Calculation Task','TCI Task','AuditSafe Task'].indexOf(item.taskType.value) > -1\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"{{item.taskType.value}}\"></mat-icon>\n          </div>\n          <li>\n                <span>\n                    <b>{{item.taskName.value}}</b>\n                    <span> initiated on {{item.creationTime.value | date: 'full'}}</span>\n                </span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'CM_CASE_CREATED'\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"CM_CASE_CREATED\"></mat-icon>\n          </div>\n          <li>\n            <span *ngIf=\"item.principalName\">{{item.principalName.value}}</span>\n            <span class=\"spanPadding\">\n                    <span> created </span>\n                    <b> {{item.label.value}}</b>\n                    <span> in state</span>\n                    <span class=\"audit-state\">\"{{item.caseState.value}}\"</span>\n                    <span> on {{item.creationTime.value | date: 'full'}}</span>\n                </span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'CM_CASE_UPDATED_STATE_CHANGED'\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"CM_CASE_UPDATED_STATE_CHANGED\"></mat-icon>\n          </div>\n          <li>\n            <span *ngIf=\"item.principalName\">{{item.principalName.value}}</span>\n            <span class=\"spanPadding\">\n                    <span> updated </span>\n                    <b> {{item.label.value}}</b>\n                    <span>, new state is></span>\n                    <span class=\"audit-state\"> \"{{item.caseState.value}}\" </span>\n                    <span> on {{item.creationTime.value | date: 'full'}}</span>\n                </span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'CM_CASE_UPDATED'\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"CM_CASE_UPDATED\"></mat-icon>\n          </div>\n          <li>\n            <span *ngIf=\"item.principalName\">{{item.principalName.value}}</span>\n            <span class=\"spanPadding\">\n                    <span> updated </span>\n                    <b> {{item.label.value}} </b>\n                    <span> on {{item.creationTime.value | date: 'full'}}</span>\n                </span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'WR_FOLDER_ARTIFACT_CREATED'\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"WR_FOLDER_ARTIFACT_CREATED\"></mat-icon>\n          </div>\n          <li>\n            <span *ngIf=\"item.principalName\">{{item.principalName.value}}</span>\n            <span class=\"spanPadding\">\n                    <span> uploaded </span>\n                    <span>{{item.artifactName.value}}</span>\n                    <span> on {{item.creationTime.value | date:'full'}}</span>\n                </span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'WR_FOLDER_ARTIFACT_UPDATED'\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"WR_FOLDER_ARTIFACT_UPDATED\"></mat-icon>\n          </div>\n          <li>\n            <span *ngIf=\"item.principalName\">{{item.principalName.value}}</span>\n            <span class=\"spanPadding\">\n                    <span> updated </span>\n                    <span>{{item.artifactName.value}}</span>\n                    <span> on {{item.creationTime.value | date:'full'}}</span>\n                </span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'WR_FOLDER_ARTIFACT_DELETED'\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"WR_FOLDER_ARTIFACT_DELETED\"></mat-icon>\n          </div>\n          <li>\n            <span *ngIf=\"item.principalName\">{{item.principalName.value}}</span>\n            <span class=\"spanPadding\">\n                    <span> deleted </span>\n                    <span>{{item.artifactName.value}}</span>\n                    <span> on {{item.creationTime.value | date:'full'}}</span>\n                </span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n\n        <div class=\"tcs-case-audit-dtl\"\n             *ngIf=\"item.messageId.value === 'BP_TASK_COMPLETED' && ['User Task','Email Task','Calculation Task','TCI Task','AuditSafe Task'].indexOf(item.taskType.value) > -1\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"{{item.taskType.value}}\"></mat-icon>\n          </div>\n          <li>\n            <span *ngIf=\"item.principalName\">{{item.principalName.value}} </span>\n            <span>\n                    <span> completed </span>\n                    <b> {{item.taskName.value}} </b>\n                    <span> on {{item.creationTime.value | date: 'full'}}</span>\n                </span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'BP_INSTANCE_COMPLETED'\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"BP_INSTANCE_COMPLETED\"></mat-icon>\n          </div>\n          <li>\n                <span>\n                    <b>{{item.procName.value}} </b>\n                    <span> on {{item.creationTime.value | date: 'full'}}</span>\n                </span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.severity.value === 'ERROR'\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"ERROR\"></mat-icon>\n          </div>\n          <li>\n                <span *ngIf=\"item.principalName\">{{item.principalName.value}} has error at {{item.taskName.value}}\n                </span>\n            <b> {{item.message.value | parseAuditMessage : item }}</b>\n            <span> on {{item.creationTime.value | date: 'full'}}</span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.severity.value === 'WARN'\">\n          <div class=\"audit-icon-container warn-icon\">\n            <mat-icon svgIcon=\"ERROR\"></mat-icon>\n          </div>\n          <li>\n                <span *ngIf=\"item.principalName\">{{item.principalName.value}} has warning at {{item.taskName.value}}>\n                </span>\n            <b> {{item.message.value | parseAuditMessage : item }}</b>\n            <span> on {{item.creationTime.value | date: 'full'}}</span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n\n\n      </ul>\n    </cdk-virtual-scroll-viewport>\n  </div>\n</div>\n",
                styles: [".tcs-case-audit-pane{border-radius:3px;box-shadow:0 2px 4px 0 rgba(0,0,0,.33);background-color:#fff}.tcs-case-audit-container{height:100%;overflow-x:auto;padding:11px}.tcs-case-audit-dtl{height:70px}.audit-template{padding:20px}.audit-template span{font-family:Source Sans Pro;font-size:12px;font-weight:400;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal}.audit-template ul{padding-left:25px;border-left:2px solid #bfbfbf;display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-align:center;align-items:center;position:relative;margin-left:20px;margin-right:20px}.audit-icon-container{background-color:#fff;padding:5px;position:absolute;left:-19px;border-radius:50%;border:1px solid #0081cb}.audit-icon-container mat-icon{padding:4px}"]
            }] }
];
/** @nocollapse */
LiveAppsCaseAuditComponent.ctorParameters = () => [
    { type: TcCaseAuditService }
];
LiveAppsCaseAuditComponent.propDecorators = {
    caseRef: [{ type: Input }],
    sandboxId: [{ type: Input }]
};
if (false) {
    /**
     * The case reference
     * @type {?}
     */
    LiveAppsCaseAuditComponent.prototype.caseRef;
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsCaseAuditComponent.prototype.sandboxId;
    /** @type {?} */
    LiveAppsCaseAuditComponent.prototype.auditEvents;
    /** @type {?} */
    LiveAppsCaseAuditComponent.prototype.errorMessage;
    /** @type {?} */
    LiveAppsCaseAuditComponent.prototype.startat;
    /** @type {?} */
    LiveAppsCaseAuditComponent.prototype.top;
    /** @type {?} */
    LiveAppsCaseAuditComponent.prototype.end;
    /** @type {?} */
    LiveAppsCaseAuditComponent.prototype.refresh;
    /** @type {?} */
    LiveAppsCaseAuditComponent.prototype.getAuditEvents;
    /** @type {?} */
    LiveAppsCaseAuditComponent.prototype.getNextBatch;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsCaseAuditComponent.prototype.caseAuditService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLWNhc2UtYXVkaXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpYmNvLXRjc3RrL3RjLWxpdmVhcHBzLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2xpdmUtYXBwcy1jYXNlLWF1ZGl0L2xpdmUtYXBwcy1jYXNlLWF1ZGl0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxLQUFLLEVBQW9CLE1BQU0sZUFBZSxDQUFDO0FBQ2xFLE9BQU8sRUFBTSxJQUFJLEVBQUUsU0FBUyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFcEQsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sc0RBQXNELENBQUM7QUFDdkYsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0sc0NBQXNDLENBQUM7Ozs7Ozs7O0FBY3hFLE1BQU0sT0FBTywwQkFBMkIsU0FBUSxpQkFBaUI7Ozs7SUFvRC9ELFlBQXNCLGdCQUFvQztRQUN4RCxLQUFLLEVBQUUsQ0FBQztRQURZLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBb0I7UUF4Q25ELGdCQUFXLEdBQWlCLEVBQUUsQ0FBQztRQUUvQixZQUFPLEdBQUcsU0FBUyxDQUFDO1FBQ3BCLFFBQUcsR0FBRyxFQUFFLENBQUM7UUFDVCxRQUFHLEdBQUcsS0FBSyxDQUFDO1FBRVosWUFBTzs7O1FBQUcsR0FBRyxFQUFFO1lBQ3BCLElBQUksQ0FBQyxPQUFPLEdBQUcsU0FBUyxDQUFDO1lBQ3pCLElBQUksQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDO1lBQ2QsSUFBSSxDQUFDLEdBQUcsR0FBRyxLQUFLLENBQUM7WUFDakIsSUFBSSxDQUFDLFdBQVcsR0FBRyxFQUFFLENBQUM7WUFDdEIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDNUUsQ0FBQyxFQUFBO1FBRU0sbUJBQWM7Ozs7Ozs7UUFBRyxDQUFDLE9BQWUsRUFBRSxTQUFpQixFQUFFLE9BQWUsRUFBRSxHQUFXLEVBQUUsRUFBRTtZQUMzRixJQUFJLENBQUMsZ0JBQWdCLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUM7aUJBQ3JGLElBQUksQ0FDSCxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQ1AsU0FBUyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FDNUIsQ0FBQyxTQUFTOzs7O1lBQ1gsY0FBYyxDQUFDLEVBQUU7OztzQkFFVCxjQUFjLEdBQUcsY0FBYyxDQUFDLFdBQVcsQ0FBQyxNQUFNOzs7O2dCQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLOzs7O2dCQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUMsRUFBQztnQkFDdkgsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsQ0FBQztnQkFDM0QsSUFBSSxjQUFjLENBQUMsV0FBVyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFO29CQUNoRCxJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQztpQkFDakI7cUJBQU07b0JBQ0wsSUFBSSxDQUFDLE9BQU8sR0FBRyxjQUFjLENBQUMsV0FBVyxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUM7aUJBQzVGO1lBQ0gsQ0FBQzs7OztZQUFFLEtBQUssQ0FBQyxFQUFFO2dCQUNULElBQUksQ0FBQyxZQUFZLEdBQUcsK0JBQStCLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUM7WUFDN0UsQ0FBQyxFQUFDLENBQUM7UUFDUCxDQUFDLEVBQUE7UUFFTSxpQkFBWTs7OztRQUFHLENBQUMsS0FBSyxFQUFFLEVBQUU7WUFDOUIsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUU7Z0JBQ2IsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7YUFDM0U7UUFDSCxDQUFDLEVBQUE7SUFJRCxDQUFDOzs7WUEzREYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSwyQkFBMkI7Z0JBQ3JDLG1zV0FBb0Q7O2FBRXJEOzs7O1lBYk8sa0JBQWtCOzs7c0JBbUJ2QixLQUFLO3dCQUtMLEtBQUs7Ozs7Ozs7SUFMTiw2Q0FBeUI7Ozs7O0lBS3pCLCtDQUEyQjs7SUFFM0IsaURBQXNDOztJQUN0QyxrREFBNEI7O0lBQzVCLDZDQUEyQjs7SUFDM0IseUNBQWdCOztJQUNoQix5Q0FBbUI7O0lBRW5CLDZDQU1DOztJQUVELG9EQWtCQzs7SUFFRCxrREFJQzs7Ozs7SUFFVyxzREFBOEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7bWFwLCB0YWtlLCB0YWtlVW50aWx9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7QXVkaXRFdmVudH0gZnJvbSAnLi4vLi4vbW9kZWxzL3RjLWNhc2UtYXVkaXQnO1xuaW1wb3J0IHtMaXZlQXBwc0NvbXBvbmVudH0gZnJvbSAnLi4vbGl2ZS1hcHBzLWNvbXBvbmVudC9saXZlLWFwcHMtY29tcG9uZW50LmNvbXBvbmVudCc7XG5pbXBvcnQge1RjQ2FzZUF1ZGl0U2VydmljZX0gZnJvbSAnLi4vLi4vc2VydmljZXMvdGMtY2FzZS1hdWRpdC5zZXJ2aWNlJztcblxuLyoqXG4gKiBSZW5kZXIgYXVkaXQgdHJhaWwgZm9yIGEgY2FzZVxuICpcbiAqICAhW2FsdC10ZXh0XSguLi9saXZlLWFwcHMtY2FzZS1hdWRpdC5wbmcgXCJJbWFnZVwiKVxuICpcbiAqQGV4YW1wbGUgPHRjbGEtbGl2ZS1hcHBzLWNhc2UtYXVkaXQ+PC90Y2xhLWxpdmUtYXBwcy1jYXNlLWF1ZGl0PlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0Y2xhLWxpdmUtYXBwcy1jYXNlLWF1ZGl0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xpdmUtYXBwcy1jYXNlLWF1ZGl0LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbGl2ZS1hcHBzLWNhc2UtYXVkaXQuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIExpdmVBcHBzQ2FzZUF1ZGl0Q29tcG9uZW50IGV4dGVuZHMgTGl2ZUFwcHNDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuXG4gIC8qKlxuICAgKiBUaGUgY2FzZSByZWZlcmVuY2VcbiAgICovXG4gIEBJbnB1dCgpIGNhc2VSZWY6IHN0cmluZztcblxuICAvKipcbiAgICogc2FuZGJveElkIC0gdGhpcyBjb21lcyBmcm9tIGNsYWltcyByZXNvbHZlclxuICAgKi9cbiAgQElucHV0KCkgc2FuZGJveElkOiBudW1iZXI7XG5cbiAgcHVibGljIGF1ZGl0RXZlbnRzOiBBdWRpdEV2ZW50W10gPSBbXTtcbiAgcHVibGljIGVycm9yTWVzc2FnZTogc3RyaW5nO1xuICBwdWJsaWMgc3RhcnRhdCA9IHVuZGVmaW5lZDtcbiAgcHVibGljIHRvcCA9IDIwO1xuICBwdWJsaWMgZW5kID0gZmFsc2U7XG5cbiAgcHVibGljIHJlZnJlc2ggPSAoKSA9PiB7XG4gICAgdGhpcy5zdGFydGF0ID0gdW5kZWZpbmVkO1xuICAgIHRoaXMudG9wID0gMjA7XG4gICAgdGhpcy5lbmQgPSBmYWxzZTtcbiAgICB0aGlzLmF1ZGl0RXZlbnRzID0gW107XG4gICAgdGhpcy5nZXRBdWRpdEV2ZW50cyh0aGlzLmNhc2VSZWYsIHRoaXMuc2FuZGJveElkLCB0aGlzLnN0YXJ0YXQsIHRoaXMudG9wKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRBdWRpdEV2ZW50cyA9IChjYXNlUmVmOiBzdHJpbmcsIHNhbmRib3hJZDogbnVtYmVyLCBzdGFydEF0OiBudW1iZXIsIHRvcDogbnVtYmVyKSA9PiB7XG4gICAgdGhpcy5jYXNlQXVkaXRTZXJ2aWNlLmdldENhc2VBdWRpdCh0aGlzLmNhc2VSZWYsIHRoaXMuc2FuZGJveElkLCB0aGlzLnN0YXJ0YXQsIHRoaXMudG9wKVxuICAgICAgLnBpcGUoXG4gICAgICAgIHRha2UoMSksXG4gICAgICAgIHRha2VVbnRpbCh0aGlzLl9kZXN0cm95ZWQkKVxuICAgICAgKS5zdWJzY3JpYmUoXG4gICAgICBhdWRpdGV2ZW50bGlzdCA9PiB7XG4gICAgICAgIC8vIHRoaXMgd2lsbCBzdHJpcCBhbnkgZHVwbGljYXRlcyB0aGF0IG1heSBoYXZlIGJlZW4gcmV0cmlldmVkIGR1ZSB0byBmYXN0IHNjcm9sbGluZ1xuICAgICAgICBjb25zdCBmaWx0ZXJlZEV2ZW50cyA9IGF1ZGl0ZXZlbnRsaXN0LmF1ZGl0ZXZlbnRzLmZpbHRlcih4ID0+IHRoaXMuYXVkaXRFdmVudHMuZXZlcnkoeSA9PiB5LmtleS52YWx1ZSAhPT0geC5rZXkudmFsdWUpKVxuICAgICAgICB0aGlzLmF1ZGl0RXZlbnRzID0gdGhpcy5hdWRpdEV2ZW50cy5jb25jYXQoZmlsdGVyZWRFdmVudHMpO1xuICAgICAgICBpZiAoYXVkaXRldmVudGxpc3QuYXVkaXRldmVudHMubGVuZ3RoIDwgdGhpcy50b3ApIHtcbiAgICAgICAgICB0aGlzLmVuZCA9IHRydWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5zdGFydGF0ID0gYXVkaXRldmVudGxpc3QuYXVkaXRldmVudHNbYXVkaXRldmVudGxpc3QuYXVkaXRldmVudHMubGVuZ3RoIC0gMV0ua2V5LnZhbHVlO1xuICAgICAgICB9XG4gICAgICB9LCBlcnJvciA9PiB7XG4gICAgICAgIHRoaXMuZXJyb3JNZXNzYWdlID0gJ0Vycm9yIHJldHJpZXZpbmcgY2FzZSBhdWRpdDogJyArIGVycm9yLmVycm9yLmVycm9yTXNnO1xuICAgICAgfSk7XG4gIH1cblxuICBwdWJsaWMgZ2V0TmV4dEJhdGNoID0gKGV2ZW50KSA9PiB7XG4gICAgaWYgKCF0aGlzLmVuZCkge1xuICAgICAgdGhpcy5nZXRBdWRpdEV2ZW50cyh0aGlzLmNhc2VSZWYsIHRoaXMuc2FuZGJveElkLCB0aGlzLnN0YXJ0YXQsIHRoaXMudG9wKTtcbiAgICB9XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgY2FzZUF1ZGl0U2VydmljZTogVGNDYXNlQXVkaXRTZXJ2aWNlKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG59XG4iXX0=