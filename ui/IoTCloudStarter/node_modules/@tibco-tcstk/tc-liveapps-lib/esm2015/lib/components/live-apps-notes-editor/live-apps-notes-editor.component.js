/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
/**
 * Editor component to edit a note
 *
 * ![alt-text](../live-apps-notes-editor.png "")
 *
 * \@example <tcla-live-apps-notes-editor></tcla-live-apps-notes-editor>
 */
export class LiveAppsNotesEditorComponent extends LiveAppsComponent {
    // notify text submitted
    constructor() {
        super();
        // use 'CASE_APP' to share notes with case manager
        this.isReply = false;
        /**
         * ~event noteSubmitted : Internal
         */
        this.noteSubmitted = new EventEmitter(); // notify text submitted
        this.submitNote = (/**
         * @param {?} noteText
         * @return {?}
         */
        (noteText) => {
            this.noteSubmitted.emit(noteText);
            this.noteText = undefined;
        });
    }
}
LiveAppsNotesEditorComponent.decorators = [
    { type: Component, args: [{
                selector: 'tcla-live-apps-notes-editor',
                template: "<div class=\"tcs-collaboration-new-thread\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxFlex>\n  <mat-icon *ngIf=\"isReply\" class=\"tcs-icon tcs-collaboration-reply-item-icon\" svgIcon=\"tcs-collaboration-reply\"></mat-icon>\n  <form class=\"tcs-collaboration-new-thread-form\" #newThreadForm=\"ngForm\" fxFlex>\n    <textarea fxFlex class=\"tcs-collaboration-input\" [(ngModel)]=\"noteText\" name=\"noteText\" md-maxlength=\"10000\" placeholder=\"New Note... \" rows=\"2\"></textarea>\n  </form>\n  <mat-icon class=\"tcs-icon tcs-collaboration-send-icon\" svgIcon=\"tcs-collaboration-send\" (click)=\"submitNote(noteText)\"></mat-icon>\n</div>\n",
                styles: [".tcs-collaboration-new-thread-form{max-width:90%;max-height:100%}.tcs-collaboration-input{height:55px;max-width:100%;border-color:#d5e6ff;font-size:11px;font-weight:400;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:-.1px;color:#b6b6b6;resize:none;border-radius:3px}.tcs-icon.tcs-collaboration-send-icon{height:24px;width:24px;margin-left:12px}.tcs-icon{height:20px;width:20px}.tcs-collaboration-reply-item-icon{-webkit-transform:scale(1,-1);transform:scale(1,-1);margin-top:10px}"]
            }] }
];
/** @nocollapse */
LiveAppsNotesEditorComponent.ctorParameters = () => [];
LiveAppsNotesEditorComponent.propDecorators = {
    noteText: [{ type: Input }],
    isReply: [{ type: Input }],
    noteSubmitted: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    LiveAppsNotesEditorComponent.prototype.noteText;
    /** @type {?} */
    LiveAppsNotesEditorComponent.prototype.isReply;
    /**
     * ~event noteSubmitted : Internal
     * @type {?}
     */
    LiveAppsNotesEditorComponent.prototype.noteSubmitted;
    /** @type {?} */
    LiveAppsNotesEditorComponent.prototype.submitNote;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLW5vdGVzLWVkaXRvci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGliY28tdGNzdGsvdGMtbGl2ZWFwcHMtbGliLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvbGl2ZS1hcHBzLW5vdGVzLWVkaXRvci9saXZlLWFwcHMtbm90ZXMtZWRpdG9yLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUM3RSxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxzREFBc0QsQ0FBQzs7Ozs7Ozs7QUFldkYsTUFBTSxPQUFPLDRCQUE2QixTQUFRLGlCQUFpQjs7SUFVakU7UUFDRSxLQUFLLEVBQUUsQ0FBQzs7UUFURCxZQUFPLEdBQUcsS0FBSyxDQUFDOzs7O1FBTWYsa0JBQWEsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDLENBQUMsd0JBQXdCO1FBTS9ELGVBQVU7Ozs7UUFBRyxDQUFDLFFBQVEsRUFBRSxFQUFFO1lBQy9CLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ2xDLElBQUksQ0FBQyxRQUFRLEdBQUcsU0FBUyxDQUFDO1FBQzVCLENBQUMsRUFBQTtJQUxELENBQUM7OztZQWpCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLDZCQUE2QjtnQkFDdkMsaXFCQUFzRDs7YUFFdkQ7Ozs7O3VCQUVFLEtBQUs7c0JBQ0wsS0FBSzs0QkFNTCxNQUFNOzs7O0lBUFAsZ0RBQTBCOztJQUMxQiwrQ0FBeUI7Ozs7O0lBTXpCLHFEQUE2Qzs7SUFNN0Msa0RBR0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtMaXZlQXBwc0NvbXBvbmVudH0gZnJvbSAnLi4vbGl2ZS1hcHBzLWNvbXBvbmVudC9saXZlLWFwcHMtY29tcG9uZW50LmNvbXBvbmVudCc7XG5cblxuLyoqXG4gKiBFZGl0b3IgY29tcG9uZW50IHRvIGVkaXQgYSBub3RlXG4gKlxuICogIVthbHQtdGV4dF0oLi4vbGl2ZS1hcHBzLW5vdGVzLWVkaXRvci5wbmcgXCJcIilcbiAqXG4gKkBleGFtcGxlIDx0Y2xhLWxpdmUtYXBwcy1ub3Rlcy1lZGl0b3I+PC90Y2xhLWxpdmUtYXBwcy1ub3Rlcy1lZGl0b3I+XG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RjbGEtbGl2ZS1hcHBzLW5vdGVzLWVkaXRvcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9saXZlLWFwcHMtbm90ZXMtZWRpdG9yLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbGl2ZS1hcHBzLW5vdGVzLWVkaXRvci5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgTGl2ZUFwcHNOb3Rlc0VkaXRvckNvbXBvbmVudCBleHRlbmRzIExpdmVBcHBzQ29tcG9uZW50IHtcbiAgQElucHV0KCkgbm90ZVRleHQ6IHN0cmluZzsgLy8gdXNlICdDQVNFX0FQUCcgdG8gc2hhcmUgbm90ZXMgd2l0aCBjYXNlIG1hbmFnZXJcbiAgQElucHV0KCkgaXNSZXBseSA9IGZhbHNlO1xuXG4gIC8qKlxuICAgKiB+ZXZlbnQgbm90ZVN1Ym1pdHRlZCA6IEludGVybmFsXG4gICAqL1xuXG4gIEBPdXRwdXQoKSBub3RlU3VibWl0dGVkID0gbmV3IEV2ZW50RW1pdHRlcigpOyAvLyBub3RpZnkgdGV4dCBzdWJtaXR0ZWRcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgcHVibGljIHN1Ym1pdE5vdGUgPSAobm90ZVRleHQpID0+IHtcbiAgICB0aGlzLm5vdGVTdWJtaXR0ZWQuZW1pdChub3RlVGV4dCk7XG4gICAgdGhpcy5ub3RlVGV4dCA9IHVuZGVmaW5lZDtcbiAgfVxuXG59XG4iXX0=