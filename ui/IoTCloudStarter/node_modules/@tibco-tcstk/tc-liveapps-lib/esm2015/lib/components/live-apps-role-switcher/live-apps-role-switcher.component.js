/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { RoleAttribute } from '@tibco-tcstk/tc-core-lib';
/**
 * Switch roles
 *
 * \@example <tcla-live-apps-role-switcher></tcla-live-apps-role-switcher>
 */
export class LiveAppsRoleSwitcherComponent {
    constructor() {
        /**
         * ~event changeRoleEvent : Role selected
         * ~payload RoleAttribute : RoleAttribute object emitted when role is c hanged by switcher
         */
        this.changeRoleEvent = new EventEmitter();
        this.selectRole = (/**
         * @param {?} role
         * @return {?}
         */
        (role) => {
            this.changeRoleEvent.emit(role);
        });
        this.compareObjects = (/**
         * @param {?} o1
         * @param {?} o2
         * @return {?}
         */
        (o1, o2) => {
            return o1.id === o2.id;
        });
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
LiveAppsRoleSwitcherComponent.decorators = [
    { type: Component, args: [{
                selector: 'tcla-live-apps-role-switcher',
                template: "<div>\n    <mat-form-field>\n        <mat-label>Viewing as</mat-label>\n        <mat-select [(ngModel)]=\"selectedRole\" (selectionChange)=\"selectRole(selectedRole)\" [compareWith]=\"compareObjects\"> \n            <mat-option *ngFor=\"let role of roles\" [value]=\"role\">{{role.display}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>",
                styles: [""]
            }] }
];
/** @nocollapse */
LiveAppsRoleSwitcherComponent.ctorParameters = () => [];
LiveAppsRoleSwitcherComponent.propDecorators = {
    roles: [{ type: Input }],
    selectedRole: [{ type: Input }],
    changeRoleEvent: [{ type: Output }]
};
if (false) {
    /**
     * Roles - The users current roles
     * @type {?}
     */
    LiveAppsRoleSwitcherComponent.prototype.roles;
    /**
     * RoleAttribute - selected Role - check with MC
     * @type {?}
     */
    LiveAppsRoleSwitcherComponent.prototype.selectedRole;
    /**
     * ~event changeRoleEvent : Role selected
     * ~payload RoleAttribute : RoleAttribute object emitted when role is c hanged by switcher
     * @type {?}
     */
    LiveAppsRoleSwitcherComponent.prototype.changeRoleEvent;
    /** @type {?} */
    LiveAppsRoleSwitcherComponent.prototype.selectRole;
    /** @type {?} */
    LiveAppsRoleSwitcherComponent.prototype.compareObjects;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLXJvbGUtc3dpdGNoZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpYmNvLXRjc3RrL3RjLWxpdmVhcHBzLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2xpdmUtYXBwcy1yb2xlLXN3aXRjaGVyL2xpdmUtYXBwcy1yb2xlLXN3aXRjaGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMvRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7Ozs7OztBQWF6RCxNQUFNLE9BQU8sNkJBQTZCO0lBbUJ4Qzs7Ozs7UUFIVSxvQkFBZSxHQUFnQyxJQUFJLFlBQVksRUFBaUIsQ0FBQztRQVFsRixlQUFVOzs7O1FBQUcsQ0FBQyxJQUFtQixFQUFFLEVBQUU7WUFDeEMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDcEMsQ0FBQyxFQUFBO1FBRUQsbUJBQWM7Ozs7O1FBQUcsQ0FBQyxFQUFpQixFQUFFLEVBQWlCLEVBQVcsRUFBRTtZQUMvRCxPQUFPLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsQ0FBQztRQUMzQixDQUFDLEVBQUE7SUFYYSxDQUFDOzs7O0lBRWYsUUFBUTtJQUNSLENBQUM7OztZQTNCSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLDhCQUE4QjtnQkFDeEMsaVhBQXVEOzthQUUxRDs7Ozs7b0JBTUUsS0FBSzsyQkFLTCxLQUFLOzhCQU1MLE1BQU07Ozs7Ozs7SUFYUCw4Q0FBZ0M7Ozs7O0lBS2hDLHFEQUFxQzs7Ozs7O0lBTXJDLHdEQUEyRjs7SUFRekYsbURBRUM7O0lBRUQsdURBRUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb2xlQXR0cmlidXRlIH0gZnJvbSAnQHRpYmNvLXRjc3RrL3RjLWNvcmUtbGliJztcblxuLyoqXG4gKiBTd2l0Y2ggcm9sZXNcbiAqXG4gKkBleGFtcGxlIDx0Y2xhLWxpdmUtYXBwcy1yb2xlLXN3aXRjaGVyPjwvdGNsYS1saXZlLWFwcHMtcm9sZS1zd2l0Y2hlcj5cbiAqL1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3RjbGEtbGl2ZS1hcHBzLXJvbGUtc3dpdGNoZXInLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9saXZlLWFwcHMtcm9sZS1zd2l0Y2hlci5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vbGl2ZS1hcHBzLXJvbGUtc3dpdGNoZXIuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIExpdmVBcHBzUm9sZVN3aXRjaGVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAvKipcbiAgICogUm9sZXMgLSBUaGUgdXNlcnMgY3VycmVudCByb2xlc1xuICAgKi9cbiAgQElucHV0KCkgcm9sZXM6IFJvbGVBdHRyaWJ1dGVbXTtcblxuICAvKipcbiAgICogUm9sZUF0dHJpYnV0ZSAtIHNlbGVjdGVkIFJvbGUgLSBjaGVjayB3aXRoIE1DXG4gICAqL1xuICBASW5wdXQoKSBzZWxlY3RlZFJvbGU6IFJvbGVBdHRyaWJ1dGU7XG5cbiAgLyoqXG4gICAqIH5ldmVudCBjaGFuZ2VSb2xlRXZlbnQgOiBSb2xlIHNlbGVjdGVkXG4gICAqIH5wYXlsb2FkIFJvbGVBdHRyaWJ1dGUgOiBSb2xlQXR0cmlidXRlIG9iamVjdCBlbWl0dGVkIHdoZW4gcm9sZSBpcyBjIGhhbmdlZCBieSBzd2l0Y2hlclxuICAgKi9cbiAgQE91dHB1dCgpIGNoYW5nZVJvbGVFdmVudDogRXZlbnRFbWl0dGVyPFJvbGVBdHRyaWJ1dGU+ID0gbmV3IEV2ZW50RW1pdHRlcjxSb2xlQXR0cmlidXRlPigpO1xuXG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICAgIG5nT25Jbml0KCkge1xuICAgIH1cblxuICAgIHB1YmxpYyBzZWxlY3RSb2xlID0gKHJvbGU6IFJvbGVBdHRyaWJ1dGUpID0+IHtcbiAgICAgICAgdGhpcy5jaGFuZ2VSb2xlRXZlbnQuZW1pdChyb2xlKTtcbiAgICB9XG5cbiAgICBjb21wYXJlT2JqZWN0cyA9IChvMTogUm9sZUF0dHJpYnV0ZSwgbzI6IFJvbGVBdHRyaWJ1dGUpOiBib29sZWFuID0+IHtcbiAgICAgICAgcmV0dXJuIG8xLmlkID09PSBvMi5pZDtcbiAgICB9XG59XG4iXX0=