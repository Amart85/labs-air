/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { Location } from '@angular/common';
import { TcCoreCommonFunctions, LandingPageItemConfig, TcGeneralLandingPageService } from '@tibco-tcstk/tc-core-lib';
import { Router, ActivatedRoute } from '@angular/router';
import { map } from 'rxjs/operators';
import { TcRolesService } from '../../services/tc-roles-service.ts.service';
/**
 * Landing page
 *
 * This component allows a configurable landing page on a per role basis
 *
 * \@example <tcla-live-apps-landing-page></tcla-live-apps-landing-page>
 */
export class LiveAppsLandingPageComponent {
    /**
     * @param {?} location
     * @param {?} route
     * @param {?} router
     * @param {?} landingPageService
     * @param {?} rolesService
     */
    constructor(location, route, router, landingPageService, rolesService) {
        this.location = location;
        this.route = route;
        this.router = router;
        this.landingPageService = landingPageService;
        this.rolesService = rolesService;
        this.moveHome = (/**
         * @return {?}
         */
        () => {
            this.router.navigate([this.navigateURL]);
        });
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        /** @type {?} */
        const uiAppId = this.route.snapshot.data.generalConfigHolder.uiAppId;
        /** @type {?} */
        const roleId = this.route.snapshot.data.activeRoleHolder.id;
        this.landingPageService.getLandingPageForRole(roleId, uiAppId).pipe(map((/**
         * @param {?} landingPage
         * @return {?}
         */
        landingPage => {
            if (landingPage != undefined) {
                this.title = landingPage.title;
                this.subtitle = landingPage.subtitle;
                this.backgroundImage = (landingPage.backgroundURL != '' ? TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, landingPage.backgroundURL) : '');
                this.highlights = new Array();
                this.highlights.push(new LandingPageItemConfig().deserialize({
                    title: landingPage.highlights[0].title,
                    content: landingPage.highlights[0].content,
                    iconURL: landingPage.highlights[0].iconURL
                }));
                this.highlights.push(new LandingPageItemConfig().deserialize({
                    title: landingPage.highlights[1].title,
                    content: landingPage.highlights[1].content,
                    iconURL: landingPage.highlights[1].iconURL
                }));
                this.highlights.push(new LandingPageItemConfig().deserialize({
                    title: landingPage.highlights[2].title,
                    content: landingPage.highlights[2].content,
                    iconURL: landingPage.highlights[2].iconURL
                }));
                this.navigateURL = landingPage.homeRoute;
            }
            else {
                this.router.navigate(['errorHandler/NO_ROLE/NO_ROLE']);
            }
        }))).subscribe();
    }
}
LiveAppsLandingPageComponent.decorators = [
    { type: Component, args: [{
                selector: 'tcla-live-apps-landing-page',
                template: "<tc-tibco-cloud-splash-screen fxFill\n    [title]=\"title\" \n    [subTitle]=\"subtitle\" \n    [backGroundImage]=\"backgroundImage\"\n    [highlights]=\"highlights\"\n    (getStartedEvent)=\"moveHome()\">\n</tc-tibco-cloud-splash-screen>",
                styles: [""]
            }] }
];
/** @nocollapse */
LiveAppsLandingPageComponent.ctorParameters = () => [
    { type: Location },
    { type: ActivatedRoute },
    { type: Router },
    { type: TcGeneralLandingPageService },
    { type: TcRolesService }
];
if (false) {
    /** @type {?} */
    LiveAppsLandingPageComponent.prototype.title;
    /** @type {?} */
    LiveAppsLandingPageComponent.prototype.subtitle;
    /** @type {?} */
    LiveAppsLandingPageComponent.prototype.backgroundImage;
    /** @type {?} */
    LiveAppsLandingPageComponent.prototype.highlights;
    /**
     * @type {?}
     * @private
     */
    LiveAppsLandingPageComponent.prototype.navigateURL;
    /** @type {?} */
    LiveAppsLandingPageComponent.prototype.moveHome;
    /**
     * @type {?}
     * @private
     */
    LiveAppsLandingPageComponent.prototype.location;
    /**
     * @type {?}
     * @private
     */
    LiveAppsLandingPageComponent.prototype.route;
    /**
     * @type {?}
     * @private
     */
    LiveAppsLandingPageComponent.prototype.router;
    /**
     * @type {?}
     * @private
     */
    LiveAppsLandingPageComponent.prototype.landingPageService;
    /**
     * @type {?}
     * @private
     */
    LiveAppsLandingPageComponent.prototype.rolesService;
}
//# sourceMappingURL=data:application/json;base64,