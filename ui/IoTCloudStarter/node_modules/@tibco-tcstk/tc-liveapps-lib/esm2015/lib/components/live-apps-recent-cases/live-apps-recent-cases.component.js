/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { LiveAppsService } from '../../services/live-apps.service';
import { map, take, takeUntil } from 'rxjs/operators';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
/**
 * Recent cases widget, this Component list recent visited Cases.
 *
 * ![alt-text](../live-apps-recent-cases.png "")
 *
 * \@example <tcla-live-apps-recent-cases></tcla-live-apps-recent-cases>
 */
export class LiveAppsRecentCasesComponent extends LiveAppsComponent {
    /**
     * @param {?} liveapps
     */
    constructor(liveapps) {
        super();
        this.liveapps = liveapps;
        /**
         * case card format - list, card, miniCard, staticList (no click event)
         */
        this.displayType = this.displayType ? this.displayType : 'miniCard'; // miniCard, card, list
        // miniCard, card, list
        /**
         * Whether to show the header bar in the widget - eg. favorites on home page (contains icon etc) - if off icons still appear without bar
         */
        this.showHeader = this.showHeader ? this.showHeader : true;
        /**
         * ~event clickCase : Case clicked
         * ~payload CaseRoute : CaseRoute object output when case is clicked so calling component can route accordingly - ie. route to case
         */
        this.clickCase = new EventEmitter();
        this.clickCaseAction = (/**
         * @param {?} caseRoute
         * @return {?}
         */
        (caseRoute) => {
            this.clickCase.emit(caseRoute);
        });
        this.refresh = (/**
         * @return {?}
         */
        () => {
            this.recentCases = [];
            this.liveapps.getRecentCases(this.uiAppId, this.sandboxId)
                .pipe(take(1), takeUntil(this._destroyed$), map((/**
             * @param {?} recentCases
             * @return {?}
             */
            recentCases => {
                this.recentCases = recentCases.caseRefs || [];
            }))).subscribe(null, (/**
             * @param {?} error
             * @return {?}
             */
            error => { this.errorMessage = 'Error retrieving recent cases: ' + error.error.errorMsg; }));
        });
        this.clearRecentCases = (/**
         * @return {?}
         */
        () => {
            // -1 will clear recent cases
            this.liveapps.setRecentCase('-1', this.uiAppId, this.sandboxId);
            this.recentCases = [];
        });
        this.handleDeleted = (/**
         * @param {?} caseRef
         * @return {?}
         */
        (caseRef) => {
            this.recentCases.splice(this.recentCases.indexOf(caseRef), 1);
            this.liveapps.unsetRecentCase(caseRef, this.uiAppId, this.sandboxId);
        });
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.refresh();
    }
}
LiveAppsRecentCasesComponent.decorators = [
    { type: Component, args: [{
                selector: 'tcla-live-apps-recent-cases',
                template: "<div class=\"tcs-case-recent-box\" fxLayout=\"column\" fxFill>\n  <div *ngIf=\"showHeader\" class=\"tcs-case-recent-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div fxLayoutAlign=\"start center\">\n      <mat-icon class=\"tcs-icon tcs-recent-icon\" svgIcon=\"tcs-recent-icon\"></mat-icon>\n      <div class=\"tcs-case-recent-header-text\">Recent</div>\n    </div>\n    <mat-icon (click)=\"clearRecentCases()\" class=\"tcs-icon tcs-icon-active tcs-clear-recent-icon\" svgIcon=\"tcs-clear-icon\" matTooltip=\"Clear Recent Cases\" matTooltipPosition=\"left\" matTooltipShowDelay=\"1000\"></mat-icon>\n  </div>\n  <div *ngIf=\"!showHeader\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n    <mat-icon style=\"margin: 5px\" (click)=\"clearRecentCases()\" class=\"tcs-icon tcs-icon-active tcs-clear-recent-icon\" svgIcon=\"tcs-clear-icon\" matTooltip=\"Clear Recent Cases\" matTooltipPosition=\"left\" matTooltipShowDelay=\"1000\"></mat-icon>\n  </div>\n  <div *ngIf=\"recentCases.length > 0\"class=\"tcs-case-recent-flow-list\" fxLayout=\"column\" fxLayout=\"row wrap\">\n    <div class=\"tcs-case-recent-item-box\" *ngFor=\"let case of recentCases\" fxFlex>\n      <tcla-live-apps-case-summary [uiAppId]=\"uiAppId\" [typeBar]=\"true\" [borderCard]=\"false\" [displayType]=\"displayType\" [sandboxId]=\"sandboxId\" [caseRef]=\"case\" (clickCase)=\"clickCaseAction($event)\" (deleted)=\"handleDeleted($event)\"></tcla-live-apps-case-summary>\n      <div class=\"tcs-case-recent-line\"></div>\n    </div>\n  </div>\n  <div *ngIf=\"!(recentCases.length > 0)\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"10px\" style=\"margin-top: 20px;\">\n    <mat-icon [svgIcon]=\"'ic-no-cases-icon'\" style=\"height: 48px; width: 48px;\"></mat-icon>\n    <div style=\"height: 100%\" fxLayoutAlign=\"start center\">\n      <span class=\"tcs-no-item-text\">No cases found</span>\n    </div>\n  </div>\n</div>\n",
                styles: [".tcs-case-recent-box{border-radius:3px;box-shadow:0 2px 8px 0 #dedede;background-color:#fff}.tcs-case-recent-header{min-height:40px;border-radius:3px 3px 0 0;box-shadow:0 1px 2px 0 #dedede;padding-left:20px;padding-right:20px}.tcs-case-recent-header-text{font-family:Source Sans Pro;font-size:18px;font-weight:600;font-style:normal;font-stretch:normal;line-height:1.5;letter-spacing:.3px;text-align:left;color:#000;margin-left:10px}.tcs-case-recent-flow-list{margin:24px;overflow-y:auto}.tcs-case-recent-item-box{max-width:288px;margin:3px 5px 10px}.tcs-icon.tcs-icon-active:hover{cursor:pointer}:host ::ng-deep .tcs-icon.tcs-icon-active:hover .svg-content{fill:#0081cb}.tcs-case-recent-line{padding:0;margin:4px 5px 0;border-bottom:1.1px solid #f4f4f4}.tcs-no-item-text{font-family:Source Sans Pro;font-size:16px;font-weight:400;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;color:#b6b6b6}"]
            }] }
];
/** @nocollapse */
LiveAppsRecentCasesComponent.ctorParameters = () => [
    { type: LiveAppsService }
];
LiveAppsRecentCasesComponent.propDecorators = {
    sandboxId: [{ type: Input }],
    uiAppId: [{ type: Input }],
    displayType: [{ type: Input }],
    showHeader: [{ type: Input }],
    clickCase: [{ type: Output }]
};
if (false) {
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsRecentCasesComponent.prototype.sandboxId;
    /**
     * The Application ID of the UI (should ideally be unique as it is shared state key)
     * @type {?}
     */
    LiveAppsRecentCasesComponent.prototype.uiAppId;
    /**
     * case card format - list, card, miniCard, staticList (no click event)
     * @type {?}
     */
    LiveAppsRecentCasesComponent.prototype.displayType;
    /**
     * Whether to show the header bar in the widget - eg. favorites on home page (contains icon etc) - if off icons still appear without bar
     * @type {?}
     */
    LiveAppsRecentCasesComponent.prototype.showHeader;
    /**
     * ~event clickCase : Case clicked
     * ~payload CaseRoute : CaseRoute object output when case is clicked so calling component can route accordingly - ie. route to case
     * @type {?}
     */
    LiveAppsRecentCasesComponent.prototype.clickCase;
    /** @type {?} */
    LiveAppsRecentCasesComponent.prototype.recentCases;
    /** @type {?} */
    LiveAppsRecentCasesComponent.prototype.errorMessage;
    /** @type {?} */
    LiveAppsRecentCasesComponent.prototype.clickCaseAction;
    /** @type {?} */
    LiveAppsRecentCasesComponent.prototype.refresh;
    /** @type {?} */
    LiveAppsRecentCasesComponent.prototype.clearRecentCases;
    /** @type {?} */
    LiveAppsRecentCasesComponent.prototype.handleDeleted;
    /**
     * @type {?}
     * @private
     */
    LiveAppsRecentCasesComponent.prototype.liveapps;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLXJlY2VudC1jYXNlcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGliY28tdGNzdGsvdGMtbGl2ZWFwcHMtbGliLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvbGl2ZS1hcHBzLXJlY2VudC1jYXNlcy9saXZlLWFwcHMtcmVjZW50LWNhc2VzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFxQixNQUFNLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDeEYsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLGtDQUFrQyxDQUFDO0FBRWpFLE9BQU8sRUFBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRXBELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHNEQUFzRCxDQUFDOzs7Ozs7OztBQWN2RixNQUFNLE9BQU8sNEJBQTZCLFNBQVEsaUJBQWlCOzs7O0lBMERqRSxZQUFvQixRQUF5QjtRQUMzQyxLQUFLLEVBQUUsQ0FBQztRQURVLGFBQVEsR0FBUixRQUFRLENBQWlCOzs7O1FBNUNwQyxnQkFBVyxHQUFXLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLHVCQUF1Qjs7Ozs7UUFJL0YsZUFBVSxHQUFZLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQzs7Ozs7UUFNOUQsY0FBUyxHQUE0QixJQUFJLFlBQVksRUFBYSxDQUFDO1FBTXRFLG9CQUFlOzs7O1FBQUcsQ0FBQyxTQUFvQixFQUFFLEVBQUU7WUFDaEQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDakMsQ0FBQyxFQUFBO1FBRU0sWUFBTzs7O1FBQUcsR0FBRyxFQUFFO1lBQ3BCLElBQUksQ0FBQyxXQUFXLEdBQUcsRUFBRSxDQUFDO1lBQ3RCLElBQUksQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQztpQkFDdkQsSUFBSSxDQUNILElBQUksQ0FBQyxDQUFDLENBQUMsRUFDUCxTQUFTLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxFQUMzQixHQUFHOzs7O1lBQUMsV0FBVyxDQUFDLEVBQUU7Z0JBQ2hCLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDLFFBQVEsSUFBSSxFQUFFLENBQUM7WUFDaEQsQ0FBQyxFQUFDLENBQ0gsQ0FBQyxTQUFTLENBQ1gsSUFBSTs7OztZQUFFLEtBQUssQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLFlBQVksR0FBRyxpQ0FBaUMsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDO1FBQ3RHLENBQUMsRUFBQTtRQUVNLHFCQUFnQjs7O1FBQUcsR0FBRyxFQUFFO1lBQzdCLDZCQUE2QjtZQUM3QixJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDaEUsSUFBSSxDQUFDLFdBQVcsR0FBRyxFQUFFLENBQUM7UUFDeEIsQ0FBQyxFQUFBO1FBRU0sa0JBQWE7Ozs7UUFBRyxDQUFDLE9BQWUsRUFBRSxFQUFFO1lBQ3pDLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQzlELElBQUksQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUN2RSxDQUFDLEVBQUE7SUFJRCxDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNqQixDQUFDOzs7WUFyRUYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSw2QkFBNkI7Z0JBQ3ZDLDA1REFBc0Q7O2FBRXZEOzs7O1lBakJPLGVBQWU7Ozt3QkFzQnBCLEtBQUs7c0JBS0wsS0FBSzswQkFLTCxLQUFLO3lCQUlMLEtBQUs7d0JBTUwsTUFBTTs7Ozs7OztJQXBCUCxpREFBMkI7Ozs7O0lBSzNCLCtDQUF5Qjs7Ozs7SUFLekIsbURBQWdGOzs7OztJQUloRixrREFBd0U7Ozs7OztJQU14RSxpREFBNkU7O0lBRzdFLG1EQUE2Qjs7SUFDN0Isb0RBQTRCOztJQUU1Qix1REFFQzs7SUFFRCwrQ0FXQzs7SUFFRCx3REFJQzs7SUFFRCxxREFHQzs7Ozs7SUFFVyxnREFBaUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQsIE91dHB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0xpdmVBcHBzU2VydmljZX0gZnJvbSAnLi4vLi4vc2VydmljZXMvbGl2ZS1hcHBzLnNlcnZpY2UnO1xuaW1wb3J0IHtTdWJqZWN0fSBmcm9tICdyeGpzJztcbmltcG9ydCB7bWFwLCB0YWtlLCB0YWtlVW50aWx9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7Q2FzZUxpc3QsIENhc2VSb3V0ZX0gZnJvbSAnLi4vLi4vbW9kZWxzL2xpdmVhcHBzZGF0YSc7XG5pbXBvcnQge0xpdmVBcHBzQ29tcG9uZW50fSBmcm9tICcuLi9saXZlLWFwcHMtY29tcG9uZW50L2xpdmUtYXBwcy1jb21wb25lbnQuY29tcG9uZW50JztcblxuLyoqXG4gKiBSZWNlbnQgY2FzZXMgd2lkZ2V0LCB0aGlzIENvbXBvbmVudCBsaXN0IHJlY2VudCB2aXNpdGVkIENhc2VzLlxuICpcbiAqICFbYWx0LXRleHRdKC4uL2xpdmUtYXBwcy1yZWNlbnQtY2FzZXMucG5nIFwiXCIpXG4gKlxuICpAZXhhbXBsZSA8dGNsYS1saXZlLWFwcHMtcmVjZW50LWNhc2VzPjwvdGNsYS1saXZlLWFwcHMtcmVjZW50LWNhc2VzPlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0Y2xhLWxpdmUtYXBwcy1yZWNlbnQtY2FzZXMnLFxuICB0ZW1wbGF0ZVVybDogJy4vbGl2ZS1hcHBzLXJlY2VudC1jYXNlcy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2xpdmUtYXBwcy1yZWNlbnQtY2FzZXMuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIExpdmVBcHBzUmVjZW50Q2FzZXNDb21wb25lbnQgZXh0ZW5kcyBMaXZlQXBwc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIC8qKlxuICAgKiBzYW5kYm94SWQgLSB0aGlzIGNvbWVzIGZyb20gY2xhaW1zIHJlc29sdmVyXG4gICAqL1xuICBASW5wdXQoKSBzYW5kYm94SWQ6IG51bWJlcjtcblxuICAvKipcbiAgICogVGhlIEFwcGxpY2F0aW9uIElEIG9mIHRoZSBVSSAoc2hvdWxkIGlkZWFsbHkgYmUgdW5pcXVlIGFzIGl0IGlzIHNoYXJlZCBzdGF0ZSBrZXkpXG4gICAqL1xuICBASW5wdXQoKSB1aUFwcElkOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIGNhc2UgY2FyZCBmb3JtYXQgLSBsaXN0LCBjYXJkLCBtaW5pQ2FyZCwgc3RhdGljTGlzdCAobm8gY2xpY2sgZXZlbnQpXG4gICAqL1xuICBASW5wdXQoKSBkaXNwbGF5VHlwZTogc3RyaW5nID0gdGhpcy5kaXNwbGF5VHlwZSA/IHRoaXMuZGlzcGxheVR5cGUgOiAnbWluaUNhcmQnOyAvLyBtaW5pQ2FyZCwgY2FyZCwgbGlzdFxuICAvKipcbiAgICogV2hldGhlciB0byBzaG93IHRoZSBoZWFkZXIgYmFyIGluIHRoZSB3aWRnZXQgLSBlZy4gZmF2b3JpdGVzIG9uIGhvbWUgcGFnZSAoY29udGFpbnMgaWNvbiBldGMpIC0gaWYgb2ZmIGljb25zIHN0aWxsIGFwcGVhciB3aXRob3V0IGJhclxuICAgKi9cbiAgQElucHV0KCkgc2hvd0hlYWRlcjogYm9vbGVhbiA9IHRoaXMuc2hvd0hlYWRlciA/IHRoaXMuc2hvd0hlYWRlciA6IHRydWU7XG5cbiAgLyoqXG4gICAqIH5ldmVudCBjbGlja0Nhc2UgOiBDYXNlIGNsaWNrZWRcbiAgICogfnBheWxvYWQgQ2FzZVJvdXRlIDogQ2FzZVJvdXRlIG9iamVjdCBvdXRwdXQgd2hlbiBjYXNlIGlzIGNsaWNrZWQgc28gY2FsbGluZyBjb21wb25lbnQgY2FuIHJvdXRlIGFjY29yZGluZ2x5IC0gaWUuIHJvdXRlIHRvIGNhc2VcbiAgICovXG4gIEBPdXRwdXQoKSBjbGlja0Nhc2U6IEV2ZW50RW1pdHRlcjxDYXNlUm91dGU+ID0gbmV3IEV2ZW50RW1pdHRlcjxDYXNlUm91dGU+KCk7XG5cblxuICBwdWJsaWMgcmVjZW50Q2FzZXM6IHN0cmluZ1tdO1xuICBwdWJsaWMgZXJyb3JNZXNzYWdlOiBzdHJpbmc7XG5cbiAgcHVibGljIGNsaWNrQ2FzZUFjdGlvbiA9IChjYXNlUm91dGU6IENhc2VSb3V0ZSkgPT4ge1xuICAgIHRoaXMuY2xpY2tDYXNlLmVtaXQoY2FzZVJvdXRlKTtcbiAgfVxuXG4gIHB1YmxpYyByZWZyZXNoID0gKCkgPT4ge1xuICAgIHRoaXMucmVjZW50Q2FzZXMgPSBbXTtcbiAgICB0aGlzLmxpdmVhcHBzLmdldFJlY2VudENhc2VzKHRoaXMudWlBcHBJZCwgdGhpcy5zYW5kYm94SWQpXG4gICAgICAucGlwZShcbiAgICAgICAgdGFrZSgxKSxcbiAgICAgICAgdGFrZVVudGlsKHRoaXMuX2Rlc3Ryb3llZCQpLFxuICAgICAgICBtYXAocmVjZW50Q2FzZXMgPT4ge1xuICAgICAgICAgIHRoaXMucmVjZW50Q2FzZXMgPSByZWNlbnRDYXNlcy5jYXNlUmVmcyB8fCBbXTtcbiAgICAgICAgfSlcbiAgICAgICkuc3Vic2NyaWJlKFxuICAgICAgbnVsbCwgZXJyb3IgPT4geyB0aGlzLmVycm9yTWVzc2FnZSA9ICdFcnJvciByZXRyaWV2aW5nIHJlY2VudCBjYXNlczogJyArIGVycm9yLmVycm9yLmVycm9yTXNnOyB9KTtcbiAgfVxuXG4gIHB1YmxpYyBjbGVhclJlY2VudENhc2VzID0gKCkgPT4ge1xuICAgIC8vIC0xIHdpbGwgY2xlYXIgcmVjZW50IGNhc2VzXG4gICAgdGhpcy5saXZlYXBwcy5zZXRSZWNlbnRDYXNlKCctMScsIHRoaXMudWlBcHBJZCwgdGhpcy5zYW5kYm94SWQpO1xuICAgIHRoaXMucmVjZW50Q2FzZXMgPSBbXTtcbiAgfVxuXG4gIHB1YmxpYyBoYW5kbGVEZWxldGVkID0gKGNhc2VSZWY6IHN0cmluZykgPT4ge1xuICAgIHRoaXMucmVjZW50Q2FzZXMuc3BsaWNlKHRoaXMucmVjZW50Q2FzZXMuaW5kZXhPZihjYXNlUmVmKSwgMSk7XG4gICAgdGhpcy5saXZlYXBwcy51bnNldFJlY2VudENhc2UoY2FzZVJlZiwgdGhpcy51aUFwcElkLCB0aGlzLnNhbmRib3hJZCk7XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGxpdmVhcHBzOiBMaXZlQXBwc1NlcnZpY2UpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5yZWZyZXNoKCk7XG4gIH1cblxufVxuIl19