/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { LiveAppsSettingsComponent } from '../live-apps-settings/live-apps-settings.component';
import { map, take, takeUntil } from 'rxjs/operators';
import { TcCaseCardConfigService } from '../../services/tc-case-card-config.service';
import { ActivatedRoute } from '@angular/router';
import { TcLiveAppsConfigService } from '../../services/tc-live-apps-config.service';
import { MatSnackBar } from '@angular/material';
/**
 * Configuration of summary cards
 *
 * ![alt-text](../live-apps-settings-summary-cards.png "")
 *
 * \@example <tcla-live-apps-settings-summary-cards></tcla-live-apps-settings-summary-cards>
 */
export class LiveAppsSettingsSummaryCardsComponent extends LiveAppsSettingsComponent {
    /**
     * @param {?} caseCardConfigService
     * @param {?} routeExt
     * @param {?} liveAppsConfigServiceExt
     * @param {?} snackBar
     */
    constructor(caseCardConfigService, routeExt, liveAppsConfigServiceExt, snackBar) {
        super(routeExt, liveAppsConfigServiceExt, snackBar);
        this.caseCardConfigService = caseCardConfigService;
        this.routeExt = routeExt;
        this.liveAppsConfigServiceExt = liveAppsConfigServiceExt;
        this.snackBar = snackBar;
        this.handleConfigChanged = (/**
         * @param {?} caseCardConfig
         * @return {?}
         */
        (caseCardConfig) => {
            this.caseCardConfig = caseCardConfig;
            console.log(caseCardConfig);
        });
        this.handleAppSelection = (/**
         * @param {?} application
         * @return {?}
         */
        (application) => {
            this.selectedApp = application;
        });
        this.runSaveFunction = (/**
         * @return {?}
         */
        () => {
            this.caseCardConfigService.updateCaseCardConfig(this.sandboxId, this.selectedApp.applicationId, this.generalConfig.uiAppId, this.caseCardConfig)
                .pipe(take(1), takeUntil(this._destroyed$), map((/**
             * @param {?} caseCardConfig
             * @return {?}
             */
            caseCardConfig => {
                this.caseCardConfig = caseCardConfig;
            }))).subscribe((/**
             * @param {?} result
             * @return {?}
             */
            result => {
                this.snackBar.open('Summary cards settings saved', 'OK', {
                    duration: 3000
                });
            }), (/**
             * @param {?} error
             * @return {?}
             */
            error => {
                this.snackBar.open('Error saving Summary Cards settings', 'OK', {
                    duration: 3000
                });
                console.log('Unable to update case card config: ' + error.errorMsg);
            }));
        });
    }
}
LiveAppsSettingsSummaryCardsComponent.decorators = [
    { type: Component, args: [{
                selector: 'tcla-live-apps-settings-summary-cards',
                template: "<div fxLayout=\"column\" class=\"tcs-live-apps-summary-cards-settings\" fxFill>\n  <tc-tibco-cloud-widget-header style=\"height: 40px;\" [icon]=\"'tcs-capabilities'\" [headerText]=\"'Live Apps Summary Card Configuration'\"></tc-tibco-cloud-widget-header>\n\n  <div style=\"padding: 20px 20px 20px 20px;\" fxLayout=\"column\" fxFlex>\n    <div class=\"tcs-card-config-widget-pane\" fxFlex fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n      <tcla-live-apps-app-configuration-widget fxFlex=\"grow\" [sandboxId]=\"sandboxId\" [appIds]=\"liveAppsConfig.applicationIds\" [uiAppId]=\"generalConfig.uiAppId\" [folderId]=\"liveAppsConfig.caseIconsFolderId\" (configChanged)=\"handleConfigChanged($event)\" (appSelected)=\"handleAppSelection($event)\"></tcla-live-apps-app-configuration-widget>\n    </div>\n    <div fxLayout=\"column\" fxLayoutAlign=\"end end\" style=\"min-height: 50px\">\n      <button mat-raised-button color=\"primary\" (click)=\"runSaveFunction()\" [disabled]=\"!caseCardConfig || !selectedApp\">Save</button>\n    </div>\n  </div>\n</div>\n",
                styles: [".tcs-card-config-widget-pane,.tcs-live-apps-summary-cards-settings{overflow:hidden}"]
            }] }
];
/** @nocollapse */
LiveAppsSettingsSummaryCardsComponent.ctorParameters = () => [
    { type: TcCaseCardConfigService },
    { type: ActivatedRoute },
    { type: TcLiveAppsConfigService },
    { type: MatSnackBar }
];
if (false) {
    /** @type {?} */
    LiveAppsSettingsSummaryCardsComponent.prototype.caseCardConfig;
    /** @type {?} */
    LiveAppsSettingsSummaryCardsComponent.prototype.selectedApp;
    /** @type {?} */
    LiveAppsSettingsSummaryCardsComponent.prototype.handleConfigChanged;
    /** @type {?} */
    LiveAppsSettingsSummaryCardsComponent.prototype.handleAppSelection;
    /** @type {?} */
    LiveAppsSettingsSummaryCardsComponent.prototype.runSaveFunction;
    /**
     * @type {?}
     * @private
     */
    LiveAppsSettingsSummaryCardsComponent.prototype.caseCardConfigService;
    /**
     * @type {?}
     * @private
     */
    LiveAppsSettingsSummaryCardsComponent.prototype.routeExt;
    /**
     * @type {?}
     * @private
     */
    LiveAppsSettingsSummaryCardsComponent.prototype.liveAppsConfigServiceExt;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsSettingsSummaryCardsComponent.prototype.snackBar;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLXNldHRpbmdzLXN1bW1hcnktY2FyZHMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpYmNvLXRjc3RrL3RjLWxpdmVhcHBzLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2xpdmUtYXBwcy1zZXR0aW5ncy1zdW1tYXJ5LWNhcmRzL2xpdmUtYXBwcy1zZXR0aW5ncy1zdW1tYXJ5LWNhcmRzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSxvREFBb0QsQ0FBQztBQUU3RixPQUFPLEVBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUNwRCxPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSw0Q0FBNEMsQ0FBQztBQUduRixPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFDLHVCQUF1QixFQUFDLE1BQU0sNENBQTRDLENBQUM7QUFFbkYsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLG1CQUFtQixDQUFDOzs7Ozs7OztBQWVoRCxNQUFNLE9BQU8scUNBQXNDLFNBQVEseUJBQXlCOzs7Ozs7O0lBS2xGLFlBQW9CLHFCQUE4QyxFQUFVLFFBQXdCLEVBQVUsd0JBQWlELEVBQVksUUFBcUI7UUFDOUwsS0FBSyxDQUFDLFFBQVEsRUFBRSx3QkFBd0IsRUFBRSxRQUFRLENBQUMsQ0FBQztRQURsQywwQkFBcUIsR0FBckIscUJBQXFCLENBQXlCO1FBQVUsYUFBUSxHQUFSLFFBQVEsQ0FBZ0I7UUFBVSw2QkFBd0IsR0FBeEIsd0JBQXdCLENBQXlCO1FBQVksYUFBUSxHQUFSLFFBQVEsQ0FBYTtRQUl6TCx3QkFBbUI7Ozs7UUFBRyxDQUFDLGNBQThCLEVBQUUsRUFBRTtZQUM5RCxJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztZQUNyQyxPQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQzlCLENBQUMsRUFBQTtRQUVNLHVCQUFrQjs7OztRQUFHLENBQUMsV0FBcUIsRUFBRSxFQUFFO1lBQ3BELElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1FBQ2pDLENBQUMsRUFBQTtRQUVNLG9CQUFlOzs7UUFBRyxHQUFTLEVBQUU7WUFDbEMsSUFBSSxDQUFDLHFCQUFxQixDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQztpQkFDN0ksSUFBSSxDQUNILElBQUksQ0FBQyxDQUFDLENBQUMsRUFDUCxTQUFTLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxFQUMzQixHQUFHOzs7O1lBQUMsY0FBYyxDQUFDLEVBQUU7Z0JBQ25CLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1lBQ3ZDLENBQUMsRUFBQyxDQUNILENBQUMsU0FBUzs7OztZQUNQLE1BQU0sQ0FBQyxFQUFFO2dCQUNMLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLDhCQUE4QixFQUFFLElBQUksRUFBRTtvQkFDckQsUUFBUSxFQUFFLElBQUk7aUJBQ2pCLENBQUMsQ0FBQztZQUNQLENBQUM7Ozs7WUFDRCxLQUFLLENBQUMsRUFBRTtnQkFDSixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxxQ0FBcUMsRUFBRSxJQUFJLEVBQUU7b0JBQzVELFFBQVEsRUFBRSxJQUFJO2lCQUNqQixDQUFDLENBQUM7Z0JBQ0gsT0FBTyxDQUFDLEdBQUcsQ0FBQyxxQ0FBcUMsR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDeEUsQ0FBQyxFQUNOLENBQUM7UUFDSixDQUFDLEVBQUE7SUFoQ0QsQ0FBQzs7O1lBWkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx1Q0FBdUM7Z0JBQ2pELG1qQ0FBZ0U7O2FBRWpFOzs7O1lBcEJPLHVCQUF1QjtZQUd2QixjQUFjO1lBQ2QsdUJBQXVCO1lBRXRCLFdBQVc7Ozs7SUFpQmxCLCtEQUFzQzs7SUFDdEMsNERBQTZCOztJQU03QixvRUFHQzs7SUFFRCxtRUFFQzs7SUFFRCxnRUFxQkM7Ozs7O0lBbENXLHNFQUFzRDs7Ozs7SUFBRSx5REFBZ0M7Ozs7O0lBQUUseUVBQXlEOzs7OztJQUFFLHlEQUErQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0xpdmVBcHBzU2V0dGluZ3NDb21wb25lbnR9IGZyb20gJy4uL2xpdmUtYXBwcy1zZXR0aW5ncy9saXZlLWFwcHMtc2V0dGluZ3MuY29tcG9uZW50JztcbmltcG9ydCB7Q2FzZUNhcmRDb25maWd9IGZyb20gJy4uLy4uL21vZGVscy90Yy1jYXNlLWNhcmQtY29uZmlnJztcbmltcG9ydCB7bWFwLCB0YWtlLCB0YWtlVW50aWx9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7VGNDYXNlQ2FyZENvbmZpZ1NlcnZpY2V9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3RjLWNhc2UtY2FyZC1jb25maWcuc2VydmljZSc7XG5pbXBvcnQge0h0dHBDbGllbnR9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7RG9tU2FuaXRpemVyfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcbmltcG9ydCB7QWN0aXZhdGVkUm91dGV9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQge1RjTGl2ZUFwcHNDb25maWdTZXJ2aWNlfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy90Yy1saXZlLWFwcHMtY29uZmlnLnNlcnZpY2UnO1xuaW1wb3J0IHtDYXNlVHlwZX0gZnJvbSAnLi4vLi4vbW9kZWxzL2xpdmVhcHBzZGF0YSc7XG5pbXBvcnQgeyBNYXRTbmFja0JhciB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsJztcblxuXG4vKipcbiAqIENvbmZpZ3VyYXRpb24gb2Ygc3VtbWFyeSBjYXJkc1xuICpcbiAqICFbYWx0LXRleHRdKC4uL2xpdmUtYXBwcy1zZXR0aW5ncy1zdW1tYXJ5LWNhcmRzLnBuZyBcIlwiKVxuICpcbiAqQGV4YW1wbGUgPHRjbGEtbGl2ZS1hcHBzLXNldHRpbmdzLXN1bW1hcnktY2FyZHM+PC90Y2xhLWxpdmUtYXBwcy1zZXR0aW5ncy1zdW1tYXJ5LWNhcmRzPlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0Y2xhLWxpdmUtYXBwcy1zZXR0aW5ncy1zdW1tYXJ5LWNhcmRzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xpdmUtYXBwcy1zZXR0aW5ncy1zdW1tYXJ5LWNhcmRzLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbGl2ZS1hcHBzLXNldHRpbmdzLXN1bW1hcnktY2FyZHMuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIExpdmVBcHBzU2V0dGluZ3NTdW1tYXJ5Q2FyZHNDb21wb25lbnQgZXh0ZW5kcyBMaXZlQXBwc1NldHRpbmdzQ29tcG9uZW50IHtcblxuICBwdWJsaWMgY2FzZUNhcmRDb25maWc6IENhc2VDYXJkQ29uZmlnO1xuICBwdWJsaWMgc2VsZWN0ZWRBcHA6IENhc2VUeXBlO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY2FzZUNhcmRDb25maWdTZXJ2aWNlOiBUY0Nhc2VDYXJkQ29uZmlnU2VydmljZSwgcHJpdmF0ZSByb3V0ZUV4dDogQWN0aXZhdGVkUm91dGUsIHByaXZhdGUgbGl2ZUFwcHNDb25maWdTZXJ2aWNlRXh0OiBUY0xpdmVBcHBzQ29uZmlnU2VydmljZSwgcHJvdGVjdGVkIHNuYWNrQmFyOiBNYXRTbmFja0Jhcikge1xuICAgIHN1cGVyKHJvdXRlRXh0LCBsaXZlQXBwc0NvbmZpZ1NlcnZpY2VFeHQsIHNuYWNrQmFyKTtcbiAgfVxuXG4gIHB1YmxpYyBoYW5kbGVDb25maWdDaGFuZ2VkID0gKGNhc2VDYXJkQ29uZmlnOiBDYXNlQ2FyZENvbmZpZykgPT4ge1xuICAgIHRoaXMuY2FzZUNhcmRDb25maWcgPSBjYXNlQ2FyZENvbmZpZztcbiAgICBjb25zb2xlLmxvZyhjYXNlQ2FyZENvbmZpZyk7XG4gIH1cblxuICBwdWJsaWMgaGFuZGxlQXBwU2VsZWN0aW9uID0gKGFwcGxpY2F0aW9uOiBDYXNlVHlwZSkgPT4ge1xuICAgIHRoaXMuc2VsZWN0ZWRBcHAgPSBhcHBsaWNhdGlvbjtcbiAgfVxuXG4gIHB1YmxpYyBydW5TYXZlRnVuY3Rpb24gPSAoKTogdm9pZCA9PiB7XG4gICAgdGhpcy5jYXNlQ2FyZENvbmZpZ1NlcnZpY2UudXBkYXRlQ2FzZUNhcmRDb25maWcodGhpcy5zYW5kYm94SWQsIHRoaXMuc2VsZWN0ZWRBcHAuYXBwbGljYXRpb25JZCwgdGhpcy5nZW5lcmFsQ29uZmlnLnVpQXBwSWQsIHRoaXMuY2FzZUNhcmRDb25maWcpXG4gICAgICAucGlwZShcbiAgICAgICAgdGFrZSgxKSxcbiAgICAgICAgdGFrZVVudGlsKHRoaXMuX2Rlc3Ryb3llZCQpLFxuICAgICAgICBtYXAoY2FzZUNhcmRDb25maWcgPT4ge1xuICAgICAgICAgIHRoaXMuY2FzZUNhcmRDb25maWcgPSBjYXNlQ2FyZENvbmZpZztcbiAgICAgICAgfSlcbiAgICAgICkuc3Vic2NyaWJlKFxuICAgICAgICAgIHJlc3VsdCA9PiB7XG4gICAgICAgICAgICAgIHRoaXMuc25hY2tCYXIub3BlbignU3VtbWFyeSBjYXJkcyBzZXR0aW5ncyBzYXZlZCcsICdPSycsIHtcbiAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAzMDAwXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgZXJyb3IgPT4ge1xuICAgICAgICAgICAgICB0aGlzLnNuYWNrQmFyLm9wZW4oJ0Vycm9yIHNhdmluZyBTdW1tYXJ5IENhcmRzIHNldHRpbmdzJywgJ09LJywge1xuICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDMwMDBcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdVbmFibGUgdG8gdXBkYXRlIGNhc2UgY2FyZCBjb25maWc6ICcgKyBlcnJvci5lcnJvck1zZyk7XG4gICAgICAgICAgfVxuICAgICk7XG4gIH1cblxufVxuIl19