/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { CustomFormDefs } from '@tibco-tcstk/tc-forms-lib';
import { LiveAppsCaseActionsComponent } from '../live-apps-case-actions/live-apps-case-actions.component';
/**
 * Not used by app but wraps action list and action execution.
 *
 * \@example <tcla-live-apps-actions></tcla-live-apps-actions>
 */
export class LiveAppsActionsComponent {
    constructor() {
        /**
         * ~event caseActioned : Case action starterd (process started)
         * ~payload ProcessId : processId of started process in live apps (action)
         */
        this.caseActioned = new EventEmitter();
        // action clicked
        this.handleActionCompleted = (/**
         * @param {?} result
         * @return {?}
         */
        (result) => {
            this.caseActioned.emit(result);
            this.actionSelector.toggleEnable();
        });
        this.handleActionClicked = (/**
         * @param {?} action
         * @return {?}
         */
        (action) => {
            this.actionSelector.toggleEnable();
            this.selectedAction = action;
        });
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
LiveAppsActionsComponent.decorators = [
    { type: Component, args: [{
                selector: 'tcla-live-apps-actions',
                template: "<div fxLayout=\"column\" fxFlexFill>\n  <tcla-live-apps-case-actions [sandboxId]=\"sandboxId\" [typeId]=\"typeId\" [appId]=\"applicationId\" [caseRef]=\"caseRef\" [caseState]=\"caseState\" [maxActions]=\"5\" (actionClicked)=\"handleActionClicked($event)\"></tcla-live-apps-case-actions>\n  <tcla-live-apps-case-action *ngIf=\"selectedAction\" [process]=\"selectedAction\" [caseRef]=\"caseRef\" [typeId]=\"typeId\" [applicationId]=\"applicationId\" [sandboxId]=\"sandboxId\"></tcla-live-apps-case-action>\n</div>\n",
                styles: [""]
            }] }
];
/** @nocollapse */
LiveAppsActionsComponent.ctorParameters = () => [];
LiveAppsActionsComponent.propDecorators = {
    actionSelector: [{ type: ViewChild, args: [LiveAppsCaseActionsComponent, { static: false },] }],
    caseRef: [{ type: Input }],
    caseState: [{ type: Input }],
    sandboxId: [{ type: Input }],
    applicationId: [{ type: Input }],
    typeId: [{ type: Input }],
    customFormDefs: [{ type: Input }],
    caseActioned: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    LiveAppsActionsComponent.prototype.actionSelector;
    /**
     * The case reference
     * @type {?}
     */
    LiveAppsActionsComponent.prototype.caseRef;
    /**
     * The state of the case
     * @type {?}
     */
    LiveAppsActionsComponent.prototype.caseState;
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsActionsComponent.prototype.sandboxId;
    /**
     * LA Application ID
     * @type {?}
     */
    LiveAppsActionsComponent.prototype.applicationId;
    /**
     * The LA Application Type Id (generally 1)
     * @type {?}
     */
    LiveAppsActionsComponent.prototype.typeId;
    /**
     * Custom Form configuration file
     * @type {?}
     */
    LiveAppsActionsComponent.prototype.customFormDefs;
    /**
     * ~event caseActioned : Case action starterd (process started)
     * ~payload ProcessId : processId of started process in live apps (action)
     * @type {?}
     */
    LiveAppsActionsComponent.prototype.caseActioned;
    /** @type {?} */
    LiveAppsActionsComponent.prototype.selectedAction;
    /** @type {?} */
    LiveAppsActionsComponent.prototype.handleActionCompleted;
    /** @type {?} */
    LiveAppsActionsComponent.prototype.handleActionClicked;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLWFjdGlvbnMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpYmNvLXRjc3RrL3RjLWxpdmVhcHBzLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2xpdmUtYXBwcy1hY3Rpb25zL2xpdmUtYXBwcy1hY3Rpb25zLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFHeEYsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBQ3pELE9BQU8sRUFBQyw0QkFBNEIsRUFBQyxNQUFNLDREQUE0RCxDQUFDOzs7Ozs7QUFheEcsTUFBTSxPQUFPLHdCQUF3QjtJQXVEbkM7Ozs7O1FBaEJVLGlCQUFZLEdBQTRCLElBQUksWUFBWSxFQUFhLENBQUM7O1FBS2hGLDBCQUFxQjs7OztRQUFHLENBQUMsTUFBaUIsRUFBRSxFQUFFO1lBQzVDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQy9CLElBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDckMsQ0FBQyxFQUFBO1FBR0Qsd0JBQW1COzs7O1FBQUcsQ0FBQyxNQUFNLEVBQUUsRUFBRTtZQUMvQixJQUFJLENBQUMsY0FBYyxDQUFDLFlBQVksRUFBRSxDQUFDO1lBQ25DLElBQUksQ0FBQyxjQUFjLEdBQUcsTUFBTSxDQUFDO1FBQy9CLENBQUMsRUFBQTtJQUVlLENBQUM7Ozs7SUFHakIsUUFBUTtJQUNSLENBQUM7OztZQWhFRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHdCQUF3QjtnQkFDbEMsNmdCQUFpRDs7YUFFbEQ7Ozs7OzZCQUdFLFNBQVMsU0FBQyw0QkFBNEIsRUFBRSxFQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUM7c0JBS3ZELEtBQUs7d0JBS0wsS0FBSzt3QkFLTCxLQUFLOzRCQUtMLEtBQUs7cUJBS0wsS0FBSzs2QkFLTCxLQUFLOzJCQU9MLE1BQU07Ozs7SUFyQ1Asa0RBQXNHOzs7OztJQUt0RywyQ0FBeUI7Ozs7O0lBS3pCLDZDQUEyQjs7Ozs7SUFLM0IsNkNBQTJCOzs7OztJQUszQixpREFBK0I7Ozs7O0lBSy9CLDBDQUF3Qjs7Ozs7SUFLeEIsa0RBQXdDOzs7Ozs7SUFPeEMsZ0RBQWdGOztJQUVoRixrREFBbUM7O0lBR25DLHlEQUdDOztJQUdELHVEQUdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uSW5pdCwgT3V0cHV0LCBWaWV3Q2hpbGR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtQcm9jZXNzSWR9IGZyb20gJy4uLy4uL21vZGVscy9saXZlYXBwc2RhdGEnO1xuaW1wb3J0IHtMYVByb2Nlc3NTZWxlY3Rpb259IGZyb20gJy4uLy4uL21vZGVscy90Yy1jYXNlLXByb2Nlc3Nlcyc7XG5pbXBvcnQge0N1c3RvbUZvcm1EZWZzfSBmcm9tICdAdGliY28tdGNzdGsvdGMtZm9ybXMtbGliJztcbmltcG9ydCB7TGl2ZUFwcHNDYXNlQWN0aW9uc0NvbXBvbmVudH0gZnJvbSAnLi4vbGl2ZS1hcHBzLWNhc2UtYWN0aW9ucy9saXZlLWFwcHMtY2FzZS1hY3Rpb25zLmNvbXBvbmVudCc7XG5cblxuLyoqXG4gKiBOb3QgdXNlZCBieSBhcHAgYnV0IHdyYXBzIGFjdGlvbiBsaXN0IGFuZCBhY3Rpb24gZXhlY3V0aW9uLlxuICpcbiAqQGV4YW1wbGUgPHRjbGEtbGl2ZS1hcHBzLWFjdGlvbnM+PC90Y2xhLWxpdmUtYXBwcy1hY3Rpb25zPlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0Y2xhLWxpdmUtYXBwcy1hY3Rpb25zJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xpdmUtYXBwcy1hY3Rpb25zLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbGl2ZS1hcHBzLWFjdGlvbnMuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIExpdmVBcHBzQWN0aW9uc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQFZpZXdDaGlsZChMaXZlQXBwc0Nhc2VBY3Rpb25zQ29tcG9uZW50LCB7c3RhdGljOiBmYWxzZX0pIGFjdGlvblNlbGVjdG9yOiBMaXZlQXBwc0Nhc2VBY3Rpb25zQ29tcG9uZW50XG5cbiAgLyoqXG4gICAqIFRoZSBjYXNlIHJlZmVyZW5jZVxuICAgKi9cbiAgQElucHV0KCkgY2FzZVJlZjogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgc3RhdGUgb2YgdGhlIGNhc2VcbiAgICovXG4gIEBJbnB1dCgpIGNhc2VTdGF0ZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBzYW5kYm94SWQgLSB0aGlzIGNvbWVzIGZyb20gY2xhaW1zIHJlc29sdmVyXG4gICAqL1xuICBASW5wdXQoKSBzYW5kYm94SWQ6IG51bWJlcjtcblxuICAvKipcbiAgICogTEEgQXBwbGljYXRpb24gSURcbiAgICovXG4gIEBJbnB1dCgpIGFwcGxpY2F0aW9uSWQ6IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIExBIEFwcGxpY2F0aW9uIFR5cGUgSWQgKGdlbmVyYWxseSAxKVxuICAgKi9cbiAgQElucHV0KCkgdHlwZUlkOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEN1c3RvbSBGb3JtIGNvbmZpZ3VyYXRpb24gZmlsZVxuICAgKi9cbiAgQElucHV0KCkgY3VzdG9tRm9ybURlZnM6IEN1c3RvbUZvcm1EZWZzO1xuXG5cbiAgLyoqXG4gICAqIH5ldmVudCBjYXNlQWN0aW9uZWQgOiBDYXNlIGFjdGlvbiBzdGFydGVyZCAocHJvY2VzcyBzdGFydGVkKVxuICAgKiB+cGF5bG9hZCBQcm9jZXNzSWQgOiBwcm9jZXNzSWQgb2Ygc3RhcnRlZCBwcm9jZXNzIGluIGxpdmUgYXBwcyAoYWN0aW9uKVxuICAgKi9cbiAgQE91dHB1dCgpIGNhc2VBY3Rpb25lZDogRXZlbnRFbWl0dGVyPFByb2Nlc3NJZD4gPSBuZXcgRXZlbnRFbWl0dGVyPFByb2Nlc3NJZD4oKTtcblxuICBzZWxlY3RlZEFjdGlvbjogTGFQcm9jZXNzU2VsZWN0aW9uO1xuXG4gIC8vIGFjdGlvbiBjbGlja2VkXG4gIGhhbmRsZUFjdGlvbkNvbXBsZXRlZCA9IChyZXN1bHQ6IFByb2Nlc3NJZCkgPT4ge1xuICAgIHRoaXMuY2FzZUFjdGlvbmVkLmVtaXQocmVzdWx0KTtcbiAgICB0aGlzLmFjdGlvblNlbGVjdG9yLnRvZ2dsZUVuYWJsZSgpO1xuICB9XG5cblxuICBoYW5kbGVBY3Rpb25DbGlja2VkID0gKGFjdGlvbikgPT4ge1xuICAgIHRoaXMuYWN0aW9uU2VsZWN0b3IudG9nZ2xlRW5hYmxlKCk7XG4gICAgdGhpcy5zZWxlY3RlZEFjdGlvbiA9IGFjdGlvbjtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cblxuICBuZ09uSW5pdCgpIHtcbiAgfVxuXG59XG4iXX0=