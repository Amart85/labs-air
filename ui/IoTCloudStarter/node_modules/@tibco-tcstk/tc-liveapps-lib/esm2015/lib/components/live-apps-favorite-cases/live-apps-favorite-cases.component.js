/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { map, take, takeUntil } from 'rxjs/operators';
import { LiveAppsService } from '../../services/live-apps.service';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
/**
 * This Component allows to list your Favorite Cases.
 *
 * ![alt-text](../live-apps-favorite-cases.png "Documents Component Image")
 *
 * \@example <tcla-live-apps-favorite-cases></tcla-live-apps-favorite-cases>
 */
export class LiveAppsFavoriteCasesComponent extends LiveAppsComponent {
    /**
     * @param {?} liveapps
     */
    constructor(liveapps) {
        super();
        this.liveapps = liveapps;
        /**
         * case card format - list, card, miniCard, staticList (no click event)
         */
        this.displayType = this.displayType ? this.displayType : 'miniCard'; // miniCard, card, list
        // miniCard, card, list
        /**
         * Whether to show the header bar in the widget - eg. favorites on home page (contains icon etc) - if off icons still appear without bar
         */
        this.showHeader = this.showHeader ? this.showHeader : true;
        /**
         * ~event clickCase : Case clicked
         * ~payload CaseRoute : CaseRoute object output when case is clicked so calling component can route accordingly - ie. route to case
         */
        this.clickCase = new EventEmitter();
        this.clickCaseAction = (/**
         * @param {?} caseRoute
         * @return {?}
         */
        (caseRoute) => {
            this.clickCase.emit(caseRoute);
        });
        this.refresh = (/**
         * @return {?}
         */
        () => {
            this.favoriteCases = [];
            this.liveapps.getFavoriteCases(this.uiAppId, this.sandboxId)
                .pipe(take(1), takeUntil(this._destroyed$), map((/**
             * @param {?} favoriteCases
             * @return {?}
             */
            favoriteCases => {
                this.favoriteCases = favoriteCases.caseRefs || [];
            }))).subscribe(null, (/**
             * @param {?} error
             * @return {?}
             */
            error => { this.errorMessage = 'Error retrieving favorite cases: ' + error.error.errorMsg; }));
        });
        this.clearFavoriteCases = (/**
         * @return {?}
         */
        () => {
            this.liveapps.setFavoriteCase('-1', this.uiAppId, this.sandboxId);
            this.favoriteCases = [];
        });
        this.handleDeleted = (/**
         * @param {?} caseRef
         * @return {?}
         */
        (caseRef) => {
            this.favoriteCases.splice(this.favoriteCases.indexOf(caseRef), 1);
            this.liveapps.setFavoriteCase(caseRef, this.uiAppId, this.sandboxId);
        });
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.refresh();
    }
}
LiveAppsFavoriteCasesComponent.decorators = [
    { type: Component, args: [{
                selector: 'tcla-live-apps-favorite-cases',
                template: "<div class=\"tcs-case-favorites-box\" fxLayout=\"column\" fxFill>\n    <div *ngIf=\"showHeader\" class=\"tcs-case-favorites-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <div fxLayoutAlign=\"start center\">\n        <mat-icon class=\"tcs-icon tcs-favorites-icon\" svgIcon=\"tcs-favorites-icon\"></mat-icon>\n        <div class=\"tcs-case-favorites-header-text\">Favorites</div>\n      </div>\n      <mat-icon (click)=\"clearFavoriteCases()\" class=\"tcs-icon tcs-icon-active tcs-clear-favorite-icon\" svgIcon=\"tcs-clear-icon\" matTooltip=\"Clear Favorites\" matTooltipPosition=\"left\" matTooltipShowDelay=\"1000\"></mat-icon>\n    </div>\n  <div *ngIf=\"!showHeader\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n    <mat-icon style=\"margin: 5px\" (click)=\"clearFavoriteCases()\" class=\"tcs-icon tcs-icon-active tcs-clear-favorite-icon\" svgIcon=\"tcs-clear-icon\" matTooltip=\"Clear Favorites\" matTooltipPosition=\"left\" matTooltipShowDelay=\"1000\"></mat-icon>\n  </div>\n    <div *ngIf=\"favoriteCases.length > 0\" class=\"tcs-case-favorites-flow-list\" fxLayout=\"column\" fxLayout=\"row wrap\">\n      <div class=\"tcs-case-favorite-item-box\" *ngFor=\"let case of favoriteCases\" fxFlex>\n        <tcla-live-apps-case-summary [uiAppId]=\"uiAppId\" [typeBar]=\"true\" [borderCard]=\"false\" [displayType]=\"displayType\" [sandboxId]=\"sandboxId\" [caseRef]=\"case\" (clickCase)=\"clickCaseAction($event)\" (deleted)=\"handleDeleted($event)\"></tcla-live-apps-case-summary>\n        <div class=\"tcs-case-summary-line\"></div>\n      </div>\n    </div>\n    <div *ngIf=\"!(favoriteCases.length > 0)\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"10px\" style=\"margin-top: 20px;\">\n      <mat-icon [svgIcon]=\"'ic-no-cases-icon'\" style=\"height: 48px; width: 48px;\"></mat-icon>\n      <div style=\"height: 100%\" fxLayoutAlign=\"start center\">\n        <span class=\"tcs-no-item-text\">No cases found</span>\n      </div>\n    </div>\n</div>\n",
                styles: [".tcs-case-favorites-box{border-radius:3px;box-shadow:0 2px 8px 0 #dedede;background-color:#fff}.tcs-case-favorites-header{min-height:40px;border-radius:3px 3px 0 0;box-shadow:0 1px 2px 0 #dedede;padding-left:20px;padding-right:20px}.tcs-case-favorites-header-text{font-family:Source Sans Pro;font-size:18px;font-weight:600;font-style:normal;font-stretch:normal;line-height:1.5;letter-spacing:.3px;text-align:left;color:#000;margin-left:10px}.tcs-case-favorites-flow-list{margin:24px;overflow-y:auto}.tcs-case-favorite-item-box{max-width:288px;margin:3px 5px 10px}.tcs-icon.tcs-icon-active:hover{cursor:pointer}:host ::ng-deep .tcs-icon.tcs-icon-active:hover .svg-content{fill:#0081cb}.tcs-case-summary-line{padding:0;margin:4px 5px 0;border-bottom:1.1px solid #f4f4f4}.tcs-no-item-text{font-family:Source Sans Pro;font-size:16px;font-weight:400;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;color:#b6b6b6}"]
            }] }
];
/** @nocollapse */
LiveAppsFavoriteCasesComponent.ctorParameters = () => [
    { type: LiveAppsService }
];
LiveAppsFavoriteCasesComponent.propDecorators = {
    sandboxId: [{ type: Input }],
    uiAppId: [{ type: Input }],
    displayType: [{ type: Input }],
    showHeader: [{ type: Input }],
    clickCase: [{ type: Output }]
};
if (false) {
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsFavoriteCasesComponent.prototype.sandboxId;
    /**
     * The Application ID of the UI (should ideally be unique as it is shared state key)
     * @type {?}
     */
    LiveAppsFavoriteCasesComponent.prototype.uiAppId;
    /**
     * case card format - list, card, miniCard, staticList (no click event)
     * @type {?}
     */
    LiveAppsFavoriteCasesComponent.prototype.displayType;
    /**
     * Whether to show the header bar in the widget - eg. favorites on home page (contains icon etc) - if off icons still appear without bar
     * @type {?}
     */
    LiveAppsFavoriteCasesComponent.prototype.showHeader;
    /**
     * ~event clickCase : Case clicked
     * ~payload CaseRoute : CaseRoute object output when case is clicked so calling component can route accordingly - ie. route to case
     * @type {?}
     */
    LiveAppsFavoriteCasesComponent.prototype.clickCase;
    /** @type {?} */
    LiveAppsFavoriteCasesComponent.prototype.favoriteCases;
    /** @type {?} */
    LiveAppsFavoriteCasesComponent.prototype.errorMessage;
    /** @type {?} */
    LiveAppsFavoriteCasesComponent.prototype.clickCaseAction;
    /** @type {?} */
    LiveAppsFavoriteCasesComponent.prototype.refresh;
    /** @type {?} */
    LiveAppsFavoriteCasesComponent.prototype.clearFavoriteCases;
    /** @type {?} */
    LiveAppsFavoriteCasesComponent.prototype.handleDeleted;
    /**
     * @type {?}
     * @private
     */
    LiveAppsFavoriteCasesComponent.prototype.liveapps;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLWZhdm9yaXRlLWNhc2VzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0aWJjby10Y3N0ay90Yy1saXZlYXBwcy1saWIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9saXZlLWFwcHMtZmF2b3JpdGUtY2FzZXMvbGl2ZS1hcHBzLWZhdm9yaXRlLWNhc2VzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFxQixNQUFNLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFeEYsT0FBTyxFQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDcEQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLGtDQUFrQyxDQUFDO0FBQ2pFLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHNEQUFzRCxDQUFDOzs7Ozs7OztBQWdCdkYsTUFBTSxPQUFPLDhCQUErQixTQUFRLGlCQUFpQjs7OztJQTJEbkUsWUFBb0IsUUFBeUI7UUFDM0MsS0FBSyxFQUFFLENBQUM7UUFEVSxhQUFRLEdBQVIsUUFBUSxDQUFpQjs7OztRQTdDcEMsZ0JBQVcsR0FBVyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyx1QkFBdUI7Ozs7O1FBSy9GLGVBQVUsR0FBWSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7Ozs7O1FBTzlELGNBQVMsR0FBNEIsSUFBSSxZQUFZLEVBQWEsQ0FBQztRQUt0RSxvQkFBZTs7OztRQUFHLENBQUMsU0FBb0IsRUFBRSxFQUFFO1lBQ2hELElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ2pDLENBQUMsRUFBQTtRQUVNLFlBQU87OztRQUFHLEdBQUcsRUFBRTtZQUNwQixJQUFJLENBQUMsYUFBYSxHQUFHLEVBQUUsQ0FBQztZQUN4QixJQUFJLENBQUMsUUFBUSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQztpQkFDekQsSUFBSSxDQUNILElBQUksQ0FBQyxDQUFDLENBQUMsRUFDUCxTQUFTLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxFQUMzQixHQUFHOzs7O1lBQUMsYUFBYSxDQUFDLEVBQUU7Z0JBQ2xCLElBQUksQ0FBQyxhQUFhLEdBQUcsYUFBYSxDQUFDLFFBQVEsSUFBSSxFQUFFLENBQUM7WUFDcEQsQ0FBQyxFQUFDLENBQ0gsQ0FBQyxTQUFTLENBQ1gsSUFBSTs7OztZQUFFLEtBQUssQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLFlBQVksR0FBRyxtQ0FBbUMsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDO1FBQ3hHLENBQUMsRUFBQTtRQUVNLHVCQUFrQjs7O1FBQUcsR0FBRyxFQUFFO1lBQy9CLElBQUksQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUNsRSxJQUFJLENBQUMsYUFBYSxHQUFHLEVBQUUsQ0FBQztRQUMxQixDQUFDLEVBQUE7UUFFTSxrQkFBYTs7OztRQUFHLENBQUMsT0FBZSxFQUFFLEVBQUU7WUFDekMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDbEUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3ZFLENBQUMsRUFBQTtJQUtELENBQUM7Ozs7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ2pCLENBQUM7OztZQXRFRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLCtCQUErQjtnQkFDekMsaStEQUF3RDs7YUFFekQ7Ozs7WUFoQk8sZUFBZTs7O3dCQXFCcEIsS0FBSztzQkFLTCxLQUFLOzBCQUtMLEtBQUs7eUJBS0wsS0FBSzt3QkFPTCxNQUFNOzs7Ozs7O0lBdEJQLG1EQUEyQjs7Ozs7SUFLM0IsaURBQXlCOzs7OztJQUt6QixxREFBZ0Y7Ozs7O0lBS2hGLG9EQUF3RTs7Ozs7O0lBT3hFLG1EQUE2RTs7SUFFN0UsdURBQStCOztJQUMvQixzREFBNEI7O0lBRTVCLHlEQUVDOztJQUVELGlEQVdDOztJQUVELDREQUdDOztJQUVELHVEQUdDOzs7OztJQUdXLGtEQUFpQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCwgT3V0cHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7U3ViamVjdH0gZnJvbSAncnhqcyc7XG5pbXBvcnQge21hcCwgdGFrZSwgdGFrZVVudGlsfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQge0xpdmVBcHBzU2VydmljZX0gZnJvbSAnLi4vLi4vc2VydmljZXMvbGl2ZS1hcHBzLnNlcnZpY2UnO1xuaW1wb3J0IHtMaXZlQXBwc0NvbXBvbmVudH0gZnJvbSAnLi4vbGl2ZS1hcHBzLWNvbXBvbmVudC9saXZlLWFwcHMtY29tcG9uZW50LmNvbXBvbmVudCc7XG5pbXBvcnQge0Nhc2VSb3V0ZX0gZnJvbSAnLi4vLi4vbW9kZWxzL2xpdmVhcHBzZGF0YSc7XG5cblxuLyoqXG4gKiBUaGlzIENvbXBvbmVudCBhbGxvd3MgdG8gbGlzdCB5b3VyIEZhdm9yaXRlIENhc2VzLlxuICpcbiAqICFbYWx0LXRleHRdKC4uL2xpdmUtYXBwcy1mYXZvcml0ZS1jYXNlcy5wbmcgXCJEb2N1bWVudHMgQ29tcG9uZW50IEltYWdlXCIpXG4gKlxuICpAZXhhbXBsZSA8dGNsYS1saXZlLWFwcHMtZmF2b3JpdGUtY2FzZXM+PC90Y2xhLWxpdmUtYXBwcy1mYXZvcml0ZS1jYXNlcz5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGNsYS1saXZlLWFwcHMtZmF2b3JpdGUtY2FzZXMnLFxuICB0ZW1wbGF0ZVVybDogJy4vbGl2ZS1hcHBzLWZhdm9yaXRlLWNhc2VzLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbGl2ZS1hcHBzLWZhdm9yaXRlLWNhc2VzLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBMaXZlQXBwc0Zhdm9yaXRlQ2FzZXNDb21wb25lbnQgZXh0ZW5kcyBMaXZlQXBwc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIC8qKlxuICAgKiBzYW5kYm94SWQgLSB0aGlzIGNvbWVzIGZyb20gY2xhaW1zIHJlc29sdmVyXG4gICAqL1xuICBASW5wdXQoKSBzYW5kYm94SWQ6IG51bWJlcjtcblxuICAvKipcbiAgICogVGhlIEFwcGxpY2F0aW9uIElEIG9mIHRoZSBVSSAoc2hvdWxkIGlkZWFsbHkgYmUgdW5pcXVlIGFzIGl0IGlzIHNoYXJlZCBzdGF0ZSBrZXkpXG4gICAqL1xuICBASW5wdXQoKSB1aUFwcElkOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIGNhc2UgY2FyZCBmb3JtYXQgLSBsaXN0LCBjYXJkLCBtaW5pQ2FyZCwgc3RhdGljTGlzdCAobm8gY2xpY2sgZXZlbnQpXG4gICAqL1xuICBASW5wdXQoKSBkaXNwbGF5VHlwZTogc3RyaW5nID0gdGhpcy5kaXNwbGF5VHlwZSA/IHRoaXMuZGlzcGxheVR5cGUgOiAnbWluaUNhcmQnOyAvLyBtaW5pQ2FyZCwgY2FyZCwgbGlzdFxuXG4gIC8qKlxuICAgKiBXaGV0aGVyIHRvIHNob3cgdGhlIGhlYWRlciBiYXIgaW4gdGhlIHdpZGdldCAtIGVnLiBmYXZvcml0ZXMgb24gaG9tZSBwYWdlIChjb250YWlucyBpY29uIGV0YykgLSBpZiBvZmYgaWNvbnMgc3RpbGwgYXBwZWFyIHdpdGhvdXQgYmFyXG4gICAqL1xuICBASW5wdXQoKSBzaG93SGVhZGVyOiBib29sZWFuID0gdGhpcy5zaG93SGVhZGVyID8gdGhpcy5zaG93SGVhZGVyIDogdHJ1ZTtcblxuXG4gIC8qKlxuICAgKiB+ZXZlbnQgY2xpY2tDYXNlIDogQ2FzZSBjbGlja2VkXG4gICAqIH5wYXlsb2FkIENhc2VSb3V0ZSA6IENhc2VSb3V0ZSBvYmplY3Qgb3V0cHV0IHdoZW4gY2FzZSBpcyBjbGlja2VkIHNvIGNhbGxpbmcgY29tcG9uZW50IGNhbiByb3V0ZSBhY2NvcmRpbmdseSAtIGllLiByb3V0ZSB0byBjYXNlXG4gICAqL1xuICBAT3V0cHV0KCkgY2xpY2tDYXNlOiBFdmVudEVtaXR0ZXI8Q2FzZVJvdXRlPiA9IG5ldyBFdmVudEVtaXR0ZXI8Q2FzZVJvdXRlPigpO1xuXG4gIHB1YmxpYyBmYXZvcml0ZUNhc2VzOiBzdHJpbmdbXTtcbiAgcHVibGljIGVycm9yTWVzc2FnZTogc3RyaW5nO1xuXG4gIHB1YmxpYyBjbGlja0Nhc2VBY3Rpb24gPSAoY2FzZVJvdXRlOiBDYXNlUm91dGUpID0+IHtcbiAgICB0aGlzLmNsaWNrQ2FzZS5lbWl0KGNhc2VSb3V0ZSk7XG4gIH1cblxuICBwdWJsaWMgcmVmcmVzaCA9ICgpID0+IHtcbiAgICB0aGlzLmZhdm9yaXRlQ2FzZXMgPSBbXTtcbiAgICB0aGlzLmxpdmVhcHBzLmdldEZhdm9yaXRlQ2FzZXModGhpcy51aUFwcElkLCB0aGlzLnNhbmRib3hJZClcbiAgICAgIC5waXBlKFxuICAgICAgICB0YWtlKDEpLFxuICAgICAgICB0YWtlVW50aWwodGhpcy5fZGVzdHJveWVkJCksXG4gICAgICAgIG1hcChmYXZvcml0ZUNhc2VzID0+IHtcbiAgICAgICAgICB0aGlzLmZhdm9yaXRlQ2FzZXMgPSBmYXZvcml0ZUNhc2VzLmNhc2VSZWZzIHx8IFtdO1xuICAgICAgICB9KVxuICAgICAgKS5zdWJzY3JpYmUoXG4gICAgICBudWxsLCBlcnJvciA9PiB7IHRoaXMuZXJyb3JNZXNzYWdlID0gJ0Vycm9yIHJldHJpZXZpbmcgZmF2b3JpdGUgY2FzZXM6ICcgKyBlcnJvci5lcnJvci5lcnJvck1zZzsgfSk7XG4gIH1cblxuICBwdWJsaWMgY2xlYXJGYXZvcml0ZUNhc2VzID0gKCkgPT4ge1xuICAgIHRoaXMubGl2ZWFwcHMuc2V0RmF2b3JpdGVDYXNlKCctMScsIHRoaXMudWlBcHBJZCwgdGhpcy5zYW5kYm94SWQpO1xuICAgIHRoaXMuZmF2b3JpdGVDYXNlcyA9IFtdO1xuICB9XG5cbiAgcHVibGljIGhhbmRsZURlbGV0ZWQgPSAoY2FzZVJlZjogc3RyaW5nKSA9PiB7XG4gICAgdGhpcy5mYXZvcml0ZUNhc2VzLnNwbGljZSh0aGlzLmZhdm9yaXRlQ2FzZXMuaW5kZXhPZihjYXNlUmVmKSwgMSk7XG4gICAgdGhpcy5saXZlYXBwcy5zZXRGYXZvcml0ZUNhc2UoY2FzZVJlZiwgdGhpcy51aUFwcElkLCB0aGlzLnNhbmRib3hJZCk7XG4gIH1cblxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbGl2ZWFwcHM6IExpdmVBcHBzU2VydmljZSkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLnJlZnJlc2goKTtcbiAgfVxuXG59XG4iXX0=