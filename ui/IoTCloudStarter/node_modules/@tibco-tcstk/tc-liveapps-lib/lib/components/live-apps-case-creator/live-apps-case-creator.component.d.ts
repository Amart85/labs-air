import { EventEmitter, OnInit, SimpleChanges, OnChanges } from '@angular/core';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
import { ProcessId } from '../../models/liveappsdata';
import { LaProcessSelection } from '../../models/tc-case-processes';
import { LiveAppsService } from '../../services/live-apps.service';
import { CustomFormDefs } from '@tibco-tcstk/tc-forms-lib';
/**
 * Handles rendering of case creator form.
 *
 *@example <tcla-live-apps-case-creator></tcla-live-apps-case-creator>
 */
export declare class LiveAppsCaseCreatorComponent extends LiveAppsComponent implements OnInit, OnChanges {
    protected liveapps: LiveAppsService;
    /**
     * sandboxId - this comes from claims resolver
     */
    sandboxId: number;
    /**
     * LA application ID
     */
    applicationId: string;
    /**
     * The LA Application Type Id (generally 1)
     */
    typeId: string;
    /**
     * The process definition of the action or creator to execute
     */
    process: LaProcessSelection;
    /**
     * Data object that will be displayed on the form. Allows overriding over form data (eg. when selecting data in spotfire)
     */
    dataOverride: any;
    /**
     * Custom Form configuration file
     */
    customFormDefs: CustomFormDefs;
    /**
     * Enable legacy creators
     */
    legacyCreators: boolean;
    /**
     * Allow override of forms framework
     * Options: bootstrap-4 or material-design
     */
    formsFramework: string;
    /**
     * ~event caseChanged : Case action started (process started)
     * ~payload ProcessId : ProcessId object passed when a case has been updated or created by a process (action/creator)
     */
    caseChanged: EventEmitter<ProcessId>;
    data: any;
    schema: any;
    layout: any[];
    options: any;
    isCustomForm: boolean;
    handleSubmit: (data: any, caseRef: any) => void;
    handleLegacyProcessComplete: () => void;
    handleLegacyProcessCancelled: () => void;
    constructor(liveapps: LiveAppsService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
}
