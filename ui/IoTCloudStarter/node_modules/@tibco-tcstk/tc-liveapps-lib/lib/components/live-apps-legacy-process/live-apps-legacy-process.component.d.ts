import { AfterViewInit, ElementRef, EventEmitter, OnDestroy } from '@angular/core';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
import { LegacyIframeService } from '@tibco-tcstk/tc-core-lib';
import { TcVisibilityService } from '@tibco-tcstk/tc-core-lib';
import { LaProcessSelection } from '../../models/tc-case-processes';
/**
 * Wraps legacy angularjs form renderer
 *
 *@example <tcla-live-apps-legacy-form></tcla-live-apps-legacy-form>
 */
export declare class LiveAppsLegacyProcessComponent extends LiveAppsComponent implements OnDestroy, OnDestroy, AfterViewInit {
    protected visibilityService: TcVisibilityService;
    protected host: ElementRef;
    protected legacyIframeService: LegacyIframeService;
    legacyIframeId: any;
    process: LaProcessSelection;
    type: string;
    applicationId: string;
    typeId: string;
    caseRef: string;
    caseState: string;
    processComplete: EventEmitter<{}>;
    processCancelled: EventEmitter<{}>;
    private target;
    private formDiv;
    private processActive;
    private openProcessId;
    constructor(visibilityService: TcVisibilityService, host: ElementRef, legacyIframeService: LegacyIframeService);
    isFormActive(): boolean;
    changeProcess: (process: LaProcessSelection) => void;
    renderProcess: (process: LaProcessSelection) => void;
    private receiveMessage;
    cancelProcess: (emit?: boolean) => void;
    private hideProcess;
    private resizeProcess;
    private initialize;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
}
