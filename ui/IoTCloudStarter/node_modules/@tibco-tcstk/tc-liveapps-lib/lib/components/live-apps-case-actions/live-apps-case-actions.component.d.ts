import { EventEmitter, OnInit } from '@angular/core';
import { LiveAppsService } from '../../services/live-apps.service';
import { CaseAction, CaseType, CaseTypesList, Process } from '../../models/liveappsdata';
import { LaProcessSelection } from '../../models/tc-case-processes';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
import { TcCaseProcessesService } from '../../services/tc-case-processes.service';
/**
 * Renders case action buttons
 *
 * ![alt-text](../live-apps-case-actions.png "Image")
 *
 *@example <tcla-live-apps-case-actions></tcla-live-apps-case-actions>
 */
export declare class LiveAppsCaseActionsComponent extends LiveAppsComponent implements OnInit {
    protected liveapps: LiveAppsService;
    protected caseProcessesService: TcCaseProcessesService;
    /**
     * The case reference
     */
    caseRef: string;
    /**
     * The LA Application Id
     */
    appId: string;
    /**
     * The LA Application Type Id (generally 1)
     */
    typeId: string;
    /**
     * sandboxId - this comes from claims resolver
     */
    sandboxId: number;
    /**
     * The state of the case
     */
    caseState: string;
    /**
     * Max Actions that can be run simultaneously
     */
    maxActions: number;
    /**
     * ~event actionClicked : Case Action selected
     * ~payload LaProcessSelection : LaProcessSelection object output when an action is clicked (ie. message to parent to run action component)
     */
    actionClicked: EventEmitter<LaProcessSelection>;
    caseactions: CaseAction[];
    errorMessage: string;
    disabled: boolean;
    appSchema: CaseTypesList;
    caseType: CaseType;
    caseActionList: Process[];
    constructor(liveapps: LiveAppsService, caseProcessesService: TcCaseProcessesService);
    refresh: () => void;
    toggleEnable: () => void;
    selectAction(action: CaseAction): void;
    ngOnInit(): void;
}
