import { Deserializable } from './deserializable';
export declare class Group {
    id: string;
    type: string;
    constructor(id: string, type: string);
}
export declare class Claim implements Deserializable {
    email: string;
    firstName: string;
    id: string;
    lastName: string;
    sandboxes: Sandbox[];
    subscriptionId: string;
    username: string;
    primaryProductionSandbox: Sandbox;
    deserialize(input: any): this;
}
export declare class Sandbox {
    groups: Group[];
    id: string;
    type: string;
    name: string;
    subscriptionId: string;
    ownerId: string;
    constructor(groups: Group[], id: string, type: string, name: string, subscriptionId: string, ownerId: string);
}
export declare class SandboxList {
    sandboxes: Sandbox[];
    deserialize(input: any): this;
}
export declare class AccessToken implements Deserializable {
    access_token: string;
    token_type: string;
    expires_in: number;
    deserialize(input: any): this;
}
export declare class AuthInfo implements Deserializable {
    userName: string;
    firstName: string;
    lastName: string;
    userId: string;
    ts: number;
    orgName: string;
    deserialize(input: any): this;
}
export declare class Subscription {
    accountId: string;
    accountDisplayName: string;
    ownerName: string;
    loggedInUserRole: string;
    regions: string[];
    constructor(accountId: string, accountDisplayName: string, ownerName: string, loggedInUserRole: string, regions: string[]);
}
export declare class Owner {
    email: string;
    firstName: string;
    lastName: string;
    role: string;
    deserialize(input: any): this;
}
export declare class AccountInfo {
    accountDisplayName: string;
    accountId: string;
    loggedInUserRole: string;
    ownerInfo: Owner;
    regions: string[];
}
export declare class AccountsInfo implements Deserializable {
    accountInfos: AccountInfo[];
    deserialize(input: any): this;
}
export declare class LoginPrefill implements Deserializable {
    emailId: string;
    clientId: string;
    deserialize(input: any): this;
}
