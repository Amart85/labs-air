/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/* Models used by login and authorization services */
export class Group {
    /**
     * @param {?} id
     * @param {?} type
     */
    constructor(id, type) {
        this.id = id;
        this.type = type;
    }
}
if (false) {
    /** @type {?} */
    Group.prototype.id;
    /** @type {?} */
    Group.prototype.type;
}
export class Claim {
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    deserialize(input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    }
}
if (false) {
    /** @type {?} */
    Claim.prototype.email;
    /** @type {?} */
    Claim.prototype.firstName;
    /** @type {?} */
    Claim.prototype.id;
    /** @type {?} */
    Claim.prototype.lastName;
    /** @type {?} */
    Claim.prototype.sandboxes;
    /** @type {?} */
    Claim.prototype.subscriptionId;
    /** @type {?} */
    Claim.prototype.username;
    /** @type {?} */
    Claim.prototype.primaryProductionSandbox;
}
export class Sandbox {
    /**
     * @param {?} groups
     * @param {?} id
     * @param {?} type
     * @param {?} name
     * @param {?} subscriptionId
     * @param {?} ownerId
     */
    constructor(groups, id, type, name, subscriptionId, ownerId) {
        this.groups = groups;
        this.id = id;
        this.type = type;
        this.name = name;
        this.subscriptionId = subscriptionId;
        this.ownerId = ownerId;
    }
}
if (false) {
    /** @type {?} */
    Sandbox.prototype.groups;
    /** @type {?} */
    Sandbox.prototype.id;
    /** @type {?} */
    Sandbox.prototype.type;
    /** @type {?} */
    Sandbox.prototype.name;
    /** @type {?} */
    Sandbox.prototype.subscriptionId;
    /** @type {?} */
    Sandbox.prototype.ownerId;
}
export class SandboxList {
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    deserialize(input) {
        (/** @type {?} */ (this)).sandboxes = [];
        Object.assign((/** @type {?} */ (this)).sandboxes, input);
        return (/** @type {?} */ (this));
    }
}
if (false) {
    /** @type {?} */
    SandboxList.prototype.sandboxes;
}
export class AccessToken {
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    deserialize(input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    }
}
if (false) {
    /** @type {?} */
    AccessToken.prototype.access_token;
    /** @type {?} */
    AccessToken.prototype.token_type;
    /** @type {?} */
    AccessToken.prototype.expires_in;
}
export class AuthInfo {
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    deserialize(input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    }
}
if (false) {
    /** @type {?} */
    AuthInfo.prototype.userName;
    /** @type {?} */
    AuthInfo.prototype.firstName;
    /** @type {?} */
    AuthInfo.prototype.lastName;
    /** @type {?} */
    AuthInfo.prototype.userId;
    /** @type {?} */
    AuthInfo.prototype.ts;
    /** @type {?} */
    AuthInfo.prototype.orgName;
}
export class Subscription {
    /**
     * @param {?} accountId
     * @param {?} accountDisplayName
     * @param {?} ownerName
     * @param {?} loggedInUserRole
     * @param {?} regions
     */
    constructor(accountId, accountDisplayName, ownerName, loggedInUserRole, regions) {
        this.accountId = accountId;
        this.accountDisplayName = accountDisplayName;
        this.ownerName = ownerName;
        this.loggedInUserRole = loggedInUserRole;
        this.regions = regions;
    }
}
if (false) {
    /** @type {?} */
    Subscription.prototype.accountId;
    /** @type {?} */
    Subscription.prototype.accountDisplayName;
    /** @type {?} */
    Subscription.prototype.ownerName;
    /** @type {?} */
    Subscription.prototype.loggedInUserRole;
    /** @type {?} */
    Subscription.prototype.regions;
}
export class Owner {
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    deserialize(input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    }
}
if (false) {
    /** @type {?} */
    Owner.prototype.email;
    /** @type {?} */
    Owner.prototype.firstName;
    /** @type {?} */
    Owner.prototype.lastName;
    /** @type {?} */
    Owner.prototype.role;
}
export class AccountInfo {
}
if (false) {
    /** @type {?} */
    AccountInfo.prototype.accountDisplayName;
    /** @type {?} */
    AccountInfo.prototype.accountId;
    /** @type {?} */
    AccountInfo.prototype.loggedInUserRole;
    /** @type {?} */
    AccountInfo.prototype.ownerInfo;
    /** @type {?} */
    AccountInfo.prototype.regions;
}
export class AccountsInfo {
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    deserialize(input) {
        (/** @type {?} */ (this)).accountInfos = [];
        Object.assign((/** @type {?} */ (this)).accountInfos, input);
        return (/** @type {?} */ (this));
    }
}
if (false) {
    /** @type {?} */
    AccountsInfo.prototype.accountInfos;
}
export class LoginPrefill {
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    deserialize(input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    }
}
if (false) {
    /** @type {?} */
    LoginPrefill.prototype.emailId;
    /** @type {?} */
    LoginPrefill.prototype.clientId;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGMtbG9naW4uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGliY28tdGNzdGsvdGMtY29yZS1saWIvIiwic291cmNlcyI6WyJsaWIvbW9kZWxzL3RjLWxvZ2luLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBSUEsTUFBTSxPQUFPLEtBQUs7Ozs7O0lBQ2hCLFlBQW1CLEVBQVUsRUFDVixJQUFZO1FBRFosT0FBRSxHQUFGLEVBQUUsQ0FBUTtRQUNWLFNBQUksR0FBSixJQUFJLENBQVE7SUFFL0IsQ0FBQztDQUNGOzs7SUFKYSxtQkFBaUI7O0lBQ2pCLHFCQUFtQjs7QUFLakMsTUFBTSxPQUFPLEtBQUs7Ozs7Ozs7SUFVaEIsV0FBVyxDQUFDLEtBQVU7UUFDcEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxtQkFBQSxJQUFJLEVBQUEsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUMzQixPQUFPLG1CQUFBLElBQUksRUFBQSxDQUFDO0lBQ2QsQ0FBQztDQUNGOzs7SUFiQyxzQkFBYzs7SUFDZCwwQkFBa0I7O0lBQ2xCLG1CQUFXOztJQUNYLHlCQUFpQjs7SUFDakIsMEJBQXFCOztJQUNyQiwrQkFBdUI7O0lBQ3ZCLHlCQUFpQjs7SUFDakIseUNBQWtDOztBQVFwQyxNQUFNLE9BQU8sT0FBTzs7Ozs7Ozs7O0lBQ2xCLFlBQW1CLE1BQWUsRUFDZixFQUFVLEVBQ1YsSUFBWSxFQUNaLElBQVksRUFDWixjQUFzQixFQUN0QixPQUFlO1FBTGYsV0FBTSxHQUFOLE1BQU0sQ0FBUztRQUNmLE9BQUUsR0FBRixFQUFFLENBQVE7UUFDVixTQUFJLEdBQUosSUFBSSxDQUFRO1FBQ1osU0FBSSxHQUFKLElBQUksQ0FBUTtRQUNaLG1CQUFjLEdBQWQsY0FBYyxDQUFRO1FBQ3RCLFlBQU8sR0FBUCxPQUFPLENBQVE7SUFFbEMsQ0FBQztDQUNGOzs7SUFSYSx5QkFBc0I7O0lBQ3RCLHFCQUFpQjs7SUFDakIsdUJBQW1COztJQUNuQix1QkFBbUI7O0lBQ25CLGlDQUE2Qjs7SUFDN0IsMEJBQXNCOztBQUtwQyxNQUFNLE9BQU8sV0FBVzs7Ozs7OztJQUV0QixXQUFXLENBQUMsS0FBVTtRQUNwQixtQkFBQSxJQUFJLEVBQUEsQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDO1FBQ3BCLE1BQU0sQ0FBQyxNQUFNLENBQUMsbUJBQUEsSUFBSSxFQUFBLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ3JDLE9BQU8sbUJBQUEsSUFBSSxFQUFBLENBQUM7SUFDZCxDQUFDO0NBQ0Y7OztJQU5DLGdDQUFxQjs7QUFRdkIsTUFBTSxPQUFPLFdBQVc7Ozs7Ozs7SUFLdEIsV0FBVyxDQUFDLEtBQVU7UUFDcEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxtQkFBQSxJQUFJLEVBQUEsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUMzQixPQUFPLG1CQUFBLElBQUksRUFBQSxDQUFDO0lBQ2QsQ0FBQztDQUNGOzs7SUFSQyxtQ0FBcUI7O0lBQ3JCLGlDQUFtQjs7SUFDbkIsaUNBQW1COztBQVFyQixNQUFNLE9BQU8sUUFBUTs7Ozs7OztJQVFuQixXQUFXLENBQUMsS0FBVTtRQUNwQixNQUFNLENBQUMsTUFBTSxDQUFDLG1CQUFBLElBQUksRUFBQSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzNCLE9BQU8sbUJBQUEsSUFBSSxFQUFBLENBQUM7SUFDZCxDQUFDO0NBQ0Y7OztJQVhDLDRCQUFpQjs7SUFDakIsNkJBQWtCOztJQUNsQiw0QkFBaUI7O0lBQ2pCLDBCQUFlOztJQUNmLHNCQUFXOztJQUNYLDJCQUFnQjs7QUFRbEIsTUFBTSxPQUFPLFlBQVk7Ozs7Ozs7O0lBQ3ZCLFlBQ1MsU0FBaUIsRUFDakIsa0JBQTBCLEVBQzFCLFNBQWlCLEVBQ2pCLGdCQUF3QixFQUN4QixPQUFpQjtRQUpqQixjQUFTLEdBQVQsU0FBUyxDQUFRO1FBQ2pCLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBUTtRQUMxQixjQUFTLEdBQVQsU0FBUyxDQUFRO1FBQ2pCLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBUTtRQUN4QixZQUFPLEdBQVAsT0FBTyxDQUFVO0lBQ3ZCLENBQUM7Q0FDTDs7O0lBTkcsaUNBQXdCOztJQUN4QiwwQ0FBaUM7O0lBQ2pDLGlDQUF3Qjs7SUFDeEIsd0NBQStCOztJQUMvQiwrQkFBd0I7O0FBSTVCLE1BQU0sT0FBTyxLQUFLOzs7Ozs7O0lBS2hCLFdBQVcsQ0FBQyxLQUFVO1FBQ3BCLE1BQU0sQ0FBQyxNQUFNLENBQUMsbUJBQUEsSUFBSSxFQUFBLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDM0IsT0FBTyxtQkFBQSxJQUFJLEVBQUEsQ0FBQztJQUNkLENBQUM7Q0FDRjs7O0lBUkMsc0JBQWM7O0lBQ2QsMEJBQWtCOztJQUNsQix5QkFBaUI7O0lBQ2pCLHFCQUFhOztBQU9mLE1BQU0sT0FBTyxXQUFXO0NBTXZCOzs7SUFMQyx5Q0FBMkI7O0lBQzNCLGdDQUFrQjs7SUFDbEIsdUNBQXlCOztJQUN6QixnQ0FBaUI7O0lBQ2pCLDhCQUFrQjs7QUFHcEIsTUFBTSxPQUFPLFlBQVk7Ozs7Ozs7SUFFdkIsV0FBVyxDQUFDLEtBQVU7UUFDcEIsbUJBQUEsSUFBSSxFQUFBLENBQUMsWUFBWSxHQUFHLEVBQUUsQ0FBQztRQUN2QixNQUFNLENBQUMsTUFBTSxDQUFDLG1CQUFBLElBQUksRUFBQSxDQUFDLFlBQVksRUFBRSxLQUFLLENBQUMsQ0FBQztRQUN4QyxPQUFPLG1CQUFBLElBQUksRUFBQSxDQUFDO0lBQ2QsQ0FBQztDQUNGOzs7SUFOQyxvQ0FBNEI7O0FBUTlCLE1BQU0sT0FBTyxZQUFZOzs7Ozs7O0lBR3ZCLFdBQVcsQ0FBQyxLQUFVO1FBQ3BCLE1BQU0sQ0FBQyxNQUFNLENBQUMsbUJBQUEsSUFBSSxFQUFBLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDM0IsT0FBTyxtQkFBQSxJQUFJLEVBQUEsQ0FBQztJQUNkLENBQUM7Q0FDRjs7O0lBTkMsK0JBQWdCOztJQUNoQixnQ0FBaUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBNb2RlbHMgdXNlZCBieSBsb2dpbiBhbmQgYXV0aG9yaXphdGlvbiBzZXJ2aWNlcyAqL1xuXG5pbXBvcnQgeyBEZXNlcmlhbGl6YWJsZX0gZnJvbSAnLi9kZXNlcmlhbGl6YWJsZSc7XG5cbmV4cG9ydCBjbGFzcyBHcm91cCB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBpZDogc3RyaW5nLFxuICAgICAgICAgICAgICBwdWJsaWMgdHlwZTogc3RyaW5nXG4gICkge1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBDbGFpbSBpbXBsZW1lbnRzIERlc2VyaWFsaXphYmxlIHtcbiAgZW1haWw6IHN0cmluZztcbiAgZmlyc3ROYW1lOiBzdHJpbmc7XG4gIGlkOiBzdHJpbmc7XG4gIGxhc3ROYW1lOiBzdHJpbmc7XG4gIHNhbmRib3hlczogU2FuZGJveFtdO1xuICBzdWJzY3JpcHRpb25JZDogc3RyaW5nO1xuICB1c2VybmFtZTogc3RyaW5nO1xuICBwcmltYXJ5UHJvZHVjdGlvblNhbmRib3g6IFNhbmRib3g7XG5cbiAgZGVzZXJpYWxpemUoaW5wdXQ6IGFueSk6IHRoaXMge1xuICAgIE9iamVjdC5hc3NpZ24odGhpcywgaW5wdXQpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBTYW5kYm94IHtcbiAgY29uc3RydWN0b3IocHVibGljIGdyb3VwczogR3JvdXBbXSxcbiAgICAgICAgICAgICAgcHVibGljIGlkOiBzdHJpbmcsXG4gICAgICAgICAgICAgIHB1YmxpYyB0eXBlOiBzdHJpbmcsXG4gICAgICAgICAgICAgIHB1YmxpYyBuYW1lOiBzdHJpbmcsXG4gICAgICAgICAgICAgIHB1YmxpYyBzdWJzY3JpcHRpb25JZDogc3RyaW5nLFxuICAgICAgICAgICAgICBwdWJsaWMgb3duZXJJZDogc3RyaW5nLFxuICApIHtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgU2FuZGJveExpc3Qge1xuICBzYW5kYm94ZXM6IFNhbmRib3hbXTtcbiAgZGVzZXJpYWxpemUoaW5wdXQ6IGFueSk6IHRoaXMge1xuICAgIHRoaXMuc2FuZGJveGVzID0gW107XG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLnNhbmRib3hlcywgaW5wdXQpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBBY2Nlc3NUb2tlbiBpbXBsZW1lbnRzIERlc2VyaWFsaXphYmxlIHtcbiAgYWNjZXNzX3Rva2VuOiBzdHJpbmc7XG4gIHRva2VuX3R5cGU6IHN0cmluZztcbiAgZXhwaXJlc19pbjogbnVtYmVyO1xuXG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpOiB0aGlzIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQXV0aEluZm8gaW1wbGVtZW50cyBEZXNlcmlhbGl6YWJsZSB7XG4gIHVzZXJOYW1lOiBzdHJpbmc7XG4gIGZpcnN0TmFtZTogc3RyaW5nO1xuICBsYXN0TmFtZTogc3RyaW5nO1xuICB1c2VySWQ6IHN0cmluZztcbiAgdHM6IG51bWJlcjtcbiAgb3JnTmFtZTogc3RyaW5nO1xuXG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpOiB0aGlzIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgU3Vic2NyaXB0aW9uIHtcbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIGFjY291bnRJZDogc3RyaW5nLFxuICAgIHB1YmxpYyBhY2NvdW50RGlzcGxheU5hbWU6IHN0cmluZyxcbiAgICBwdWJsaWMgb3duZXJOYW1lOiBzdHJpbmcsXG4gICAgcHVibGljIGxvZ2dlZEluVXNlclJvbGU6IHN0cmluZyxcbiAgICBwdWJsaWMgcmVnaW9uczogc3RyaW5nW11cbiAgKSB7fVxufVxuXG5leHBvcnQgY2xhc3MgT3duZXIge1xuICBlbWFpbDogc3RyaW5nO1xuICBmaXJzdE5hbWU6IHN0cmluZztcbiAgbGFzdE5hbWU6IHN0cmluZztcbiAgcm9sZTogc3RyaW5nO1xuICBkZXNlcmlhbGl6ZShpbnB1dDogYW55KTogdGhpcyB7XG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLCBpbnB1dCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIEFjY291bnRJbmZvIHtcbiAgYWNjb3VudERpc3BsYXlOYW1lOiBzdHJpbmc7XG4gIGFjY291bnRJZDogc3RyaW5nO1xuICBsb2dnZWRJblVzZXJSb2xlOiBzdHJpbmc7XG4gIG93bmVySW5mbzogT3duZXI7XG4gIHJlZ2lvbnM6IHN0cmluZ1tdO1xufVxuXG5leHBvcnQgY2xhc3MgQWNjb3VudHNJbmZvIGltcGxlbWVudHMgRGVzZXJpYWxpemFibGUge1xuICBhY2NvdW50SW5mb3M6IEFjY291bnRJbmZvW107XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpOiB0aGlzIHtcbiAgICB0aGlzLmFjY291bnRJbmZvcyA9IFtdO1xuICAgIE9iamVjdC5hc3NpZ24odGhpcy5hY2NvdW50SW5mb3MsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgTG9naW5QcmVmaWxsIGltcGxlbWVudHMgRGVzZXJpYWxpemFibGUge1xuICBlbWFpbElkOiBzdHJpbmc7XG4gIGNsaWVudElkOiBzdHJpbmc7XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpOiB0aGlzIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5cbiJdfQ==