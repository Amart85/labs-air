/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { LoginPrefill } from '../../models/tc-login';
import { map } from 'rxjs/operators';
import { TcLoginService } from '../../services/tc-login.service';
/**
 * This component will attempt to log the user in.
 *
 * ![alt-text](../Cloud-Login.png "Image")
 *
 * \@example <tc-tibco-cloud-login *ngIf="!loggedIn (loggedIn)="handleLoggedIn($event)"></tc-tibco-cloud-login>
 */
export class TibcoCloudLoginComponent {
    /**
     * The Constructor creates the Login Dialog
     * @param {?} tcLogin
     */
    constructor(tcLogin) {
        this.tcLogin = tcLogin;
        /**
         * Notify parent that user is logged in ok.
         */
        this.loggedIn = new EventEmitter();
        this.loading = false;
    }
    /**
     * @ignore
     * @return {?}
     */
    ngOnInit() {
        console.log('Login Init');
        if (this.loginPrefill) {
            this.name = this.loginPrefill.emailId;
            this.clientId = this.loginPrefill.clientId;
        }
    }
    /**
     * @return {?}
     */
    doLogin() {
        this.loading = true;
        this.loginError = undefined;
        this.auth = this.tcLogin.login(this.name, this.password, this.clientId).pipe(map((/**
         * @param {?} authInfo
         * @return {?}
         */
        authInfo => {
            this.authInfo = authInfo;
            return authInfo;
        })));
        this.auth.subscribe((/**
         * @param {?} authorize
         * @return {?}
         */
        authorize => {
            this.loading = false;
            // ok logged in
            console.log('User logged in...');
            this.loggedIn.emit({ authInfo: authorize, accessToken: this.token });
        }), (/**
         * @param {?} error
         * @return {?}
         */
        error => {
            this.loading = false;
            this.loginError = error.error.errorMsg;
            console.error('Login Failed: ');
            console.error(error);
        }));
    }
}
TibcoCloudLoginComponent.decorators = [
    { type: Component, args: [{
                selector: 'tc-tibco-cloud-login',
                template: "<div fxFill fxLayoutAlign=\"center start\">\n  <div fxFlex.gt-sm=\"grow 75\" class=\"la-login-div\" ngStyle.lt-md=\"height: 100%; width:100%\" ngStyle.gt-sm=\"max-width: 500px; margin-top: 10px;\">\n    <mat-card fxFlex class=\"la-login-card\" fxLayout=\"column\">\n        <div fxflex class=\"la-outer-form-div\" fxLayoutAlign=\"start stretch\">\n          <form #laLoginForm=\"ngForm\" class=\"la-login-form\" (submit)=\"doLogin()\" fxLayout=\"column\" fxFlex disabled=\"loading\">\n            <mat-form-field>\n              <input matInput placeholder=\"Email Address\" [(ngModel)]=\"name\" name=\"email\" required>\n            </mat-form-field>\n            <mat-form-field>\n              <input matInput placeholder=\"Password\" [(ngModel)]=\"password\" type=\"password\" name=\"password\" required>\n            </mat-form-field>\n\n            <mat-accordion>\n              <mat-expansion-panel [expanded]=\"!clientId\">\n                <mat-expansion-panel-header>\n                  <mat-panel-title>API Access Keys</mat-panel-title>\n                </mat-expansion-panel-header>\n                <mat-form-field fxFlex>\n                  <input matInput placeholder=\"Client Id\" [(ngModel)]=\"clientId\"  name=\"ClientID\" required>\n                </mat-form-field>\n              </mat-expansion-panel>\n            </mat-accordion>\n\n            <div class=\"la-login-button-div\" fxFlex fxLayoutAlign=\"center start\">\n              <button ngStyle.lt-md=\"width: 100%;\" type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!laLoginForm.form.valid || loading\">Login</button>\n            </div>\n\n          </form>\n        </div>\n\n        <div fxFlex class=\"spacer\"></div>\n\n        <div class=\"la-login-info-pane\">\n          <div *ngIf=\"loading\">\n            Logging in...\n          </div>\n          <div *ngIf=\"loginError\" style=\"color: red\">{{loginError}}</div>\n        </div>\n    </mat-card>\n  </div>\n</div>\n",
                styles: [".la-login-div{min-width:300px}.la-login-button{width:50px}.la-login-info-pane{min-height:50px;height:50px;max-height:50px;margin-top:10px}.spacer{min-height:0}.la-login-button-div{margin-top:25px}"]
            }] }
];
/** @nocollapse */
TibcoCloudLoginComponent.ctorParameters = () => [
    { type: TcLoginService }
];
TibcoCloudLoginComponent.propDecorators = {
    loggedIn: [{ type: Output }],
    loginPrefill: [{ type: Input }]
};
if (false) {
    /**
     * Notify parent that user is logged in ok.
     * @type {?}
     */
    TibcoCloudLoginComponent.prototype.loggedIn;
    /**
     * Login Data
     * @type {?}
     */
    TibcoCloudLoginComponent.prototype.loginPrefill;
    /** @type {?} */
    TibcoCloudLoginComponent.prototype.name;
    /** @type {?} */
    TibcoCloudLoginComponent.prototype.password;
    /** @type {?} */
    TibcoCloudLoginComponent.prototype.clientId;
    /** @type {?} */
    TibcoCloudLoginComponent.prototype.loading;
    /** @type {?} */
    TibcoCloudLoginComponent.prototype.accountsInfo;
    /** @type {?} */
    TibcoCloudLoginComponent.prototype.loginError;
    /** @type {?} */
    TibcoCloudLoginComponent.prototype.token;
    /** @type {?} */
    TibcoCloudLoginComponent.prototype.authInfo;
    /** @type {?} */
    TibcoCloudLoginComponent.prototype.auth;
    /**
     * @type {?}
     * @private
     */
    TibcoCloudLoginComponent.prototype.tcLogin;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGliY28tY2xvdWQtbG9naW4uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpYmNvLXRjc3RrL3RjLWNvcmUtbGliLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGliY28tY2xvdWQtbG9naW4vdGliY28tY2xvdWQtbG9naW4uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQVUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzdFLE9BQU8sRUFBZSxZQUFZLEVBQWUsTUFBTSx1QkFBdUIsQ0FBQztBQUUvRSxPQUFPLEVBQUMsR0FBRyxFQUFXLE1BQU0sZ0JBQWdCLENBQUM7QUFFN0MsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLGlDQUFpQyxDQUFDOzs7Ozs7OztBQWUvRCxNQUFNLE9BQU8sd0JBQXdCOzs7OztJQXdCbkMsWUFDVSxPQUF1QjtRQUF2QixZQUFPLEdBQVAsT0FBTyxDQUFnQjs7OztRQXBCdkIsYUFBUSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFTdEMsWUFBTyxHQUFHLEtBQUssQ0FBQztJQWNsQixDQUFDOzs7OztJQUtELFFBQVE7UUFDTixPQUFPLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBRTFCLElBQUksSUFBSSxDQUFDLFlBQVksRUFBRTtZQUNyQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDO1lBQ3RDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUM7U0FDNUM7SUFDSCxDQUFDOzs7O0lBRUQsT0FBTztRQUNELElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDO1FBRTlCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQzFFLEdBQUc7Ozs7UUFBQyxRQUFRLENBQUMsRUFBRTtZQUNYLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1lBQ3pCLE9BQU8sUUFBUSxDQUFDO1FBQ2xCLENBQUMsRUFDRixDQUNGLENBQUM7UUFFQSxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVM7Ozs7UUFBQyxTQUFTLENBQUMsRUFBRTtZQUM1QixJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztZQUNyQixlQUFlO1lBQ2YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1lBQ2pDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFFLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFFLENBQUM7UUFDekUsQ0FBQzs7OztRQUNELEtBQUssQ0FBQyxFQUFFO1lBQ0osSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7WUFDckIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQztZQUN2QyxPQUFPLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLENBQUM7WUFDaEMsT0FBTyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN6QixDQUFDLEVBQUMsQ0FBQztJQUNULENBQUM7OztZQXhFSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLHNCQUFzQjtnQkFDaEMsbzhEQUFpRDs7YUFFcEQ7Ozs7WUFiTyxjQUFjOzs7dUJBb0JuQixNQUFNOzJCQUlOLEtBQUs7Ozs7Ozs7SUFKTiw0Q0FBd0M7Ozs7O0lBSXhDLGdEQUFvQzs7SUFFbEMsd0NBQWE7O0lBQ2IsNENBQWlCOztJQUNqQiw0Q0FBaUI7O0lBQ2pCLDJDQUFnQjs7SUFDaEIsZ0RBQTJCOztJQUMzQiw4Q0FBbUI7O0lBQ25CLHlDQUFtQjs7SUFDbkIsNENBQW1COztJQUNuQix3Q0FBMkI7Ozs7O0lBTTNCLDJDQUErQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkluaXQsIE91dHB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0FjY291bnRzSW5mbywgTG9naW5QcmVmaWxsLCBTdWJzY3JpcHRpb259IGZyb20gJy4uLy4uL21vZGVscy90Yy1sb2dpbic7XG5pbXBvcnQge09ic2VydmFibGUsIE9ic2VydmFibGVJbnB1dH0gZnJvbSAncnhqcyc7XG5pbXBvcnQge21hcCwgbWVyZ2VNYXB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7QWNjZXNzVG9rZW4sIEF1dGhJbmZvIH0gZnJvbSAnLi4vLi4vbW9kZWxzL3RjLWxvZ2luJztcbmltcG9ydCB7VGNMb2dpblNlcnZpY2V9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3RjLWxvZ2luLnNlcnZpY2UnO1xuXG4vKipcbiAqIFRoaXMgY29tcG9uZW50IHdpbGwgYXR0ZW1wdCB0byBsb2cgdGhlIHVzZXIgaW4uXG4gKlxuICogIVthbHQtdGV4dF0oLi4vQ2xvdWQtTG9naW4ucG5nIFwiSW1hZ2VcIilcbiAqXG4gKiAgQGV4YW1wbGUgPHRjLXRpYmNvLWNsb3VkLWxvZ2luICpuZ0lmPVwiIWxvZ2dlZEluIChsb2dnZWRJbik9XCJoYW5kbGVMb2dnZWRJbigkZXZlbnQpXCI+PC90Yy10aWJjby1jbG91ZC1sb2dpbj5cbiAqL1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0Yy10aWJjby1jbG91ZC1sb2dpbicsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3RpYmNvLWNsb3VkLWxvZ2luLmNvbXBvbmVudC5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi90aWJjby1jbG91ZC1sb2dpbi5jb21wb25lbnQuY3NzJ11cbn0pXG5cbmV4cG9ydCBjbGFzcyBUaWJjb0Nsb3VkTG9naW5Db21wb25lbnQgIGltcGxlbWVudHMgT25Jbml0IHtcblxuICAvKipcbiAgICogTm90aWZ5IHBhcmVudCB0aGF0IHVzZXIgaXMgbG9nZ2VkIGluIG9rLlxuICAgKi9cbiAgQE91dHB1dCgpIGxvZ2dlZEluID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAvKipcbiAgICogTG9naW4gRGF0YVxuICAgKi9cbiAgQElucHV0KCkgbG9naW5QcmVmaWxsOiBMb2dpblByZWZpbGw7XG5cbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgcGFzc3dvcmQ6IHN0cmluZztcbiAgICBjbGllbnRJZDogc3RyaW5nO1xuICAgIGxvYWRpbmcgPSBmYWxzZTtcbiAgICBhY2NvdW50c0luZm86IEFjY291bnRzSW5mbztcbiAgICBsb2dpbkVycm9yOiBzdHJpbmc7XG4gICAgdG9rZW46IEFjY2Vzc1Rva2VuO1xuICAgIGF1dGhJbmZvOiBBdXRoSW5mbztcbiAgICBhdXRoOiBPYnNlcnZhYmxlPEF1dGhJbmZvPjtcblxuICAvKipcbiAgKiBUaGUgQ29uc3RydWN0b3IgY3JlYXRlcyB0aGUgTG9naW4gRGlhbG9nXG4gICovXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgdGNMb2dpbjogVGNMb2dpblNlcnZpY2VcbiAgKSB7XG5cbiAgfVxuXG4gIC8qKlxuICAqIEBpZ25vcmVcbiAgKi9cbiAgbmdPbkluaXQoKSB7XG4gICAgY29uc29sZS5sb2coJ0xvZ2luIEluaXQnKTtcblxuICAgIGlmICh0aGlzLmxvZ2luUHJlZmlsbCkge1xuICAgICAgdGhpcy5uYW1lID0gdGhpcy5sb2dpblByZWZpbGwuZW1haWxJZDtcbiAgICAgIHRoaXMuY2xpZW50SWQgPSB0aGlzLmxvZ2luUHJlZmlsbC5jbGllbnRJZDtcbiAgICB9XG4gIH1cblxuICBkb0xvZ2luKCkge1xuICAgICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlO1xuICAgICAgICB0aGlzLmxvZ2luRXJyb3IgPSB1bmRlZmluZWQ7XG5cbiAgICAgIHRoaXMuYXV0aCA9IHRoaXMudGNMb2dpbi5sb2dpbih0aGlzLm5hbWUsIHRoaXMucGFzc3dvcmQsIHRoaXMuY2xpZW50SWQpLnBpcGUoXG4gICAgICAgIG1hcChhdXRoSW5mbyA9PiB7XG4gICAgICAgICAgICB0aGlzLmF1dGhJbmZvID0gYXV0aEluZm87XG4gICAgICAgICAgICByZXR1cm4gYXV0aEluZm87XG4gICAgICAgICAgfVxuICAgICAgICApXG4gICAgICApO1xuXG4gICAgICAgIHRoaXMuYXV0aC5zdWJzY3JpYmUoYXV0aG9yaXplID0+IHtcbiAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgLy8gb2sgbG9nZ2VkIGluXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnVXNlciBsb2dnZWQgaW4uLi4nKTtcbiAgICAgICAgICAgIHRoaXMubG9nZ2VkSW4uZW1pdCggeyBhdXRoSW5mbzogYXV0aG9yaXplLCBhY2Nlc3NUb2tlbjogdGhpcy50b2tlbiB9ICk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICB0aGlzLmxvZ2luRXJyb3IgPSBlcnJvci5lcnJvci5lcnJvck1zZztcbiAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignTG9naW4gRmFpbGVkOiAnKTtcbiAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICAgICAgfSk7XG4gICAgfVxufVxuIl19