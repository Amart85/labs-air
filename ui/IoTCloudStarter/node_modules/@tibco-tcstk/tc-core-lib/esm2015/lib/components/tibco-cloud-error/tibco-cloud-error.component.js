/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
/**
 * Global Error Handling, contains generic Error Handling for
 *
 * - NO_ROLE :: You are not a Member of this Application, please contact the Application- or Subscription-Owner.
 * - NO_ACCESS :: You are not entitled to access this Application, please contact the Application- or Subscription-Owner.
 * - NO_ROUTE_ACCESS :: Sorry but you do not have the required role to access this page of the application, please contact the application owner
 */
/**
 * Exception Handling page
 *
 * \@example <tc-tibco-cloud-error></tc-tibco-cloud-error>
 */
export class TibcoCloudErrorComponent {
    /**
     * todo: Add logger
     * @param {?} route
     */
    constructor(route) {
        this.route = route;
        this.knownErrorList = [
            {
                'errorCode': 'NO_ROLE',
                'errorTitle': 'Access Denied',
                'errorMessage': 'You are not a Member of this Application, please contact the Application- or Subscription-Owner.'
            },
            {
                'errorCode': 'NO_ACCESS',
                'errorTitle': 'Access Denied',
                'errorMessage': 'You are not entitled to access this Application, please contact the Application- or Subscription-Owner.'
            },
            {
                'errorCode': 'NO_ROUTE_ACCESS',
                'errorTitle': 'Access Denied',
                'errorMessage': 'Sorry but you do not have the required role to access this page of the application, please contact the application owner'
            }
        ];
        this.message = '';
        this.route.params.subscribe((/**
         * @param {?} params
         * @return {?}
         */
        params => {
            console.log(params); // log the entire params object
            console.log(params['errorCode']);
            console.log(params['errorData?']);
            if (params['errorCode'] != null) {
                this.code = params['errorCode'];
                this.title = this.knownErrorList.find((/**
                 * @param {?} x
                 * @return {?}
                 */
                x => x.errorCode === this.code)).errorTitle;
                this.message = this.knownErrorList.find((/**
                 * @param {?} x
                 * @return {?}
                 */
                x => x.errorCode === this.code)).errorMessage;
                this.data = params['errorData'];
            }
            else {
                this.code = 'Unknown Error Code';
            }
        }));
    }
    /**
     * @ignore
     * @return {?}
     */
    ngOnInit() {
    }
}
TibcoCloudErrorComponent.decorators = [
    { type: Component, args: [{
                selector: 'tc-tibco-cloud-error',
                template: "<div fxFill fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"start center\">\n    <mat-icon class=\"tcs-error-icon\" [svgIcon]=\"'ic-error-handler'\"></mat-icon>\n    <div style=\"margin-left: 30px; margin-right: 30px;\" fxLayout=\"column\" fxLayoutGap=\"10px\">\n      <span class=\"tcs-error-title\">{{title}}</span>\n      <span class=\"tcs-error-message\">{{message}}</span>\n      <span class=\"tcs-error-code\">[{{code}}] - {{data}}</span>\n    </div>\n  </div>\n</div>\n",
                styles: [".tcs-error-icon{height:300px;width:300px}.tcs-error-icon svg{width:300px;height:300px}.tcs-error-title{font-family:\"Source Sans Pro\";font-size:40px}.tcs-error-message{font-family:\"Source Sans Pro\";font-size:16px;font-color:#212121}.tcs-error-code{font-family:\"Source Sans Pro\";font-size:16px;font-color:grey}"]
            }] }
];
/** @nocollapse */
TibcoCloudErrorComponent.ctorParameters = () => [
    { type: ActivatedRoute }
];
if (false) {
    /** @type {?} */
    TibcoCloudErrorComponent.prototype.code;
    /** @type {?} */
    TibcoCloudErrorComponent.prototype.title;
    /** @type {?} */
    TibcoCloudErrorComponent.prototype.message;
    /** @type {?} */
    TibcoCloudErrorComponent.prototype.data;
    /** @type {?} */
    TibcoCloudErrorComponent.prototype.knownErrorList;
    /**
     * @type {?}
     * @private
     */
    TibcoCloudErrorComponent.prototype.route;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGliY28tY2xvdWQtZXJyb3IuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpYmNvLXRjc3RrL3RjLWNvcmUtbGliLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGliY28tY2xvdWQtZXJyb3IvdGliY28tY2xvdWQtZXJyb3IuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQzs7Ozs7Ozs7Ozs7OztBQW9CL0MsTUFBTSxPQUFPLHdCQUF3Qjs7Ozs7SUFLbkMsWUFBb0IsS0FBcUI7UUFBckIsVUFBSyxHQUFMLEtBQUssQ0FBZ0I7UUFzQnpDLG1CQUFjLEdBQUc7WUFDZjtnQkFDRSxXQUFXLEVBQUcsU0FBUztnQkFDdkIsWUFBWSxFQUFHLGVBQWU7Z0JBQzlCLGNBQWMsRUFBRyxrR0FBa0c7YUFFcEg7WUFDRDtnQkFDRSxXQUFXLEVBQUcsV0FBVztnQkFDekIsWUFBWSxFQUFHLGVBQWU7Z0JBQzlCLGNBQWMsRUFBRyx5R0FBeUc7YUFFM0g7WUFDRDtnQkFDRSxXQUFXLEVBQUcsaUJBQWlCO2dCQUMvQixZQUFZLEVBQUcsZUFBZTtnQkFDOUIsY0FBYyxFQUFHLDBIQUEwSDthQUM1STtTQUNGLENBQUM7UUF2Q0EsSUFBSSxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUM7UUFDbEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsU0FBUzs7OztRQUFDLE1BQU0sQ0FBQyxFQUFFO1lBQ25DLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQywrQkFBK0I7WUFDcEQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztZQUNqQyxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO1lBQ2xDLElBQUksTUFBTSxDQUFDLFdBQVcsQ0FBQyxJQUFJLElBQUksRUFBRTtnQkFDL0IsSUFBSSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7Z0JBQ2hDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJOzs7O2dCQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFNBQVMsS0FBSyxJQUFJLENBQUMsSUFBSSxFQUFDLENBQUMsVUFBVSxDQUFDO2dCQUNqRixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSTs7OztnQkFBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxTQUFTLEtBQUssSUFBSSxDQUFDLElBQUksRUFBQyxDQUFDLFlBQVksQ0FBQztnQkFDckYsSUFBSSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7YUFDakM7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLElBQUksR0FBRyxvQkFBb0IsQ0FBQzthQUNsQztRQUNILENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQzs7Ozs7SUE4QkQsUUFBUTtJQUNSLENBQUM7OztZQXhERixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHNCQUFzQjtnQkFDaEMsNmhCQUFpRDs7YUFFbEQ7Ozs7WUFuQk8sY0FBYzs7OztJQTBDcEIsd0NBQWE7O0lBQ2IseUNBQWM7O0lBQ2QsMkNBQWdCOztJQUNoQix3Q0FBYTs7SUFFYixrREFrQkU7Ozs7O0lBeENVLHlDQUE2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0FjdGl2YXRlZFJvdXRlfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuXG4vKipcbiAqIEdsb2JhbCBFcnJvciBIYW5kbGluZywgY29udGFpbnMgZ2VuZXJpYyBFcnJvciBIYW5kbGluZyBmb3JcbiAqXG4gKiAtIE5PX1JPTEUgOjogWW91IGFyZSBub3QgYSBNZW1iZXIgb2YgdGhpcyBBcHBsaWNhdGlvbiwgcGxlYXNlIGNvbnRhY3QgdGhlIEFwcGxpY2F0aW9uLSBvciBTdWJzY3JpcHRpb24tT3duZXIuXG4gKiAtIE5PX0FDQ0VTUyA6OiBZb3UgYXJlIG5vdCBlbnRpdGxlZCB0byBhY2Nlc3MgdGhpcyBBcHBsaWNhdGlvbiwgcGxlYXNlIGNvbnRhY3QgdGhlIEFwcGxpY2F0aW9uLSBvciBTdWJzY3JpcHRpb24tT3duZXIuXG4gKiAtIE5PX1JPVVRFX0FDQ0VTUyA6OiBTb3JyeSBidXQgeW91IGRvIG5vdCBoYXZlIHRoZSByZXF1aXJlZCByb2xlIHRvIGFjY2VzcyB0aGlzIHBhZ2Ugb2YgdGhlIGFwcGxpY2F0aW9uLCBwbGVhc2UgY29udGFjdCB0aGUgYXBwbGljYXRpb24gb3duZXJcbiAqL1xuXG4vKipcbiAqIEV4Y2VwdGlvbiBIYW5kbGluZyBwYWdlXG4gKlxuICpAZXhhbXBsZSA8dGMtdGliY28tY2xvdWQtZXJyb3I+PC90Yy10aWJjby1jbG91ZC1lcnJvcj5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGMtdGliY28tY2xvdWQtZXJyb3InLFxuICB0ZW1wbGF0ZVVybDogJy4vdGliY28tY2xvdWQtZXJyb3IuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi90aWJjby1jbG91ZC1lcnJvci5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgVGliY29DbG91ZEVycm9yQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAvKipcbiAgICogdG9kbzogQWRkIGxvZ2dlclxuICAgKi9cbiAgY29uc3RydWN0b3IocHJpdmF0ZSByb3V0ZTogQWN0aXZhdGVkUm91dGUpIHtcbiAgICB0aGlzLm1lc3NhZ2UgPSAnJztcbiAgICB0aGlzLnJvdXRlLnBhcmFtcy5zdWJzY3JpYmUocGFyYW1zID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKHBhcmFtcyk7IC8vIGxvZyB0aGUgZW50aXJlIHBhcmFtcyBvYmplY3RcbiAgICAgIGNvbnNvbGUubG9nKHBhcmFtc1snZXJyb3JDb2RlJ10pO1xuICAgICAgY29uc29sZS5sb2cocGFyYW1zWydlcnJvckRhdGE/J10pO1xuICAgICAgaWYgKHBhcmFtc1snZXJyb3JDb2RlJ10gIT0gbnVsbCkge1xuICAgICAgICB0aGlzLmNvZGUgPSBwYXJhbXNbJ2Vycm9yQ29kZSddO1xuICAgICAgICB0aGlzLnRpdGxlID0gdGhpcy5rbm93bkVycm9yTGlzdC5maW5kKHggPT4geC5lcnJvckNvZGUgPT09IHRoaXMuY29kZSkuZXJyb3JUaXRsZTtcbiAgICAgICAgdGhpcy5tZXNzYWdlID0gdGhpcy5rbm93bkVycm9yTGlzdC5maW5kKHggPT4geC5lcnJvckNvZGUgPT09IHRoaXMuY29kZSkuZXJyb3JNZXNzYWdlO1xuICAgICAgICB0aGlzLmRhdGEgPSBwYXJhbXNbJ2Vycm9yRGF0YSddO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5jb2RlID0gJ1Vua25vd24gRXJyb3IgQ29kZSc7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBjb2RlOiBzdHJpbmc7XG4gIHRpdGxlOiBzdHJpbmc7XG4gIG1lc3NhZ2U6IHN0cmluZztcbiAgZGF0YTogc3RyaW5nO1xuXG4gIGtub3duRXJyb3JMaXN0ID0gW1xuICAgIHtcbiAgICAgICdlcnJvckNvZGUnIDogJ05PX1JPTEUnLFxuICAgICAgJ2Vycm9yVGl0bGUnIDogJ0FjY2VzcyBEZW5pZWQnLFxuICAgICAgJ2Vycm9yTWVzc2FnZScgOiAnWW91IGFyZSBub3QgYSBNZW1iZXIgb2YgdGhpcyBBcHBsaWNhdGlvbiwgcGxlYXNlIGNvbnRhY3QgdGhlIEFwcGxpY2F0aW9uLSBvciBTdWJzY3JpcHRpb24tT3duZXIuJ1xuXG4gICAgfSxcbiAgICB7XG4gICAgICAnZXJyb3JDb2RlJyA6ICdOT19BQ0NFU1MnLFxuICAgICAgJ2Vycm9yVGl0bGUnIDogJ0FjY2VzcyBEZW5pZWQnLFxuICAgICAgJ2Vycm9yTWVzc2FnZScgOiAnWW91IGFyZSBub3QgZW50aXRsZWQgdG8gYWNjZXNzIHRoaXMgQXBwbGljYXRpb24sIHBsZWFzZSBjb250YWN0IHRoZSBBcHBsaWNhdGlvbi0gb3IgU3Vic2NyaXB0aW9uLU93bmVyLidcblxuICAgIH0sXG4gICAge1xuICAgICAgJ2Vycm9yQ29kZScgOiAnTk9fUk9VVEVfQUNDRVNTJyxcbiAgICAgICdlcnJvclRpdGxlJyA6ICdBY2Nlc3MgRGVuaWVkJyxcbiAgICAgICdlcnJvck1lc3NhZ2UnIDogJ1NvcnJ5IGJ1dCB5b3UgZG8gbm90IGhhdmUgdGhlIHJlcXVpcmVkIHJvbGUgdG8gYWNjZXNzIHRoaXMgcGFnZSBvZiB0aGUgYXBwbGljYXRpb24sIHBsZWFzZSBjb250YWN0IHRoZSBhcHBsaWNhdGlvbiBvd25lcidcbiAgICB9XG4gIF07XG5cbiAgLyoqXG4gICogQGlnbm9yZVxuICAqL1xuICBuZ09uSW5pdCgpIHtcbiAgfVxuXG5cbn1cblxuXG4iXX0=