/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { LandingPageConfig, LandingPageItemConfig } from '../../models/tc-general-landing-page-config';
import { TcGeneralLandingPageConfigService } from '../../services/tc-general-landing-page-config.service';
import { MatSnackBar, MatDialog } from '@angular/material';
import { TibcoCloudNewElementComponent } from '../tibco-cloud-new-element/tibco-cloud-new-element.component';
/**
 * Configuration page home
 *
 * \@example <tc-tibco-cloud-setting-landing></tc-tibco-cloud-setting-landing>
 */
export class TibcoCloudSettingLandingComponent {
    /**
     * @param {?} route
     * @param {?} generalLandingPageConfigService
     * @param {?} snackBar
     * @param {?} dialog
     */
    constructor(route, generalLandingPageConfigService, snackBar, dialog) {
        this.route = route;
        this.generalLandingPageConfigService = generalLandingPageConfigService;
        this.snackBar = snackBar;
        this.dialog = dialog;
        /**
         * New Configuration
         */
        this.runNewConfiguration = (/**
         * @return {?}
         */
        () => {
            /** @type {?} */
            const dialogRef = this.dialog.open(TibcoCloudNewElementComponent, {
                width: '50%',
                height: '30%',
                maxWidth: '100vw',
                maxHeight: '100vh',
                panelClass: 'tcs-style-dialog',
                data: { resourceType: 'Landing Page' }
            });
            dialogRef.afterClosed().subscribe((/**
             * @param {?} result
             * @return {?}
             */
            result => {
                if (result) {
                    /** @type {?} */
                    const newElement = new LandingPageConfig().deserialize({
                        key: result.id,
                        description: result.name,
                        highlights: [new LandingPageItemConfig(), new LandingPageItemConfig(), new LandingPageItemConfig()]
                    });
                    this.landingPages.push(newElement);
                    this.selectedWelcomePage = newElement;
                }
            }));
        });
        /**
         * Helper to Compare Objects
         */
        this.compareObjects = (/**
         * @param {?} o1
         * @param {?} o2
         * @return {?}
         */
        (o1, o2) => {
            return o1 === o2;
        });
    }
    /**
     * @ignore
     * @return {?}
     */
    ngOnInit() {
        this.landingPagesConfig = this.route.snapshot.data.landingPagesConfigHolder;
        this.landingPages = this.landingPagesConfig.landingPage;
        this.allRoles = this.route.snapshot.data.allRolesHolder.roles.filter((/**
         * @param {?} element
         * @return {?}
         */
        element => !element.configuration));
        this.sandboxId = this.route.snapshot.data.claims.primaryProductionSandbox.id;
        this.uiAppId = this.route.snapshot.data.landingPagesConfigHolder.uiAppId;
        // If there is only one landing page selects it automatically
        if (this.landingPages.length == 1) {
            this.selectedWelcomePage = this.landingPages[0];
        }
    }
    /**
     * Save Configuration
     * @return {?}
     */
    runSaveFunction() {
        this.generalLandingPageConfigService.updateGeneralLandingPageConfig(this.sandboxId, this.uiAppId, this.landingPagesConfig, this.landingPagesConfig.id).subscribe((/**
         * @param {?} result
         * @return {?}
         */
        result => {
            this.snackBar.open('Landing Pages configuration saved', 'OK', {
                duration: 3000
            });
        }), (/**
         * @param {?} err
         * @return {?}
         */
        err => {
            this.snackBar.open('Error saving Landing Pages configuration', 'OK', {
                duration: 3000
            });
        }));
    }
    /**
     * Delete Configuration
     * @return {?}
     */
    runDeleteConfiguration() {
        /** @type {?} */
        const pages = this.landingPages;
        pages.forEach((/**
         * @param {?} element
         * @return {?}
         */
        element => {
            if (element == this.selectedWelcomePage) {
                /** @type {?} */
                const index = pages.indexOf(element, 0);
                pages.splice(index, 1);
                this.selectedWelcomePage = undefined;
            }
        }));
    }
}
TibcoCloudSettingLandingComponent.decorators = [
    { type: Component, args: [{
                selector: 'tc-tibco-cloud-setting-landing',
                template: "<div fxLayout=\"column\" fxFill>\n    <tc-tibco-cloud-widget-header style=\"height: 40px;\" [icon]=\"'tcs-capabilities'\"\n        [headerText]=\"'Landing Page Configuration'\"></tc-tibco-cloud-widget-header>\n    <div fxFlex style=\"padding: 20px; overflow: hidden\" fxLayout=\"column\">\n        <div style=\"overflow: auto;\">\n            <div fxLayout=\"column\" fxFlex>\n                <p>You can manage the configuration for the landing pages here.</p>\n                <br>\n                <mat-form-field>\n                    <mat-label>Welcome Page Configuration</mat-label>\n                    <mat-select [(value)]=\"selectedWelcomePage\">\n                        <mat-option *ngFor=\"let landingPage of landingPages\" [value]=\"landingPage\">\n                            {{landingPage.key}}-{{landingPage.description}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <div *ngIf=\"selectedWelcomePage\">\n                    <div fxLayoutGap=\"10px\">\n                        <mat-form-field fxFlex=\"50\">\n                            <input matInput placeholder=\"Title\" [(ngModel)]=\"selectedWelcomePage.title\">\n                        </mat-form-field>\n                        <mat-form-field fxFlex=\"50\">\n                            <input matInput placeholder=\"Subtitle\" [(ngModel)]=\"selectedWelcomePage.subtitle\">\n                        </mat-form-field>\n                    </div>\n                    <div fxLayoutGap=\"10px\">\n                        <mat-form-field fxFlex=\"50\">\n                            <input matInput placeholder=\"Background URL\" [(ngModel)]=\"selectedWelcomePage.backgroundURL\">\n                        </mat-form-field>\n                        <mat-form-field fxFlex=\"50\">\n                            <input matInput placeholder=\"Home route\" [(ngModel)]=\"selectedWelcomePage.homeRoute\">\n                        </mat-form-field>\n                    </div>\n                    <div fxLayoutGap=\"10px\">\n                        <mat-form-field fxFlex=\"80\">\n                            <mat-label>Used in roles</mat-label>\n                            <mat-select [(ngModel)]=\"selectedWelcomePage.roles\" [compareWith]=\"compareObjects\" multiple>\n                                <mat-option *ngFor=\"let role of allRoles\" [value]=\"role.id\">{{role.display}}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div>Hightlights</div>\n                    <div *ngFor=\"let highlight of selectedWelcomePage.highlights\" fxLayoutGap=\"10px\">\n                        <mat-form-field fxFlex=\"15\">\n                            <input matInput placeholder=\"Icon URL\" [(ngModel)]=\"highlight.iconURL\">\n                        </mat-form-field>\n                        <mat-form-field fxFlex=\"30\">\n                            <input matInput placeholder=\"Title\" [(ngModel)]=\"highlight.title\">\n                        </mat-form-field>\n                        <mat-form-field fxFlex=\"55\">\n                            <textarea matInput placeholder=\"Subtitle\" [(ngModel)]=\"highlight.content\" cdkAutosizeMinRows=\"3\" cdkAutosizeMaxRows=\"3\"></textarea>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div fxFlex class=\"tcs-filler-panel\"></div>\n        <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"end end\" style=\"min-height: 50px\">\n            <button mat-raised-button color=\"secundary\" (click)=\"runDeleteConfiguration()\">Delete</button>\n            <button mat-raised-button color=\"secundary\" (click)=\"runNewConfiguration()\">New</button>\n            <button mat-raised-button color=\"primary\" (click)=\"runSaveFunction()\">Save</button>\n        </div>\n    </div>\n</div>",
                styles: [""]
            }] }
];
/** @nocollapse */
TibcoCloudSettingLandingComponent.ctorParameters = () => [
    { type: ActivatedRoute },
    { type: TcGeneralLandingPageConfigService },
    { type: MatSnackBar },
    { type: MatDialog }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    TibcoCloudSettingLandingComponent.prototype.claims;
    /**
     * @type {?}
     * @private
     */
    TibcoCloudSettingLandingComponent.prototype.landingPagesConfig;
    /**
     * @type {?}
     * @private
     */
    TibcoCloudSettingLandingComponent.prototype.sandboxId;
    /**
     * @type {?}
     * @private
     */
    TibcoCloudSettingLandingComponent.prototype.uiAppId;
    /** @type {?} */
    TibcoCloudSettingLandingComponent.prototype.landingPages;
    /** @type {?} */
    TibcoCloudSettingLandingComponent.prototype.selectedWelcomePage;
    /** @type {?} */
    TibcoCloudSettingLandingComponent.prototype.allRoles;
    /** @type {?} */
    TibcoCloudSettingLandingComponent.prototype.selectedRole;
    /**
     * New Configuration
     * @type {?}
     */
    TibcoCloudSettingLandingComponent.prototype.runNewConfiguration;
    /**
     * Helper to Compare Objects
     * @type {?}
     */
    TibcoCloudSettingLandingComponent.prototype.compareObjects;
    /**
     * @type {?}
     * @private
     */
    TibcoCloudSettingLandingComponent.prototype.route;
    /**
     * @type {?}
     * @private
     */
    TibcoCloudSettingLandingComponent.prototype.generalLandingPageConfigService;
    /**
     * @type {?}
     * @private
     */
    TibcoCloudSettingLandingComponent.prototype.snackBar;
    /**
     * @type {?}
     * @private
     */
    TibcoCloudSettingLandingComponent.prototype.dialog;
}
//# sourceMappingURL=data:application/json;base64,