/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { Router, ActivatedRoute } from '@angular/router';
import { Location } from '@angular/common';
import { TcButtonsHelperService } from '../../services/tc-buttons-helper.service';
import { RouteAction } from '../../models/tc-routing-actions';
/**
 * TIBCO Cloud Configuration Component
 *
 * ![alt-text](../tibco-cloud-configuration.png "")
 *
 * \@example <tc-tibco-cloud-configuration></tc-tibco-cloud-configuration>
 */
export class TibcoCloudConfigurationComponent {
    /**
     * @param {?} router
     * @param {?} route
     * @param {?} buttonsHelper
     * @param {?} location
     */
    constructor(router, route, buttonsHelper, location) {
        this.router = router;
        this.route = route;
        this.buttonsHelper = buttonsHelper;
        this.location = location;
        /**
         * ~event routeAction : Component requests route to another page
         * ~payload RouteAction : RouteAction object to tell caller to navigate somewhere
         */
        this.routeAction = new EventEmitter();
        this.createToolbarButtons = (/**
         * @return {?}
         */
        () => {
            /** @type {?} */
            const homeButton = this.buttonsHelper.createButton('close', 'tcs-close-icon', true, 'Close', true, true);
            /** @type {?} */
            const buttons = [homeButton];
            return buttons;
        });
        this.handleSelectionEvent = (/**
         * @param {?} id
         * @return {?}
         */
        (id) => {
            this.configName = id;
            /** @type {?} */
            const url = this.baseRoute + id.toLowerCase().split(' ').join('-');
            this.router.navigate([url]);
        });
        this.handleToolbarButtonEvent = (/**
         * @param {?} buttonId
         * @return {?}
         */
        (buttonId) => {
            if (buttonId === 'close') {
                this.routeAction.emit(new RouteAction('backClicked', null));
            }
        });
        this.showConfig = (/**
         * @param {?} option
         * @return {?}
         */
        (option) => {
            this.configName = option;
            console.log('Setting selected: ' + option);
        });
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.toolbarButtons = this.createToolbarButtons();
        // this.configName = this.route.component;
    }
}
TibcoCloudConfigurationComponent.decorators = [
    { type: Component, args: [{
                selector: 'tc-tibco-cloud-configuration',
                template: "<div fxFill fxLayout=\"column\">\n  <div>\n    <tc-tibco-cloud-menu-bar [toolbarButtons]=\"toolbarButtons\" [headerText]=\"'Manage Capabilities'\"\n                             (toolbarButtonEvent)=\"handleToolbarButtonEvent($event)\">\n      <ng-content select=\"[customToolbarContent]\" fxFlex></ng-content>\n    </tc-tibco-cloud-menu-bar>\n  </div>\n\n  <div fxFlex fxLayout=\"row\" fxLayoutGap=\"20px\" style=\"margin: 20px;\">\n\n    <div fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"min-width: 220px;\" fxLayoutGap>\n      <tc-tibco-cloud-setting-menu-entry style=\"padding-bottom: 20px\" *ngFor=\"let menu of configMenuPages\"\n                                         [icon]=\"menu.icon\" [title]=\"menu.entry\" [options]=\"menu.options\"\n                                         (configureOption)=\"handleSelectionEvent($event)\"></tc-tibco-cloud-setting-menu-entry>\n    </div>\n\n    <!-- configure Box -->\n    <div fxFlex class=\"tcs-configuration-outer-pane\" fxLayout=\"column\" fxFlex>\n      <div class=\"tcs-configuration-router-pane\" fxFlex>\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n\n    <div fxShow.lt-lg=\"false\" style=\"min-width: 100px;\"  fxLayout=\"column\" fxLayoutAlign=\"start center\">\n      <a href=\"https://community.tibco.com/wiki/tibco-labs\" target=\"_blank\">\n        <mat-icon style=\"height: 64px; width: 64px;\" [svgIcon]=\"'tibco-labs'\"></mat-icon>\n      </a>\n    </div>\n\n  </div>\n</div>\n",
                styles: [".starters-custom-layout-panel-text{line-height:1.5;letter-spacing:.3px;text-align:left;color:#212121;font-weight:600;font-size:18px;box-shadow:0 0 0 #000}.starters-custom-layout-box-header{height:40px;min-height:40px;border-radius:3px 3px 0 0;background-color:#fff;box-shadow:0 2px 0 0 #dedede}.starters-custom-layout-panel-icon{max-width:24px;max-height:24px;margin-left:8px;margin-right:8px;padding:4px}.tcs-configuration-router-pane{overflow:hidden}.tcs-configuration-outer-pane{border-radius:3px;box-shadow:0 2px 4px 0 rgba(0,0,0,.33);background-color:#fff;border:1px solid #dedede;overflow:hidden}"]
            }] }
];
/** @nocollapse */
TibcoCloudConfigurationComponent.ctorParameters = () => [
    { type: Router },
    { type: ActivatedRoute },
    { type: TcButtonsHelperService },
    { type: Location }
];
TibcoCloudConfigurationComponent.propDecorators = {
    baseRoute: [{ type: Input }],
    configMenuPages: [{ type: Input }],
    routeAction: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    TibcoCloudConfigurationComponent.prototype.baseRoute;
    /** @type {?} */
    TibcoCloudConfigurationComponent.prototype.configMenuPages;
    /**
     * ~event routeAction : Component requests route to another page
     * ~payload RouteAction : RouteAction object to tell caller to navigate somewhere
     * @type {?}
     */
    TibcoCloudConfigurationComponent.prototype.routeAction;
    /** @type {?} */
    TibcoCloudConfigurationComponent.prototype.configName;
    /** @type {?} */
    TibcoCloudConfigurationComponent.prototype.toolbarButtons;
    /**
     * @type {?}
     * @private
     */
    TibcoCloudConfigurationComponent.prototype.createToolbarButtons;
    /** @type {?} */
    TibcoCloudConfigurationComponent.prototype.handleSelectionEvent;
    /** @type {?} */
    TibcoCloudConfigurationComponent.prototype.handleToolbarButtonEvent;
    /** @type {?} */
    TibcoCloudConfigurationComponent.prototype.showConfig;
    /**
     * @type {?}
     * @private
     */
    TibcoCloudConfigurationComponent.prototype.router;
    /**
     * @type {?}
     * @private
     */
    TibcoCloudConfigurationComponent.prototype.route;
    /**
     * @type {?}
     * @private
     */
    TibcoCloudConfigurationComponent.prototype.buttonsHelper;
    /**
     * @type {?}
     * @private
     */
    TibcoCloudConfigurationComponent.prototype.location;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGliY28tY2xvdWQtY29uZmlndXJhdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGliY28tdGNzdGsvdGMtY29yZS1saWIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aWJjby1jbG91ZC1jb25maWd1cmF0aW9uL3RpYmNvLWNsb3VkLWNvbmZpZ3VyYXRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQVUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzdFLE9BQU8sRUFBQyxNQUFNLEVBQVMsY0FBYyxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFDOUQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRTNDLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBQ2xGLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxpQ0FBaUMsQ0FBQzs7Ozs7Ozs7QUFlNUQsTUFBTSxPQUFPLGdDQUFnQzs7Ozs7OztJQWEzQyxZQUFvQixNQUFjLEVBQVUsS0FBcUIsRUFBVSxhQUFxQyxFQUFVLFFBQWtCO1FBQXhILFdBQU0sR0FBTixNQUFNLENBQVE7UUFBVSxVQUFLLEdBQUwsS0FBSyxDQUFnQjtRQUFVLGtCQUFhLEdBQWIsYUFBYSxDQUF3QjtRQUFVLGFBQVEsR0FBUixRQUFRLENBQVU7Ozs7O1FBSmxJLGdCQUFXLEdBQThCLElBQUksWUFBWSxFQUFlLENBQUM7UUFNM0UseUJBQW9COzs7UUFBRyxHQUFvQixFQUFFOztrQkFDN0MsVUFBVSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUM7O2tCQUNsRyxPQUFPLEdBQUcsQ0FBRSxVQUFVLENBQUU7WUFDOUIsT0FBTyxPQUFPLENBQUM7UUFDakIsQ0FBQyxFQUFBO1FBRU0seUJBQW9COzs7O1FBQUcsQ0FBQyxFQUFVLEVBQUUsRUFBRTtZQUMzQyxJQUFJLENBQUMsVUFBVSxHQUFHLEVBQUUsQ0FBQzs7a0JBQ2YsR0FBRyxHQUFHLElBQUksQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDO1lBQ2xFLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUM5QixDQUFDLEVBQUE7UUFFTSw2QkFBd0I7Ozs7UUFBRyxDQUFDLFFBQWdCLEVBQUUsRUFBRTtZQUNyRCxJQUFJLFFBQVEsS0FBSyxPQUFPLEVBQUU7Z0JBQ3hCLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksV0FBVyxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO2FBQzdEO1FBQ0gsQ0FBQyxFQUFBO1FBRUQsZUFBVTs7OztRQUFHLENBQUMsTUFBYyxFQUFFLEVBQUU7WUFDOUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxNQUFNLENBQUM7WUFDekIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxvQkFBb0IsR0FBRyxNQUFNLENBQUMsQ0FBQztRQUM3QyxDQUFDLEVBQUE7SUF2QitJLENBQUM7Ozs7SUF5QmpKLFFBQVE7UUFDTixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxDQUFDO1FBQ2xELDBDQUEwQztJQUM1QyxDQUFDOzs7WUE5Q0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSw4QkFBOEI7Z0JBQ3hDLHE5Q0FBeUQ7O2FBRTFEOzs7O1lBbEJPLE1BQU07WUFBUyxjQUFjO1lBRzVCLHNCQUFzQjtZQUZ0QixRQUFROzs7d0JBbUJkLEtBQUs7OEJBQ0wsS0FBSzswQkFPTCxNQUFNOzs7O0lBUlAscURBQTJCOztJQUMzQiwyREFBb0Q7Ozs7OztJQU9wRCx1REFBbUY7O0lBQ25GLHNEQUFtQjs7SUFDbkIsMERBQWdDOzs7OztJQUloQyxnRUFJQzs7SUFFRCxnRUFJQzs7SUFFRCxvRUFJQzs7SUFFRCxzREFHQzs7Ozs7SUF2Qlcsa0RBQXNCOzs7OztJQUFFLGlEQUE2Qjs7Ozs7SUFBRSx5REFBNkM7Ozs7O0lBQUUsb0RBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uSW5pdCwgT3V0cHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Um91dGVyLCBSb3V0ZSwgQWN0aXZhdGVkUm91dGV9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBMb2NhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBUb29sYmFyQnV0dG9uIH0gZnJvbSAnLi4vLi4vbW9kZWxzL3RjLXdpZGdldC1oZWFkZXInO1xuaW1wb3J0IHsgVGNCdXR0b25zSGVscGVyU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3RjLWJ1dHRvbnMtaGVscGVyLnNlcnZpY2UnO1xuaW1wb3J0IHtSb3V0ZUFjdGlvbn0gZnJvbSAnLi4vLi4vbW9kZWxzL3RjLXJvdXRpbmctYWN0aW9ucyc7XG5pbXBvcnQge0NvbmZpZ3VyYXRpb25NZW51Q29uZmlnfSBmcm9tICcuLi8uLi9tb2RlbHMvdGMtY29uZmlndXJhdGlvbi1tZW51LWNvbmZpZyc7XG5cbi8qKlxuICogVElCQ08gQ2xvdWQgQ29uZmlndXJhdGlvbiBDb21wb25lbnRcbiAqXG4gKiAhW2FsdC10ZXh0XSguLi90aWJjby1jbG91ZC1jb25maWd1cmF0aW9uLnBuZyBcIlwiKVxuICpcbiAqIEBleGFtcGxlIDx0Yy10aWJjby1jbG91ZC1jb25maWd1cmF0aW9uPjwvdGMtdGliY28tY2xvdWQtY29uZmlndXJhdGlvbj5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGMtdGliY28tY2xvdWQtY29uZmlndXJhdGlvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi90aWJjby1jbG91ZC1jb25maWd1cmF0aW9uLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vdGliY28tY2xvdWQtY29uZmlndXJhdGlvbi5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgVGliY29DbG91ZENvbmZpZ3VyYXRpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKSBiYXNlUm91dGU6IHN0cmluZztcbiAgQElucHV0KCkgY29uZmlnTWVudVBhZ2VzOiBDb25maWd1cmF0aW9uTWVudUNvbmZpZ1tdO1xuXG5cbiAgLyoqXG4gICAqIH5ldmVudCByb3V0ZUFjdGlvbiA6IENvbXBvbmVudCByZXF1ZXN0cyByb3V0ZSB0byBhbm90aGVyIHBhZ2VcbiAgICogfnBheWxvYWQgUm91dGVBY3Rpb24gOiBSb3V0ZUFjdGlvbiBvYmplY3QgdG8gdGVsbCBjYWxsZXIgdG8gbmF2aWdhdGUgc29tZXdoZXJlXG4gICAqL1xuICBAT3V0cHV0KCkgcm91dGVBY3Rpb246IEV2ZW50RW1pdHRlcjxSb3V0ZUFjdGlvbj4gPSBuZXcgRXZlbnRFbWl0dGVyPFJvdXRlQWN0aW9uPigpO1xuICBjb25maWdOYW1lOiBzdHJpbmc7XG4gIHRvb2xiYXJCdXR0b25zOiBUb29sYmFyQnV0dG9uW107XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSByb3V0ZXI6IFJvdXRlciwgcHJpdmF0ZSByb3V0ZTogQWN0aXZhdGVkUm91dGUsIHByaXZhdGUgYnV0dG9uc0hlbHBlcjogVGNCdXR0b25zSGVscGVyU2VydmljZSwgcHJpdmF0ZSBsb2NhdGlvbjogTG9jYXRpb24pIHsgfVxuXG4gIHByaXZhdGUgY3JlYXRlVG9vbGJhckJ1dHRvbnMgPSAoKTogVG9vbGJhckJ1dHRvbltdID0+IHtcbiAgICBjb25zdCBob21lQnV0dG9uID0gdGhpcy5idXR0b25zSGVscGVyLmNyZWF0ZUJ1dHRvbignY2xvc2UnLCAndGNzLWNsb3NlLWljb24nLCB0cnVlLCAnQ2xvc2UnLCB0cnVlLCB0cnVlKTtcbiAgICBjb25zdCBidXR0b25zID0gWyBob21lQnV0dG9uIF07XG4gICAgcmV0dXJuIGJ1dHRvbnM7XG4gIH1cblxuICBwdWJsaWMgaGFuZGxlU2VsZWN0aW9uRXZlbnQgPSAoaWQ6IHN0cmluZykgPT4ge1xuICAgIHRoaXMuY29uZmlnTmFtZSA9IGlkO1xuICAgIGNvbnN0IHVybCA9IHRoaXMuYmFzZVJvdXRlICsgaWQudG9Mb3dlckNhc2UoKS5zcGxpdCgnICcpLmpvaW4oJy0nKTtcbiAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZShbdXJsXSk7XG4gIH1cblxuICBwdWJsaWMgaGFuZGxlVG9vbGJhckJ1dHRvbkV2ZW50ID0gKGJ1dHRvbklkOiBzdHJpbmcpID0+IHtcbiAgICBpZiAoYnV0dG9uSWQgPT09ICdjbG9zZScpIHtcbiAgICAgIHRoaXMucm91dGVBY3Rpb24uZW1pdChuZXcgUm91dGVBY3Rpb24oJ2JhY2tDbGlja2VkJywgbnVsbCkpO1xuICAgIH1cbiAgfVxuXG4gIHNob3dDb25maWcgPSAob3B0aW9uOiBzdHJpbmcpID0+IHtcbiAgICB0aGlzLmNvbmZpZ05hbWUgPSBvcHRpb247XG4gICAgY29uc29sZS5sb2coJ1NldHRpbmcgc2VsZWN0ZWQ6ICcgKyBvcHRpb24pO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy50b29sYmFyQnV0dG9ucyA9IHRoaXMuY3JlYXRlVG9vbGJhckJ1dHRvbnMoKTtcbiAgICAvLyB0aGlzLmNvbmZpZ05hbWUgPSB0aGlzLnJvdXRlLmNvbXBvbmVudDtcbiAgfVxuXG59XG5cbiJdfQ==