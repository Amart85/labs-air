/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Output, Inject, EventEmitter } from '@angular/core';
import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';
export class TibcoCloudUploadDialogComponent {
    // public fileText: string;
    /**
     * @param {?} dialogRef
     * @param {?} data
     */
    constructor(dialogRef, data) {
        this.dialogRef = dialogRef;
        this.data = data;
        this.fileevent = new EventEmitter();
        this.fileToUpload = undefined;
        this.description = undefined;
        this.uploadFile = (/**
         * @return {?}
         */
        () => {
            if (this.fileToUpload) {
                this.fileevent.emit({
                    file: this.fileToUpload,
                    description: this.description,
                    inputData: this.data
                });
                this.dialogRef.close();
            }
        });
    }
    /**
     * @param {?} description
     * @return {?}
     */
    setFileDescription(description) {
        this.description = description;
    }
    /**
     * @param {?} files
     * @return {?}
     */
    attachFile(files) {
        this.fileToUpload = files.item(0);
    }
    /**
     * @return {?}
     */
    onNoClick() {
        this.dialogRef.close();
    }
}
TibcoCloudUploadDialogComponent.decorators = [
    { type: Component, args: [{
                selector: 'tibco-cloud-upload-dialog',
                template: "<h1 mat-dialog-title>{{data.title}}</h1>\n<div mat-dialog-content class=\"tcs-state-icon-upload-dialog\">\n    <form #fileUploadForm=\"ngForm\" fxFlex fxLayout=\"column\">\n        <div fxLayout=\"row\" fxLayoutAlign=\"start space-between\">\n            <button type=\"button\" mat-raised-button (click)=\"fileInput.click()\">Choose File To Upload</button>\n            <div *ngIf=\"fileToUpload\">{{fileToUpload.name}}</div>\n            <!-- below input is hidden and enabled by above button -->\n            <input class=\"tcs-hidden-input\" (change)=\"attachFile($event.target.files)\" accept=\"{{data.allowedExtensions}}\" #fileInput\n                type=\"file\" id=\"file\">\n        </div>\n    </form>\n</div>\n<div mat-dialog-actions>\n    <button mat-button (click)=\"uploadFile()\" type=\"submit\" [disabled]=\"!fileToUpload\">Upload</button>\n    <button mat-button (click)=\"onNoClick()\">Cancel</button>\n</div>",
                styles: [".tcs-hidden-input{display:none}"]
            }] }
];
/** @nocollapse */
TibcoCloudUploadDialogComponent.ctorParameters = () => [
    { type: MatDialogRef },
    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
];
TibcoCloudUploadDialogComponent.propDecorators = {
    fileevent: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    TibcoCloudUploadDialogComponent.prototype.fileevent;
    /** @type {?} */
    TibcoCloudUploadDialogComponent.prototype.fileToUpload;
    /** @type {?} */
    TibcoCloudUploadDialogComponent.prototype.description;
    /** @type {?} */
    TibcoCloudUploadDialogComponent.prototype.uploadFile;
    /** @type {?} */
    TibcoCloudUploadDialogComponent.prototype.dialogRef;
    /** @type {?} */
    TibcoCloudUploadDialogComponent.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGliY28tY2xvdWQtdXBsb2FkLWRpYWxvZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGliY28tdGNzdGsvdGMtY29yZS1saWIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aWJjby1jbG91ZC11cGxvYWQtZGlhbG9nL3RpYmNvLWNsb3VkLXVwbG9hZC1kaWFsb2cuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxZQUFZLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFPbEUsTUFBTSxPQUFPLCtCQUErQjs7Ozs7O0lBT3hDLFlBQ1csU0FBd0QsRUFDL0IsSUFBUztRQURsQyxjQUFTLEdBQVQsU0FBUyxDQUErQztRQUMvQixTQUFJLEdBQUosSUFBSSxDQUFLO1FBUG5DLGNBQVMsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBQ3ZDLGlCQUFZLEdBQVMsU0FBUyxDQUFDO1FBQy9CLGdCQUFXLEdBQVcsU0FBUyxDQUFDO1FBUWhDLGVBQVU7OztRQUFHLEdBQUcsRUFBRTtZQUNyQixJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUU7Z0JBQ25CLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDO29CQUNoQixJQUFJLEVBQUUsSUFBSSxDQUFDLFlBQVk7b0JBQ3ZCLFdBQVcsRUFBRSxJQUFJLENBQUMsV0FBVztvQkFDN0IsU0FBUyxFQUFFLElBQUksQ0FBQyxJQUFJO2lCQUN2QixDQUFDLENBQUM7Z0JBQ0gsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsQ0FBQzthQUMxQjtRQUNMLENBQUMsRUFBQTtJQVhHLENBQUM7Ozs7O0lBYUwsa0JBQWtCLENBQUMsV0FBbUI7UUFDbEMsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7SUFDbkMsQ0FBQzs7Ozs7SUFFRCxVQUFVLENBQUMsS0FBZTtRQUN0QixJQUFJLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdEMsQ0FBQzs7OztJQUVELFNBQVM7UUFDTCxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQzNCLENBQUM7OztZQXRDSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLDJCQUEyQjtnQkFDckMsNDZCQUF5RDs7YUFFNUQ7Ozs7WUFOUSxZQUFZOzRDQWdCWixNQUFNLFNBQUMsZUFBZTs7O3dCQVAxQixNQUFNOzs7O0lBQVAsb0RBQThDOztJQUM5Qyx1REFBc0M7O0lBQ3RDLHNEQUF1Qzs7SUFRdkMscURBU0M7O0lBYkcsb0RBQStEOztJQUMvRCwrQ0FBeUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE91dHB1dCwgSW5qZWN0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1hdERpYWxvZ1JlZiwgTUFUX0RJQUxPR19EQVRBIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3RpYmNvLWNsb3VkLXVwbG9hZC1kaWFsb2cnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi90aWJjby1jbG91ZC11cGxvYWQtZGlhbG9nLmNvbXBvbmVudC5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi90aWJjby1jbG91ZC11cGxvYWQtZGlhbG9nLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBUaWJjb0Nsb3VkVXBsb2FkRGlhbG9nQ29tcG9uZW50IHtcblxuICAgIEBPdXRwdXQoKSBmaWxlZXZlbnQgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgICBwdWJsaWMgZmlsZVRvVXBsb2FkOiBGaWxlID0gdW5kZWZpbmVkO1xuICAgIHB1YmxpYyBkZXNjcmlwdGlvbjogc3RyaW5nID0gdW5kZWZpbmVkO1xuICAgIC8vIHB1YmxpYyBmaWxlVGV4dDogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHB1YmxpYyBkaWFsb2dSZWY6IE1hdERpYWxvZ1JlZjxUaWJjb0Nsb3VkVXBsb2FkRGlhbG9nQ29tcG9uZW50PiwgXG4gICAgICAgIEBJbmplY3QoTUFUX0RJQUxPR19EQVRBKSBwdWJsaWMgZGF0YTogYW55XG4gICAgKSB7IH1cblxuICAgIHB1YmxpYyB1cGxvYWRGaWxlID0gKCkgPT4ge1xuICAgICAgICBpZiAodGhpcy5maWxlVG9VcGxvYWQpIHtcbiAgICAgICAgICAgIHRoaXMuZmlsZWV2ZW50LmVtaXQoeyBcbiAgICAgICAgICAgICAgICBmaWxlOiB0aGlzLmZpbGVUb1VwbG9hZCxcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogdGhpcy5kZXNjcmlwdGlvbixcbiAgICAgICAgICAgICAgICBpbnB1dERhdGE6IHRoaXMuZGF0YSBcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5kaWFsb2dSZWYuY2xvc2UoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNldEZpbGVEZXNjcmlwdGlvbihkZXNjcmlwdGlvbjogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcbiAgICB9XG5cbiAgICBhdHRhY2hGaWxlKGZpbGVzOiBGaWxlTGlzdCkge1xuICAgICAgICB0aGlzLmZpbGVUb1VwbG9hZCA9IGZpbGVzLml0ZW0oMCk7XG4gICAgfVxuXG4gICAgb25Ob0NsaWNrKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmRpYWxvZ1JlZi5jbG9zZSgpO1xuICAgIH1cblxufVxuIl19