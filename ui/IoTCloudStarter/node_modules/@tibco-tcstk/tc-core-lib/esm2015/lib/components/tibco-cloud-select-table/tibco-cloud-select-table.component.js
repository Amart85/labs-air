/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Output } from '@angular/core';
import { TibcoCloudTableComponent } from '../tibco-cloud-table/tibco-cloud-table.component';
import { LogService } from '../../services/tc-logging.service';
/**
 * A table that allows rows to be selected
 *
 * \@example <tc-tibco-cloud-select-table></tc-tibco-cloud-select-table>
 */
export class TibcoCloudSelectTableComponent extends TibcoCloudTableComponent {
    /**
     * @param {?} logger
     */
    constructor(logger) {
        super();
        this.logger = logger;
        /**
         * ~event selectedlines : the lines selected
         * ~payload any : The lines that are selected in the table by the user
         */
        this.selectedlines = new EventEmitter();
        this.selected = {};
        logger.info('Select Table Started... ');
    }
    /**
     * @param {?} element
     * @return {?}
     */
    highlight(element) {
        element.highlighted = !element.highlighted;
    }
    /**
     * @param {?} row
     * @return {?}
     */
    clicked(row) {
        // console.log(row);
        /** @type {?} */
        const myData = JSON.parse(JSON.stringify(this.dataSource.data));
        // console.log(this.dataSource);
        /** @type {?} */
        const selectedArray = new Array();
        for (const line of myData) {
            // console.log('s:' , line);
            if (line.highlighted) {
                delete line['hovered'];
                delete line['highlighted'];
                selectedArray.push(line);
            }
        }
        // console.log('Selected Array: ' , selectedArray);
        this.selected = JSON.stringify(selectedArray);
        this.selectedlines.emit(this.selected);
    }
}
TibcoCloudSelectTableComponent.decorators = [
    { type: Component, args: [{
                selector: 'tc-tibco-cloud-select-table',
                template: "<div class=\"mat-elevation-z8\">\n  <table id=\"{{id}}\" mat-table class=\"tcst-full-width-table\" [dataSource]=\"dataSource\" matSort aria-label=\"Elements\">\n    <ng-container *ngFor=\"let column of columns\" [matColumnDef]='column.columnDef'>\n      <mat-header-cell *matHeaderCellDef class=\"tcst-header\" mat-sort-header>{{camelCaseTW(column.header)}}</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\" >{{ column.cell(row) }}</mat-cell>\n    </ng-container>\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;  let even = even;\"\n             [ngClass]=\"{hovered: row.hovered, highlighted: row.highlighted, tcstgray: even}\"\n             (click)=\"row.highlighted = !row.highlighted; clicked(row);\" (mouseover)=\"row.hovered = true\" (mouseout)=\"row.hovered = false\"></mat-row>\n\n\n  </table> <!-- *ngIf=\"dataSource.data.length > 10\" -->\n<!-- <div class='' ngClass=\"{'tcst-hide': dataSource.data.length < 10}\"> -->\n  <mat-paginator [ngClass]=\"{'tcst-hide': dataSource.data.length < 10}\"  #paginator\n                 [length]=\"dataSource.data.length\"\n                 [pageIndex]=\"0\"\n                 [pageSize]=\"10\"\n                 [pageSizeOptions]=\"[5, 10, 20, 25]\">\n  </mat-paginator>\n</div>\n<!--</div>-->\n",
                styles: [".tcst-full-width-table{width:100%}.mat-row.hovered{background:#eee;cursor:pointer}.mat-row.highlighted{background:#999}.tcst-header{background:#0081cb;color:#fff;padding:5px 30px;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center}.tcst-header:hover{background-color:#229be0}.tcstgray{background-color:#f5f5f5}.tcst-hide{display:none}"]
            }] }
];
/** @nocollapse */
TibcoCloudSelectTableComponent.ctorParameters = () => [
    { type: LogService }
];
TibcoCloudSelectTableComponent.propDecorators = {
    selectedlines: [{ type: Output }]
};
if (false) {
    /**
     * ~event selectedlines : the lines selected
     * ~payload any : The lines that are selected in the table by the user
     * @type {?}
     */
    TibcoCloudSelectTableComponent.prototype.selectedlines;
    /** @type {?} */
    TibcoCloudSelectTableComponent.prototype.selected;
    /**
     * @type {?}
     * @private
     */
    TibcoCloudSelectTableComponent.prototype.logger;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGliY28tY2xvdWQtc2VsZWN0LXRhYmxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0aWJjby10Y3N0ay90Yy1jb3JlLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RpYmNvLWNsb3VkLXNlbGVjdC10YWJsZS90aWJjby1jbG91ZC1zZWxlY3QtdGFibGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFlBQVksRUFBVSxNQUFNLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDdEUsT0FBTyxFQUFDLHdCQUF3QixFQUFDLE1BQU0sa0RBQWtELENBQUM7QUFDMUYsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLG1DQUFtQyxDQUFDOzs7Ozs7QUFhN0QsTUFBTSxPQUFPLDhCQUErQixTQUFRLHdCQUF3Qjs7OztJQWUxRSxZQUFvQixNQUFrQjtRQUNwQyxLQUFLLEVBQUUsQ0FBQztRQURVLFdBQU0sR0FBTixNQUFNLENBQVk7Ozs7O1FBUjVCLGtCQUFhLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7UUFFckUsYUFBUSxHQUFHLEVBQUUsQ0FBQztRQVFaLE1BQU0sQ0FBQyxJQUFJLENBQUMsMEJBQTBCLENBQUMsQ0FBQztJQUMxQyxDQUFDOzs7OztJQVBELFNBQVMsQ0FBQyxPQUFPO1FBQ2YsT0FBTyxDQUFDLFdBQVcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUM7SUFDN0MsQ0FBQzs7Ozs7SUFRTSxPQUFPLENBQUMsR0FBRzs7O2NBRVYsTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDOzs7Y0FFekQsYUFBYSxHQUFHLElBQUksS0FBSyxFQUFFO1FBQ2pDLEtBQUssTUFBTSxJQUFJLElBQUksTUFBTSxFQUFFO1lBQ3pCLDRCQUE0QjtZQUM1QixJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUU7Z0JBQ3BCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO2dCQUN2QixPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztnQkFDM0IsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUMxQjtTQUVGO1FBQ0QsbURBQW1EO1FBQ25ELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUM5QyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDekMsQ0FBQzs7O1lBM0NGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsNkJBQTZCO2dCQUN2Qyw0MENBQXdEOzthQUV6RDs7OztZQVpPLFVBQVU7Ozs0QkFvQmYsTUFBTTs7Ozs7Ozs7SUFBUCx1REFBcUU7O0lBRXJFLGtEQUFjOzs7OztJQU1GLGdEQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIE9uSW5pdCwgT3V0cHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VGliY29DbG91ZFRhYmxlQ29tcG9uZW50fSBmcm9tICcuLi90aWJjby1jbG91ZC10YWJsZS90aWJjby1jbG91ZC10YWJsZS5jb21wb25lbnQnO1xuaW1wb3J0IHtMb2dTZXJ2aWNlfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy90Yy1sb2dnaW5nLnNlcnZpY2UnO1xuXG4vKipcbiAqIEEgdGFibGUgdGhhdCBhbGxvd3Mgcm93cyB0byBiZSBzZWxlY3RlZFxuICpcbiAqQGV4YW1wbGUgPHRjLXRpYmNvLWNsb3VkLXNlbGVjdC10YWJsZT48L3RjLXRpYmNvLWNsb3VkLXNlbGVjdC10YWJsZT5cbiAqL1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0Yy10aWJjby1jbG91ZC1zZWxlY3QtdGFibGUnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGliY28tY2xvdWQtc2VsZWN0LXRhYmxlLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vdGliY28tY2xvdWQtc2VsZWN0LXRhYmxlLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBUaWJjb0Nsb3VkU2VsZWN0VGFibGVDb21wb25lbnQgZXh0ZW5kcyBUaWJjb0Nsb3VkVGFibGVDb21wb25lbnQge1xuXG5cbiAgLyoqXG4gICAqIH5ldmVudCBzZWxlY3RlZGxpbmVzIDogdGhlIGxpbmVzIHNlbGVjdGVkXG4gICAqIH5wYXlsb2FkIGFueSA6IFRoZSBsaW5lcyB0aGF0IGFyZSBzZWxlY3RlZCBpbiB0aGUgdGFibGUgYnkgdGhlIHVzZXJcbiAgICovXG4gIEBPdXRwdXQoKSBzZWxlY3RlZGxpbmVzOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gIHNlbGVjdGVkID0ge307XG5cbiAgaGlnaGxpZ2h0KGVsZW1lbnQpIHtcbiAgICBlbGVtZW50LmhpZ2hsaWdodGVkID0gIWVsZW1lbnQuaGlnaGxpZ2h0ZWQ7XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGxvZ2dlcjogTG9nU2VydmljZSkgeyAvKiwgcHJpdmF0ZSB0Y2Z1bmN0aW9uczogVGNGdW5jdGlvbnNTZXJ2aWNlKSB7Ki9cbiAgICBzdXBlcigpO1xuICAgIGxvZ2dlci5pbmZvKCdTZWxlY3QgVGFibGUgU3RhcnRlZC4uLiAnKTtcbiAgfVxuXG5cbiAgcHVibGljIGNsaWNrZWQocm93KSB7XG4gICAgLy8gY29uc29sZS5sb2cocm93KTtcbiAgICBjb25zdCBteURhdGEgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuZGF0YVNvdXJjZS5kYXRhKSk7XG4gICAgLy8gY29uc29sZS5sb2codGhpcy5kYXRhU291cmNlKTtcbiAgICBjb25zdCBzZWxlY3RlZEFycmF5ID0gbmV3IEFycmF5KCk7XG4gICAgZm9yIChjb25zdCBsaW5lIG9mIG15RGF0YSkge1xuICAgICAgLy8gY29uc29sZS5sb2coJ3M6JyAsIGxpbmUpO1xuICAgICAgaWYgKGxpbmUuaGlnaGxpZ2h0ZWQpIHtcbiAgICAgICAgZGVsZXRlIGxpbmVbJ2hvdmVyZWQnXTtcbiAgICAgICAgZGVsZXRlIGxpbmVbJ2hpZ2hsaWdodGVkJ107XG4gICAgICAgIHNlbGVjdGVkQXJyYXkucHVzaChsaW5lKTtcbiAgICAgIH1cblxuICAgIH1cbiAgICAvLyBjb25zb2xlLmxvZygnU2VsZWN0ZWQgQXJyYXk6ICcgLCBzZWxlY3RlZEFycmF5KTtcbiAgICB0aGlzLnNlbGVjdGVkID0gSlNPTi5zdHJpbmdpZnkoc2VsZWN0ZWRBcnJheSk7XG4gICAgdGhpcy5zZWxlY3RlZGxpbmVzLmVtaXQodGhpcy5zZWxlY3RlZCk7XG4gIH1cblxuXG59XG4iXX0=