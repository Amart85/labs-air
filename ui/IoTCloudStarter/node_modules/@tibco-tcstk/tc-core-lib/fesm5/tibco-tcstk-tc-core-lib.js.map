{"version":3,"file":"tibco-tcstk-tc-core-lib.js","sources":["ng://@tibco-tcstk/tc-core-lib/lib/common/tc-core-common-functions.ts","ng://@tibco-tcstk/tc-core-lib/lib/common/tc-core-topic-comm.ts","ng://@tibco-tcstk/tc-core-lib/lib/components/tibco-cloud-navbar/tibco-cloud-navbar.component.ts","ng://@tibco-tcstk/tc-core-lib/lib/models/tc-login.ts","ng://@tibco-tcstk/tc-core-lib/lib/resolvers/login-prefill.resolver.ts","ng://@tibco-tcstk/tc-core-lib/lib/services/tc-login.service.ts","ng://@tibco-tcstk/tc-core-lib/lib/components/tibco-cloud-login/tibco-cloud-login.component.ts","ng://@tibco-tcstk/tc-core-lib/lib/models/tc-shared-state.ts","ng://@tibco-tcstk/tc-core-lib/lib/models/tc-app-config.ts","ng://@tibco-tcstk/tc-core-lib/lib/services/tc-shared-state.service.ts","ng://@tibco-tcstk/tc-core-lib/lib/services/request-cache.service.ts","ng://@tibco-tcstk/tc-core-lib/lib/interceptors/caching-interceptor.ts","ng://@tibco-tcstk/tc-core-lib/lib/guards/auth.guard.ts","ng://@tibco-tcstk/tc-core-lib/lib/interceptors/authentication-error-interceptor.ts","ng://@tibco-tcstk/tc-core-lib/lib/pipes/ellipsis.pipe.ts","ng://@tibco-tcstk/tc-core-lib/lib/pipes/duration-since.pipe.ts","ng://@tibco-tcstk/tc-core-lib/lib/pipes/highlight.pipe.ts","ng://@tibco-tcstk/tc-core-lib/lib/pipes/order-by-date.pipe.ts","ng://@tibco-tcstk/tc-core-lib/lib/pipes/reverse.pipe.ts","ng://@tibco-tcstk/tc-core-lib/lib/components/tibco-cloud-widget-header/tibco-cloud-widget-header.component.ts","ng://@tibco-tcstk/tc-core-lib/lib/components/tibco-cloud-menu-bar/tibco-cloud-menu-bar.component.ts","ng://@tibco-tcstk/tc-core-lib/lib/models/tc-widget-header.ts","ng://@tibco-tcstk/tc-core-lib/lib/services/tc-buttons-helper.service.ts","ng://@tibco-tcstk/tc-core-lib/lib/components/tibco-cloud-error/tibco-cloud-error.component.ts","ng://@tibco-tcstk/tc-core-lib/lib/directives/on-create.directive.ts","ng://@tibco-tcstk/tc-core-lib/lib/models/tc-general-config.ts","ng://@tibco-tcstk/tc-core-lib/lib/services/tc-general-config.service.ts","ng://@tibco-tcstk/tc-core-lib/lib/components/tibco-cloud-table/tibco-cloud-table-datasource.ts","ng://@tibco-tcstk/tc-core-lib/lib/components/tibco-cloud-table/tibco-cloud-table.component.ts","ng://@tibco-tcstk/tc-core-lib/lib/services/tc-logging.service.ts","ng://@tibco-tcstk/tc-core-lib/lib/components/tibco-cloud-select-table/tibco-cloud-select-table.component.ts","ng://@tibco-tcstk/tc-core-lib/lib/components/tibco-cloud-setting-menu-entry/tibco-cloud-setting-menu-entry.component.ts","ng://@tibco-tcstk/tc-core-lib/lib/components/tibco-cloud-settings-general/tibco-cloud-settings-general.component.ts","ng://@tibco-tcstk/tc-core-lib/lib/models/tc-routing-actions.ts","ng://@tibco-tcstk/tc-core-lib/lib/components/tibco-cloud-configuration/tibco-cloud-configuration.component.ts","ng://@tibco-tcstk/tc-core-lib/lib/components/tibco-cloud-splash-screen/tibco-cloud-splash-screen.component.ts","ng://@tibco-tcstk/tc-core-lib/lib/models/tc-general-landing-page-config.ts","ng://@tibco-tcstk/tc-core-lib/lib/services/tc-general-landing-page-config.service.ts","ng://@tibco-tcstk/tc-core-lib/lib/components/tibco-cloud-new-element/tibco-cloud-new-element.component.ts","ng://@tibco-tcstk/tc-core-lib/lib/components/tibco-cloud-setting-landing/tibco-cloud-setting-landing.component.ts","ng://@tibco-tcstk/tc-core-lib/lib/tc-core-lib.module.ts","ng://@tibco-tcstk/tc-core-lib/lib/services/tc-general-landing-page.service.ts","ng://@tibco-tcstk/tc-core-lib/lib/models/tc-configuration-menu-config.ts","ng://@tibco-tcstk/tc-core-lib/lib/interceptors/mocking-interceptor.ts","ng://@tibco-tcstk/tc-core-lib/lib/resolvers/general-config.resolver.ts","ng://@tibco-tcstk/tc-core-lib/lib/resolvers/configuration-menu-config.resolver.ts","ng://@tibco-tcstk/tc-core-lib/lib/resolvers/general-landing-page-config.resolver.ts","ng://@tibco-tcstk/tc-core-lib/lib/common/tc-core-queue-comm.ts"],"sourcesContent":["import {HashLocationStrategy, Location} from '@angular/common';\n\n// @dynamic\nexport class TcCoreCommonFunctions {\n\n\n  public static escapeString(text) {\n    return text.replace(/\"/g, '\\\"');\n  }\n\n  public static fileSizeToHuman(size) {\n    const e = (Math.log(size) / Math.log(1e3)) | 0;\n    return +(size / Math.pow(1e3, e)).toFixed(2) + ' ' + ('kMGTPEZY'[e - 1] || '') + 'B';\n  }\n\n  public static camelCaseToWords(str) {\n    const re =  str.replace(/([a-z])([A-Z])/g, '$1 $2')\n      .replace(/([A-Z])([a-z])/g, ' $1$2')\n      .replace(/\\ +/g, ' ');\n    return re;\n  }\n\n  public static convertToJSON(array) {\n    const objArray = [];\n    for (let i = 1; i < array.length; i++) {\n      objArray[i - 1] = {};\n      for (let k = 0; k < array[0].length && k < array[i].length; k++) {\n        const key = array[0][k];\n        objArray[i - 1][key] = array[i][k];\n      }\n    }\n    return objArray;\n  }\n\n  public static transposeArray(array, arrayLength) {\n    // console.log('transposing array) arrayLength: ' + arrayLength );\n    const newArray = [];\n    for (let i = 0; i < arrayLength; i++) {\n      newArray.push([]);\n    }\n    for (let i = 0; i < array.length; i++) {\n      for (let j = 0; j < arrayLength; j++) {\n        newArray[j].push(array[i][j]);\n      }\n    }\n    return newArray;\n  }\n\n  public static camelize = (str: string): string => {\n    let newStr = '';\n    let newArr = [];\n\n    if (str.indexOf('-') !== -1) {\n      newArr = str.split('-');\n      for (let i = 0; i < newArr.length; i++) {\n        newArr[i] = newArr[i].charAt(0).toUpperCase() + newArr[i].substr(1);\n      }\n      newStr = newArr.join(' ');\n    }\n    return newStr;\n  }\n\n  public static prepareUrlForNonStaticResource = (location: Location, str: string): string => {\n    // @ts-ignore\n    if (location._platformStrategy instanceof HashLocationStrategy) {\n      return str;\n    } else {\n      return str;\n    }\n  }\n\n  public static prepareUrlForStaticResource = (location: Location, str: string): string => {\n    // @ts-ignore\n    if (location._platformStrategy instanceof HashLocationStrategy) {\n      return str;\n    } else {\n      return location.prepareExternalUrl(str);\n    }\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class MessageTopicService {\n\n  topics: Array<{ name: string, subject: BehaviorSubject<any> }> = [\n    {name: 'sample.topic', subject: new BehaviorSubject<any>('init')}\n  ];\n\n  constructor() {\n    console.log('Topic Message service Created...');\n  }\n\n  sendMessage(name: string, message: string) {\n    this.createTopicIfNotExists(name, {text: message});\n    this.topics.filter(x => x.name === name)[0].subject.next({text: message});\n  }\n\n  clearMessages(name: string) {\n    this.createTopicIfNotExists(name, {text: 'init'});\n    // this.queues.filter(x => x.name === name)[0].subject.next('init');\n  }\n\n  getMessage(name: string): Observable<any> {\n    this.createTopicIfNotExists(name, {text: 'init'});\n    return this.topics.filter(x => x.name === name)[0].subject.asObservable();\n  }\n\n  createTopicIfNotExists(name: string , init) {\n    let queueExist = false;\n    for (const q of this.topics) {\n      if (q.name === name) {\n        // console.log('Queue Exist: ' + q.name);\n        queueExist = true;\n      }\n    }\n    if (!queueExist) {\n      console.log('Creating Topic: ' + name);\n      const tempTopic = {name: name, subject: new BehaviorSubject<any>(init)};\n      this.topics.push(tempTopic);\n    }\n  }\n}\n","import {Component, OnInit, ViewChild, ElementRef, Input, SystemJsNgModuleLoader} from '@angular/core';\nimport {Location} from '@angular/common';\nimport { TcCoreCommonFunctions } from '../../common/tc-core-common-functions';\nimport {MessageTopicService} from '../../common/tc-core-topic-comm';\n\ndeclare var GlobalNavbar: any;\n\n\n/**\n * TIBCO Cloud Navigation Bar\n *\n * ![alt-text](../tibco-cloud-navbar.png \"Image\")\n *\n * @example <tc-tibco-cloud-navbar appName=\"\"></tc-tibco-cloud-navbar>\n */\n@Component({\n  selector: 'tc-tibco-cloud-navbar',\n  templateUrl: './tibco-cloud-navbar.component.html',\n  styleUrls: ['./tibco-cloud-navbar.component.css']\n})\nexport class TibcoCloudNavbarComponent implements OnInit {\n  /**\n   * Reference Element\n   */\n  @ViewChild('navbar', { static: true }) private navbarRef: ElementRef;\n  /**\n   * diaplayed Application Name\n   */\n  @Input() appName: string;\n  /**\n   * Documentation URL\n   */\n  @Input() docUrl: string;\n\n  /**\n   * Custom Logo URL\n   */\n\n  @Input() logoUrl: string;\n\n  /**\n   * rebrand config - example: { \"backgroundColor\": \"#cfcfcf\", \"fontColor\": \"#682782\", \"fontFamily\": \"Oswald\", \"iconColor\": \"red\" }\n   */\n\n  @Input() rebrandConfig: any;\n\n  /**\n   * Where to redirect on click of logo\n   */\n\n  @Input() logoClickTargetUrl: string;\n\n\n  private navbar;\n\n  private ms: MessageTopicService;\n\n  /**\n   * single empty Constructor of TIBCO Cloud Navigation Bar\n   */\n\n  constructor(private location: Location, private messageService: MessageTopicService) {\n    this.ms = messageService;\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n\n    if (this.docUrl && (this.docUrl.slice(0, 4).toLowerCase() !== 'http')) {\n//      this.docUrl = this.location.prepareExternalUrl(this.docUrl);        // This will work with non hash routing\n      this.docUrl = TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, this.docUrl);        // This will work with hash routing\n    }\n\n    this.navbar = new GlobalNavbar({\n      container: '#navbar',\n      textAfterLogo: this.appName ? this.appName : undefined,\n      iconMenus: {\n        search: {\n          visible: false  // for versions 0.1.X the propertie is \"disabled\" instead of \"visible\".\n        },\n        download: {\n          visible: false\n        },\n        help: {\n          visible: true\n        },\n        notifications: {\n          visible: false\n        },\n        products: {\n          visible: false\n        }\n      },\n      customProfilePanel: {\n        account: {\n          visible: false\n        },\n        subscriptions: {\n          visible: false\n        },\n        organization: {\n          visible: false\n        },\n        tenants: {\n          visible: false\n        }\n      },\n      customizedComponents: [\n        {\n          name: 'help',\n          template: '#help-template'\n        }\n      ]\n    });\n    if (this.logoUrl || this.logoClickTargetUrl || this.rebrandConfig) {\n      const style: any = {};\n      if (this.logoUrl || this.logoClickTargetUrl) {\n        style.logo = {\n          'src': this.logoUrl,\n          'url': this.logoClickTargetUrl // If the url is not set then the logo will redirect to TSC.\n        };\n      }\n      if (this.rebrandConfig) {\n        if (this.rebrandConfig.backgroundColor) {\n          style.backgroundColor = this.rebrandConfig.backgroundColor;\n        }\n        if (this.rebrandConfig.fontColor) {\n          style.fontColor = this.rebrandConfig.fontColor;\n        }\n        if (this.rebrandConfig.fontFamily) {\n          style.fontFamily = this.rebrandConfig.fontFamily;\n        }\n        if (this.rebrandConfig.iconColor) {\n          style.iconColor = this.rebrandConfig.iconColor;\n        }\n      }\n      this.navbar.refreshRebrandingStyle(style);\n    }\n    this.navbar.load();\n    // console.log('DOC URL: ' + this.docUrl);\n    const initialHelpURL = this.docUrl + '/help.html';\n\n    this.urlExists(initialHelpURL, exists => {\n      if (exists) {\n        this.navbar.customizePanel('help', '<embed src=\"' + initialHelpURL + '\" style=\"height: 100%; width: 100%\">');  // set HTML string\n\n      } else {\n        this.navbar.customizePanel('help', '<b> No Help Page Found</b>');  // set HTML string\n\n      }\n    });\n\n    this.ms.getMessage('help').subscribe(data => {\n      // console.log('Got message: ' + data.text);\n      this.findHelpFile('assets/help/' + data.text + '/help.html');\n    });\n  }\n\n  findHelpFile(helpUrl) {\n    this.urlExists(helpUrl, exists => {\n      // console.log('RESULT: url=' + helpUrl + ', exists=' + exists);\n      if (exists) {\n        console.log('Setting help page: ' + helpUrl);\n        this.navbar.customizePanel('help', '<embed src=\"' + helpUrl + '\" style=\"height: 100%; width: 100%\">');\n      } else {\n        if (helpUrl.includes('/')) {\n          // Find one step lower\n          // console.log('HelpURL before: |' + helpUrl + '|');\n          helpUrl = helpUrl.substring(0, helpUrl.lastIndexOf('/help.html'));\n          // console.log('HelpURL middle: |' + helpUrl + '|');\n          helpUrl = helpUrl.substring(0, helpUrl.lastIndexOf('/') + 1);\n          // console.log('HelpURL  after: |' + helpUrl + '|');\n          this.findHelpFile(helpUrl + 'help.html');\n        } else {\n          console.log('No valid help file found...');\n          this.navbar.customizePanel('help', '<b> No Help Page Found</b>');  // set HTML string\n\n        }\n      }\n    });\n  }\n\n  // The \"callback\" argument is called with either true or false\n// depending on whether the \"url\" exists or not.\n  urlExists(url, callback) {\n    const http = new XMLHttpRequest();\n    http.open('GET', url, true);\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          callback(true);\n        } else {\n          callback(false);\n        }\n      }\n    };\n    http.send();\n  }\n}\n","/* Models used by login and authorization services */\n\nimport { Deserializable} from './deserializable';\n\nexport class Group {\n  constructor(public id: string,\n              public type: string\n  ) {\n  }\n}\n\nexport class Claim implements Deserializable {\n  email: string;\n  firstName: string;\n  id: string;\n  lastName: string;\n  sandboxes: Sandbox[];\n  subscriptionId: string;\n  username: string;\n  primaryProductionSandbox: Sandbox;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Sandbox {\n  constructor(public groups: Group[],\n              public id: string,\n              public type: string,\n              public name: string,\n              public subscriptionId: string,\n              public ownerId: string,\n  ) {\n  }\n}\n\nexport class SandboxList {\n  sandboxes: Sandbox[];\n  deserialize(input: any): this {\n    this.sandboxes = [];\n    Object.assign(this.sandboxes, input);\n    return this;\n  }\n}\n\nexport class AccessToken implements Deserializable {\n  access_token: string;\n  token_type: string;\n  expires_in: number;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AuthInfo implements Deserializable {\n  userName: string;\n  firstName: string;\n  lastName: string;\n  userId: string;\n  ts: number;\n  orgName: string;\n\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class Subscription {\n  constructor(\n    public accountId: string,\n    public accountDisplayName: string,\n    public ownerName: string,\n    public loggedInUserRole: string,\n    public regions: string[]\n  ) {}\n}\n\nexport class Owner {\n  email: string;\n  firstName: string;\n  lastName: string;\n  role: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class AccountInfo {\n  accountDisplayName: string;\n  accountId: string;\n  loggedInUserRole: string;\n  ownerInfo: Owner;\n  regions: string[];\n}\n\nexport class AccountsInfo implements Deserializable {\n  accountInfos: AccountInfo[];\n  deserialize(input: any): this {\n    this.accountInfos = [];\n    Object.assign(this.accountInfos, input);\n    return this;\n  }\n}\n\nexport class LoginPrefill implements Deserializable {\n  emailId: string;\n  clientId: string;\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n\n","/* Used to resolve the default login credentials (username/clientId) when using dev/local login route instead of tibco cloud */\n\n/* Data is stored/retrieved from session storage */\n\nimport { Injectable } from '@angular/core';\nimport {Resolve} from '@angular/router';\nimport { LoginPrefill } from '../models/tc-login';\n\nexport const EMAIL_ID_KEY = 'tcs-login-email-id';\nexport const CLIENT_ID_KEY = 'tcs-login-client-id';\n\n@Injectable()\nexport class LoginPrefillResolver implements Resolve<LoginPrefill> {\n\n  constructor() {}\n\n  private getClientId = (): string => {\n    return localStorage.getItem(CLIENT_ID_KEY);\n  }\n\n  private getEmail = (): string => {\n    return localStorage.getItem(EMAIL_ID_KEY);\n  }\n\n  resolve(): LoginPrefill {\n    return new LoginPrefill().deserialize({ emailId: this.getEmail(), clientId: this.getClientId() } );\n  }\n\n}\n","/**\n * @ngdoc component\n * @name tcLoginService\n *\n * @description\n *\n * tcLoginService provides services for authenticating against Tibco Subscriber cloud and authorizing with the various\n * Tibco Cloud tenants such as liveapps.\n *\n * These services and related components are typically used when the UI is NOT running on Live Apps WRP/Tibco Cloud\n * When deployed to Live Apps WRP authentication is handled by Tibco Cloud when accessing the protected WRP URL\n *\n *\n */\n\n\nimport { Injectable } from '@angular/core';\nimport {AccessToken, AuthInfo} from '../models/tc-login';\nimport {Observable} from 'rxjs';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {map, tap} from 'rxjs/operators';\nimport {Location} from '@angular/common';\nimport {EMAIL_ID_KEY, CLIENT_ID_KEY} from '../resolvers/login-prefill.resolver';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class TcLoginService {\n  constructor(private http: HttpClient, private location: Location) { }\n\n  // Provide ability to login to Tibco Subscriber Cloud\n  public login(username, password, clientID): Observable<AuthInfo> {\n    localStorage.setItem(EMAIL_ID_KEY, username);\n    localStorage.setItem(CLIENT_ID_KEY, clientID);\n\n\n    const url = '/idm/v3/login-oauth';\n    const body = new HttpParams()\n      .set('Email', username)\n      .set('Password', password)\n      .set('TenantId', 'bpm')\n      .set('ClientID', clientID);\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/x-www-form-urlencoded');\n\n    return this.http.post(url, body.toString(), { headers })\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map( authInfo => new AuthInfo().deserialize(authInfo)));\n  }\n\n  public loginV2(username, password): Observable<AccessToken> {\n    const url = '/as/token.oauth2';\n    const body = new HttpParams()\n      .set('username', username)\n      .set('password', password)\n      .set('client_id', 'ropc_ipass')\n      .set('grant_type', 'password');\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/x-www-form-urlencoded');\n\n    return this.http.post(url, body.toString(), { headers })\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map( accessToken => new AccessToken().deserialize(accessToken)));\n  }\n\n\n  // Provide ability to authorize against live apps (note tenantId: bpm)\n  public laAuthorize(accessToken: AccessToken, accountId): Observable<AuthInfo> {\n    const url = '/idm/v2/login-oauth';\n    const body = new HttpParams()\n      .set('AccessToken', accessToken.access_token)\n      .set('TenantId', 'bpm')\n      .set('AccountId', accountId);\n\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/x-www-form-urlencoded');\n\n    return this.http.post(url, body.toString(), { headers })\n      .pipe(\n        tap( val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map( authInfo => new AuthInfo().deserialize(authInfo)));\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {AccountsInfo, LoginPrefill, Subscription} from '../../models/tc-login';\nimport {Observable, ObservableInput} from 'rxjs';\nimport {map, mergeMap} from 'rxjs/operators';\nimport {AccessToken, AuthInfo } from '../../models/tc-login';\nimport {TcLoginService} from '../../services/tc-login.service';\n\n/**\n * This component will attempt to log the user in.\n *\n * ![alt-text](../Cloud-Login.png \"Image\")\n *\n *  @example <tc-tibco-cloud-login *ngIf=\"!loggedIn (loggedIn)=\"handleLoggedIn($event)\"></tc-tibco-cloud-login>\n */\n@Component({\n    selector: 'tc-tibco-cloud-login',\n    templateUrl: './tibco-cloud-login.component.html',\n    styleUrls: ['./tibco-cloud-login.component.css']\n})\n\nexport class TibcoCloudLoginComponent  implements OnInit {\n\n  /**\n   * Notify parent that user is logged in ok.\n   */\n  @Output() loggedIn = new EventEmitter();\n  /**\n   * Login Data\n   */\n  @Input() loginPrefill: LoginPrefill;\n\n    name: string;\n    password: string;\n    clientId: string;\n    loading = false;\n    accountsInfo: AccountsInfo;\n    loginError: string;\n    token: AccessToken;\n    authInfo: AuthInfo;\n    auth: Observable<AuthInfo>;\n\n  /**\n  * The Constructor creates the Login Dialog\n  */\n  constructor(\n    private tcLogin: TcLoginService\n  ) {\n\n  }\n\n  /**\n  * @ignore\n  */\n  ngOnInit() {\n    console.log('Login Init');\n\n    if (this.loginPrefill) {\n      this.name = this.loginPrefill.emailId;\n      this.clientId = this.loginPrefill.clientId;\n    }\n  }\n\n  doLogin() {\n        this.loading = true;\n        this.loginError = undefined;\n\n      this.auth = this.tcLogin.login(this.name, this.password, this.clientId).pipe(\n        map(authInfo => {\n            this.authInfo = authInfo;\n            return authInfo;\n          }\n        )\n      );\n\n        this.auth.subscribe(authorize => {\n            this.loading = false;\n            // ok logged in\n            console.log('User logged in...');\n            this.loggedIn.emit( { authInfo: authorize, accessToken: this.token } );\n          },\n          error => {\n              this.loading = false;\n              this.loginError = error.error.errorMsg;\n              console.error('Login Failed: ');\n              console.error(error);\n          });\n    }\n}\n","/* models used by shared state services */\n\nimport { Deserializable} from './deserializable';\n\nexport class SharedStateContent implements Deserializable {\n  json: string;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class SharedStateEntry implements Deserializable {\n  attributes: string[];\n  content: SharedStateContent;\n  createdBy: string;\n  createdByName: string;\n  description: string;\n  id: string;\n  isAbandoned: boolean;\n  isOrphaned: boolean;\n  links: string[];\n  modifiedById: string;\n  modifiedByName: string;\n  modifiedDate: number;\n  name: string;\n  roles: string[];\n  sandboxId: number;\n  scope: string;\n  type: string;\n\n  deserialize(input: any): this {\n    this.attributes = input.attributes;\n    this.content = input.content;\n    this.createdBy = input.createdBy;\n    this.createdByName = input.createdByName;\n    this.description = input.description;\n    this.id = input.id;\n    this.isAbandoned = input.isAbandoned;\n    this.isOrphaned = input.isOrphaned;\n    this.links = input.links;\n    this.modifiedById = input.modifiedById;\n    this.modifiedDate = input.modifiedDate;\n    this.name = input.name;\n    this.roles = input.roles;\n    this.sandboxId = input.sandboxId;\n    this.scope = input.scope;\n    this.type = input.type;\n    this.content = input.json.content;\n    return this;\n  }\n}\n\nexport class SharedStateList implements Deserializable {\n  sharedStateEntries: SharedStateEntry[];\n  deserialize(input: any): this {\n    this.sharedStateEntries = [];\n    Object.assign(this.sharedStateEntries, input);\n    return this;\n  }\n}\n","/* Models used to store shared state configuration */\n\nimport {Deserializable} from './deserializable';\n\nexport class UiAppConfig implements Deserializable {\n  id: string;\n  sandboxId: number;\n  applicationIds: number[];\n  typeId: string;\n  uiAppId: string;\n  caseIconsFolderId: string;\n  caseTypeLabel: string;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\n\nexport class UiAppIdConfig implements  Deserializable {\n  uiAppId: string;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n","/**\n * @ngdoc component\n * @name tcSharedStateService\n *\n * @description\n *\n * tcSharedStateService provides services for managing stored client config using the Tibco Live Apps shared state service.\n *\n * Although this is a live apps service rather than a Tibco Subscriber Cloud Service it is inside the core project since it will\n * be used for all applications to store configuration information.\n *\n * By hosting this service in the core we can avoid a circular dependency to the live apps library.\n *\n * Note: This service will use the http caching interceptor for 'GET' calls based on passed parameters.\n *\n *\n */\n\nimport { Injectable } from '@angular/core';\nimport {SharedStateContent, SharedStateEntry, SharedStateList} from '../models/tc-shared-state';\nimport {Observable} from 'rxjs';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {map, tap} from 'rxjs/operators';\nimport {Location} from '@angular/common';\nimport {UiAppConfig} from '../models/tc-app-config';\nimport {TcCoreCommonFunctions} from '../common/tc-core-common-functions';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TcSharedStateService {\n\n  constructor(private http: HttpClient, private location: Location) {\n  }\n\n  public createSharedState(name: string,\n                           type: string,\n                           description: string,\n                           sandboxId: number,\n                           attributes: string[],\n                           roles: string[],\n                           links: string[],\n                           content: SharedStateContent): Observable<string> {\n    const url = '/clientstate/v1/states';\n\n    const body = {\n      'name': name,\n      'type': type,\n      'description': description,\n      'sandboxId': sandboxId,\n      'attributes': attributes,\n      'roles': roles,\n      'links': links,\n      content: content\n    };\n    const bodyStr = JSON.stringify(body);\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/json');\n    return this.http.post(url, bodyStr, {headers})\n      .pipe(\n        tap(val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(result => {\n          return result.toString();\n        })\n      );\n  }\n\n  public updateSharedState(sharedStateList): Observable<SharedStateList> {\n    const url = '/clientstate/v1/states';\n\n    const body = sharedStateList;\n    const bodyStr = JSON.stringify(body);\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/json');\n    return this.http.put(url, bodyStr, {headers})\n      .pipe(\n        tap(val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(updatedSharedStateList => new SharedStateList().deserialize(updatedSharedStateList))\n      );\n  }\n\n  public getSharedState(name: string, type: string, useCache: boolean, flushCache: boolean): Observable<SharedStateList> {\n    const url = '/clientstate/v1/states?$filter=type=' + type\n      + ' and name=\\'' + name + '\\'';\n    let options = {}\n    // set headers when caching required\n    let headers: HttpHeaders = new HttpHeaders();\n    if (useCache) {\n      headers = headers.set('cacheResponse', 'true');\n    }\n    if (flushCache) {\n      headers = headers.set('flushCache', 'true');\n    }\n    options = {headers: headers};\n\n    return this.http.get(url, options)\n      .pipe(\n        tap(val => sessionStorage.setItem('tcsTimestamp', Date.now().toString())),\n        map(sharedStateList => new SharedStateList().deserialize(sharedStateList)));\n  }\n\n  /* Ui App Config */\n\n  public getUiAppConfig(uiAppId: string, useCache: boolean, flushCache: boolean): Observable<UiAppConfig> {\n    // if useCache is false this will trigger the service to update the cached version with latest\n    const ssName = uiAppId + '.config.tibcolabs.client.context.PUBLIC';\n\n    return this.getSharedState(ssName, 'PUBLIC', useCache, flushCache)\n      .pipe(\n        map(value => {\n            if (value.sharedStateEntries.length > 0) {\n              const ssresult = new UiAppConfig().deserialize(JSON.parse(value.sharedStateEntries[0].content.json));\n              ssresult.id = value.sharedStateEntries[0].id;\n              return ssresult;\n            } else {\n              return undefined;\n            }\n          }\n        )\n      );\n  }\n\n  public createUiAppConfig(sandboxId: number, uiAppConfig: UiAppConfig, uiAppId: string): Observable<string> {\n    const ssName = uiAppId + '.config.tibcolabs.client.context.PUBLIC';\n    const content: SharedStateContent = new SharedStateContent();\n    content.json = TcCoreCommonFunctions.escapeString(JSON.stringify(uiAppConfig));\n    return this.createSharedState(ssName, 'PUBLIC', '', sandboxId, undefined, undefined, undefined, content)\n      .pipe(\n        map(value => value)\n      );\n  }\n\n  public updateUiAppConfig(sandboxId: number, uiAppConfig: UiAppConfig, uiAppId: string, id: string): Observable<UiAppConfig> {\n    const ssName = uiAppId + '.config.tibcolabs.client.context.PUBLIC';\n    const content: SharedStateContent = new SharedStateContent();\n    content.json = TcCoreCommonFunctions.escapeString(JSON.stringify(uiAppConfig));\n    const entry: SharedStateEntry = new SharedStateEntry();\n    entry.content = content;\n    entry.sandboxId = sandboxId;\n    entry.name = ssName;\n    entry.type = 'PUBLIC';\n    entry.id = id;\n    const ssList: SharedStateList = new SharedStateList();\n    ssList.sharedStateEntries = [];\n    ssList.sharedStateEntries.push(entry);\n    return this.updateSharedState(ssList.sharedStateEntries)\n      .pipe(\n        map(value => {\n          return new UiAppConfig().deserialize((JSON.parse(value.sharedStateEntries[0].content.json)));\n        })\n      );\n  }\n\n  /* UI App Config */\n}\n","/**\n * @ngdoc component\n * @name RequestCacheService\n *\n * @description\n *\n * This service provides the ability to cache http requests\n *\n *\n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse } from '@angular/common/http';\n\n// cache for an hour max\nconst maxAge = 3.6e+6;\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class RequestCacheService {\n  cache = new Map();\n\n  get(req: HttpRequest<any>): HttpResponse<any> | undefined {\n    const url = req.urlWithParams;\n    const cached = this.cache.get(url);\n\n    if (!cached) {\n      return undefined;\n    }\n\n    const isExpired = cached.lastRead < (Date.now() - maxAge);\n    const expired = isExpired ? 'expired ' : '';\n    return cached.response;\n  }\n\n  put(req: HttpRequest<any>, response: HttpResponse<any>): void {\n    // console.log(JSON.stringify(response));\n    const url = req.url;\n    const entry = { url, response, lastRead: Date.now() };\n    this.cache.set(url, entry);\n\n    const expired = Date.now() - maxAge;\n    this.cache.forEach(expiredEntry => {\n      if (expiredEntry.lastRead < expired) {\n        this.cache.delete(expiredEntry.url);\n      }\n    });\n  }\n}\n\n\n","/**\n * @ngdoc component\n * @name CachingInterceptor\n *\n * @description\n *\n * This interceptor will intercept http calls if it is enabled in the tc-core-lib-module.ts.\n *\n * It will cache requests if the cacheResponse header is specified on the http request.\n * If flush cache header is on the request it will not use the cache and will overwrite the current cached entry.\n *\n *\n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpEvent, HttpRequest, HttpResponse, HttpInterceptor, HttpHandler } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { RequestCacheService } from '../services/request-cache.service';\n\n@Injectable()\nexport class CachingInterceptor implements HttpInterceptor {\n  constructor(private cache: RequestCacheService) {}\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    let cachedResponse;\n    if (req.headers.get('cacheResponse') || (req.urlWithParams.substr(0, 15)) === '../assets/icons') {\n      // only cache if the cacheResponse flag is set\n      if (!req.headers.get('flushCache')) {\n        cachedResponse = this.cache.get(req);\n      } else {\n      }\n      // use the cache\n    } else {\n      // dont pass the cache since this should not be cached\n      return this.sendRequest(req, next, undefined);\n    }\n    // return cached response or make request if no cached response\n    return cachedResponse ? of(cachedResponse) : this.sendRequest(req, next, this.cache);\n  }\n\n  sendRequest(\n    req: HttpRequest<any>,\n    next: HttpHandler,\n    cache: RequestCacheService): Observable<HttpEvent<any>> {\n    return next.handle(req)\n      .pipe(\n      tap(event => {\n        if (event instanceof HttpResponse && cache) {\n          cache.put(req, event);\n        }\n      })\n    );\n  }\n}\n","// This guard will redirect to login when not authenticated against live apps.\n// If hosted on Tibco cloud it will not be used since Tibco Cloud/Live Apps WRP resources are protected anyway.\n\n// session is detected if API called in last 30 mins (checks local sessionTimestamp)\n// alternative way to achieve this would be to make an API call - eg) live apps claims call\n\n// NOTE: assumes the login route is /login\n\nimport {Inject, Injectable} from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  private TIBCO_CLOUD_DOMAIN = 'cloud.tibco.com';\n  private TIBCO_TEST_DOMAIN = 'tenant-integration.tcie.pro';\n  private TIBCO_DEV_DOMAIN = 'emea.tibco.com';\n\n  constructor(private router: Router) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    // check if we are hosted on tibco.cloud.com\n    const host = window.location.hostname.split('.');\n    const hostDomain = host[host.length - 3] + '.' + host[host.length - 2] + '.' + host[host.length - 1];\n    if (hostDomain === this.TIBCO_CLOUD_DOMAIN || hostDomain === this.TIBCO_TEST_DOMAIN || hostDomain === this.TIBCO_DEV_DOMAIN) {\n      // delegate handling login/auth to Tibco Cloud since WRP resources are protected anyway\n      return true;\n    } else {\n      // use the sessionTimestamp to decide whether to redirect to login (30 mins expiry of token if no API call)\n      const tcsTimestamp = sessionStorage.getItem('tcsTimestamp');\n      if (tcsTimestamp && Number(tcsTimestamp) > (Number(Date.now()) - (30 * 60000))) {\n        // logged in and api called made in last 30 mins so should be OK\n        return true;\n      } else {\n        // not logged in so redirect to login page\n        this.router.navigate(['/login'], {queryParams: {returnUrl: state.url}});\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse,\n} from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport {catchError, tap} from 'rxjs/operators';\nimport {ActivatedRouteSnapshot, Router, RouterStateSnapshot} from '@angular/router';\n\n@Injectable()\nexport class AuthErrorInterceptor implements HttpInterceptor {\n  private TIBCO_CLOUD_DOMAIN = 'cloud.tibco.com';\n  private TIBCO_TEST_DOMAIN = 'tenant-integration.tcie.pro';\n  private TIBCO_DEV_DOMAIN = 'emea.tibco.com';\n  private TIBCO_CLOUD_LOGIN = 'https://account.cloud.tibco.com/idm/v1/login-saml?relayState=';\n\n  constructor(private router: Router) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      catchError((err: any) => {\n          if (err instanceof HttpErrorResponse) {\n            if (err.status === 419) {\n              // timed out\n              // should only be used if not on tibco cloud (and hence using our login route)\n              // check if we are hosted on tibco.cloud.com\n              const host = window.location.hostname.split('.');\n              const hostDomain = host[host.length - 3] + '.' + host[host.length - 2] + '.' + host[host.length - 1];\n              if (hostDomain === this.TIBCO_CLOUD_DOMAIN || hostDomain === this.TIBCO_TEST_DOMAIN || hostDomain === this.TIBCO_DEV_DOMAIN) {\n                // redirect to Tibco Cloud Login\n                // supply base64 encoded redirect string\n                const reauthUrl = btoa('{ \"resumeURL\":\"' + window.location.href + '\", \"tenantId\":\"BPM\" }');\n                console.log('redirecting to: ' + this.TIBCO_CLOUD_LOGIN + reauthUrl);\n                window.location.href = this.TIBCO_CLOUD_LOGIN + reauthUrl;\n              } else {\n                this.router.navigate(['/login'], {queryParams: {}});\n              }\n            } else {\n              throw err;\n            }\n          }\n          return of(err);\n        }\n      )\n    );\n  }\n}\n","/* truncates string to a set length using ellipsis ... */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'ellipsis'\n})\nexport class EllipsisPipe implements PipeTransform {\n\n  transform(value: any, args?: number): any {\n    if (args === undefined) {\n      return value;\n    }\n\n    if (value && value.length > args) {\n      return value.substring(0, args) + '...';\n    } else {\n      return value;\n    }\n  }\n\n}\n","// This pipe will display a date based on how long ago it was: eg. 5 mins ago, 1 hour ago, just now etc etc\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'durationSince'\n})\nexport class DurationSincePipe implements PipeTransform {\n\n  transform(value: string, args?: any): any {\n    const seconds: number = Math.floor((+new Date() - +new Date(value)) / 1000);\n    let interval: number = Math.floor(seconds / 31536000);\n    // years\n    if (interval >= 1) {\n      if (interval === 1) {\n        return interval + ' year ago';\n      } else {\n        return interval + ' years ago';\n      }\n    }\n    // months\n    interval = Math.floor(seconds / 2592000);\n    if (interval >= 1) {\n      if (interval === 1) {\n        return interval + ' month ago';\n      } else {\n        return interval + ' months ago';\n      }\n    }\n    // weeks\n    interval = Math.floor(seconds / 604800);\n    if (interval >= 1) {\n      if (interval === 1) {\n        return interval + ' week ago';\n      } else {\n        return interval + ' weeks ago';\n      }\n    }\n    // days\n    interval = Math.floor(seconds / 86400);\n    if (interval >= 1) {\n      if (interval === 1) {\n        return ' yesterday';\n      } else {\n        return interval + ' days ago';\n      }\n    }\n    // hours\n    interval = Math.floor(seconds / 3600);\n    if (interval >= 1) {\n      if (interval === 1) {\n        return interval + ' hour ago';\n      } else {\n        return interval + ' hours ago';\n      }\n    }\n    // minutes\n    interval = Math.floor(seconds / 60);\n    if (interval >= 1) {\n      if (interval === 1) {\n        return interval + ' minute ago';\n      } else {\n        return interval + ' minutes ago';\n      }\n    }\n\n    return 'Just now';\n  }\n\n}\n","/* used to highlight search results in a list where search term matches\n *\n * original source from https://gist.github.com/adamrecsko/0f28f474eca63e0279455476cc11eca7\n * post by ankitgrover\n*/\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport {SafeHtml} from '@angular/platform-browser';\n\n@Pipe({\n  name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n\n  /* use this for single match search */\n  static SINGLE_MATCH = 'Single-Match';\n  /* use this for single match search with a restriction that target should start with search string */\n  static SINGLE_AND_STARTS_WITH_MATCH = 'Single-And-StartsWith-Match';\n  /* use this for global search */\n  static MULTI_MATCH = 'Multi-Match';\n\n  transform(data: string,\n            highlightText: string,\n            option: string = 'Single-And-StartsWith-Match',\n            caseSensitive: boolean = false,\n            highlightStyleName: string = 'search-highlight'): SafeHtml {\n    if (highlightText && data && option) {\n      let regex: any = '';\n      const caseFlag: string = !caseSensitive ? 'i' : '';\n      switch (option) {\n        case 'Single-Match': {\n          regex = new RegExp(highlightText, caseFlag);\n          break;\n        }\n        case 'Single-And-StartsWith-Match': {\n          regex = new RegExp('^' + highlightText, caseFlag);\n          break;\n        }\n        case 'Multi-Match': {\n          regex = new RegExp(highlightText, 'g' + caseFlag);\n          break;\n        }\n        default: {\n          // default will be a global case-insensitive match\n          regex = new RegExp(highlightText, 'gi');\n        }\n      }\n      return data.replace(regex, (match) => `<span class=\"${highlightStyleName}\">${match}</span>`);\n\n    } else {\n      return data;\n    }\n  }\n\n}\n","/* orders array by date */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'orderByDate'\n})\nexport class OrderByDatePipe implements PipeTransform {\n\n  transform(array: any[], field: string): any[] {\n    return array.sort(function(a, b) {\n        a = new Date(a[field]);\n        b = new Date(b[field]);\n        return a > b ? -1 : a < b ? 1 : 0;\n    });\n  }\n}\n","/* reverses the input */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'reverse',\n  pure: false\n})\nexport class ReversePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n      return value.slice().reverse();\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ToolbarButton} from '../../models/tc-widget-header';\n\n\n/**\n * Header bar for small widgets (like recent cases etc on home)\n *\n * ![alt-text](../tibco-cloud-widget-header.png \"Image\")\n *\n *@example <tc-tibco-cloud-widget-header></tc-tibco-cloud-widget-header>\n */\n@Component({\n  selector: 'tc-tibco-cloud-widget-header',\n  templateUrl: './tibco-cloud-widget-header.component.html',\n  styleUrls: ['./tibco-cloud-widget-header.component.css']\n})\nexport class TibcoCloudWidgetHeaderComponent {\n  /**\n   * Text shown in menu bar\n   */\n  @Input() headerText: string;\n\n  /**\n   * icon name (svg key - needs to be registered)\n   */\n  @Input() icon: string;\n\n  /**\n   * buttons to display in the menu bar\n   */\n  @Input() toolbarButtons: ToolbarButton[];\n\n  /**\n   * Whether to show the header bar in the widget - eg. favorites on home page (contains icon etc) - if off icons still appear without bar\n   */\n  @Input() showHeader: boolean = this.showHeader ? this.showHeader : true;\n\n  /**\n   * ~event toolbarButtonEvent : Button Clicked\n   * ~payload string : tells caller a button was clicked - outputs button Id\n   */\n  @Output() toolbarButtonEvent: EventEmitter<string> = new EventEmitter<string>();\n  constructor() {\n  }\n\n  toolbarButtonClick(id) {\n    this.toolbarButtonEvent.emit(id);\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {TibcoCloudWidgetHeaderComponent} from '../tibco-cloud-widget-header/tibco-cloud-widget-header.component';\nimport {ToolbarButton} from '../../models/tc-widget-header';\n\n/**\n * TIBCO Cloud Menu Bar\n *\n *  ![alt-text](../tibco-cloud-menu-bar.png \"\")\n *\n * @example <tc-tibco-cloud-menu-bar></tc-tibco-cloud-menu-bar>\n */\n@Component({\n  selector: 'tc-tibco-cloud-menu-bar',\n  templateUrl: './tibco-cloud-menu-bar.component.html',\n  styleUrls: ['./tibco-cloud-menu-bar.component.css']\n})\nexport class TibcoCloudMenuBarComponent extends TibcoCloudWidgetHeaderComponent implements OnInit {\n\n    /**\n    * `<tc-tibco-cloud-menu-bar>` render a general menu bar\n    */\n    constructor() {\n        super();\n    }\n\n    /**\n    * @ignore\n    */\n    ngOnInit() {\n      // none\n    }\n\n}\n","/* models used by widget header - toolbar inside home page/case page widgets like recent cases etc */\n\nimport { Deserializable} from './deserializable';\n\nexport class ToolbarButton implements Deserializable {\n  id: string;\n  icon: string;\n  visible: boolean;\n  enabled: boolean;\n  tooltip: string;\n  filled: boolean;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {ToolbarButton} from '../models/tc-widget-header';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TcButtonsHelperService {\n\n  constructor() { }\n\n  public createButton = (\n    id: string, icon: string, filled: boolean, tooltip: string, visible: boolean, enabled: boolean): ToolbarButton => {\n    const newButton = new ToolbarButton().deserialize(\n      {\n        id: id,\n        icon: icon,\n        filled: filled,\n        tooltip: tooltip,\n        visible: visible,\n        enabled: enabled\n      }\n    );\n    return newButton;\n  }\n\n  public updateButtons = (updatedToolbarButtons: ToolbarButton[], toolbarButtons: ToolbarButton[]): ToolbarButton[] => {\n    updatedToolbarButtons.forEach( updatedButton => {\n      const idx = toolbarButtons.findIndex(item => item.id === updatedButton.id);\n      if (idx > -1) {\n        toolbarButtons[idx] = updatedButton;\n      } else {\n        // no existing button so add it\n        toolbarButtons.push(updatedButton);\n      }\n    });\n    return toolbarButtons;\n  }\n\n  public addButtons = (buttons: ToolbarButton[], toolbarButtons: ToolbarButton[]): ToolbarButton[] => {\n    buttons.forEach(button => {\n      toolbarButtons.push(button);\n    });\n    return toolbarButtons;\n  }\n\n  public removeButtons = (buttons: ToolbarButton[], toolbarButtons: ToolbarButton[]): ToolbarButton[] => {\n    buttons.forEach(button => {\n      const idx = toolbarButtons.findIndex(item => item.id === button.id);\n      toolbarButtons.splice(idx, 1);\n    });\n    return toolbarButtons;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\n\n/**\n * Global Error Handling, contains generic Error Handling for\n *\n * - NO_ROLE :: You are not a Member of this Application, please contact the Application- or Subscription-Owner.\n * - NO_ACCESS :: You are not entitled to access this Application, please contact the Application- or Subscription-Owner.\n * - NO_ROUTE_ACCESS :: Sorry but you do not have the required role to access this page of the application, please contact the application owner\n */\n\n/**\n * Exception Handling page\n *\n *@example <tc-tibco-cloud-error></tc-tibco-cloud-error>\n */\n@Component({\n  selector: 'tc-tibco-cloud-error',\n  templateUrl: './tibco-cloud-error.component.html',\n  styleUrls: ['./tibco-cloud-error.component.css']\n})\nexport class TibcoCloudErrorComponent implements OnInit {\n\n  /**\n   * todo: Add logger\n   */\n  constructor(private route: ActivatedRoute) {\n    this.message = '';\n    this.route.params.subscribe(params => {\n      console.log(params); // log the entire params object\n      console.log(params['errorCode']);\n      console.log(params['errorData?']);\n      if (params['errorCode'] != null) {\n        this.code = params['errorCode'];\n        this.title = this.knownErrorList.find(x => x.errorCode === this.code).errorTitle;\n        this.message = this.knownErrorList.find(x => x.errorCode === this.code).errorMessage;\n        this.data = params['errorData'];\n      } else {\n        this.code = 'Unknown Error Code';\n      }\n    });\n  }\n\n  code: string;\n  title: string;\n  message: string;\n  data: string;\n\n  knownErrorList = [\n    {\n      'errorCode' : 'NO_ROLE',\n      'errorTitle' : 'Access Denied',\n      'errorMessage' : 'You are not a Member of this Application, please contact the Application- or Subscription-Owner.'\n\n    },\n    {\n      'errorCode' : 'NO_ACCESS',\n      'errorTitle' : 'Access Denied',\n      'errorMessage' : 'You are not entitled to access this Application, please contact the Application- or Subscription-Owner.'\n\n    },\n    {\n      'errorCode' : 'NO_ROUTE_ACCESS',\n      'errorTitle' : 'Access Denied',\n      'errorMessage' : 'Sorry but you do not have the required role to access this page of the application, please contact the application owner'\n    }\n  ];\n\n  /**\n  * @ignore\n  */\n  ngOnInit() {\n  }\n\n\n}\n\n\n","// simple directive that can be used to fire an event when a component is created\n\nimport {Directive, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Directive({\n  selector: '[tcOnCreate]',\n  exportAs: 'onCreate'\n})\nexport class OnCreateDirective implements OnInit {\n  @Input() idx: Number;\n  @Output() fireCreated = new EventEmitter();\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.fireCreated.emit();\n  }\n\n}\n","/* models used by general app config */\n\nimport {Deserializable} from './deserializable';\n\nexport class RoleAttribute {\n  public id: string;\n  public group: string;\n  public display: string;\n  public welcome: string;\n  public imageUrl: string;\n  public configuration: boolean;\n  public priority: number;\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n\nexport class GeneralConfig implements Deserializable {\n  id: string;\n  uiAppId: string;\n  browserTitle: string;\n  applicationTitle: string;\n  welcomeMessage: string;\n  displayName: boolean;\n  documentationUrl: string;\n  roles: RoleAttribute[];\n  deserialize(input: any) {\n    Object.assign(this, input);\n    return this;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {SharedStateContent, SharedStateEntry, SharedStateList} from '../models/tc-shared-state';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {Location} from '@angular/common';\nimport {TcCoreCommonFunctions} from '../common/tc-core-common-functions';\nimport {GeneralConfig} from '../models/tc-general-config';\nimport {TcSharedStateService} from './tc-shared-state.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TcGeneralConfigService {\n\n  constructor(private location: Location, private sharedStateService: TcSharedStateService) {\n  }\n\n  public createGeneralConfig(sandboxId: number, uiAppId: string, generalConfig: GeneralConfig) {\n    const ssName = uiAppId + '.general.config.tibcolabs.client.context.PUBLIC';\n    const content: SharedStateContent = new SharedStateContent();\n    content.json = TcCoreCommonFunctions.escapeString(JSON.stringify(generalConfig));\n\n    return this.sharedStateService.createSharedState(ssName, 'PUBLIC', '', sandboxId, undefined, undefined, undefined, content)\n      .pipe(\n        map(value => value)\n      );\n  }\n\n  public getGeneralConfig(uiAppId: string, useCache: boolean, flushCache: boolean): Observable<GeneralConfig> {\n    // if useCache is false this will trigger the service to update the cached version with latest\n    const ssName = uiAppId + '.general.config.tibcolabs.client.context.PUBLIC';\n\n    return this.sharedStateService.getSharedState(ssName, 'PUBLIC', useCache, flushCache)\n      .pipe(\n        map(value => {\n            if (value.sharedStateEntries.length > 0) {\n              const ssresult = new GeneralConfig().deserialize(JSON.parse(value.sharedStateEntries[0].content.json));\n              ssresult.id = value.sharedStateEntries[0].id;\n              return ssresult;\n            } else {\n              return undefined;\n            }\n          }\n        )\n      );\n  }\n\n  public updateGeneralConfig(sandboxId: number, uiAppId: string, generalConfig: GeneralConfig, id: string) {\n    const ssName = uiAppId + '.general.config.tibcolabs.client.context.PUBLIC';\n    const content: SharedStateContent = new SharedStateContent();\n    content.json = TcCoreCommonFunctions.escapeString(JSON.stringify(generalConfig));\n    const entry: SharedStateEntry = new SharedStateEntry();\n    entry.content = content;\n    entry.sandboxId = sandboxId;\n    entry.name = ssName;\n    entry.type = 'PUBLIC';\n    entry.id = id;\n    const ssList: SharedStateList = new SharedStateList();\n    ssList.sharedStateEntries = [];\n    ssList.sharedStateEntries.push(entry);\n\n    return this.sharedStateService.updateSharedState(ssList.sharedStateEntries)\n      .pipe(\n        map(value => {\n          // flush the cache\n          this.getGeneralConfig(uiAppId, true, true).subscribe();\n          return new GeneralConfig().deserialize((JSON.parse(value.sharedStateEntries[0].content.json)));\n        })\n      );\n  }\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n\n/**\n * Data source for the TibcoCloudTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class TibcoCloudTableDataSource extends DataSource<any> {\n  data;\n\n  constructor(private paginator: MatPaginator, private sort: MatSort, private d) {\n    super();\n    this.data = d;\n    //this._updateChangeSubscription();\n\n  }\n\n\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<any[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    // Set the paginator's length\n    this.paginator.length = this.data.length;\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: any[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: any[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      // console.log('Sort ON: ' + this.sort.active + ' A Has Property: ' + a.hasOwnProperty(this.sort.active) + ' B Has Property: ' + b.hasOwnProperty(this.sort.active) ) ;\n      if (a.hasOwnProperty(this.sort.active) && b.hasOwnProperty(this.sort.active)) {\n        return compare(a[this.sort.active], b[this.sort.active], isAsc);\n      } else {\n        return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import {Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild} from '@angular/core';\nimport {MatPaginator, MatSort} from '@angular/material';\nimport {TibcoCloudTableDataSource} from './tibco-cloud-table-datasource';\nimport {TcCoreCommonFunctions} from '../../common/tc-core-common-functions';\n\n@Component({\n  selector: 'tc-tibco-cloud-table',\n  templateUrl: './tibco-cloud-table.component.html',\n  styleUrls: ['./tibco-cloud-table.component.css']\n})\nexport class TibcoCloudTableComponent implements OnInit, OnChanges {\n  @Input() jsonSource: string;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  dataSource: TibcoCloudTableDataSource;\n\n  id: string = '_' + Math.random().toString(36).substr(2, 9);\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = [];\n  columns = [];\n\n  ngOnInit() {\n    this.updateTable();\n\n\n  }\n  ngOnChanges(changes) {\n    console.log('Table Changed');\n    this.updateTable();\n\n  }\n\n\n  updateTable() {\n    // console.log('JSONSource: ', this.jsonSource);\n    const parsedJsonSource = JSON.parse(this.jsonSource);\n    // console.log('Parsed JSON Source: ', parsedJsonSource);\n    this.dataSource = new TibcoCloudTableDataSource(this.paginator, this.sort, parsedJsonSource);\n    const myColumns = [];\n    if (parsedJsonSource.length != null) {\n      if (parsedJsonSource.length > 0) {\n        // console.log(parsedJsonSource[0]);\n        if (parsedJsonSource[0] != null) {\n          const myColumns = [];\n          let m = 0;\n          for (const headerName in parsedJsonSource[0]) {\n            if (parsedJsonSource[0].hasOwnProperty(headerName)) {\n              // console.log(m + ' headerName:', headerName);\n              this.displayedColumns.push(headerName);\n              myColumns[m] = {};\n              myColumns[m]['columnDef'] = headerName;\n              myColumns[m]['header'] = headerName;\n              myColumns[m].cell = function (element) {\n                return `${element[headerName]}`;\n              };\n              this.columns = myColumns;\n            }\n            m++;\n          }\n        }\n        // console.log('myColums:', this.columns);\n        // this.columDefArray = this.columns;\n      }\n    }\n  }\n\n\n  /*\n  private log(...m){\n    console.log('TIBCO CLOUD TABLE] ' , m);\n  }*/\n\n  camelCaseTW(header: string | any) {\n\n    return TcCoreCommonFunctions.camelCaseToWords(header);\n\n\n  }\n}\n","/**\n * @ngdoc component\n * @name tcLoggingService\n *\n * @description\n *\n * The logging service provides logging capabilities.\n *\n * A log level can be set:\n *\n *  All = 0,\n *  Debug = 1,\n *  Info = 2,\n *  Warn = 3,\n *  Error = 4,\n *  Fatal = 5,\n *  Off = 6\n *\n *\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LogService {\n\n  level: LogLevel = LogLevel.All;\n  logWithDate = true;\n\n  private writeToLog(msg: string,\n                     level: LogLevel,\n                     params: any[]) {\n    if (this.shouldLog(level)) {\n      let value = '';\n\n      // Build log string\n      if (this.logWithDate) {\n        value = new Date() + ' - ';\n      }\n      value += '[My Cloud Starter] [' + LogLevel[this.level] + '](' + this.getLevelString(level) + ')';\n      value += ' - Message: ' + msg;\n      if (params.length) {\n        value += ' - Extra Info: '\n          + this.formatParams(params);\n      }\n\n      // Log the value\n      console.log(value);\n    }\n  }\n\n  private shouldLog(level: LogLevel): boolean {\n    let ret = false;\n    if ((level >= this.level &&\n      level !== LogLevel.Off) ||\n      this.level === LogLevel.All) {\n      ret = true;\n    }\n    return ret;\n  }\n\n  private formatParams(params: any[]): string {\n    let ret: string = params.join(',');\n    // Is there at least one object in the array?\n    if (params.some(p => typeof p === 'object')) {\n      ret = '';\n      // Build comma-delimited string\n      for (const item of params) {\n        ret += JSON.stringify(item) + ',';\n      }\n    }\n    return ret;\n  }\n\n\n  debug(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Debug,\n      optionalParams);\n  }\n\n  info(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Info,\n      optionalParams);\n  }\n\n  warn(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Warn,\n      optionalParams);\n  }\n\n  error(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Error,\n      optionalParams);\n  }\n\n  fatal(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Fatal,\n      optionalParams);\n  }\n\n  log(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.All,\n      optionalParams);\n  }\n  private getLevelString(level) {\n    let re = '';\n    switch (level) {\n      case LogLevel.All: {\n        re = 'All';\n        break;\n      }\n      case LogLevel.Debug: {\n        re = 'Debug';\n        break;\n      }\n      case LogLevel.Error: {\n        re = 'Error';\n        break;\n      }\n      case LogLevel.Fatal: {\n        re = 'Fatal';\n        break;\n      }\n      case LogLevel.Info: {\n        re = 'Info';\n        break;\n      }\n      case LogLevel.Off: {\n        re = 'Off';\n        break;\n      }\n      case LogLevel.Warn: {\n        re = 'Warn';\n        break;\n      }\n      default: {\n        // statements;\n        break;\n      }\n    }\n    return re;\n\n  }\n}\n\nexport enum LogLevel {\n  All = 0,\n  Debug = 1,\n  Info = 2,\n  Warn = 3,\n  Error = 4,\n  Fatal = 5,\n  Off = 6\n}\n\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {TibcoCloudTableComponent} from '../tibco-cloud-table/tibco-cloud-table.component';\nimport {LogService} from '../../services/tc-logging.service';\n\n/**\n * A table that allows rows to be selected\n *\n *@example <tc-tibco-cloud-select-table></tc-tibco-cloud-select-table>\n */\n\n@Component({\n  selector: 'tc-tibco-cloud-select-table',\n  templateUrl: './tibco-cloud-select-table.component.html',\n  styleUrls: ['./tibco-cloud-select-table.component.css']\n})\nexport class TibcoCloudSelectTableComponent extends TibcoCloudTableComponent {\n\n\n  /**\n   * ~event selectedlines : the lines selected\n   * ~payload any : The lines that are selected in the table by the user\n   */\n  @Output() selectedlines: EventEmitter<any> = new EventEmitter<any>();\n\n  selected = {};\n\n  highlight(element) {\n    element.highlighted = !element.highlighted;\n  }\n\n  constructor(private logger: LogService) { /*, private tcfunctions: TcFunctionsService) {*/\n    super();\n    logger.info('Select Table Started... ');\n  }\n\n\n  public clicked(row) {\n    // console.log(row);\n    const myData = JSON.parse(JSON.stringify(this.dataSource.data));\n    // console.log(this.dataSource);\n    const selectedArray = new Array();\n    for (const line of myData) {\n      // console.log('s:' , line);\n      if (line.highlighted) {\n        delete line['hovered'];\n        delete line['highlighted'];\n        selectedArray.push(line);\n      }\n\n    }\n    // console.log('Selected Array: ' , selectedArray);\n    this.selected = JSON.stringify(selectedArray);\n    this.selectedlines.emit(this.selected);\n  }\n\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n\n/**\n * Renders the menu options for each config menu\n *\n * ![alt-text](../tibco-cloud-setting-menu-entry.png \"Image\")\n *\n *@example <tc-tibco-cloud-setting-menu-entry></tc-tibco-cloud-setting-menu-entry>\n */\n\n@Component({\n    selector: 'tc-tibco-cloud-setting-menu-entry',\n    templateUrl: './tibco-cloud-setting-menu-entry.component.html',\n    styleUrls: ['./tibco-cloud-setting-menu-entry.component.css']\n})\nexport class TibcoCloudSettingMenuEntryComponent implements OnInit {\n\n  /**\n   * icon name (svg key - needs to be registered)\n   */\n  @Input() icon: string;\n\n  /**\n   * page title comes from config resolver\n   */\n  @Input() title: string;\n\n  /**\n   * RenderedFormComponent: (options from third party API). TibcoCloudSettingMenuEntryComponent -Check with MC - not sure we need to document this.\n   */\n  @Input() options: string[];\n\n\n  /**\n   * ~event configureOption : Option Clicked\n   * ~payload string : emits Id of option selected in config main page (options)\n   */\n  @Output() configureOption: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor() { }\n\n    viewButtonClick(id) {\n      this.configureOption.emit(id);\n    }\n\n    ngOnInit() {\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GeneralConfig } from '../../models/tc-general-config';\nimport { TcGeneralConfigService } from '../../services/tc-general-config.service';\nimport { Claim } from '../../models/tc-login';\nimport { MatSnackBar } from '@angular/material';\n\n\n/**\n * Manages general settings for Config page\n *\n * ![alt-text](../tibco-cloud-settings-general.png \"Image\")\n *\n *@example <tc-tibco-cloud-settings-general></tc-tibco-cloud-settings-general>\n */\n@Component({\n    selector: 'tc-tibco-cloud-settings-general',\n    templateUrl: './tibco-cloud-settings-general.component.html',\n    styleUrls: ['./tibco-cloud-settings-general.component.css']\n})\nexport class TibcoCloudSettingsGeneralComponent implements OnInit {\n\n    public applicationTitle: string;\n    public roles;\n    public displayName: boolean;\n    public documentationURL: string;\n    public panelOpenState = false;\n    public generalConfig: GeneralConfig;\n    public sandboxId: number;\n    public claims: Claim;\n\n    constructor(protected route: ActivatedRoute, protected generalConfigService: TcGeneralConfigService, protected snackBar: MatSnackBar) { }\n\n    ngOnInit() {\n      this.generalConfig = this.route.snapshot.data.generalConfigHolder;\n      this.claims = this.route.snapshot.data.claims;\n      this.sandboxId = Number(this.claims.primaryProductionSandbox.id).valueOf();\n\n        this.applicationTitle = this.generalConfig.applicationTitle;\n        // this.roles = this.generalConfig.roles;\n        this.displayName = this.generalConfig.displayName;\n        this.documentationURL = this.generalConfig.documentationUrl;\n    }\n\n    protected getRoute(): ActivatedRoute {\n      return this.route;\n    }\n\n    public runSaveFunction = () => {\n      this.generalConfigService.updateGeneralConfig(this.sandboxId, this.generalConfig.uiAppId, this.generalConfig, this.generalConfig.id).subscribe(\n          result => {\n              this.snackBar.open('General configuration saved', 'OK', {\n                  duration: 3000\n              });\n          },\n          error => {\n              this.snackBar.open('Error saving general configuration saved', 'OK', {\n                  duration: 3000\n              });\n          }\n      );\n    }\n\n}\n","// model used when a cockpit component wants app to change route\n\nexport class RouteAction {\n  constructor(public action: string,\n              public context: any\n  ) {}\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Router, Route, ActivatedRoute} from '@angular/router';\nimport { Location } from '@angular/common';\nimport { ToolbarButton } from '../../models/tc-widget-header';\nimport { TcButtonsHelperService } from '../../services/tc-buttons-helper.service';\nimport {RouteAction} from '../../models/tc-routing-actions';\nimport {ConfigurationMenuConfig} from '../../models/tc-configuration-menu-config';\n\n/**\n * TIBCO Cloud Configuration Component\n *\n * ![alt-text](../tibco-cloud-configuration.png \"\")\n *\n * @example <tc-tibco-cloud-configuration></tc-tibco-cloud-configuration>\n */\n@Component({\n  selector: 'tc-tibco-cloud-configuration',\n  templateUrl: './tibco-cloud-configuration.component.html',\n  styleUrls: ['./tibco-cloud-configuration.component.css']\n})\nexport class TibcoCloudConfigurationComponent implements OnInit {\n  @Input() baseRoute: string;\n  @Input() configMenuPages: ConfigurationMenuConfig[];\n\n\n  /**\n   * ~event routeAction : Component requests route to another page\n   * ~payload RouteAction : RouteAction object to tell caller to navigate somewhere\n   */\n  @Output() routeAction: EventEmitter<RouteAction> = new EventEmitter<RouteAction>();\n  configName: string;\n  toolbarButtons: ToolbarButton[];\n\n  constructor(private router: Router, private route: ActivatedRoute, private buttonsHelper: TcButtonsHelperService, private location: Location) { }\n\n  private createToolbarButtons = (): ToolbarButton[] => {\n    const homeButton = this.buttonsHelper.createButton('close', 'tcs-close-icon', true, 'Close', true, true);\n    const buttons = [ homeButton ];\n    return buttons;\n  }\n\n  public handleSelectionEvent = (id: string) => {\n    this.configName = id;\n    const url = this.baseRoute + id.toLowerCase().split(' ').join('-');\n    this.router.navigate([url]);\n  }\n\n  public handleToolbarButtonEvent = (buttonId: string) => {\n    if (buttonId === 'close') {\n      this.routeAction.emit(new RouteAction('backClicked', null));\n    }\n  }\n\n  showConfig = (option: string) => {\n    this.configName = option;\n    console.log('Setting selected: ' + option);\n  }\n\n  ngOnInit() {\n    this.toolbarButtons = this.createToolbarButtons();\n    // this.configName = this.route.component;\n  }\n\n}\n\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { TcCoreCommonFunctions } from '../../common/tc-core-common-functions';\nimport { Location } from '@angular/common';\nimport { LandingPageItemConfig } from '../../models/tc-general-landing-page-config';\n\n/**\n * Splash Screen\n *\n *@example <tc-tibco-cloud-splash-screen></tc-tibco-cloud-splash-screen>\n */\n@Component({\n    selector: 'tc-tibco-cloud-splash-screen',\n    templateUrl: 'tibco-cloud-splash-screen.component.html',\n    styleUrls: ['tibco-cloud-splash-screen.component.css'],\n})\nexport class TibcoCloudSplashScreenComponent implements OnInit {\n\n  /**\n   * Splash Screen main Title\n   */\n  @Input() title: string;\n  /**\n   * Splash Sub-Title\n   */\n  @Input() subTitle: string;\n  /**\n   * Splash Configured Background Image URL to a SVG, PNG or Jpeg\n   */\n  @Input() backGroundImage: string;\n  /**\n   * Bullet Point Item Configuration with Icon's and Text\n   */\n  @Input() highlights: LandingPageItemConfig[];\n\n  /**\n   * ~event getStartedEvent : Get Started Clicked\n   * ~payload string : emits that user clicked get started button on cloud splash screen\n   */\n  @Output() getStartedEvent: EventEmitter<string> = new EventEmitter<string>();\n\n    /**\n     * Shows Application Overview like Configured\n     */\n    constructor() {\n    }\n\n    /**\n     * @ignore\n     */\n    ngOnInit(): void {\n      console.log(this);\n    }\n\n    /**\n     * Get Started Click to open the Application\n     */\n    getStartedClick = (): void => {\n        this.getStartedEvent.emit('test');\n    }\n\n\n}\n","/* models used by landing page config */\n\nimport { Deserializable } from './deserializable';\n\nexport class LandingPageItemConfig {\n    public title: string;\n    public content: string;\n    public iconURL: string;\n    deserialize(input: any) {\n        Object.assign(this, input);\n        return this;\n    }\n}\n\nexport class LandingPageConfig {\n    public key: string;\n    public description: string;\n    public title: string;\n    public subtitle: string;\n    public backgroundURL: string;\n    public homeRoute: string;\n    public highlights: LandingPageItemConfig[];\n    roles: string[];\n    deserialize(input: any) {\n        Object.assign(this, input);\n        return this;\n    }\n}\n\nexport class GeneralLandingPageConfig implements Deserializable {\n    id: string;\n    version: string;\n    uiAppId: string;\n    landingPage: LandingPageConfig[];\n    deserialize(input: any) {\n        Object.assign(this, input);\n        return this;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { TcSharedStateService } from './tc-shared-state.service';\nimport { GeneralLandingPageConfig, LandingPageConfig } from '../models/tc-general-landing-page-config';\nimport { SharedStateContent, SharedStateEntry, SharedStateList } from '../models/tc-shared-state';\nimport { TcCoreCommonFunctions } from '../common/tc-core-common-functions';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TcGeneralLandingPageConfigService {\n\n    constructor(\n        private sharedStateService: TcSharedStateService\n    ) {\n    }\n\n    public createGeneralLandingPageConfig(sandboxId: number, uiAppId: string, generalLandingPageConfig: GeneralLandingPageConfig) {\n        const ssName = uiAppId + '.general.landing.page.config.tibcolabs.client.context.PUBLIC';\n        const content: SharedStateContent = new SharedStateContent();\n        content.json = TcCoreCommonFunctions.escapeString(JSON.stringify(generalLandingPageConfig));\n\n        return this.sharedStateService.createSharedState(ssName, 'PUBLIC', '', sandboxId, undefined, undefined, undefined, content)\n            .pipe(\n                map(value => value)\n            );\n    }\n\n    public getGeneralLandingPageConfig(uiAppId: string, useCache: boolean, flushCache: boolean): Observable<GeneralLandingPageConfig> {\n        // if useCache is false this will trigger the service to update the cached version with latest\n        const ssName = uiAppId + '.general.landing.page.config.tibcolabs.client.context.PUBLIC';\n\n        return this.sharedStateService.getSharedState(ssName, 'PUBLIC', useCache, flushCache)\n            .pipe(\n                map(value => {\n                    if (value.sharedStateEntries.length > 0) {\n                        const ssresult = new GeneralLandingPageConfig().deserialize(JSON.parse(value.sharedStateEntries[0].content.json));\n                        ssresult.id = value.sharedStateEntries[0].id;\n                        return ssresult;\n                    } else {\n                        return undefined;\n                    }\n                }\n                )\n            );\n    }\n\n    public updateGeneralLandingPageConfig(sandboxId: number, uiAppId: string, generalLandingPageConfig: GeneralLandingPageConfig, id: string) {\n        const ssName = uiAppId + '.general.landing.page.config.tibcolabs.client.context.PUBLIC';\n        const content: SharedStateContent = new SharedStateContent();\n        content.json = TcCoreCommonFunctions.escapeString(JSON.stringify(generalLandingPageConfig));\n        const entry: SharedStateEntry = new SharedStateEntry();\n        entry.content = content;\n        entry.sandboxId = sandboxId;\n        entry.name = ssName;\n        entry.type = 'PUBLIC';\n        entry.id = id;\n        const ssList: SharedStateList = new SharedStateList();\n        ssList.sharedStateEntries = [];\n        ssList.sharedStateEntries.push(entry);\n\n        return this.sharedStateService.updateSharedState(ssList.sharedStateEntries)\n            .pipe(\n                map(value => {\n                    // flush the cache\n                    this.getGeneralLandingPageConfig(uiAppId, true, true).subscribe();\n                    return new GeneralLandingPageConfig().deserialize((JSON.parse(value.sharedStateEntries[0].content.json)));\n                })\n            );\n    }\n}\n\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n    selector: 'tc-tibco-cloud-new-element',\n    templateUrl: './tibco-cloud-new-element.component.html',\n    styleUrls: ['./tibco-cloud-new-element.component.css']\n})\nexport class TibcoCloudNewElementComponent {\n\n    public id: string;\n    public name: string;\n    public elementType: string;\n\n    constructor(\n        public dialogRef: MatDialogRef<TibcoCloudNewElementComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any\n    ) {\n        this.elementType = data.resourceType;\n    }\n\n    onCreate() {\n        this.dialogRef.close({ event: 'submit', id: this.id, name: this.name });\n    }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { LandingPageConfig, LandingPageItemConfig, GeneralLandingPageConfig } from '../../models/tc-general-landing-page-config';\nimport { TcGeneralLandingPageConfigService } from '../../services/tc-general-landing-page-config.service';\nimport { Claim } from '../../models/tc-login';\nimport { MatSnackBar, MatDialog } from '@angular/material';\nimport { TibcoCloudNewElementComponent } from '../tibco-cloud-new-element/tibco-cloud-new-element.component';\nimport { RoleAttribute } from '../../models/tc-general-config';\n\n/**\n * Configuration page home\n *\n *@example <tc-tibco-cloud-setting-landing></tc-tibco-cloud-setting-landing>\n */\n@Component({\n  selector: 'tc-tibco-cloud-setting-landing',\n  templateUrl: './tibco-cloud-setting-landing.component.html',\n  styleUrls: ['./tibco-cloud-setting-landing.component.css']\n})\nexport class TibcoCloudSettingLandingComponent implements OnInit {\n\n    private claims: Claim;\n    private landingPagesConfig: GeneralLandingPageConfig;\n    private sandboxId: number;\n    private uiAppId: string;\n\n    public landingPages: LandingPageConfig[];\n    public selectedWelcomePage: LandingPageConfig;\n    public allRoles: RoleAttribute[];\n    public selectedRole: RoleAttribute[];\n\n    constructor(\n        private route: ActivatedRoute,\n        private generalLandingPageConfigService: TcGeneralLandingPageConfigService,\n        private snackBar: MatSnackBar,\n        private dialog: MatDialog\n    ) { }\n\n    /**\n    * @ignore\n    */\n    ngOnInit() {\n        this.landingPagesConfig = this.route.snapshot.data.landingPagesConfigHolder;\n        this.landingPages = this.landingPagesConfig.landingPage;\n        this.allRoles = this.route.snapshot.data.allRolesHolder.roles.filter(element => !element.configuration);\n\n        this.sandboxId = this.route.snapshot.data.claims.primaryProductionSandbox.id;\n        this.uiAppId = this.route.snapshot.data.landingPagesConfigHolder.uiAppId;\n\n        // If there is only one landing page selects it automatically\n        if (this.landingPages.length == 1) {\n            this.selectedWelcomePage = this.landingPages[0];\n        }\n    }\n\n    /**\n     * Save Configuration\n     */\n    runSaveFunction(){\n        this.generalLandingPageConfigService.updateGeneralLandingPageConfig(this.sandboxId, this.uiAppId, this.landingPagesConfig, this.landingPagesConfig.id).subscribe(\n            result => {\n                this.snackBar.open('Landing Pages configuration saved', 'OK', {\n                    duration: 3000\n                });\n            },\n            err => {\n                this.snackBar.open('Error saving Landing Pages configuration', 'OK', {\n                    duration: 3000\n                });\n            }\n        );\n    }\n\n    /**\n     * Delete Configuration\n     */\n    runDeleteConfiguration(){\n        const pages = this.landingPages;\n        pages.forEach(element => {\n            if (element == this.selectedWelcomePage){\n                const index = pages.indexOf(element, 0);\n                pages.splice(index, 1);\n                this.selectedWelcomePage = undefined;\n            }\n        });\n    }\n\n    /**\n     * New Configuration\n     */\n    runNewConfiguration = ():void => {\n\n        const dialogRef = this.dialog.open(TibcoCloudNewElementComponent, {\n            width: '50%',\n            height: '30%',\n            maxWidth: '100vw',\n            maxHeight: '100vh',\n            panelClass: 'tcs-style-dialog',\n            data: { resourceType: 'Landing Page' }\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                const newElement = new LandingPageConfig().deserialize({\n                    key: result.id,\n                    description: result.name,\n                    highlights: [new LandingPageItemConfig(), new LandingPageItemConfig(), new LandingPageItemConfig()]\n                });\n\n                this.landingPages.push(newElement);\n                this.selectedWelcomePage = newElement;\n            }\n        });\n    }\n\n    /**\n     * Helper to Compare Objects\n     */\n    compareObjects = (o1: string, o2: string): boolean => {\n        return o1 === o2;\n    }\n\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {TibcoCloudNavbarComponent} from './components/tibco-cloud-navbar/tibco-cloud-navbar.component';\nimport {TibcoCloudLoginComponent} from './components/tibco-cloud-login/tibco-cloud-login.component';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {BrowserModule, DomSanitizer} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {\n  MatButtonModule, MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatDialogModule, MatExpansionModule,\n  MatFormFieldModule,\n  MatIconModule, MatIconRegistry,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatOptionModule,\n  MatPaginatorModule,\n  MatSelectModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule, MatToolbarModule,\n  MatTooltipModule\n} from '@angular/material';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {TcSharedStateService} from './services/tc-shared-state.service';\nimport {RequestCacheService} from './services/request-cache.service';\nimport {CachingInterceptor} from './interceptors/caching-interceptor';\nimport {AuthGuard} from './guards/auth.guard';\nimport {AuthErrorInterceptor} from './interceptors/authentication-error-interceptor';\nimport {EllipsisPipe} from './pipes/ellipsis.pipe';\nimport {DurationSincePipe} from './pipes/duration-since.pipe';\nimport {HighlightPipe} from './pipes/highlight.pipe';\nimport {OrderByDatePipe} from './pipes/order-by-date.pipe';\nimport {ReversePipe} from './pipes/reverse.pipe';\nimport {TibcoCloudWidgetHeaderComponent} from './components/tibco-cloud-widget-header/tibco-cloud-widget-header.component';\nimport {TibcoCloudMenuBarComponent} from './components/tibco-cloud-menu-bar/tibco-cloud-menu-bar.component';\nimport {TcButtonsHelperService} from './services/tc-buttons-helper.service';\nimport {TibcoCloudErrorComponent} from './components/tibco-cloud-error/tibco-cloud-error.component';\nimport {OnCreateDirective} from './directives/on-create.directive';\nimport {TcGeneralConfigService} from './services/tc-general-config.service';\nimport {TibcoCloudTableComponent} from './components/tibco-cloud-table/tibco-cloud-table.component';\nimport {TibcoCloudSelectTableComponent} from './components/tibco-cloud-select-table/tibco-cloud-select-table.component';\nimport {TibcoCloudSettingMenuEntryComponent} from './components/tibco-cloud-setting-menu-entry/tibco-cloud-setting-menu-entry.component';\nimport {TibcoCloudSettingsGeneralComponent} from './components/tibco-cloud-settings-general/tibco-cloud-settings-general.component';\nimport {TibcoCloudConfigurationComponent} from './components/tibco-cloud-configuration/tibco-cloud-configuration.component';\nimport {NavigationEnd, Router, RouterModule} from '@angular/router';\nimport {TibcoCloudSplashScreenComponent} from './components/tibco-cloud-splash-screen/tibco-cloud-splash-screen.component';\nimport {CommonModule, Location} from '@angular/common';\nimport {TibcoCloudSettingLandingComponent} from './components/tibco-cloud-setting-landing/tibco-cloud-setting-landing.component';\nimport {TibcoCloudNewElementComponent} from './components/tibco-cloud-new-element/tibco-cloud-new-element.component';\nimport {MessageQueueService} from './common/tc-core-queue-comm';\nimport {MessageTopicService} from './common/tc-core-topic-comm';\n\n@NgModule({\n  declarations: [\n    TibcoCloudNavbarComponent,\n    TibcoCloudLoginComponent,\n    EllipsisPipe,\n    DurationSincePipe,\n    HighlightPipe,\n    OrderByDatePipe,\n    ReversePipe,\n    TibcoCloudWidgetHeaderComponent,\n    TibcoCloudMenuBarComponent,\n    TibcoCloudErrorComponent,\n    OnCreateDirective,\n    TibcoCloudTableComponent,\n    TibcoCloudSelectTableComponent,\n    TibcoCloudSettingMenuEntryComponent,\n    TibcoCloudSettingsGeneralComponent,\n    TibcoCloudConfigurationComponent,\n    TibcoCloudSplashScreenComponent,\n    TibcoCloudSettingLandingComponent,\n    TibcoCloudNewElementComponent\n  ],\n  imports: [\n    RouterModule,\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatCardModule,\n    MatTooltipModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatCardModule,\n    MatTooltipModule,\n    MatTabsModule,\n    MatButtonToggleModule,\n    FormsModule,\n    FlexLayoutModule,\n    ScrollingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSortModule,\n    MatTableModule,\n    MatPaginatorModule,\n    CommonModule\n  ],\n  exports: [\n    TibcoCloudNavbarComponent,\n    TibcoCloudLoginComponent,\n    TibcoCloudMenuBarComponent,\n    EllipsisPipe,\n    DurationSincePipe,\n    HighlightPipe,\n    OrderByDatePipe,\n    ReversePipe,\n    TibcoCloudWidgetHeaderComponent,\n    TibcoCloudErrorComponent,\n    OnCreateDirective,\n    TibcoCloudTableComponent,\n    TibcoCloudSelectTableComponent,\n    TibcoCloudSettingMenuEntryComponent,\n    TibcoCloudSettingsGeneralComponent,\n    TibcoCloudConfigurationComponent,\n    TibcoCloudSplashScreenComponent,\n    TibcoCloudNewElementComponent\n  ],\n  providers: [\n    RequestCacheService,\n    TcButtonsHelperService,\n    AuthGuard,\n    // comment this line to disable the CachingInterceptor\n    {provide: HTTP_INTERCEPTORS, useClass: CachingInterceptor, multi: true},\n    // error handling interceptor\n    {provide: HTTP_INTERCEPTORS, useClass: AuthErrorInterceptor, multi: true}\n    // uncomment this line to use the mock service interceptor\n    // { provide: HTTP_INTERCEPTORS, useClass: MockingInterceptor, multi: true }\n  ],\n  entryComponents: [TibcoCloudNewElementComponent]\n})\n\nexport class TcCoreLibModule {\n\n  private ms: MessageTopicService;\n\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TcCoreLibModule,\n      providers: [TcSharedStateService, TcGeneralConfigService]\n    };\n  }\n\n  constructor(private matIconRegistry: MatIconRegistry, private domSanitizer: DomSanitizer, private location: Location, private router: Router, private messageService: MessageTopicService) {\n    this.ms = messageService;\n    // subscribe to route changes\n    this.router.events.subscribe((value) => {\n      // console.log('Router event: ' , value);\n      if (value instanceof NavigationEnd) {\n        // console.log('NAVIGATION END: ' + value.url);\n        this.ms.sendMessage('help', value.url);\n      }\n    });\n\n    // register all the default Icon SVGs used by this module\n\n    this.matIconRegistry.addSvgIconLiteral(\n      'ic-error-handler',\n      this.domSanitizer.bypassSecurityTrustHtml(('<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\\n' +\n        '\\t viewBox=\"0 0 350 350\" style=\"enable-background:new 0 0 350 350;\" xml:space=\"preserve\">\\n' +\n        '<style type=\"text/css\">\\n' +\n        '\\t.st0{fill:#F4F4F4;}\\n' +\n        '\\t.st1{fill:#E5E5E5;stroke:#9B9B9B;stroke-width:2.3664;stroke-miterlimit:10;}\\n' +\n        '\\t.st2{fill:#E5E5E5;stroke:#9B9B9B;stroke-width:3;stroke-miterlimit:10;}\\n' +\n        '\\t.st3{fill:#E5E5E5;stroke:#9B9B9B;stroke-width:2.7161;stroke-miterlimit:10;}\\n' +\n        '\\t.st4{fill:#E5E5E5;stroke:#9B9B9B;stroke-width:2.87;stroke-miterlimit:10;}\\n' +\n        '\\t.st5{fill:#9B9B9B;}\\n' +\n        '\\t.st6{fill:#FFFFFF;}\\n' +\n        '\\t.st7{font-family:\\'TimesNewRomanPS-BoldItalicMT\\';}\\n' +\n        '\\t.st8{font-size:97.6336px;}\\n' +\n        '\\t.st9{fill:#979797;}\\n' +\n        '</style>\\n' +\n        '<g>\\n' +\n        '\\t<circle class=\"st0\" cx=\"173.9\" cy=\"172.7\" r=\"138.7\"/>\\n' +\n        '\\t<path class=\"st1\" d=\"M178.3,209.6c2.3,4.8-7,20-24.5,26.3c-17.6,6.3-36.8,1.2-39.1-3.6c-0.4-0.9,6.5-10.6,12.4-9.9\\n' +\n        '\\t\\tc5.9,0.7,10.6-4.1,17.8-5.3S176,204.8,178.3,209.6z\"/>\\n' +\n        '\\t<ellipse class=\"st2\" cx=\"93\" cy=\"232.8\" rx=\"32.1\" ry=\"23.7\"/>\\n' +\n        '\\t<circle class=\"st2\" cx=\"102.3\" cy=\"156.4\" r=\"65.9\"/>\\n' +\n        '\\t<ellipse class=\"st3\" cx=\"68.2\" cy=\"256.4\" rx=\"19\" ry=\"14\"/>\\n' +\n        '\\t<ellipse class=\"st4\" cx=\"121.9\" cy=\"256.4\" rx=\"27\" ry=\"11\"/>\\n' +\n        '\\t<ellipse class=\"st5\" cx=\"104.7\" cy=\"148.6\" rx=\"10.2\" ry=\"3.6\"/>\\n' +\n        '\\t<path class=\"st5\" d=\"M153.4,225.7\"/>\\n' +\n        '\\t<circle class=\"st6\" cx=\"142.1\" cy=\"147.5\" r=\"12.1\"/>\\n' +\n        '\\t<path class=\"st5\" d=\"M139.9,142.7c2.4-1.3,5.3,0.3,6.3,3.5c1.1,3.3-0.1,7-2.5,8.3c-2.4,1.3-5.3-0.3-6.3-3.5S137.4,144,139.9,142.7z\\n' +\n        '\\t\\t\"/>\\n' +\n        '\\t<path class=\"st5\" d=\"M155.6,151.3c0.5,0.2,0.9,0.5,1.4,0.6c4.2,1.7,6.1,5.1,5.4,9.5c-1.3,8.8-2.5,17.6-3.7,26.5\\n' +\n        '\\t\\tc-0.2,1.5-0.3,3-0.7,4.5c-0.2,0.6-1,1.1-1.6,1.6c-0.3-0.7-1.1-1.3-1-1.9c1.3-10,2.6-20.1,4.1-30.1c0.5-3.6-0.2-6-2.6-7.2\\n' +\n        '\\t\\tc-1.4-0.7-2.4-0.9-3.6,0.8c-5.6,8-17.3,8.2-23.2,0.5c-4-5.3-4-12.5,0.2-17.8c4-5.2,11-6.9,17.1-4.3c6,2.6,9.5,8.8,8.6,15.4\\n' +\n        '\\t\\tC155.8,150,155.7,150.5,155.6,151.3z M129.9,145.8c-0.8,6.4,3.7,12.3,10.1,13.1c6.5,0.9,12.4-3.7,13.3-10.1\\n' +\n        '\\t\\tc0.9-6.3-3.8-12.3-10.1-13.2C136.8,134.7,130.8,139.3,129.9,145.8z\"/>\\n' +\n        '\\t<g>\\n' +\n        '\\t\\t<path class=\"st5\" d=\"M197.4,160.4c1.8-1.4,2.6-2.3,3.6-2.8c3.4-1.6,6.9-3.3,10.5-4.5c11-3.8,20.4-10,28.7-18.1\\n' +\n        '\\t\\t\\tc3.2-3.2,3.6-3,6,0.6c3,4.4,7.3,6.9,12.2,8.3c22.1,6.2,44.2,12.1,66.3,18.3c2.2,0.6,4.2,2.1,6.3,3.1c-1.6,1.5-3.1,3.3-4.9,4.4\\n' +\n        '\\t\\t\\tc-10,6-20.1,11.8-30.1,17.8c-2.6,1.6-4.9,1.9-7.9,1c-28.1-8.6-56.3-16.9-84.5-25.4C201.7,162.6,200,161.6,197.4,160.4z\\n' +\n        '\\t\\t\\t M323.1,166.4c-17.2-4.7-33.4-9-49.6-13.7c-10.9-3.2-23-3.9-31-14.2c-9.5,10.5-21.7,15.9-35,21c1.8,0.7,2.7,1.1,3.6,1.4\\n' +\n        '\\t\\t\\tc25.1,7.5,50.3,15,75.4,22.6c3.5,1.1,6.1,0.9,9.2-1C304.6,177.1,313.5,172.1,323.1,166.4z\"/>\\n' +\n        '\\t\\t<path class=\"st5\" d=\"M200.9,176.1c5.1,1.5,9.8,2.9,14.5,4.3c24.4,7.3,48.8,14.7,73.3,21.9c1.6,0.5,3.9,0.1,5.4-0.7\\n' +\n        '\\t\\t\\tc10.6-6,21-12.2,31.5-18.4c0.8-0.5,1.8-1.1,2.7-1.1c0.8,0,2.1,0.5,2.4,1.1c0.3,0.6-0.2,2-0.8,2.4c-1.9,1.4-3.9,2.5-5.9,3.7\\n' +\n        '\\t\\t\\tc-9.9,5.8-19.9,11.7-29.9,17.5c-1.1,0.6-2.8,0.9-4,0.5c-29.3-8.7-58.5-17.5-87.8-26.2c-0.7-0.2-1.6-0.3-2-0.7\\n' +\n        '\\t\\t\\tc-0.7-0.7-1.6-1.8-1.4-2.5C198.9,177.2,200.2,176.6,200.9,176.1z\"/>\\n' +\n        '\\t\\t<path class=\"st5\" d=\"M291.5,198.7c-6.7-2-13.1-3.9-19.4-5.8c-23.2-7-46.5-14-69.7-20.9c-0.5-0.1-1.1-0.1-1.4-0.4\\n' +\n        '\\t\\t\\tc-0.9-0.9-1.6-1.8-2.4-2.8c1.2-0.5,2.6-1.6,3.6-1.3c5.3,1.3,10.6,3,15.9,4.6c23.7,7.1,47.4,14.3,71.1,21.3c1.4,0.4,3.4,0,4.7-0.7\\n' +\n        '\\t\\t\\tc10.3-5.9,20.6-12,30.8-18c0.4-0.2,0.8-0.7,1.3-0.7c1.5-0.1,3.1-0.1,4.6-0.1c-0.7,1.3-1.1,3.1-2.3,3.8c-9.2,5.6-18.6,11-27.9,16.5\\n' +\n        '\\t\\t\\tc-2.3,1.4-4.6,2.8-7,4.1C292.8,198.5,292,198.6,291.5,198.7z\"/>\\n' +\n        '\\t\\t<path class=\"st6\" d=\"M323.1,166.4c-9.6,5.6-18.6,10.7-27.3,16.1c-3.1,1.9-5.8,2.1-9.2,1c-25.1-7.7-50.2-15.1-75.4-22.6\\n' +\n        '\\t\\t\\tc-0.9-0.3-1.8-0.7-3.6-1.4c13.2-5.1,25.5-10.4,35-21c8,10.3,20.1,11,31,14.2C289.7,157.4,305.9,161.7,323.1,166.4z\"/>\\n' +\n        '\\t</g>\\n' +\n        '\\t<g>\\n' +\n        '\\t\\t<path class=\"st5\" d=\"M219.9,202.9c-18.4,0-33.5-15.1-33.4-33.5c0-18.4,15.1-33.5,33.5-33.4c18.4,0.1,33.5,15.1,33.4,33.5\\n' +\n        '\\t\\t\\tC253.4,187.9,238.3,202.9,219.9,202.9z M219.8,194.2c13.6,0.1,24.9-11,25-24.6c0.1-13.5-11-24.9-24.6-25.1\\n' +\n        '\\t\\t\\tc-13.6-0.2-25,11-25.1,24.6C195,182.8,206,194.1,219.8,194.2z\"/>\\n' +\n        '\\t\\t<path class=\"st5\" d=\"M198.6,200.6c-3,3-10.2,10.7-13.2,13.6c-4.4,4.1-10.9,2.2-12.2-3.6c-0.5-2.2,0-4.4,1.5-5.9\\n' +\n        '\\t\\t\\tc4.9-5,9.9-9.8,14.1-13.9C192,194,195.3,197.3,198.6,200.6\"/>\\n' +\n        '\\t\\t<path class=\"st6\" d=\"M219.8,194.2c-13.8-0.1-24.8-11.4-24.7-25.1c0.1-13.6,11.5-24.7,25.1-24.6c13.6,0.2,24.8,11.5,24.6,25.1\\n' +\n        '\\t\\t\\tC244.7,183.2,233.4,194.4,219.8,194.2z M216.5,187.5c0.1,0.2,0.1,0.4,0.2,0.6c0.8,0.1,1.6,0.3,2.4,0.2c7.2-0.9,12.9-4.2,16.7-10.6\\n' +\n        '\\t\\t\\tc1.6-2.7,2.5-5.6,2.1-8.7c-0.1-0.9-0.8-2.2-1.5-2.4c-0.8-0.3-2.2,0.2-2.8,0.8c-1.1,1.1-1.9,2.6-2.6,4c-0.9,1.8-1.4,3.8-2.4,5.6\\n' +\n        '\\t\\t\\tc-2.1,3.8-5.6,6.3-9.2,8.5C218.3,186.1,217.4,186.8,216.5,187.5z\"/>\\n' +\n        '\\t\\t<path class=\"st5\" d=\"M216.5,187.5c0.9-0.7,1.9-1.4,2.8-2c3.6-2.2,7.1-4.7,9.2-8.5c1-1.8,1.5-3.8,2.4-5.6c0.7-1.4,1.5-2.9,2.6-4\\n' +\n        '\\t\\t\\tc0.6-0.6,2-1.1,2.8-0.8c0.7,0.3,1.4,1.5,1.5,2.4c0.4,3.1-0.5,6-2.1,8.7c-3.7,6.4-9.4,9.7-16.7,10.6c-0.8,0.1-1.6-0.1-2.4-0.2\\n' +\n        '\\t\\t\\tC216.6,187.9,216.5,187.7,216.5,187.5z\"/>\\n' +\n        '\\t</g>\\n' +\n        '\\t<text transform=\"matrix(0.996 -8.927000e-02 8.927000e-02 0.996 264.2169 166.3981)\" class=\"st5 st7 st8\">?</text>\\n' +\n        '\\t<path class=\"st5\" d=\"M148.7,182.4c1.7-1.8,4-1.6,5.6,0.1c5.8,6.2,0.1,16.1-7.6,16.7c-8,0.6-15.1-1.9-21.6-6.1\\n' +\n        '\\t\\tc-2.1-1.3-3.6-3.7-5.4-5.5c-0.3-0.3-1.2-0.6-1.5-0.4c-4.8,3.4-10.3,4-15.9,4c-4.7,0-9.1-0.8-13.4-3c-6-3-7.1-10.5-4.3-15.1\\n' +\n        '\\t\\tc2-3.3,5.7-4,8.5-1.4c-3.4-0.5-4.8,0.1-5.3,3c-0.2,1.3,0,3.3,0.7,3.9c1,0.7,3,0.8,4.2,0.3c5.2-1.8,10.2-4.1,15.5-5.7\\n' +\n        '\\t\\tc3.9-1.2,7.9-0.6,10.7,2.9c1.1,1.4,2.4,1.5,4,0.7c4.2-2.1,9.8-0.9,13.2,2.4c3.4,3.4,6.8,6.9,10.5,10c1,0.9,3.2,1.1,4.6,0.7\\n' +\n        '\\t\\tc1.7-0.4,2.4-2.8,1.9-4.7C152.4,183.3,151.1,182.5,148.7,182.4z\"/>\\n' +\n        '\\t<g>\\n' +\n        '\\t\\t<path class=\"st9\" d=\"M150.9,117.3c0,0,0.1,0,0.1,0l0,0L150.9,117.3z\"/>\\n' +\n        '\\t\\t<g>\\n' +\n        '\\t\\t\\t<path class=\"st5\" d=\"M182.9,108c-8.4-4.2-22.9-7.8-31.3-12.1c-3.3-1.7-5.8-3.9-7.3-7c-3.2-6.9-8.2-12.5-15.8-16.3\\n' +\n        '\\t\\t\\t\\tc-3-1.5-6-3.1-9-4.8c-1.6-0.9-3.2-1.6-4.9-2.3c-1.5-0.6-1.5-0.6-1.5-0.6c-1.7-0.5-3.2-0.9-3.3-0.9c0,0,0,0-0.1,0\\n' +\n        '\\t\\t\\t\\tc-6.7-0.1-13.4,0-20.1,0.4C83.9,64.8,78,65.3,72.4,67c-10.1,2.9-18.9,9.4-27.3,15.7C41.9,85,41.9,85,41.9,85\\n' +\n        '\\t\\t\\t\\tc-3.3,2.7-6.4,5.4-6.8,5.9c0,0,0,0-0.4,0.5c-1.5,1.6-2.8,3.3-3.9,5c-4.6,6.8-6.5,14.2-5.2,22.3c1.3,7.9,3.2,15.7,4.9,23.5\\n' +\n        '\\t\\t\\t\\tc1.1,4.8-0.1,9.3-2.1,13.8c-1.3,2.9-5.1,8.2-6.4,11.1c-1.1,2.4-2.4,4.8-3.6,7.2c-0.4,0.7-1,1.3-1.2,2c-0.2,0.8-0.5,2.3-0.1,2.5\\n' +\n        '\\t\\t\\t\\tc0.9,0.4,2.2,0.3,3.3,0.2c0.5,0,1.1-0.4,1.5-0.6c3-1.8,8.7-5.9,11.7-7.6c2.7-1.6,2.7-1.6,2.7-1.6c4.2-2.6,31.5-15.3,60.6-28.1\\n' +\n        '\\t\\t\\t\\ts53.1-23.4,53.3-23.5s0.6-0.2,0.6-0.3s0.1,0,0.1,0c0,0,0.6-0.2,1.3-0.4c0,0,0,0,0.8-0.1c7.5-1,21-2.6,28.5-3.6\\n' +\n        '\\t\\t\\t\\tc1.7-0.2,3.3-0.7,3.7-2.4C185.8,109,184.1,108.6,182.9,108z\"/>\\n' +\n        '\\t\\t</g>\\n' +\n        '\\t</g>\\n' +\n        '\\t<g>\\n' +\n        '\\t\\t<g>\\n' +\n        '\\t\\t\\t<path class=\"st5\" d=\"M69.4,67.1c-0.6-1.3-1.2-3-0.7-4.5c0.2-0.5,1.7-2.2,2.3-1.3c0.2,0.2-1.7,2.4-1.9,2.7c-0.6,1-1,2-1,3.1\\n' +\n        '\\t\\t\\t\\tc0,1.9,3,1.9,3,0c0-2.3,3-3.6,2.9-6c-0.1-2-2.3-3.1-4.1-2.8c-1.8,0.3-3.4,1.6-4,3.2c-0.9,2.4-0.1,4.9,0.8,7.1\\n' +\n        '\\t\\t\\t\\tC67.6,70.4,70.2,68.9,69.4,67.1L69.4,67.1z\"/>\\n' +\n        '\\t\\t</g>\\n' +\n        '\\t</g>\\n' +\n        '\\t<g>\\n' +\n        '\\t\\t<g>\\n' +\n        '\\t\\t\\t<path class=\"st5\" d=\"M67.7,66.9c-3.9-1-7.3-3.4-11.3-3.8c-2.5-0.2-6.3,0.3-7.5,2.9c-3,6.4,13.9,5,16.4,5.1c1.9,0.1,1.9-2.9,0-3\\n' +\n        '\\t\\t\\t\\tc-2.4-0.1-4.8-0.1-7.3-0.2c-1,0-2,0-3-0.1c-1.5-0.1-3.6-0.1-1.8-1.4c1.8-1.4,5.8,0.4,7.5,1.1c2,0.8,4,1.7,6.1,2.3\\n' +\n        '\\t\\t\\t\\tC68.8,70.3,69.6,67.4,67.7,66.9L67.7,66.9z\"/>\\n' +\n        '\\t\\t</g>\\n' +\n        '\\t</g>\\n' +\n        '</g>\\n' +\n        '</svg>\\n'))\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'ic-documentation',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\\n' +\n        '    <g fill=\"#C8D4E8\" fill-rule=\"evenodd\">\\n' +\n        '        <path d=\"M33.6 14.4v-12l12.194 12.05L33.6 14.4zm3.6 12H15.6a1.2 1.2 0 0 1 0-2.4h21.6a1.2 1.2 0 0 1 0 2.4zm0 4.8H15.6a1.2 1.2 0 0 1 0-2.4h21.6a1.2 1.2 0 0 1 0 2.4zm0 4.8H15.6a1.2 1.2 0 0 1 0-2.4h21.6a1.2 1.2 0 0 1 0 2.4zM15.6 19.2h9.6a1.2 1.2 0 0 1 0 2.4h-9.6a1.2 1.2 0 0 1 0-2.4zM33.6 0H14.405A4.804 4.804 0 0 0 9.6 4.805v31.24c0 2.655 2.15 4.755 4.805 4.755H43.2c2.652 0 4.8-2.098 4.8-4.75V14.4L33.6 0z\"/>\\n' +\n        '        <path d=\"M12.006 43.2C9.35 43.2 7.2 41.074 7.2 38.42V7.2H4.806A4.804 4.804 0 0 0 0 12.005v31.24C.001 45.9 2.151 48 4.806 48H33.6c2.65 0 4.8-2.098 4.8-4.75v-.05H12.006z\"/>\\n' +\n        '    </g>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'ic-community',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\\n' +\n        '    <path fill=\"#C8D4E8\" fill-rule=\"evenodd\" d=\"M24 17.6A6.3 6.3 0 1 1 24 5a6.3 6.3 0 0 1 0 12.6zm-1.68 2.1h3.36a8.82 8.82 0 0 1 8.82 8.82V42.8h-21V28.52a8.82 8.82 0 0 1 8.82-8.82zM9.3 21.8a4.2 4.2 0 1 1 0-8.4 4.2 4.2 0 0 1 0 8.4zm29.4 0a4.2 4.2 0 1 1 0-8.4 4.2 4.2 0 0 1 0 8.4zm-27.3 6.72v7.98H3v-8.4a4.2 4.2 0 0 1 4.2-4.2h4.2a4.2 4.2 0 0 1 1.218.21 8.715 8.715 0 0 0-1.218 4.41zm29.4-4.62a4.2 4.2 0 0 1 4.2 4.2v8.4h-8.4v-7.98a8.715 8.715 0 0 0-1.218-4.41 4.2 4.2 0 0 1 1.218-.21h4.2z\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'ic-graph',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\\n' +\n        '    <path fill=\"#C8D4E8\" fill-rule=\"evenodd\" d=\"M45 15.818H3V8a2 2 0 0 1 2-2h38a2 2 0 0 1 2 2v7.818zm0 1.637V40a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V17.455h42zm-8.83 6.891l-5.863 6.03c-.4-.33-.908-.529-1.46-.529-.896 0-1.674.52-2.065 1.28l-4.936-2.82v-.02c0-1.325-1.045-2.4-2.333-2.4-1.289 0-2.334 1.075-2.334 2.4 0 .194.023.382.065.562l-5.558 4.446a2.286 2.286 0 0 0-1.507-.568c-1.288 0-2.333 1.075-2.333 2.4 0 1.326 1.045 2.4 2.333 2.4 1.29 0 2.334-1.074 2.334-2.4 0-.3-.054-.587-.152-.852l5.443-4.354a2.298 2.298 0 0 0 1.709.766c.859 0 1.61-.477 2.015-1.189l4.987 2.85c.051 1.279 1.075 2.3 2.331 2.3 1.289 0 2.333-1.075 2.333-2.4 0-.318-.06-.621-.168-.899l5.983-6.154c.348.211.753.332 1.185.332 1.29 0 2.334-1.074 2.334-2.4 0-1.325-1.045-2.4-2.334-2.4-1.288 0-2.333 1.075-2.333 2.4 0 .445.118.862.323 1.22zM7 10.091a.77.77 0 0 0-.77.77v.915c0 .425.345.77.77.77h30.282V10.09H7zm31.538 0v2.454H41a.77.77 0 0 0 .77-.769v-.916a.77.77 0 0 0-.77-.77h-2.462z\"/>\\n' +\n        '</svg>\\n')\n    );\n    this.matIconRegistry.addSvgIconLiteral(\n      'tibco-labs',\n      this.domSanitizer.bypassSecurityTrustHtml('<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\\n' +\n        ' width=\"2318.000000pt\" height=\"3059.000000pt\" viewBox=\"0 0 2318.000000 3059.000000\"\\n' +\n        ' preserveAspectRatio=\"xMidYMid meet\">\\n' +\n        '<metadata>\\n' +\n        '</metadata>\\n' +\n        '<g transform=\"translate(0.000000,3059.000000) scale(0.100000,-0.100000)\"\\n' +\n        'fill=\"#ef3862\" stroke=\"none\">\\n' +\n        '<path d=\"M14320 25534 c-440 -54 -849 -265 -1124 -580 -465 -531 -521 -1285\\n' +\n        '-141 -1871 165 -254 380 -443 660 -583 157 -78 280 -122 435 -154 l105 -22 5\\n' +\n        '-800 c5 -731 6 -802 22 -830 26 -47 77 -95 123 -115 22 -9 439 -142 928 -295\\n' +\n        '488 -152 887 -280 887 -283 0 -3 -512 -127 -1138 -275 -2688 -636 -2578 -610\\n' +\n        '-2624 -642 -24 -16 -56 -52 -73 -79 -27 -43 -30 -57 -30 -130 0 -73 3 -87 30\\n' +\n        '-130 17 -27 48 -62 70 -77 28 -20 175 -70 485 -167 2686 -842 3194 -1002 3199\\n' +\n        '-1006 2 -3 2 -7 0 -9 -2 -2 -389 -79 -859 -171 -470 -92 -866 -173 -881 -181\\n' +\n        '-51 -26 -92 -68 -115 -119 l-24 -50 0 -1666 c0 -916 -2 -1668 -5 -1671 -3 -3\\n' +\n        '-47 3 -97 14 -1402 287 -3147 375 -4738 238 -2256 -195 -4136 -813 -5161\\n' +\n        '-1697 -361 -312 -627 -666 -772 -1028 -166 -413 -321 -1206 -396 -2030 -55\\n' +\n        '-592 -74 -1082 -74 -1835 0 -1060 50 -2003 169 -3180 35 -350 90 -836 99 -877\\n' +\n        'l5 -23 7880 0 7879 0 6 33 c14 84 37 241 64 447 226 1685 280 3231 160 4575\\n' +\n        '-87 980 -280 1896 -545 2582 -340 882 -1170 1613 -2448 2157 -402 172 -894\\n' +\n        '338 -1369 462 l-147 39 2 1594 3 1594 1261 247 c693 136 1274 255 1291 263\\n' +\n        '122 64 170 221 106 348 -17 31 -45 66 -68 84 -33 25 -381 137 -1908 615 -1027\\n' +\n        '322 -1867 587 -1867 590 0 3 834 202 1853 444 1018 241 1868 447 1888 457 50\\n' +\n        '25 104 91 119 144 7 24 11 74 8 109 -3 52 -10 74 -33 107 -63 89 -8 69 -1375\\n' +\n        '497 l-1275 400 -3 661 -2 661 22 4 c13 3 61 13 108 22 209 40 487 161 670 291\\n' +\n        '52 38 144 118 205 178 277 277 436 617 464 994 62 811 -516 1531 -1365 1702\\n' +\n        '-87 17 -151 22 -314 24 -113 2 -221 1 -240 -1z m868 -14495 c567 -61 1069\\n' +\n        '-331 1440 -774 197 -235 352 -537 426 -834 61 -241 60 -214 64 -1016 2 -490 0\\n' +\n        '-772 -7 -835 -47 -407 -207 -794 -461 -1115 -93 -117 -260 -279 -382 -371\\n' +\n        '-364 -272 -741 -409 -1202 -435 -120 -7 -1475 -9 -4026 -7 -3565 4 -3853 5\\n' +\n        '-3949 21 -511 84 -913 292 -1262 653 -306 317 -503 718 -576 1174 -16 104 -18\\n' +\n        '185 -18 850 0 799 2 828 60 1061 194 768 787 1370 1548 1569 98 26 246 53 347\\n' +\n        '63 19 2 1805 5 3968 5 2700 1 3963 -1 4030 -9z\"/>\\n' +\n        '<path fill=\"black\" d=\"M7760 8744 c-305 -82 -516 -554 -470 -1053 33 -365 187 -659 397\\n' +\n        '-763 62 -30 75 -33 163 -33 82 0 103 4 150 26 109 52 202 150 275 291 94 181\\n' +\n        '137 372 137 608 0 485 -210 875 -501 930 -68 13 -83 12 -151 -6z\"/>\\n' +\n        '<path fill=\"black\" d=\"M14425 8746 c-100 -25 -184 -83 -262 -181 -279 -349 -297 -1041 -37\\n' +\n        '-1431 66 -101 138 -167 224 -208 59 -28 74 -31 160 -31 85 0 101 3 155 30 127\\n' +\n        '63 259 229 324 410 59 164 76 269 76 485 0 211 -12 300 -62 447 -53 161 -147\\n' +\n        '313 -237 387 -102 83 -236 119 -341 92z\"/>\\n' +\n        '<path fill=\"black\" d=\"M18250 13800 l0 -70 140 0 140 0 0 -365 0 -365 75 0 75 0 0 365 0\\n' +\n        '365 135 0 135 0 0 70 0 70 -350 0 -350 0 0 -70z\"/>\\n' +\n        '<path fill=\"black\" d=\"M19120 13435 l0 -435 75 0 75 0 0 312 0 313 136 -204 137 -205 21 27\\n' +\n        'c11 15 73 105 136 201 63 96 118 175 123 175 4 1 7 -138 7 -309 l0 -310 75 0\\n' +\n        '75 0 0 435 0 435 -83 0 -82 0 -129 -200 c-71 -111 -132 -203 -135 -205 -4 -2\\n' +\n        '-65 87 -137 198 l-130 202 -82 3 -82 3 0 -436z\"/>\\n' +\n        '</g>\\n' +\n        '</svg>')\n    );\n\n    this.matIconRegistry.addSvgIconLiteral(\n      'splash-default-icon',\n      this.domSanitizer.bypassSecurityTrustHtml(\n        '<svg version=\"1.1\" id = \"Layer_1\" xmlns = \"http://www.w3.org/2000/svg\" xmlns: xlink = \"http://www.w3.org/1999/xlink\" x = \"0px\" y = \"0px\"\\n' +\n        'viewBox = \"0 0 64 64\" style = \"enable-background:new 0 0 64 64;\" xml: space = \"preserve\" >\\n' +\n        '<style type=\"text/css\" >\\n' +\n        '.st0{ fill: #333333; }\\n' +\n        '.st1{ fill: #FBAE17; }\\n' +\n        '</style>\\n' +\n        '<g>\\n' +\n        '<path class=\"st0\" d = \"M15.3,26.2H8.9c-0.6,0-1-0.4-1-1s0.4-1,1-1h6.4c0.6,0,1,0.4,1,1S15.9,26.2,15.3,26.2z\" />\\n' +\n        '<path class=\"st0\" d = \"M15.3,30.3H8.9c-0.6,0-1-0.4-1-1s0.4-1,1-1h6.4c0.6,0,1,0.4,1,1S15.9,30.3,15.3,30.3z\" />\\n' +\n        '<path class=\"st0\" d = \"M15.3,34.4H8.9c-0.6,0-1-0.4-1-1c0-0.6,0.4-1,1-1h6.4c0.6,0,1,0.4,1,1C16.3,34,15.9,34.4,15.3,34.4z\" />\\n' +\n        '<path class=\"st0\" d = \"M15.3,38.5H8.9c-0.6,0-1-0.4-1-1s0.4-1,1-1h6.4c0.6,0,1,0.4,1,1S15.9,38.5,15.3,38.5z\" />\\n' +\n        '<path class=\"st0\" d = \"M15.3,42.6H8.9c-0.6,0-1-0.4-1-1s0.4-1,1-1h6.4c0.6,0,1,0.4,1,1S15.9,42.6,15.3,42.6z\" />\\n' +\n        '<g>\\n' +\n        '<path class=\"st0\" d = \"M57.4,9.5H6.9c-1.1,0-2,0.9-2,2V62c0,1.1,0.9,2,2,2h50.5c1.1,0,2-0.9,2-2V11.5C59.4,10.4,58.5,9.5,57.4,9.5z M6.9,19.5h10.8V62H6.9V19.5z M57.4,62H19.7V19.5h37.7V62z M57.4,17.5H6.9v-6h50.5V17.5z\"/>\\n' +\n        '</g>\\n' +\n        '<path class= \"st0\" d = \"M11.6,15.4H10c-0.6,0-1-0.4-1-1s0.4-1,1-1h1.6c0.6,0,1,0.4,1,1S12.2,15.4,11.6,15.4z\" />\\n' +\n        '<path class=\"st0\" d = \"M16.8,15.4h-1.6c-0.6,0-1-0.4-1-1s0.4-1,1-1h1.6c0.6,0,1,0.4,1,1S17.4,15.4,16.8,15.4z\" />\\n' +\n        '<path class=\"st0\" d = \"M21.9,15.4h-1.6c-0.6,0-1-0.4-1-1s0.4-1,1-1h1.6c0.6,0,1,0.4,1,1S22.5,15.4,21.9,15.4z\" />\\n' +\n        '<g>\\n' +\n        '<path class=\"st0\" d = \"M52.2,25.9v6.2H24.5v-6.2L52.2,25.9L52.2,25.9z M53.2,23.9H23.5c-0.6,0-1,0.4-1,1v8.2c0,0.6,0.4,1,1,1h29.6c0.6,0,1-0.4,1-1v-8.2C54.2,24.4,53.7,23.9,53.2,23.9L53.2, 23.9z\"/>\\n' +\n        '</g>\\n' +\n        '<g>\\n' +\n        '<rect x=\"24.8\" y = \"39.5\" class= \"st1\" width = \"5\" height = \"5\" />\\n' +\n        '<path class=\"st0\" d = \"M30.8,37.5h-7c-0.6,0-1,0.4-1,1v7c0,0.6,0.4,1,1,1h7c0.6,0,1-0.4,1-1v-7C31.8,38,31.3,37.5,30.8,37.5zM29.8,44.5h-5v-5h5V44.5z\"/>\\n' +\n        '</g>\\n' +\n        '<g>\\n' +\n        '<rect x=\"35.9\" y = \"39.5\" class= \"st1\" width = \"5\" height = \"5\" />\\n' +\n        '<path class=\"st0\" d = \"M41.9,37.5h-7c-0.6,0-1,0.4-1,1v7c0,0.6,0.4,1,1,1h7c0.6,0,1-0.4,1-1v-7C42.9,38,42.5,37.5,41.9,37.5zM40.9,44.5h-5v-5h5V44.5z\"/>\\n' +\n        '</g>\\n' +\n        '<g>\\n' +\n        '<rect x=\"47.1\" y = \"39.5\" class= \"st1\" width = \"5\" height = \"5\" />\\n' +\n        '<path class=\"st0\" d = \"M53.1,37.5h-7c-0.6,0-1,0.4-1,1v7c0,0.6,0.4,1,1,1h7c0.6,0,1-0.4,1-1v-7C54.1,38,53.6,37.5,53.1,37.5zM52.1,44.5h-5v-5h5V44.5z\"/>\\n' +\n        '</g>\\n' +\n        '<g>\\n' +\n        '<rect x=\"24.8\" y = \"51\" class= \"st1\" width = \"5\" height = \"5\" />\\n' +\n        '<path class=\"st0\" d = \"M30.8,49h-7c-0.6,0-1,0.4-1,1v7c0,0.6,0.4,1,1,1h7c0.6,0,1-0.4,1-1v-7C31.8,49.5,31.3,49,30.8,49z M29.8,56h-5v-5h5V56z\"/>\\n' +\n        '</g>\\n' +\n        '<g>\\n' +\n        '<rect x=\"35.9\" y = \"51\" class= \"st1\" width = \"5\" height = \"5\" />\\n' +\n        '<path class=\"st0\" d = \"M41.9,49h-7c-0.6,0-1,0.4-1,1v7c0,0.6,0.4,1,1,1h7c0.6,0,1-0.4,1-1v-7C42.9,49.5,42.5,49,41.9,49z M40.9,56h-5v-5h5V56z\"/>\\n' +\n        '</g>\\n' +\n        '<g>\\n' +\n        '<rect x=\"47.1\" y = \"51\" class= \"st1\" width = \"5\" height = \"5\" />\\n' +\n        '<path class=\"st0\" d = \"M53.1,49h-7c-0.6,0-1,0.4-1,1v7c0,0.6,0.4,1,1,1h7c0.6,0,1-0.4,1-1v-7C54.1,49.5,53.6,49,53.1,49z M52.1,56h-5v-5h5V56z\"/>\\n' +\n        '</g>\\n' +\n        '</g>\\n' +\n        '</svg>\\n'\n      )\n    );\n\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LandingPageConfig } from '../models/tc-general-landing-page-config';\nimport { TcGeneralLandingPageConfigService } from './tc-general-landing-page-config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TcGeneralLandingPageService {\n\n    constructor(\n        private generalLandingPageConfigService: TcGeneralLandingPageConfigService\n    ) {\n    }\n\n    public getLandingPage = (key: string, uiAppId: string): Observable<LandingPageConfig> => {\n        const landingPage = this.generalLandingPageConfigService.getGeneralLandingPageConfig(uiAppId, true, true).pipe(\n            map(landingPages => {\n                const page = landingPages.landingPage.filter(element => element.key === key )[0];\n                return page;\n            })            \n        )   \n        return landingPage;\n    }\n\n    public getLandingPageForRole = (roleId: string, uiAppId: string): Observable<LandingPageConfig> => {\n        return this.generalLandingPageConfigService.getGeneralLandingPageConfig(uiAppId, true, true).pipe(\n            map(landingPages => {\n                const candidatePages = landingPages.landingPage.filter(element => element.roles.indexOf(roleId) != -1);\n                switch (candidatePages.length) {\n                    case 0:\n                        return undefined;\n                    case 1:\n                        return candidatePages[0];\n                    default:\n                        return candidatePages[0];\n                }\n            })\n        );\n    } \n}\n\n","/* Models used by config menu */\n\nimport { Deserializable } from './deserializable';\n\n\nexport class ConfigurationMenuConfig {\n    menu: ConfigurationMenuEntry[];\n    deserialize(input: any) {\n        Object.assign(this, input);\n        return this;\n    }\n}\n\nexport class  ConfigurationMenuEntry {\n    entry: string;\n    options: string[];\n}\n","/**\n * @ngdoc component\n * @name mockingInterceptor\n *\n * @description\n * This interceptor attempts to use local json files from the assets directory to mock Tibco Cloud API calls\n *\n * Each mock file can contain either a single response or a \"mockedResponses\" object that contains specific URLs and responses\n *\n * @usage\n *\n *\n *\n */\n\nimport {Injectable} from '@angular/core';\nimport {HttpEvent, HttpRequest, HttpResponse, HttpInterceptor, HttpHandler, HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, onErrorResumeNext, throwError} from 'rxjs';\nimport {map, catchError, delay} from 'rxjs/operators';\n\n@Injectable()\nexport class MockingInterceptor implements HttpInterceptor {\n  MOCK_BASE_PATH = '/assets/mocks';\n\n  constructor(private http: HttpClient) {\n  }\n\n  public readMockJSON(url): Observable<any> {\n    return this.http.get(url);\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n\n    // save original request\n    const originalReq = req.clone();\n\n    // dont mock anything from assets folder\n    const urlparts = req.url.split('.');\n    const pathparts = urlparts[0].split('/');\n\n    if (pathparts[1] === 'assets') {\n      return this.sendRequest(originalReq, next);\n    }\n\n\n    // try and find a mock response\n    const resource = originalReq.url.split('?')[0];\n    const segments: string[] = resource.split('/');\n    const seg2: string[] = resource.split('/');\n    let path = this.MOCK_BASE_PATH;\n    // ignore the http/url parts if present\n    let responseType = 'json';\n    if (segments[0] === 'http:' || segments[0] === 'https:') {\n      segments.splice(0, 3);\n      // we are getting a webresource (will only work for text based resources like svg)\n      if (segments[0] === 'webresource') {\n        responseType = 'text';\n      }\n    } else {\n      // just remove the blank part\n      segments.splice(0, 1);\n    }\n    segments.splice(0, segments.length).forEach((seg) => {\n      path = path + '/' + seg;\n    });\n    if (responseType !== 'text') {\n      path = path + '.json';\n    } else {\n      path = path + '.txt';\n    }\n\n    let options = {};\n    if (responseType === 'text') {\n      options = { responseType: 'text' };\n    }\n    const httpRequest = new HttpRequest(\n      <any>'GET',\n      path,\n      options\n    );\n    req = Object.assign(req, httpRequest);\n    req = req.clone();\n    return next.handle(req).pipe(\n      delay(100),\n      map(\n        data => {\n          let d = <HttpResponse<any>> data;\n          if (d.status === 200) {\n            // return the body of the cached response loaded from file\n            console.log(originalReq.url);\n            let mockedResponse: HttpResponse<any>;\n            if (data['body']['mockedResponses']) {\n              // multi mocked response file\n              if (data['body']['mockedResponses'][originalReq.url]) {\n                data['body'] = data['body']['mockedResponses'][originalReq.url];\n                d = <HttpResponse<any>> data;\n                mockedResponse = new HttpResponse(d);\n              } else {\n                // no mock for this URL\n                // todo: there is a bug here that this does not trigger the real call\n                throwError('no mock for this url - no response sent');\n              }\n            } else {\n              // single mocked response file\n              mockedResponse = new HttpResponse(d);\n            }\n            return mockedResponse;\n          } else {\n            return data;\n          }\n        }\n      ),\n      catchError(\n        error => {\n          // no mock file so make real request\n          return this.sendRequest(originalReq, next);\n        }\n      )\n    );\n  }\n\n  sendRequest = (\n    req: HttpRequest<any>,\n    next: HttpHandler): Observable<HttpEvent<any>> => {\n    return next.handle(req);\n  }\n}\n","/* Used to resolve contents of general config file */\n\n/* This resolver will try and read the config from shared state\n * If a shared state entry does NOT exist it will use the defaults from a config file\n * Then update shared state with those contents\n */\n\nimport { Injectable } from '@angular/core';\nimport {Resolve} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport {UiAppConfig, UiAppIdConfig} from '../models/tc-app-config';\nimport {flatMap, map, mergeMap, switchMap} from 'rxjs/operators';\nimport {TcSharedStateService} from '../services/tc-shared-state.service';\nimport {HttpClient} from '@angular/common/http';\nimport {TcGeneralConfigService} from '../services/tc-general-config.service';\nimport {GeneralConfig} from '../models/tc-general-config';\nimport {Location} from '@angular/common';\nimport {TcCoreCommonFunctions} from '../common/tc-core-common-functions';\n\n@Injectable()\nexport class GeneralConfigResolver implements Resolve<Observable<GeneralConfig>> {\n\n  DEFAULT_CONFIG_URL = TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, 'assets/config/generalAppConfig.json');\n  APP_ID_URL = TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, 'assets/config/uiAppId.json');\n\n  private sandboxId: number;\n  public defaultAppConfig: GeneralConfig;\n  private uiAppId: string;\n\n  constructor(private tcSharedState: TcSharedStateService, private generalConfigService: TcGeneralConfigService, private http: HttpClient, private location: Location) {}\n  // note appConfigResolver will need sandboxId to create app config state record.\n  // So we expect this to have been set by caller (done by tc-liveapps-lib/laConfigResolver).\n\n  public setSandbox = (sandboxId: number) => {\n    this.sandboxId = sandboxId;\n  }\n\n  // can be used to load defaultAppConfig from a JSON config\n  private getDefaultAppConfig = () => {\n    return this.http.get(this.DEFAULT_CONFIG_URL);\n  }\n\n  // loads uiAppId from json file in assets (appId.json)\n  private getAppId = (): Observable<UiAppIdConfig> => {\n    return this.http.get(this.APP_ID_URL).pipe(\n      map(uiAppId => {\n        const uiAppIdConfig = new UiAppIdConfig().deserialize(uiAppId);\n        this.uiAppId = uiAppIdConfig.uiAppId;\n        return uiAppIdConfig;\n        }\n      )\n    );\n  }\n\n  resolve(): Observable<GeneralConfig> {\n    const appConfig = this.getAppId().pipe(\n      switchMap(uiAppId => this.generalConfigService.getGeneralConfig(uiAppId.uiAppId, true, false)\n      .pipe(\n        mergeMap(\n          generalConfig => {\n            if (generalConfig === undefined) {\n              return this.getDefaultAppConfig().pipe(\n                flatMap(config => {\n                  this.defaultAppConfig = new GeneralConfig().deserialize(config);\n                  this.defaultAppConfig.uiAppId = this.uiAppId;\n                  return this.generalConfigService.createGeneralConfig(\n                    this.sandboxId,\n                    this.defaultAppConfig.uiAppId,\n                    this.defaultAppConfig)\n                    .pipe(\n                      flatMap(\n                        result => {\n                          const newAppConfig = this.defaultAppConfig;\n                          newAppConfig.id = result;\n                          return this.generalConfigService.updateGeneralConfig(\n                            this.sandboxId,\n                            newAppConfig.uiAppId,\n                            newAppConfig,\n                            result).pipe(\n                              flatMap(\n                                // trigger a read to flush the cache since we changed it\n                              updatedConf => {\n                                  return this.generalConfigService.getGeneralConfig(this.uiAppId, true, true).pipe(\n                                    map(\n                                      cachedConfig => {\n                                        return cachedConfig;\n                                      }\n                                    )\n                                  );\n\n                              }\n                              )\n                          );\n                         // return newAppConfig;\n                        })\n                    );\n                })\n              );\n             } else {\n              return of(generalConfig);\n            }\n          }\n        )\n      )\n      )\n    )\n    return appConfig;\n  }\n\n}\n","/* Used to resolve contents of configuration menu config file */\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UiAppIdConfig } from '../models/tc-app-config';\nimport { map, flatMap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { ConfigurationMenuConfig } from '../models/tc-configuration-menu-config';\nimport { Location } from '@angular/common';\nimport {TcCoreCommonFunctions} from '../common/tc-core-common-functions';\n\n@Injectable()\nexport class ConfigurationMenuConfigResolver implements Resolve<Observable<ConfigurationMenuConfig>> {\n\n    // DEFAULT_CONFIG_URL = 'assets/config/<uiAppId>/configurationMenuConfig.json';\n    // JS: Changed since we will use different GIT repo for different templates from now on\n    DEFAULT_CONFIG_URL = 'assets/config/configurationMenuConfig.json';\n    APP_ID_URL = TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, 'assets/config/uiAppId.json');\n\n    constructor(private http: HttpClient, private location: Location) { }\n\n    // can be used to load defaultAppConfig from a JSON config\n    private getConfigurationMenuConfig = (uiAppId: string) => {\n        return this.http.get(TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, this.DEFAULT_CONFIG_URL.replace('<uiAppId>', uiAppId)));\n    }\n\n    // loads uiAppId from json file in assets (appId.json)\n    private getAppId = (): Observable<UiAppIdConfig> => {\n        return this.http.get(this.APP_ID_URL).pipe(\n            map(uiAppId => {\n                const uiAppIdConfig = new UiAppIdConfig().deserialize(uiAppId);\n                return uiAppIdConfig;\n            })\n        );\n    }\n\n    resolve(routeSnapshot: ActivatedRouteSnapshot): Observable<ConfigurationMenuConfig> {\n        const configurationMenuConfig$ =\n            this.getAppId().pipe(\n                flatMap(uiAppId => {\n                    return this.getConfigurationMenuConfig(uiAppId.uiAppId).pipe(\n                        map(config => {\n                            return new ConfigurationMenuConfig().deserialize(config);\n                        })\n                    );\n                })\n            )\n        return configurationMenuConfig$;\n    }\n\n}\n","/* Used to resolve contents of landing page config file */\n\n/* This resolver will try and read the config from shared state\n * If a shared state entry does NOT exist it will use the defaults from a config file\n * Then update shared state with those contents\n */\n\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { UiAppIdConfig } from '../models/tc-app-config';\nimport { flatMap, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { TcSharedStateService } from '../services/tc-shared-state.service';\nimport { HttpClient } from '@angular/common/http';\nimport { GeneralConfig } from '../models/tc-general-config';\nimport { Location } from '@angular/common';\nimport { TcCoreCommonFunctions } from '../common/tc-core-common-functions';\nimport { TcGeneralLandingPageConfigService } from '../services/tc-general-landing-page-config.service';\nimport { GeneralLandingPageConfig } from '../models/tc-general-landing-page-config';\n\n@Injectable()\nexport class GeneralLandingPageConfigResolver implements Resolve<Observable<GeneralLandingPageConfig>> {\n\n    DEFAULT_CONFIG_URL = 'assets/config/landingPages.json';\n    APP_ID_URL = TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, 'assets/config/uiAppId.json');\n\n    private sandboxId: number;\n    public defaultLandingPageConfig: GeneralLandingPageConfig;\n    private uiAppId: string;\n\n    constructor(\n        private tcSharedState: TcSharedStateService,\n        private generalLandingPageConfigService: TcGeneralLandingPageConfigService,\n        private http: HttpClient,\n        private location: Location) { }\n    // note appConfigResolver will need sandboxId to create app config state record.\n    // So we expect this to have been set by caller (done by tc-liveapps-lib/laConfigResolver).\n\n    public setSandbox = (sandboxId: number) => {\n        this.sandboxId = sandboxId;\n    }\n\n    // can be used to load defaultAppConfig from a JSON config\n    private getDefaultAppConfig = () => {\n        return this.http.get(TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, this.DEFAULT_CONFIG_URL));\n    }\n\n    // loads uiAppId from json file in assets (appId.json)\n    private getAppId = (): Observable<UiAppIdConfig> => {\n        return this.http.get(this.APP_ID_URL).pipe(\n            map(uiAppId => {\n                const uiAppIdConfig = new UiAppIdConfig().deserialize(uiAppId);\n                this.uiAppId = uiAppIdConfig.uiAppId;\n                return uiAppIdConfig;\n            }\n            )\n        );\n    }\n\n    resolve(): Observable<GeneralLandingPageConfig> {\n        const appConfig = this.getAppId().pipe(\n            switchMap(uiAppId => this.generalLandingPageConfigService.getGeneralLandingPageConfig(uiAppId.uiAppId, true, false)\n                .pipe(\n                    mergeMap(\n                        generalConfig => {\n                            if (generalConfig === undefined) {\n                                return this.getDefaultAppConfig().pipe(\n                                    flatMap(config => {\n                                        this.defaultLandingPageConfig = new GeneralLandingPageConfig().deserialize(config);\n                                        this.defaultLandingPageConfig.uiAppId = this.uiAppId;\n                                        return this.generalLandingPageConfigService.createGeneralLandingPageConfig(\n                                            this.sandboxId,\n                                            this.uiAppId,\n                                            this.defaultLandingPageConfig)\n                                            .pipe(\n                                                flatMap(\n                                                    result => {\n                                                        const newAppConfig = this.defaultLandingPageConfig;\n                                                        newAppConfig.id = result;\n                                                        return this.generalLandingPageConfigService.updateGeneralLandingPageConfig(\n                                                            this.sandboxId,\n                                                            this.uiAppId,\n                                                            newAppConfig,\n                                                            result).pipe(\n                                                                flatMap(\n                                                                    // trigger a read to flush the cache since we changed it\n                                                                    updatedConf => {\n                                                                        return this.generalLandingPageConfigService.getGeneralLandingPageConfig(this.uiAppId, true, true).pipe(\n                                                                            map(\n                                                                                cachedConfig => {\n                                                                                    return cachedConfig;\n                                                                                }\n                                                                            )\n                                                                        );\n\n                                                                    }\n                                                                )\n                                                            );\n                                                        // return newAppConfig;\n                                                    })\n                                            );\n                                    })\n                                );\n                            } else {\n                                return of(generalConfig);\n                            }\n                        }\n                    )\n                )\n            )\n        )\n        return appConfig;\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class MessageQueueService {\n\n  queues: Array<{ name: string, subject: Subject<any> }> = [\n    {name: 'sample.queue', subject: new Subject<any>()}\n  ];\n\n  constructor() {\n     console.log('Queue Message service Created...');\n  }\n\n  sendMessage(name: string, message: string) {\n    this.createQueueIfNotExists(name);\n    this.queues.filter(x => x.name === name)[0].subject.next({text: message});\n  }\n\n  clearMessages(name: string) {\n    this.createQueueIfNotExists(name);\n    this.queues.filter(x => x.name === name)[0].subject.next();\n  }\n\n  getMessage(name: string): Observable<any> {\n    this.createQueueIfNotExists(name);\n    return this.queues.filter(x => x.name === name)[0].subject.asObservable();\n  }\n\n  createQueueIfNotExists(name: string) {\n    let queueExist = false;\n    for (const q of this.queues) {\n      if (q.name === name) {\n        // console.log('Queue Exist: ' + q.name);\n        queueExist = true;\n      }\n    }\n    if (!queueExist) {\n      console.log('Creating Queue: ' + name);\n      const tempQueue = {name: name, subject: new Subject<any>()};\n      this.queues.push(tempQueue);\n    }\n  }\n}\n"],"names":["tslib_1.__values","tslib_1.__extends","observableOf"],"mappings":"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"}