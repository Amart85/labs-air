/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ViewChild } from '@angular/core';
import { MatPaginator, MatSort } from '@angular/material';
import { TibcoCloudTableDataSource } from './tibco-cloud-table-datasource';
import { TcCoreCommonFunctions } from '../../common/tc-core-common-functions';
var TibcoCloudTableComponent = /** @class */ (function () {
    function TibcoCloudTableComponent() {
        this.id = '_' + Math.random().toString(36).substr(2, 9);
        /**
         * Columns displayed in the table. Columns IDs can be added, removed, or reordered.
         */
        this.displayedColumns = [];
        this.columns = [];
    }
    /**
     * @return {?}
     */
    TibcoCloudTableComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.updateTable();
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    TibcoCloudTableComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        console.log('Table Changed');
        this.updateTable();
    };
    /**
     * @return {?}
     */
    TibcoCloudTableComponent.prototype.updateTable = /**
     * @return {?}
     */
    function () {
        // console.log('JSONSource: ', this.jsonSource);
        /** @type {?} */
        var parsedJsonSource = JSON.parse(this.jsonSource);
        // console.log('Parsed JSON Source: ', parsedJsonSource);
        this.dataSource = new TibcoCloudTableDataSource(this.paginator, this.sort, parsedJsonSource);
        /** @type {?} */
        var myColumns = [];
        if (parsedJsonSource.length != null) {
            if (parsedJsonSource.length > 0) {
                // console.log(parsedJsonSource[0]);
                if (parsedJsonSource[0] != null) {
                    /** @type {?} */
                    var myColumns_1 = [];
                    /** @type {?} */
                    var m = 0;
                    var _loop_1 = function (headerName) {
                        if (parsedJsonSource[0].hasOwnProperty(headerName)) {
                            // console.log(m + ' headerName:', headerName);
                            this_1.displayedColumns.push(headerName);
                            myColumns_1[m] = {};
                            myColumns_1[m]['columnDef'] = headerName;
                            myColumns_1[m]['header'] = headerName;
                            myColumns_1[m].cell = (/**
                             * @param {?} element
                             * @return {?}
                             */
                            function (element) {
                                return "" + element[headerName];
                            });
                            this_1.columns = myColumns_1;
                        }
                        m++;
                    };
                    var this_1 = this;
                    for (var headerName in parsedJsonSource[0]) {
                        _loop_1(headerName);
                    }
                }
                // console.log('myColums:', this.columns);
                // this.columDefArray = this.columns;
            }
        }
    };
    /*
    private log(...m){
      console.log('TIBCO CLOUD TABLE] ' , m);
    }*/
    /*
      private log(...m){
        console.log('TIBCO CLOUD TABLE] ' , m);
      }*/
    /**
     * @param {?} header
     * @return {?}
     */
    TibcoCloudTableComponent.prototype.camelCaseTW = /*
      private log(...m){
        console.log('TIBCO CLOUD TABLE] ' , m);
      }*/
    /**
     * @param {?} header
     * @return {?}
     */
    function (header) {
        return TcCoreCommonFunctions.camelCaseToWords(header);
    };
    TibcoCloudTableComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tc-tibco-cloud-table',
                    template: "<div class=\"mat-elevation-z8\">\n  <table id=\"{{id}}\" mat-table class=\"tct-full-width-table\" [dataSource]=\"dataSource\" matSort aria-label=\"Elements\">\n    <ng-container *ngFor=\"let column of columns\" [matColumnDef]='column.columnDef'>\n      <mat-header-cell *matHeaderCellDef class=\"tct-header\"  mat-sort-header>{{camelCaseTW(column.header)}}</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">{{ column.cell(row) }}</mat-cell>\n    </ng-container>\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"  ></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\n                         let even = even;\n                         columns: displayedColumns;\"\n             [ngClass]=\"{gray: even}\"></mat-row>\n  </table>\n  <mat-paginator [ngClass]=\"{'tct-hide': dataSource.data.length < 10}\" #paginator\n                 [length]=\"dataSource.data.length\"\n                 [pageIndex]=\"0\"\n                 [pageSize]=\"10\"\n                 [pageSizeOptions]=\"[5, 10, 20, 25]\">\n  </mat-paginator>\n</div>\n",
                    styles: [".tct-full-width-table{width:100%}.tct-header{background:#0081cb;color:#fff;padding:5px 30px;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center}.tct-header:hover{background-color:#229be0}.tctgray{background-color:#f5f5f5}.tct-hide{display:none}"]
                }] }
    ];
    TibcoCloudTableComponent.propDecorators = {
        jsonSource: [{ type: Input }],
        paginator: [{ type: ViewChild, args: [MatPaginator, { static: true },] }],
        sort: [{ type: ViewChild, args: [MatSort, { static: true },] }]
    };
    return TibcoCloudTableComponent;
}());
export { TibcoCloudTableComponent };
if (false) {
    /** @type {?} */
    TibcoCloudTableComponent.prototype.jsonSource;
    /** @type {?} */
    TibcoCloudTableComponent.prototype.paginator;
    /** @type {?} */
    TibcoCloudTableComponent.prototype.sort;
    /** @type {?} */
    TibcoCloudTableComponent.prototype.dataSource;
    /** @type {?} */
    TibcoCloudTableComponent.prototype.id;
    /**
     * Columns displayed in the table. Columns IDs can be added, removed, or reordered.
     * @type {?}
     */
    TibcoCloudTableComponent.prototype.displayedColumns;
    /** @type {?} */
    TibcoCloudTableComponent.prototype.columns;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGliY28tY2xvdWQtdGFibGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpYmNvLXRjc3RrL3RjLWNvcmUtbGliLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGliY28tY2xvdWQtdGFibGUvdGliY28tY2xvdWQtdGFibGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLEtBQUssRUFBb0MsU0FBUyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzVGLE9BQU8sRUFBQyxZQUFZLEVBQUUsT0FBTyxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFDeEQsT0FBTyxFQUFDLHlCQUF5QixFQUFDLE1BQU0sZ0NBQWdDLENBQUM7QUFDekUsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0sdUNBQXVDLENBQUM7QUFFNUU7SUFBQTtRQVlFLE9BQUUsR0FBVyxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDOzs7O1FBRzNELHFCQUFnQixHQUFHLEVBQUUsQ0FBQztRQUN0QixZQUFPLEdBQUcsRUFBRSxDQUFDO0lBMkRmLENBQUM7Ozs7SUF6REMsMkNBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBR3JCLENBQUM7Ozs7O0lBQ0QsOENBQVc7Ozs7SUFBWCxVQUFZLE9BQU87UUFDakIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUM3QixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7SUFFckIsQ0FBQzs7OztJQUdELDhDQUFXOzs7SUFBWDs7O1lBRVEsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQ3BELHlEQUF5RDtRQUN6RCxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUkseUJBQXlCLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFFLGdCQUFnQixDQUFDLENBQUM7O1lBQ3ZGLFNBQVMsR0FBRyxFQUFFO1FBQ3BCLElBQUksZ0JBQWdCLENBQUMsTUFBTSxJQUFJLElBQUksRUFBRTtZQUNuQyxJQUFJLGdCQUFnQixDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7Z0JBQy9CLG9DQUFvQztnQkFDcEMsSUFBSSxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLEVBQUU7O3dCQUN6QixXQUFTLEdBQUcsRUFBRTs7d0JBQ2hCLENBQUMsR0FBRyxDQUFDOzRDQUNFLFVBQVU7d0JBQ25CLElBQUksZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDLFVBQVUsQ0FBQyxFQUFFOzRCQUNsRCwrQ0FBK0M7NEJBQy9DLE9BQUssZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDOzRCQUN2QyxXQUFTLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDOzRCQUNsQixXQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLEdBQUcsVUFBVSxDQUFDOzRCQUN2QyxXQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEdBQUcsVUFBVSxDQUFDOzRCQUNwQyxXQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSTs7Ozs0QkFBRyxVQUFVLE9BQU87Z0NBQ25DLE9BQU8sS0FBRyxPQUFPLENBQUMsVUFBVSxDQUFHLENBQUM7NEJBQ2xDLENBQUMsQ0FBQSxDQUFDOzRCQUNGLE9BQUssT0FBTyxHQUFHLFdBQVMsQ0FBQzt5QkFDMUI7d0JBQ0QsQ0FBQyxFQUFFLENBQUM7OztvQkFaTixLQUFLLElBQU0sVUFBVSxJQUFJLGdCQUFnQixDQUFDLENBQUMsQ0FBQztnQ0FBakMsVUFBVTtxQkFhcEI7aUJBQ0Y7Z0JBQ0QsMENBQTBDO2dCQUMxQyxxQ0FBcUM7YUFDdEM7U0FDRjtJQUNILENBQUM7SUFHRDs7O09BR0c7Ozs7Ozs7OztJQUVILDhDQUFXOzs7Ozs7OztJQUFYLFVBQVksTUFBb0I7UUFFOUIsT0FBTyxxQkFBcUIsQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUd4RCxDQUFDOztnQkExRUYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxzQkFBc0I7b0JBQ2hDLDRqQ0FBaUQ7O2lCQUVsRDs7OzZCQUVFLEtBQUs7NEJBQ0wsU0FBUyxTQUFDLFlBQVksRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7dUJBQ3hDLFNBQVMsU0FBQyxPQUFPLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFOztJQW1FdEMsK0JBQUM7Q0FBQSxBQTNFRCxJQTJFQztTQXRFWSx3QkFBd0I7OztJQUNuQyw4Q0FBNEI7O0lBQzVCLDZDQUFtRTs7SUFDbkUsd0NBQW9EOztJQUVwRCw4Q0FBc0M7O0lBRXRDLHNDQUEyRDs7Ozs7SUFHM0Qsb0RBQXNCOztJQUN0QiwyQ0FBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBJbnB1dCwgT25DaGFuZ2VzLCBPbkluaXQsIFNpbXBsZUNoYW5nZXMsIFZpZXdDaGlsZH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge01hdFBhZ2luYXRvciwgTWF0U29ydH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwnO1xuaW1wb3J0IHtUaWJjb0Nsb3VkVGFibGVEYXRhU291cmNlfSBmcm9tICcuL3RpYmNvLWNsb3VkLXRhYmxlLWRhdGFzb3VyY2UnO1xuaW1wb3J0IHtUY0NvcmVDb21tb25GdW5jdGlvbnN9IGZyb20gJy4uLy4uL2NvbW1vbi90Yy1jb3JlLWNvbW1vbi1mdW5jdGlvbnMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0Yy10aWJjby1jbG91ZC10YWJsZScsXG4gIHRlbXBsYXRlVXJsOiAnLi90aWJjby1jbG91ZC10YWJsZS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3RpYmNvLWNsb3VkLXRhYmxlLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBUaWJjb0Nsb3VkVGFibGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XG4gIEBJbnB1dCgpIGpzb25Tb3VyY2U6IHN0cmluZztcbiAgQFZpZXdDaGlsZChNYXRQYWdpbmF0b3IsIHsgc3RhdGljOiB0cnVlIH0pIHBhZ2luYXRvcjogTWF0UGFnaW5hdG9yO1xuICBAVmlld0NoaWxkKE1hdFNvcnQsIHsgc3RhdGljOiB0cnVlIH0pIHNvcnQ6IE1hdFNvcnQ7XG5cbiAgZGF0YVNvdXJjZTogVGliY29DbG91ZFRhYmxlRGF0YVNvdXJjZTtcblxuICBpZDogc3RyaW5nID0gJ18nICsgTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIDkpO1xuXG4gIC8qKiBDb2x1bW5zIGRpc3BsYXllZCBpbiB0aGUgdGFibGUuIENvbHVtbnMgSURzIGNhbiBiZSBhZGRlZCwgcmVtb3ZlZCwgb3IgcmVvcmRlcmVkLiAqL1xuICBkaXNwbGF5ZWRDb2x1bW5zID0gW107XG4gIGNvbHVtbnMgPSBbXTtcblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLnVwZGF0ZVRhYmxlKCk7XG5cblxuICB9XG4gIG5nT25DaGFuZ2VzKGNoYW5nZXMpIHtcbiAgICBjb25zb2xlLmxvZygnVGFibGUgQ2hhbmdlZCcpO1xuICAgIHRoaXMudXBkYXRlVGFibGUoKTtcblxuICB9XG5cblxuICB1cGRhdGVUYWJsZSgpIHtcbiAgICAvLyBjb25zb2xlLmxvZygnSlNPTlNvdXJjZTogJywgdGhpcy5qc29uU291cmNlKTtcbiAgICBjb25zdCBwYXJzZWRKc29uU291cmNlID0gSlNPTi5wYXJzZSh0aGlzLmpzb25Tb3VyY2UpO1xuICAgIC8vIGNvbnNvbGUubG9nKCdQYXJzZWQgSlNPTiBTb3VyY2U6ICcsIHBhcnNlZEpzb25Tb3VyY2UpO1xuICAgIHRoaXMuZGF0YVNvdXJjZSA9IG5ldyBUaWJjb0Nsb3VkVGFibGVEYXRhU291cmNlKHRoaXMucGFnaW5hdG9yLCB0aGlzLnNvcnQsIHBhcnNlZEpzb25Tb3VyY2UpO1xuICAgIGNvbnN0IG15Q29sdW1ucyA9IFtdO1xuICAgIGlmIChwYXJzZWRKc29uU291cmNlLmxlbmd0aCAhPSBudWxsKSB7XG4gICAgICBpZiAocGFyc2VkSnNvblNvdXJjZS5sZW5ndGggPiAwKSB7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHBhcnNlZEpzb25Tb3VyY2VbMF0pO1xuICAgICAgICBpZiAocGFyc2VkSnNvblNvdXJjZVswXSAhPSBudWxsKSB7XG4gICAgICAgICAgY29uc3QgbXlDb2x1bW5zID0gW107XG4gICAgICAgICAgbGV0IG0gPSAwO1xuICAgICAgICAgIGZvciAoY29uc3QgaGVhZGVyTmFtZSBpbiBwYXJzZWRKc29uU291cmNlWzBdKSB7XG4gICAgICAgICAgICBpZiAocGFyc2VkSnNvblNvdXJjZVswXS5oYXNPd25Qcm9wZXJ0eShoZWFkZXJOYW1lKSkge1xuICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhtICsgJyBoZWFkZXJOYW1lOicsIGhlYWRlck5hbWUpO1xuICAgICAgICAgICAgICB0aGlzLmRpc3BsYXllZENvbHVtbnMucHVzaChoZWFkZXJOYW1lKTtcbiAgICAgICAgICAgICAgbXlDb2x1bW5zW21dID0ge307XG4gICAgICAgICAgICAgIG15Q29sdW1uc1ttXVsnY29sdW1uRGVmJ10gPSBoZWFkZXJOYW1lO1xuICAgICAgICAgICAgICBteUNvbHVtbnNbbV1bJ2hlYWRlciddID0gaGVhZGVyTmFtZTtcbiAgICAgICAgICAgICAgbXlDb2x1bW5zW21dLmNlbGwgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBgJHtlbGVtZW50W2hlYWRlck5hbWVdfWA7XG4gICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgIHRoaXMuY29sdW1ucyA9IG15Q29sdW1ucztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG0rKztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gY29uc29sZS5sb2coJ215Q29sdW1zOicsIHRoaXMuY29sdW1ucyk7XG4gICAgICAgIC8vIHRoaXMuY29sdW1EZWZBcnJheSA9IHRoaXMuY29sdW1ucztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuXG4gIC8qXG4gIHByaXZhdGUgbG9nKC4uLm0pe1xuICAgIGNvbnNvbGUubG9nKCdUSUJDTyBDTE9VRCBUQUJMRV0gJyAsIG0pO1xuICB9Ki9cblxuICBjYW1lbENhc2VUVyhoZWFkZXI6IHN0cmluZyB8IGFueSkge1xuXG4gICAgcmV0dXJuIFRjQ29yZUNvbW1vbkZ1bmN0aW9ucy5jYW1lbENhc2VUb1dvcmRzKGhlYWRlcik7XG5cblxuICB9XG59XG4iXX0=