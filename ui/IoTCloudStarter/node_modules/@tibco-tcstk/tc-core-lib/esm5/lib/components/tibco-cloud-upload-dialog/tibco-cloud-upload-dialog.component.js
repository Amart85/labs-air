/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Output, Inject, EventEmitter } from '@angular/core';
import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';
var TibcoCloudUploadDialogComponent = /** @class */ (function () {
    // public fileText: string;
    function TibcoCloudUploadDialogComponent(dialogRef, data) {
        var _this = this;
        this.dialogRef = dialogRef;
        this.data = data;
        this.fileevent = new EventEmitter();
        this.fileToUpload = undefined;
        this.description = undefined;
        this.uploadFile = (/**
         * @return {?}
         */
        function () {
            if (_this.fileToUpload) {
                _this.fileevent.emit({
                    file: _this.fileToUpload,
                    description: _this.description,
                    inputData: _this.data
                });
                _this.dialogRef.close();
            }
        });
    }
    /**
     * @param {?} description
     * @return {?}
     */
    TibcoCloudUploadDialogComponent.prototype.setFileDescription = /**
     * @param {?} description
     * @return {?}
     */
    function (description) {
        this.description = description;
    };
    /**
     * @param {?} files
     * @return {?}
     */
    TibcoCloudUploadDialogComponent.prototype.attachFile = /**
     * @param {?} files
     * @return {?}
     */
    function (files) {
        this.fileToUpload = files.item(0);
    };
    /**
     * @return {?}
     */
    TibcoCloudUploadDialogComponent.prototype.onNoClick = /**
     * @return {?}
     */
    function () {
        this.dialogRef.close();
    };
    TibcoCloudUploadDialogComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tibco-cloud-upload-dialog',
                    template: "<h1 mat-dialog-title>{{data.title}}</h1>\n<div mat-dialog-content class=\"tcs-state-icon-upload-dialog\">\n    <form #fileUploadForm=\"ngForm\" fxFlex fxLayout=\"column\">\n        <div fxLayout=\"row\" fxLayoutAlign=\"start space-between\">\n            <button type=\"button\" mat-raised-button (click)=\"fileInput.click()\">Choose File To Upload</button>\n            <div *ngIf=\"fileToUpload\">{{fileToUpload.name}}</div>\n            <!-- below input is hidden and enabled by above button -->\n            <input class=\"tcs-hidden-input\" (change)=\"attachFile($event.target.files)\" accept=\"{{data.allowedExtensions}}\" #fileInput\n                type=\"file\" id=\"file\">\n        </div>\n    </form>\n</div>\n<div mat-dialog-actions>\n    <button mat-button (click)=\"uploadFile()\" type=\"submit\" [disabled]=\"!fileToUpload\">Upload</button>\n    <button mat-button (click)=\"onNoClick()\">Cancel</button>\n</div>",
                    styles: [".tcs-hidden-input{display:none}"]
                }] }
    ];
    /** @nocollapse */
    TibcoCloudUploadDialogComponent.ctorParameters = function () { return [
        { type: MatDialogRef },
        { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
    ]; };
    TibcoCloudUploadDialogComponent.propDecorators = {
        fileevent: [{ type: Output }]
    };
    return TibcoCloudUploadDialogComponent;
}());
export { TibcoCloudUploadDialogComponent };
if (false) {
    /** @type {?} */
    TibcoCloudUploadDialogComponent.prototype.fileevent;
    /** @type {?} */
    TibcoCloudUploadDialogComponent.prototype.fileToUpload;
    /** @type {?} */
    TibcoCloudUploadDialogComponent.prototype.description;
    /** @type {?} */
    TibcoCloudUploadDialogComponent.prototype.uploadFile;
    /** @type {?} */
    TibcoCloudUploadDialogComponent.prototype.dialogRef;
    /** @type {?} */
    TibcoCloudUploadDialogComponent.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGliY28tY2xvdWQtdXBsb2FkLWRpYWxvZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGliY28tdGNzdGsvdGMtY29yZS1saWIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aWJjby1jbG91ZC11cGxvYWQtZGlhbG9nL3RpYmNvLWNsb3VkLXVwbG9hZC1kaWFsb2cuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxZQUFZLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFbEU7SUFVSSwyQkFBMkI7SUFFM0IseUNBQ1csU0FBd0QsRUFDL0IsSUFBUztRQUY3QyxpQkFHSztRQUZNLGNBQVMsR0FBVCxTQUFTLENBQStDO1FBQy9CLFNBQUksR0FBSixJQUFJLENBQUs7UUFQbkMsY0FBUyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFDdkMsaUJBQVksR0FBUyxTQUFTLENBQUM7UUFDL0IsZ0JBQVcsR0FBVyxTQUFTLENBQUM7UUFRaEMsZUFBVTs7O1FBQUc7WUFDaEIsSUFBSSxLQUFJLENBQUMsWUFBWSxFQUFFO2dCQUNuQixLQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQztvQkFDaEIsSUFBSSxFQUFFLEtBQUksQ0FBQyxZQUFZO29CQUN2QixXQUFXLEVBQUUsS0FBSSxDQUFDLFdBQVc7b0JBQzdCLFNBQVMsRUFBRSxLQUFJLENBQUMsSUFBSTtpQkFDdkIsQ0FBQyxDQUFDO2dCQUNILEtBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLENBQUM7YUFDMUI7UUFDTCxDQUFDLEVBQUE7SUFYRyxDQUFDOzs7OztJQWFMLDREQUFrQjs7OztJQUFsQixVQUFtQixXQUFtQjtRQUNsQyxJQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQztJQUNuQyxDQUFDOzs7OztJQUVELG9EQUFVOzs7O0lBQVYsVUFBVyxLQUFlO1FBQ3RCLElBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN0QyxDQUFDOzs7O0lBRUQsbURBQVM7OztJQUFUO1FBQ0ksSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUMzQixDQUFDOztnQkF0Q0osU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSwyQkFBMkI7b0JBQ3JDLDQ2QkFBeUQ7O2lCQUU1RDs7OztnQkFOUSxZQUFZO2dEQWdCWixNQUFNLFNBQUMsZUFBZTs7OzRCQVAxQixNQUFNOztJQWlDWCxzQ0FBQztDQUFBLEFBeENELElBd0NDO1NBbkNZLCtCQUErQjs7O0lBRXhDLG9EQUE4Qzs7SUFDOUMsdURBQXNDOztJQUN0QyxzREFBdUM7O0lBUXZDLHFEQVNDOztJQWJHLG9EQUErRDs7SUFDL0QsK0NBQXlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPdXRwdXQsIEluamVjdCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNYXREaWFsb2dSZWYsIE1BVF9ESUFMT0dfREFUQSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0aWJjby1jbG91ZC11cGxvYWQtZGlhbG9nJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vdGliY28tY2xvdWQtdXBsb2FkLWRpYWxvZy5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vdGliY28tY2xvdWQtdXBsb2FkLWRpYWxvZy5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgVGliY29DbG91ZFVwbG9hZERpYWxvZ0NvbXBvbmVudCB7XG5cbiAgICBAT3V0cHV0KCkgZmlsZWV2ZW50ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gICAgcHVibGljIGZpbGVUb1VwbG9hZDogRmlsZSA9IHVuZGVmaW5lZDtcbiAgICBwdWJsaWMgZGVzY3JpcHRpb246IHN0cmluZyA9IHVuZGVmaW5lZDtcbiAgICAvLyBwdWJsaWMgZmlsZVRleHQ6IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwdWJsaWMgZGlhbG9nUmVmOiBNYXREaWFsb2dSZWY8VGliY29DbG91ZFVwbG9hZERpYWxvZ0NvbXBvbmVudD4sIFxuICAgICAgICBASW5qZWN0KE1BVF9ESUFMT0dfREFUQSkgcHVibGljIGRhdGE6IGFueVxuICAgICkgeyB9XG5cbiAgICBwdWJsaWMgdXBsb2FkRmlsZSA9ICgpID0+IHtcbiAgICAgICAgaWYgKHRoaXMuZmlsZVRvVXBsb2FkKSB7XG4gICAgICAgICAgICB0aGlzLmZpbGVldmVudC5lbWl0KHsgXG4gICAgICAgICAgICAgICAgZmlsZTogdGhpcy5maWxlVG9VcGxvYWQsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IHRoaXMuZGVzY3JpcHRpb24sXG4gICAgICAgICAgICAgICAgaW5wdXREYXRhOiB0aGlzLmRhdGEgXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuZGlhbG9nUmVmLmNsb3NlKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzZXRGaWxlRGVzY3JpcHRpb24oZGVzY3JpcHRpb246IHN0cmluZykge1xuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XG4gICAgfVxuXG4gICAgYXR0YWNoRmlsZShmaWxlczogRmlsZUxpc3QpIHtcbiAgICAgICAgdGhpcy5maWxlVG9VcGxvYWQgPSBmaWxlcy5pdGVtKDApO1xuICAgIH1cblxuICAgIG9uTm9DbGljaygpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5kaWFsb2dSZWYuY2xvc2UoKTtcbiAgICB9XG5cbn1cbiJdfQ==