/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
/**
 * Renders the menu options for each config menu
 *
 * ![alt-text](../tibco-cloud-setting-menu-entry.png "Image")
 *
 * \@example <tc-tibco-cloud-setting-menu-entry></tc-tibco-cloud-setting-menu-entry>
 */
var TibcoCloudSettingMenuEntryComponent = /** @class */ (function () {
    function TibcoCloudSettingMenuEntryComponent() {
        /**
         * ~event configureOption : Option Clicked
         * ~payload string : emits Id of option selected in config main page (options)
         */
        this.configureOption = new EventEmitter();
    }
    /**
     * @param {?} id
     * @return {?}
     */
    TibcoCloudSettingMenuEntryComponent.prototype.viewButtonClick = /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        this.configureOption.emit(id);
    };
    /**
     * @return {?}
     */
    TibcoCloudSettingMenuEntryComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    TibcoCloudSettingMenuEntryComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tc-tibco-cloud-setting-menu-entry',
                    template: "<div fxLayout=\"row\" fxLayoutAlign=\"start start\">\n    <div class=\"padding-icon\">\n        <mat-icon svgIcon=\"{{icon}}\"></mat-icon>\n    </div>\n    <div fxLayout=\"column\" fxLayoutAlign=\"start start\">\n        <div class=\"underlying-capability-text\">{{title}}</div>\n        <div class=\"starters-custom-layout-box-option\" *ngFor=\"let option of options\" (click)=\"viewButtonClick(title + ' ' + option)\">\n            <span class=\"underlying-capability-link\">{{option}}</span>\n        </div>\n    </div>\n</div>\n",
                    styles: [".starters-custom-layout-box-option:hover{cursor:pointer}.underlying-capability-text{font-size:14px;font-weight:600;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:.3px;color:#062e79}.underlying-capability-link{font-size:12px;font-weight:400;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:.3px;color:#0081cb;padding-bottom:20px}:host ::ng-deep .padding-icon{padding-right:15px}"]
                }] }
    ];
    /** @nocollapse */
    TibcoCloudSettingMenuEntryComponent.ctorParameters = function () { return []; };
    TibcoCloudSettingMenuEntryComponent.propDecorators = {
        icon: [{ type: Input }],
        title: [{ type: Input }],
        options: [{ type: Input }],
        configureOption: [{ type: Output }]
    };
    return TibcoCloudSettingMenuEntryComponent;
}());
export { TibcoCloudSettingMenuEntryComponent };
if (false) {
    /**
     * icon name (svg key - needs to be registered)
     * @type {?}
     */
    TibcoCloudSettingMenuEntryComponent.prototype.icon;
    /**
     * page title comes from config resolver
     * @type {?}
     */
    TibcoCloudSettingMenuEntryComponent.prototype.title;
    /**
     * RenderedFormComponent: (options from third party API). TibcoCloudSettingMenuEntryComponent -Check with MC - not sure we need to document this.
     * @type {?}
     */
    TibcoCloudSettingMenuEntryComponent.prototype.options;
    /**
     * ~event configureOption : Option Clicked
     * ~payload string : emits Id of option selected in config main page (options)
     * @type {?}
     */
    TibcoCloudSettingMenuEntryComponent.prototype.configureOption;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGliY28tY2xvdWQtc2V0dGluZy1tZW51LWVudHJ5LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0aWJjby10Y3N0ay90Yy1jb3JlLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RpYmNvLWNsb3VkLXNldHRpbmctbWVudS1lbnRyeS90aWJjby1jbG91ZC1zZXR0aW5nLW1lbnUtZW50cnkuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7OztBQVcvRTtJQTZCRTs7Ozs7UUFGVSxvQkFBZSxHQUF5QixJQUFJLFlBQVksRUFBVSxDQUFDO0lBRTdELENBQUM7Ozs7O0lBRWYsNkRBQWU7Ozs7SUFBZixVQUFnQixFQUFFO1FBQ2hCLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7Ozs7SUFFRCxzREFBUTs7O0lBQVI7SUFDQSxDQUFDOztnQkFwQ0osU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxtQ0FBbUM7b0JBQzdDLGdpQkFBOEQ7O2lCQUVqRTs7Ozs7dUJBTUUsS0FBSzt3QkFLTCxLQUFLOzBCQUtMLEtBQUs7a0NBT0wsTUFBTTs7SUFXVCwwQ0FBQztDQUFBLEFBdENELElBc0NDO1NBakNZLG1DQUFtQzs7Ozs7O0lBSzlDLG1EQUFzQjs7Ozs7SUFLdEIsb0RBQXVCOzs7OztJQUt2QixzREFBMkI7Ozs7OztJQU8zQiw4REFBNkUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cblxuLyoqXG4gKiBSZW5kZXJzIHRoZSBtZW51IG9wdGlvbnMgZm9yIGVhY2ggY29uZmlnIG1lbnVcbiAqXG4gKiAhW2FsdC10ZXh0XSguLi90aWJjby1jbG91ZC1zZXR0aW5nLW1lbnUtZW50cnkucG5nIFwiSW1hZ2VcIilcbiAqXG4gKkBleGFtcGxlIDx0Yy10aWJjby1jbG91ZC1zZXR0aW5nLW1lbnUtZW50cnk+PC90Yy10aWJjby1jbG91ZC1zZXR0aW5nLW1lbnUtZW50cnk+XG4gKi9cblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0Yy10aWJjby1jbG91ZC1zZXR0aW5nLW1lbnUtZW50cnknLFxuICAgIHRlbXBsYXRlVXJsOiAnLi90aWJjby1jbG91ZC1zZXR0aW5nLW1lbnUtZW50cnkuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL3RpYmNvLWNsb3VkLXNldHRpbmctbWVudS1lbnRyeS5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgVGliY29DbG91ZFNldHRpbmdNZW51RW50cnlDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIC8qKlxuICAgKiBpY29uIG5hbWUgKHN2ZyBrZXkgLSBuZWVkcyB0byBiZSByZWdpc3RlcmVkKVxuICAgKi9cbiAgQElucHV0KCkgaWNvbjogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBwYWdlIHRpdGxlIGNvbWVzIGZyb20gY29uZmlnIHJlc29sdmVyXG4gICAqL1xuICBASW5wdXQoKSB0aXRsZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBSZW5kZXJlZEZvcm1Db21wb25lbnQ6IChvcHRpb25zIGZyb20gdGhpcmQgcGFydHkgQVBJKS4gVGliY29DbG91ZFNldHRpbmdNZW51RW50cnlDb21wb25lbnQgLUNoZWNrIHdpdGggTUMgLSBub3Qgc3VyZSB3ZSBuZWVkIHRvIGRvY3VtZW50IHRoaXMuXG4gICAqL1xuICBASW5wdXQoKSBvcHRpb25zOiBzdHJpbmdbXTtcblxuXG4gIC8qKlxuICAgKiB+ZXZlbnQgY29uZmlndXJlT3B0aW9uIDogT3B0aW9uIENsaWNrZWRcbiAgICogfnBheWxvYWQgc3RyaW5nIDogZW1pdHMgSWQgb2Ygb3B0aW9uIHNlbGVjdGVkIGluIGNvbmZpZyBtYWluIHBhZ2UgKG9wdGlvbnMpXG4gICAqL1xuICBAT3V0cHV0KCkgY29uZmlndXJlT3B0aW9uOiBFdmVudEVtaXR0ZXI8c3RyaW5nPiA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgICB2aWV3QnV0dG9uQ2xpY2soaWQpIHtcbiAgICAgIHRoaXMuY29uZmlndXJlT3B0aW9uLmVtaXQoaWQpO1xuICAgIH1cblxuICAgIG5nT25Jbml0KCkge1xuICAgIH1cblxufVxuIl19