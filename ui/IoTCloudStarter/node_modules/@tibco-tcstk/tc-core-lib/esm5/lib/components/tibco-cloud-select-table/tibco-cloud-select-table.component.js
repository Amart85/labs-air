/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, EventEmitter, Output } from '@angular/core';
import { TibcoCloudTableComponent } from '../tibco-cloud-table/tibco-cloud-table.component';
import { LogService } from '../../services/tc-logging.service';
/**
 * A table that allows rows to be selected
 *
 * \@example <tc-tibco-cloud-select-table></tc-tibco-cloud-select-table>
 */
var TibcoCloudSelectTableComponent = /** @class */ (function (_super) {
    tslib_1.__extends(TibcoCloudSelectTableComponent, _super);
    function TibcoCloudSelectTableComponent(logger) {
        var _this = _super.call(this) || this;
        _this.logger = logger;
        /**
         * ~event selectedlines : the lines selected
         * ~payload any : The lines that are selected in the table by the user
         */
        _this.selectedlines = new EventEmitter();
        _this.selected = {};
        logger.info('Select Table Started... ');
        return _this;
    }
    /**
     * @param {?} element
     * @return {?}
     */
    TibcoCloudSelectTableComponent.prototype.highlight = /**
     * @param {?} element
     * @return {?}
     */
    function (element) {
        element.highlighted = !element.highlighted;
    };
    /**
     * @param {?} row
     * @return {?}
     */
    TibcoCloudSelectTableComponent.prototype.clicked = /**
     * @param {?} row
     * @return {?}
     */
    function (row) {
        var e_1, _a;
        // console.log(row);
        /** @type {?} */
        var myData = JSON.parse(JSON.stringify(this.dataSource.data));
        // console.log(this.dataSource);
        /** @type {?} */
        var selectedArray = new Array();
        try {
            for (var myData_1 = tslib_1.__values(myData), myData_1_1 = myData_1.next(); !myData_1_1.done; myData_1_1 = myData_1.next()) {
                var line = myData_1_1.value;
                // console.log('s:' , line);
                if (line.highlighted) {
                    delete line['hovered'];
                    delete line['highlighted'];
                    selectedArray.push(line);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (myData_1_1 && !myData_1_1.done && (_a = myData_1.return)) _a.call(myData_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        // console.log('Selected Array: ' , selectedArray);
        this.selected = JSON.stringify(selectedArray);
        this.selectedlines.emit(this.selected);
    };
    TibcoCloudSelectTableComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tc-tibco-cloud-select-table',
                    template: "<div class=\"mat-elevation-z8\">\n  <table id=\"{{id}}\" mat-table class=\"tcst-full-width-table\" [dataSource]=\"dataSource\" matSort aria-label=\"Elements\">\n    <ng-container *ngFor=\"let column of columns\" [matColumnDef]='column.columnDef'>\n      <mat-header-cell *matHeaderCellDef class=\"tcst-header\" mat-sort-header>{{camelCaseTW(column.header)}}</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\" >{{ column.cell(row) }}</mat-cell>\n    </ng-container>\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;  let even = even;\"\n             [ngClass]=\"{hovered: row.hovered, highlighted: row.highlighted, tcstgray: even}\"\n             (click)=\"row.highlighted = !row.highlighted; clicked(row);\" (mouseover)=\"row.hovered = true\" (mouseout)=\"row.hovered = false\"></mat-row>\n\n\n  </table> <!-- *ngIf=\"dataSource.data.length > 10\" -->\n<!-- <div class='' ngClass=\"{'tcst-hide': dataSource.data.length < 10}\"> -->\n  <mat-paginator [ngClass]=\"{'tcst-hide': dataSource.data.length < 10}\"  #paginator\n                 [length]=\"dataSource.data.length\"\n                 [pageIndex]=\"0\"\n                 [pageSize]=\"10\"\n                 [pageSizeOptions]=\"[5, 10, 20, 25]\">\n  </mat-paginator>\n</div>\n<!--</div>-->\n",
                    styles: [".tcst-full-width-table{width:100%}.mat-row.hovered{background:#eee;cursor:pointer}.mat-row.highlighted{background:#999}.tcst-header{background:#0081cb;color:#fff;padding:5px 30px;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center}.tcst-header:hover{background-color:#229be0}.tcstgray{background-color:#f5f5f5}.tcst-hide{display:none}"]
                }] }
    ];
    /** @nocollapse */
    TibcoCloudSelectTableComponent.ctorParameters = function () { return [
        { type: LogService }
    ]; };
    TibcoCloudSelectTableComponent.propDecorators = {
        selectedlines: [{ type: Output }]
    };
    return TibcoCloudSelectTableComponent;
}(TibcoCloudTableComponent));
export { TibcoCloudSelectTableComponent };
if (false) {
    /**
     * ~event selectedlines : the lines selected
     * ~payload any : The lines that are selected in the table by the user
     * @type {?}
     */
    TibcoCloudSelectTableComponent.prototype.selectedlines;
    /** @type {?} */
    TibcoCloudSelectTableComponent.prototype.selected;
    /**
     * @type {?}
     * @private
     */
    TibcoCloudSelectTableComponent.prototype.logger;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGliY28tY2xvdWQtc2VsZWN0LXRhYmxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0aWJjby10Y3N0ay90Yy1jb3JlLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RpYmNvLWNsb3VkLXNlbGVjdC10YWJsZS90aWJjby1jbG91ZC1zZWxlY3QtdGFibGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxZQUFZLEVBQVUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3RFLE9BQU8sRUFBQyx3QkFBd0IsRUFBQyxNQUFNLGtEQUFrRCxDQUFDO0FBQzFGLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxtQ0FBbUMsQ0FBQzs7Ozs7O0FBUTdEO0lBS29ELDBEQUF3QjtJQWUxRSx3Q0FBb0IsTUFBa0I7UUFBdEMsWUFDRSxpQkFBTyxTQUVSO1FBSG1CLFlBQU0sR0FBTixNQUFNLENBQVk7Ozs7O1FBUjVCLG1CQUFhLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7UUFFckUsY0FBUSxHQUFHLEVBQUUsQ0FBQztRQVFaLE1BQU0sQ0FBQyxJQUFJLENBQUMsMEJBQTBCLENBQUMsQ0FBQzs7SUFDMUMsQ0FBQzs7Ozs7SUFQRCxrREFBUzs7OztJQUFULFVBQVUsT0FBTztRQUNmLE9BQU8sQ0FBQyxXQUFXLEdBQUcsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDO0lBQzdDLENBQUM7Ozs7O0lBUU0sZ0RBQU87Ozs7SUFBZCxVQUFlLEdBQUc7Ozs7WUFFVixNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7OztZQUV6RCxhQUFhLEdBQUcsSUFBSSxLQUFLLEVBQUU7O1lBQ2pDLEtBQW1CLElBQUEsV0FBQSxpQkFBQSxNQUFNLENBQUEsOEJBQUEsa0RBQUU7Z0JBQXRCLElBQU0sSUFBSSxtQkFBQTtnQkFDYiw0QkFBNEI7Z0JBQzVCLElBQUksSUFBSSxDQUFDLFdBQVcsRUFBRTtvQkFDcEIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7b0JBQ3ZCLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO29CQUMzQixhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2lCQUMxQjthQUVGOzs7Ozs7Ozs7UUFDRCxtREFBbUQ7UUFDbkQsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQzlDLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN6QyxDQUFDOztnQkEzQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSw2QkFBNkI7b0JBQ3ZDLDQwQ0FBd0Q7O2lCQUV6RDs7OztnQkFaTyxVQUFVOzs7Z0NBb0JmLE1BQU07O0lBa0NULHFDQUFDO0NBQUEsQUE5Q0QsQ0FLb0Qsd0JBQXdCLEdBeUMzRTtTQXpDWSw4QkFBOEI7Ozs7Ozs7SUFPekMsdURBQXFFOztJQUVyRSxrREFBYzs7Ozs7SUFNRixnREFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBPbkluaXQsIE91dHB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1RpYmNvQ2xvdWRUYWJsZUNvbXBvbmVudH0gZnJvbSAnLi4vdGliY28tY2xvdWQtdGFibGUvdGliY28tY2xvdWQtdGFibGUuY29tcG9uZW50JztcbmltcG9ydCB7TG9nU2VydmljZX0gZnJvbSAnLi4vLi4vc2VydmljZXMvdGMtbG9nZ2luZy5zZXJ2aWNlJztcblxuLyoqXG4gKiBBIHRhYmxlIHRoYXQgYWxsb3dzIHJvd3MgdG8gYmUgc2VsZWN0ZWRcbiAqXG4gKkBleGFtcGxlIDx0Yy10aWJjby1jbG91ZC1zZWxlY3QtdGFibGU+PC90Yy10aWJjby1jbG91ZC1zZWxlY3QtdGFibGU+XG4gKi9cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGMtdGliY28tY2xvdWQtc2VsZWN0LXRhYmxlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RpYmNvLWNsb3VkLXNlbGVjdC10YWJsZS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3RpYmNvLWNsb3VkLXNlbGVjdC10YWJsZS5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgVGliY29DbG91ZFNlbGVjdFRhYmxlQ29tcG9uZW50IGV4dGVuZHMgVGliY29DbG91ZFRhYmxlQ29tcG9uZW50IHtcblxuXG4gIC8qKlxuICAgKiB+ZXZlbnQgc2VsZWN0ZWRsaW5lcyA6IHRoZSBsaW5lcyBzZWxlY3RlZFxuICAgKiB+cGF5bG9hZCBhbnkgOiBUaGUgbGluZXMgdGhhdCBhcmUgc2VsZWN0ZWQgaW4gdGhlIHRhYmxlIGJ5IHRoZSB1c2VyXG4gICAqL1xuICBAT3V0cHV0KCkgc2VsZWN0ZWRsaW5lczogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBzZWxlY3RlZCA9IHt9O1xuXG4gIGhpZ2hsaWdodChlbGVtZW50KSB7XG4gICAgZWxlbWVudC5oaWdobGlnaHRlZCA9ICFlbGVtZW50LmhpZ2hsaWdodGVkO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBsb2dnZXI6IExvZ1NlcnZpY2UpIHsgLyosIHByaXZhdGUgdGNmdW5jdGlvbnM6IFRjRnVuY3Rpb25zU2VydmljZSkgeyovXG4gICAgc3VwZXIoKTtcbiAgICBsb2dnZXIuaW5mbygnU2VsZWN0IFRhYmxlIFN0YXJ0ZWQuLi4gJyk7XG4gIH1cblxuXG4gIHB1YmxpYyBjbGlja2VkKHJvdykge1xuICAgIC8vIGNvbnNvbGUubG9nKHJvdyk7XG4gICAgY29uc3QgbXlEYXRhID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLmRhdGFTb3VyY2UuZGF0YSkpO1xuICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuZGF0YVNvdXJjZSk7XG4gICAgY29uc3Qgc2VsZWN0ZWRBcnJheSA9IG5ldyBBcnJheSgpO1xuICAgIGZvciAoY29uc3QgbGluZSBvZiBteURhdGEpIHtcbiAgICAgIC8vIGNvbnNvbGUubG9nKCdzOicgLCBsaW5lKTtcbiAgICAgIGlmIChsaW5lLmhpZ2hsaWdodGVkKSB7XG4gICAgICAgIGRlbGV0ZSBsaW5lWydob3ZlcmVkJ107XG4gICAgICAgIGRlbGV0ZSBsaW5lWydoaWdobGlnaHRlZCddO1xuICAgICAgICBzZWxlY3RlZEFycmF5LnB1c2gobGluZSk7XG4gICAgICB9XG5cbiAgICB9XG4gICAgLy8gY29uc29sZS5sb2coJ1NlbGVjdGVkIEFycmF5OiAnICwgc2VsZWN0ZWRBcnJheSk7XG4gICAgdGhpcy5zZWxlY3RlZCA9IEpTT04uc3RyaW5naWZ5KHNlbGVjdGVkQXJyYXkpO1xuICAgIHRoaXMuc2VsZWN0ZWRsaW5lcy5lbWl0KHRoaXMuc2VsZWN0ZWQpO1xuICB9XG5cblxufVxuIl19