/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Inject } from '@angular/core';
import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';
var TibcoCloudNewElementComponent = /** @class */ (function () {
    function TibcoCloudNewElementComponent(dialogRef, data) {
        this.dialogRef = dialogRef;
        this.data = data;
        this.elementType = data.resourceType;
    }
    /**
     * @return {?}
     */
    TibcoCloudNewElementComponent.prototype.onCreate = /**
     * @return {?}
     */
    function () {
        this.dialogRef.close({ event: 'submit', id: this.id, name: this.name });
    };
    TibcoCloudNewElementComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tc-tibco-cloud-new-element',
                    template: "<div class=\"tcs-dialog-outer-div\" fxFill >\n    <mat-toolbar class=\"tcs-case-creation-dialog-toolbar\">\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxFlex>\n            <span class=\"tcs-case-creation-dialog-toolbar-text\">Create New {{elementType}}</span>\n        </div>\n    </mat-toolbar>\n    <div mat-dialog-content class=\"tcs-case-creation-dialog\" fxLayout=\"row\" fxLayoutAlign=\"space-around none\">\n        <mat-form-field style=\"min-width: 200px\">\n            <input matInput placeholder=\"Id\" [(ngModel)]=\"id\">\n        </mat-form-field>\n        <mat-form-field style=\"min-width: 400px\">\n            <input matInput placeholder=\"Name\" [(ngModel)]=\"name\">\n        </mat-form-field>\n    </div>\n    <div class=\"tcs-spacer\"></div>\n    <mat-dialog-actions class=\"tcs-dialog-actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n        <button mat-button mat-flat-button color=\"secondary\">Cancel</button>\n        <button mat-button mat-flat-button color=\"primary\" (click)=\"onCreate()\">Create</button>\n    </mat-dialog-actions>\n</div>",
                    styles: [".tcs-dialog-outer-div{height:100%;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}"]
                }] }
    ];
    /** @nocollapse */
    TibcoCloudNewElementComponent.ctorParameters = function () { return [
        { type: MatDialogRef },
        { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
    ]; };
    return TibcoCloudNewElementComponent;
}());
export { TibcoCloudNewElementComponent };
if (false) {
    /** @type {?} */
    TibcoCloudNewElementComponent.prototype.id;
    /** @type {?} */
    TibcoCloudNewElementComponent.prototype.name;
    /** @type {?} */
    TibcoCloudNewElementComponent.prototype.elementType;
    /** @type {?} */
    TibcoCloudNewElementComponent.prototype.dialogRef;
    /** @type {?} */
    TibcoCloudNewElementComponent.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGliY28tY2xvdWQtbmV3LWVsZW1lbnQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpYmNvLXRjc3RrL3RjLWNvcmUtbGliLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGliY28tY2xvdWQtbmV3LWVsZW1lbnQvdGliY28tY2xvdWQtbmV3LWVsZW1lbnQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQUUsWUFBWSxFQUFFLGVBQWUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRWxFO0lBV0ksdUNBQ1csU0FBc0QsRUFDN0IsSUFBUztRQURsQyxjQUFTLEdBQVQsU0FBUyxDQUE2QztRQUM3QixTQUFJLEdBQUosSUFBSSxDQUFLO1FBRXpDLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQztJQUN6QyxDQUFDOzs7O0lBRUQsZ0RBQVE7OztJQUFSO1FBQ0ksSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxJQUFJLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztJQUM1RSxDQUFDOztnQkFwQkosU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSw0QkFBNEI7b0JBQ3RDLDhsQ0FBdUQ7O2lCQUUxRDs7OztnQkFOUSxZQUFZO2dEQWVaLE1BQU0sU0FBQyxlQUFlOztJQVUvQixvQ0FBQztDQUFBLEFBdkJELElBdUJDO1NBbEJZLDZCQUE2Qjs7O0lBRXRDLDJDQUFrQjs7SUFDbEIsNkNBQW9COztJQUNwQixvREFBMkI7O0lBR3ZCLGtEQUE2RDs7SUFDN0QsNkNBQXlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1hdERpYWxvZ1JlZiwgTUFUX0RJQUxPR19EQVRBIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3RjLXRpYmNvLWNsb3VkLW5ldy1lbGVtZW50JyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vdGliY28tY2xvdWQtbmV3LWVsZW1lbnQuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL3RpYmNvLWNsb3VkLW5ldy1lbGVtZW50LmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBUaWJjb0Nsb3VkTmV3RWxlbWVudENvbXBvbmVudCB7XG5cbiAgICBwdWJsaWMgaWQ6IHN0cmluZztcbiAgICBwdWJsaWMgbmFtZTogc3RyaW5nO1xuICAgIHB1YmxpYyBlbGVtZW50VHlwZTogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHB1YmxpYyBkaWFsb2dSZWY6IE1hdERpYWxvZ1JlZjxUaWJjb0Nsb3VkTmV3RWxlbWVudENvbXBvbmVudD4sXG4gICAgICAgIEBJbmplY3QoTUFUX0RJQUxPR19EQVRBKSBwdWJsaWMgZGF0YTogYW55XG4gICAgKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudFR5cGUgPSBkYXRhLnJlc291cmNlVHlwZTtcbiAgICB9XG5cbiAgICBvbkNyZWF0ZSgpIHtcbiAgICAgICAgdGhpcy5kaWFsb2dSZWYuY2xvc2UoeyBldmVudDogJ3N1Ym1pdCcsIGlkOiB0aGlzLmlkLCBuYW1lOiB0aGlzLm5hbWUgfSk7XG4gICAgfVxuXG5cbn1cbiJdfQ==