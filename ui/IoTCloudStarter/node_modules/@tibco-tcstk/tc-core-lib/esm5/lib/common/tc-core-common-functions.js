/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { HashLocationStrategy } from '@angular/common';
// @dynamic
var TcCoreCommonFunctions = /** @class */ (function () {
    function TcCoreCommonFunctions() {
    }
    /**
     * @param {?} text
     * @return {?}
     */
    TcCoreCommonFunctions.escapeString = /**
     * @param {?} text
     * @return {?}
     */
    function (text) {
        return text.replace(/"/g, '\"');
    };
    /**
     * @param {?} size
     * @return {?}
     */
    TcCoreCommonFunctions.fileSizeToHuman = /**
     * @param {?} size
     * @return {?}
     */
    function (size) {
        /** @type {?} */
        var e = (Math.log(size) / Math.log(1e3)) | 0;
        return +(size / Math.pow(1e3, e)).toFixed(2) + ' ' + ('kMGTPEZY'[e - 1] || '') + 'B';
    };
    /**
     * @param {?} str
     * @return {?}
     */
    TcCoreCommonFunctions.camelCaseToWords = /**
     * @param {?} str
     * @return {?}
     */
    function (str) {
        /** @type {?} */
        var re = str.replace(/([a-z])([A-Z])/g, '$1 $2')
            .replace(/([A-Z])([a-z])/g, ' $1$2')
            .replace(/\ +/g, ' ');
        return re;
    };
    /**
     * @param {?} array
     * @return {?}
     */
    TcCoreCommonFunctions.convertToJSON = /**
     * @param {?} array
     * @return {?}
     */
    function (array) {
        /** @type {?} */
        var objArray = [];
        for (var i = 1; i < array.length; i++) {
            objArray[i - 1] = {};
            for (var k = 0; k < array[0].length && k < array[i].length; k++) {
                /** @type {?} */
                var key = array[0][k];
                objArray[i - 1][key] = array[i][k];
            }
        }
        return objArray;
    };
    /**
     * @param {?} array
     * @param {?} arrayLength
     * @return {?}
     */
    TcCoreCommonFunctions.transposeArray = /**
     * @param {?} array
     * @param {?} arrayLength
     * @return {?}
     */
    function (array, arrayLength) {
        // console.log('transposing array) arrayLength: ' + arrayLength );
        /** @type {?} */
        var newArray = [];
        for (var i = 0; i < arrayLength; i++) {
            newArray.push([]);
        }
        for (var i = 0; i < array.length; i++) {
            for (var j = 0; j < arrayLength; j++) {
                newArray[j].push(array[i][j]);
            }
        }
        return newArray;
    };
    TcCoreCommonFunctions.camelize = (/**
     * @param {?} str
     * @return {?}
     */
    function (str) {
        /** @type {?} */
        var newStr = '';
        /** @type {?} */
        var newArr = [];
        if (str.indexOf('-') !== -1) {
            newArr = str.split('-');
            for (var i = 0; i < newArr.length; i++) {
                newArr[i] = newArr[i].charAt(0).toUpperCase() + newArr[i].substr(1);
            }
            newStr = newArr.join(' ');
        }
        return newStr;
    });
    TcCoreCommonFunctions.prepareUrlForNonStaticResource = (/**
     * @param {?} location
     * @param {?} str
     * @return {?}
     */
    function (location, str) {
        // @ts-ignore
        if (location._platformStrategy instanceof HashLocationStrategy) {
            return str;
        }
        else {
            return str;
        }
    });
    TcCoreCommonFunctions.prepareUrlForStaticResource = (/**
     * @param {?} location
     * @param {?} str
     * @return {?}
     */
    function (location, str) {
        // @ts-ignore
        if (location._platformStrategy instanceof HashLocationStrategy) {
            return str;
        }
        else {
            return location.prepareExternalUrl(str);
        }
    });
    TcCoreCommonFunctions.calcSummaryCardPct = (/**
     * @param {?} width
     * @return {?}
     */
    function (width) {
        if (width.gtLg) {
            return 20;
        }
        else if (width.gtMd) {
            return 25;
        }
        else if (width.gtSm) {
            return 33;
        }
        else if (width.gtXs) {
            return 50;
        }
        else {
            return 100;
        }
    });
    return TcCoreCommonFunctions;
}());
export { TcCoreCommonFunctions };
if (false) {
    /** @type {?} */
    TcCoreCommonFunctions.camelize;
    /** @type {?} */
    TcCoreCommonFunctions.prepareUrlForNonStaticResource;
    /** @type {?} */
    TcCoreCommonFunctions.prepareUrlForStaticResource;
    /** @type {?} */
    TcCoreCommonFunctions.calcSummaryCardPct;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGMtY29yZS1jb21tb24tZnVuY3Rpb25zLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpYmNvLXRjc3RrL3RjLWNvcmUtbGliLyIsInNvdXJjZXMiOlsibGliL2NvbW1vbi90Yy1jb3JlLWNvbW1vbi1mdW5jdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxvQkFBb0IsRUFBVyxNQUFNLGlCQUFpQixDQUFDOztBQUkvRDtJQUFBO0lBMkZBLENBQUM7Ozs7O0lBeEZlLGtDQUFZOzs7O0lBQTFCLFVBQTJCLElBQUk7UUFDN0IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNsQyxDQUFDOzs7OztJQUVhLHFDQUFlOzs7O0lBQTdCLFVBQThCLElBQUk7O1lBQzFCLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUM7UUFDOUMsT0FBTyxDQUFDLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLEdBQUcsR0FBRyxDQUFDO0lBQ3ZGLENBQUM7Ozs7O0lBRWEsc0NBQWdCOzs7O0lBQTlCLFVBQStCLEdBQUc7O1lBQzFCLEVBQUUsR0FBSSxHQUFHLENBQUMsT0FBTyxDQUFDLGlCQUFpQixFQUFFLE9BQU8sQ0FBQzthQUNoRCxPQUFPLENBQUMsaUJBQWlCLEVBQUUsT0FBTyxDQUFDO2FBQ25DLE9BQU8sQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDO1FBQ3ZCLE9BQU8sRUFBRSxDQUFDO0lBQ1osQ0FBQzs7Ozs7SUFFYSxtQ0FBYTs7OztJQUEzQixV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QyxHQUFHLENBQUMsQ0FBQztTQUN6QztJQUNILENBQUMsRUFBQTtJQUVhLHdDQUFrQjs7OztJQUFHLFVBQUMsS0FBa0I7UUFDcEQsSUFBSSxLQUFLLENBQUMsSUFBSSxFQUFFO1lBQ2QsT0FBTyxFQUFFLENBQUM7U0FDWDthQUFNLElBQUksS0FBSyxDQUFDLElBQUksRUFBRTtZQUNyQixPQUFPLEVBQUUsQ0FBQztTQUNYO2FBQU0sSUFBSSxLQUFLLENBQUMsSUFBSSxFQUFFO1lBQ3JCLE9BQU8sRUFBRSxDQUFDO1NBQ1g7YUFBTSxJQUFJLEtBQUssQ0FBQyxJQUFJLEVBQUU7WUFDckIsT0FBTyxFQUFFLENBQUM7U0FDWDthQUFNO1lBQ0wsT0FBTyxHQUFHLENBQUM7U0FDWjtJQUNILENBQUMsRUFBQTtJQUVILDRCQUFDO0NBQUEsQUEzRkQsSUEyRkM7U0EzRlkscUJBQXFCOzs7SUE2Q2hDLCtCQVlDOztJQUVELHFEQU9DOztJQUVELGtEQU9DOztJQUVELHlDQVlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtIYXNoTG9jYXRpb25TdHJhdGVneSwgTG9jYXRpb259IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQge1RjQ29tcG9uZW50fSBmcm9tICcuLi9tb2RlbHMvdGMtY29tcG9uZW50JztcblxuLy8gQGR5bmFtaWNcbmV4cG9ydCBjbGFzcyBUY0NvcmVDb21tb25GdW5jdGlvbnMge1xuXG5cbiAgcHVibGljIHN0YXRpYyBlc2NhcGVTdHJpbmcodGV4dCkge1xuICAgIHJldHVybiB0ZXh0LnJlcGxhY2UoL1wiL2csICdcXFwiJyk7XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIGZpbGVTaXplVG9IdW1hbihzaXplKSB7XG4gICAgY29uc3QgZSA9IChNYXRoLmxvZyhzaXplKSAvIE1hdGgubG9nKDFlMykpIHwgMDtcbiAgICByZXR1cm4gKyhzaXplIC8gTWF0aC5wb3coMWUzLCBlKSkudG9GaXhlZCgyKSArICcgJyArICgna01HVFBFWlknW2UgLSAxXSB8fCAnJykgKyAnQic7XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIGNhbWVsQ2FzZVRvV29yZHMoc3RyKSB7XG4gICAgY29uc3QgcmUgPSAgc3RyLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csICckMSAkMicpXG4gICAgICAucmVwbGFjZSgvKFtBLVpdKShbYS16XSkvZywgJyAkMSQyJylcbiAgICAgIC5yZXBsYWNlKC9cXCArL2csICcgJyk7XG4gICAgcmV0dXJuIHJlO1xuICB9XG5cbiAgcHVibGljIHN0YXRpYyBjb252ZXJ0VG9KU09OKGFycmF5KSB7XG4gICAgY29uc3Qgb2JqQXJyYXkgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMTsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICBvYmpBcnJheVtpIC0gMV0gPSB7fTtcbiAgICAgIGZvciAobGV0IGsgPSAwOyBrIDwgYXJyYXlbMF0ubGVuZ3RoICYmIGsgPCBhcnJheVtpXS5sZW5ndGg7IGsrKykge1xuICAgICAgICBjb25zdCBrZXkgPSBhcnJheVswXVtrXTtcbiAgICAgICAgb2JqQXJyYXlbaSAtIDFdW2tleV0gPSBhcnJheVtpXVtrXTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG9iakFycmF5O1xuICB9XG5cbiAgcHVibGljIHN0YXRpYyB0cmFuc3Bvc2VBcnJheShhcnJheSwgYXJyYXlMZW5ndGgpIHtcbiAgICAvLyBjb25zb2xlLmxvZygndHJhbnNwb3NpbmcgYXJyYXkpIGFycmF5TGVuZ3RoOiAnICsgYXJyYXlMZW5ndGggKTtcbiAgICBjb25zdCBuZXdBcnJheSA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXJyYXlMZW5ndGg7IGkrKykge1xuICAgICAgbmV3QXJyYXkucHVzaChbXSk7XG4gICAgfVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgYXJyYXlMZW5ndGg7IGorKykge1xuICAgICAgICBuZXdBcnJheVtqXS5wdXNoKGFycmF5W2ldW2pdKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG5ld0FycmF5O1xuICB9XG5cbiAgcHVibGljIHN0YXRpYyBjYW1lbGl6ZSA9IChzdHI6IHN0cmluZyk6IHN0cmluZyA9PiB7XG4gICAgbGV0IG5ld1N0ciA9ICcnO1xuICAgIGxldCBuZXdBcnIgPSBbXTtcblxuICAgIGlmIChzdHIuaW5kZXhPZignLScpICE9PSAtMSkge1xuICAgICAgbmV3QXJyID0gc3RyLnNwbGl0KCctJyk7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG5ld0Fyci5sZW5ndGg7IGkrKykge1xuICAgICAgICBuZXdBcnJbaV0gPSBuZXdBcnJbaV0uY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBuZXdBcnJbaV0uc3Vic3RyKDEpO1xuICAgICAgfVxuICAgICAgbmV3U3RyID0gbmV3QXJyLmpvaW4oJyAnKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ld1N0cjtcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgcHJlcGFyZVVybEZvck5vblN0YXRpY1Jlc291cmNlID0gKGxvY2F0aW9uOiBMb2NhdGlvbiwgc3RyOiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBpZiAobG9jYXRpb24uX3BsYXRmb3JtU3RyYXRlZ3kgaW5zdGFuY2VvZiBIYXNoTG9jYXRpb25TdHJhdGVneSkge1xuICAgICAgcmV0dXJuIHN0cjtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHN0cjtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIHByZXBhcmVVcmxGb3JTdGF0aWNSZXNvdXJjZSA9IChsb2NhdGlvbjogTG9jYXRpb24sIHN0cjogc3RyaW5nKTogc3RyaW5nID0+IHtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgaWYgKGxvY2F0aW9uLl9wbGF0Zm9ybVN0cmF0ZWd5IGluc3RhbmNlb2YgSGFzaExvY2F0aW9uU3RyYXRlZ3kpIHtcbiAgICAgIHJldHVybiBzdHI7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBsb2NhdGlvbi5wcmVwYXJlRXh0ZXJuYWxVcmwoc3RyKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIGNhbGNTdW1tYXJ5Q2FyZFBjdCA9ICh3aWR0aDogVGNDb21wb25lbnQpID0+IHtcbiAgICBpZiAod2lkdGguZ3RMZykge1xuICAgICAgcmV0dXJuIDIwO1xuICAgIH0gZWxzZSBpZiAod2lkdGguZ3RNZCkge1xuICAgICAgcmV0dXJuIDI1O1xuICAgIH0gZWxzZSBpZiAod2lkdGguZ3RTbSkge1xuICAgICAgcmV0dXJuIDMzO1xuICAgIH0gZWxzZSBpZiAod2lkdGguZ3RYcykge1xuICAgICAgcmV0dXJuIDUwO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gMTAwO1xuICAgIH1cbiAgfVxuXG59XG4iXX0=