/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/* Used to resolve the default login credentials (username/clientId) when using dev/local login route instead of tibco cloud */
/* Data is stored/retrieved from session storage */
import { Injectable } from '@angular/core';
import { LoginPrefill } from '../models/tc-login';
/** @type {?} */
export var EMAIL_ID_KEY = 'tcs-login-email-id';
/** @type {?} */
export var CLIENT_ID_KEY = 'tcs-login-client-id';
var LoginPrefillResolver = /** @class */ (function () {
    function LoginPrefillResolver() {
        this.getClientId = (/**
         * @return {?}
         */
        function () {
            return localStorage.getItem(CLIENT_ID_KEY);
        });
        this.getEmail = (/**
         * @return {?}
         */
        function () {
            return localStorage.getItem(EMAIL_ID_KEY);
        });
    }
    /**
     * @return {?}
     */
    LoginPrefillResolver.prototype.resolve = /**
     * @return {?}
     */
    function () {
        return new LoginPrefill().deserialize({ emailId: this.getEmail(), clientId: this.getClientId() });
    };
    LoginPrefillResolver.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    LoginPrefillResolver.ctorParameters = function () { return []; };
    return LoginPrefillResolver;
}());
export { LoginPrefillResolver };
if (false) {
    /**
     * @type {?}
     * @private
     */
    LoginPrefillResolver.prototype.getClientId;
    /**
     * @type {?}
     * @private
     */
    LoginPrefillResolver.prototype.getEmail;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4tcHJlZmlsbC5yZXNvbHZlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0aWJjby10Y3N0ay90Yy1jb3JlLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9yZXNvbHZlcnMvbG9naW4tcHJlZmlsbC5yZXNvbHZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFJQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7QUFFbEQsTUFBTSxLQUFPLFlBQVksR0FBRyxvQkFBb0I7O0FBQ2hELE1BQU0sS0FBTyxhQUFhLEdBQUcscUJBQXFCO0FBRWxEO0lBR0U7UUFFUSxnQkFBVzs7O1FBQUc7WUFDcEIsT0FBTyxZQUFZLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQzdDLENBQUMsRUFBQTtRQUVPLGFBQVE7OztRQUFHO1lBQ2pCLE9BQU8sWUFBWSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUM1QyxDQUFDLEVBQUE7SUFSYyxDQUFDOzs7O0lBVWhCLHNDQUFPOzs7SUFBUDtRQUNFLE9BQU8sSUFBSSxZQUFZLEVBQUUsQ0FBQyxXQUFXLENBQUMsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBRSxDQUFDO0lBQ3JHLENBQUM7O2dCQWZGLFVBQVU7Ozs7SUFpQlgsMkJBQUM7Q0FBQSxBQWpCRCxJQWlCQztTQWhCWSxvQkFBb0I7Ozs7OztJQUkvQiwyQ0FFQzs7Ozs7SUFFRCx3Q0FFQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIFVzZWQgdG8gcmVzb2x2ZSB0aGUgZGVmYXVsdCBsb2dpbiBjcmVkZW50aWFscyAodXNlcm5hbWUvY2xpZW50SWQpIHdoZW4gdXNpbmcgZGV2L2xvY2FsIGxvZ2luIHJvdXRlIGluc3RlYWQgb2YgdGliY28gY2xvdWQgKi9cblxuLyogRGF0YSBpcyBzdG9yZWQvcmV0cmlldmVkIGZyb20gc2Vzc2lvbiBzdG9yYWdlICovXG5cbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7UmVzb2x2ZX0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IExvZ2luUHJlZmlsbCB9IGZyb20gJy4uL21vZGVscy90Yy1sb2dpbic7XG5cbmV4cG9ydCBjb25zdCBFTUFJTF9JRF9LRVkgPSAndGNzLWxvZ2luLWVtYWlsLWlkJztcbmV4cG9ydCBjb25zdCBDTElFTlRfSURfS0VZID0gJ3Rjcy1sb2dpbi1jbGllbnQtaWQnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTG9naW5QcmVmaWxsUmVzb2x2ZXIgaW1wbGVtZW50cyBSZXNvbHZlPExvZ2luUHJlZmlsbD4ge1xuXG4gIGNvbnN0cnVjdG9yKCkge31cblxuICBwcml2YXRlIGdldENsaWVudElkID0gKCk6IHN0cmluZyA9PiB7XG4gICAgcmV0dXJuIGxvY2FsU3RvcmFnZS5nZXRJdGVtKENMSUVOVF9JRF9LRVkpO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRFbWFpbCA9ICgpOiBzdHJpbmcgPT4ge1xuICAgIHJldHVybiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShFTUFJTF9JRF9LRVkpO1xuICB9XG5cbiAgcmVzb2x2ZSgpOiBMb2dpblByZWZpbGwge1xuICAgIHJldHVybiBuZXcgTG9naW5QcmVmaWxsKCkuZGVzZXJpYWxpemUoeyBlbWFpbElkOiB0aGlzLmdldEVtYWlsKCksIGNsaWVudElkOiB0aGlzLmdldENsaWVudElkKCkgfSApO1xuICB9XG5cbn1cbiJdfQ==