!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("angular6-json-schema-form"),require("@angular/router"),require("@angular/material"),require("@angular/forms"),require("@angular/flex-layout"),require("@angular/cdk/scrolling"),require("@angular/platform-browser/animations"),require("@angular/platform-browser"),require("@angular/common/http"),require("@angular/common"),require("@tibco-tcstk/tc-core-lib"),require("rxjs/operators")):"function"==typeof define&&define.amd?define("@tibco-tcstk/tc-forms-lib",["exports","@angular/core","angular6-json-schema-form","@angular/router","@angular/material","@angular/forms","@angular/flex-layout","@angular/cdk/scrolling","@angular/platform-browser/animations","@angular/platform-browser","@angular/common/http","@angular/common","@tibco-tcstk/tc-core-lib","rxjs/operators"],t):t(((e=e||self)["tibco-tcstk"]=e["tibco-tcstk"]||{},e["tibco-tcstk"]["tc-forms-lib"]={}),e.ng.core,e.angular6JsonSchemaForm,e.ng.router,e.ng.material,e.ng.forms,e.ng["flex-layout"],e.ng.cdk.scrolling,e.ng.platformBrowser.animations,e.ng.platformBrowser,e.ng.common.http,e.ng.common,e.tcCoreLib,e.rxjs.operators)}(this,function(e,t,o,r,a,n,u,s,i,l,m,c,f,d){"use strict";var p=function(){function e(){}return e.prototype.deserialize=function(e){return Object.assign(this,e),this},e}(),h=function(){function e(e){var o=this;this.route=e,this.schema={},this.layout=[],this.data={},this.formSubmit=new t.EventEmitter,this.formData={},this.submitForm=function(e){o.formSubmit.emit(e)},this.handleLayoutOutput=function(e){console.log("Layout:"),console.log(JSON.stringify(e))}}return e.prototype.ngOnInit=function(){},e.prototype.ngOnChanges=function(e){if(this.customFormDefs&&e.formRef&&e.formRef.currentValue&&e.formRef.currentValue!==e.formRef.previousValue&&(this.useCustomForm=-1!==this.customFormDefs.customForms.findIndex(function(t){return t===e.formRef.currentValue})),e.schema&&e.schema.currentValue&&e.schema.currentValue!==e.schema.previousValue){var t=e.schema.currentValue;e.schema.currentValue.$schema&&delete t.$schema,this.formSchema=t,console.log(JSON.stringify(this.formSchema))}e.data&&e.data.currentValue&&e.data.currentValue!==e.data.previousValue&&(this.formData=this.data,console.log("Initial Form Data:"),console.log(this.formData),console.log(JSON.stringify(this.formData))),e.layout&&e.layout.currentValue&&e.layout.currentValue!==e.layout.previousValue&&(this.formLayout=this.layout)},e.decorators=[{type:t.Component,args:[{selector:"tcfrm-rendered-form",template:'<div fxFill fxLayout="row" fxLayoutAlign = "center start">\n  <div class="tcs-rendered-form">\n    <json-schema-form #renderedForm *ngIf="!useCustomForm && formSchema"\n      loadExternalAssets="false"\n      framework="material-design"\n      [schema]="formSchema"\n      [layout]="formLayout"\n      [(data)]="formData"\n      [options]="options"\n      (onSubmit)="submitForm($event)"\n      (formLayout)="handleLayoutOutput($event)"\n    >\n    </json-schema-form>\n\n    \x3c!-- form-app="\'\'" - this is to work around an issue where the element doesnt display the form properly unless we pass in an additional input - angular bug? --\x3e\n    <custom-form *ngIf="useCustomForm && formRef && formData && appId" form-app="\'\'" [formRef]="formRef" [caseRef]="caseRef" [appId]="appId" [data]="formData" (formSubmitted)="submitForm($event.detail)"></custom-form>\n    <span *ngIf="!formSchema && !useCustomForm">A form cannot be generated as no schema is available. Use a supported form or register a custom form app.</span>\n  </div>\n</div>\n',styles:[".tcs-rendered-form{box-shadow:0 2px 8px 0 #dedede;background-color:#fff;width:100%;padding:20px}"]}]}],e.ctorParameters=function(){return[{type:r.ActivatedRoute}]},e.propDecorators={schema:[{type:t.Input}],layout:[{type:t.Input}],data:[{type:t.Input}],options:[{type:t.Input}],formRef:[{type:t.Input}],caseRef:[{type:t.Input}],appId:[{type:t.Input}],customFormDefs:[{type:t.Input}],formSubmit:[{type:t.Output}]},e}(),g=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{declarations:[h],imports:[l.BrowserModule,i.BrowserAnimationsModule,u.FlexLayoutModule,n.FormsModule,a.MatButtonModule,a.MatCardModule,a.MatCheckboxModule,a.MatIconModule,a.MatMenuModule,a.MatSelectModule,a.MatToolbarModule,o.MaterialDesignFrameworkModule,a.MatButtonModule,a.MatCardModule,a.MatCheckboxModule,a.MatListModule,a.MatFormFieldModule,a.MatInputModule,a.MatIconModule,a.MatSelectModule,a.MatOptionModule,a.MatDialogModule,a.MatMenuModule,a.MatCardModule,a.MatTooltipModule,n.FormsModule,u.FlexLayoutModule,s.ScrollingModule,n.FormsModule,n.ReactiveFormsModule],schemas:[t.CUSTOM_ELEMENTS_SCHEMA],exports:[h],entryComponents:[]}]}],e}(),M=function(){function e(e,t){this.http=e,this.location=t,this.CUSTOM_FORMS_CONFIG_URL="assets/config/customForms.json"}return e.prototype.resolve=function(){var e=(new m.HttpHeaders).set("cacheResponse","true");return this.http.get(f.TcCoreCommonFunctions.prepareUrlForStaticResource(this.location,this.CUSTOM_FORMS_CONFIG_URL),{headers:e}).pipe(d.map(function(e){return(new p).deserialize(e)}))},e.decorators=[{type:t.Injectable}],e.ctorParameters=function(){return[{type:m.HttpClient},{type:c.Location}]},e}();e.CustomFormDefs=p,e.FormResolver=M,e.RenderedFormComponent=h,e.TcFormsLibModule=g,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=tibco-tcstk-tc-forms-lib.umd.min.js.map