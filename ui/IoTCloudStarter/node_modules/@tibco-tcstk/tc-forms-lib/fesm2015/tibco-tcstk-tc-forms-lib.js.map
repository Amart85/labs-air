{"version":3,"file":"tibco-tcstk-tc-forms-lib.js","sources":["ng://@tibco-tcstk/tc-forms-lib/lib/models/tc-custom-forms.ts","ng://@tibco-tcstk/tc-forms-lib/lib/components/rendered-form/rendered-form.component.ts","ng://@tibco-tcstk/tc-forms-lib/lib/tc-forms-lib.module.ts","ng://@tibco-tcstk/tc-forms-lib/lib/resolvers/form.resolver.ts"],"sourcesContent":["import {Deserializable} from '@tibco-tcstk/tc-core-lib';\n\nexport class CustomFormDefs implements Deserializable {\n  customForms: string[];\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n","/**\n * @ngdoc component\n * @name RenderedFormComponent\n *\n * @description\n * `<tcfrm-rendered-form>` is a component providing the ability to reneder a form using the third party angular6-json-form library.\n *\n * @usage\n *\n * This component is used by tc--liveapps-lib to render forms based on a JSON schema that is supplied by the liveapps API\n *\n * It is located into this dedicated library to make it easier to plug in an alternative form rendering library\n *\n */\n\nimport {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {JsonSchemaFormComponent, MaterialDesignFrameworkModule} from 'angular6-json-schema-form';\nimport {ActivatedRoute} from '@angular/router';\nimport {CustomFormDefs} from '../../models/tc-custom-forms';\n\n@Component({\n  selector: 'tcfrm-rendered-form',\n  templateUrl: './rendered-form.component.html',\n  styleUrls: ['./rendered-form.component.css']\n})\nexport class RenderedFormComponent implements OnInit, OnChanges {\n  @Input() schema: any = {};\n  @Input() layout: any[] = [];\n  @Input() data: any = {};\n  @Input() options: any[];\n  @Input() formRef: string;\n  @Input() caseRef: string;\n  @Input() appId: string;\n  @Input() customFormDefs: CustomFormDefs;\n  /**\n   * ~event formSubmit : form submitted\n   * ~payload any : data submitted from the form on submit (type=any)\n   */\n  @Output() formSubmit: EventEmitter<any> = new EventEmitter<any>();\n\n  formSchema: any;\n  formLayout: any[];\n  formData: any = {};\n  test: string;\n  useCustomForm: boolean;\n\n  submitForm = (data: any) => {\n    this.formSubmit.emit(data);\n  }\n\n  handleLayoutOutput = (layout: any) => {\n    console.log('Layout:');\n    console.log(JSON.stringify(layout));\n  }\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // handle input param changes\n    if (this.customFormDefs && changes.formRef && changes.formRef.currentValue && (changes.formRef.currentValue !== changes.formRef.previousValue)) {\n      // check if this is a custom form\n      this.useCustomForm = (this.customFormDefs.customForms.findIndex((form) => {\n        return (form === changes.formRef.currentValue);\n      }) !== -1);\n    }\n    if (changes.schema && changes.schema.currentValue && (changes.schema.currentValue !== changes.schema.previousValue)) {\n      const tmpSchema = changes.schema.currentValue;\n      // json-schema-form doesnt like the $schema and wont parse the schema if it is present. So remove it.\n      if (changes.schema.currentValue.$schema) {\n        delete tmpSchema.$schema;\n      }\n      this.formSchema = tmpSchema;\n      console.log(JSON.stringify(this.formSchema));\n    }\n    if (changes.data && changes.data.currentValue && (changes.data.currentValue !== changes.data.previousValue)) {\n      this.formData = this.data;\n      console.log('Initial Form Data:');\n      console.log(this.formData);\n      console.log(JSON.stringify(this.formData));\n    }\n    if (changes.layout && changes.layout.currentValue && (changes.layout.currentValue !== changes.layout.previousValue)) {\n      this.formLayout = this.layout;\n    }\n  }\n\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { MaterialDesignFrameworkModule } from 'angular6-json-schema-form';\nimport {RenderedFormComponent} from './components/rendered-form/rendered-form.component';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule, MatDialogModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule, MatMenuModule, MatOptionModule, MatSelectModule, MatToolbarModule, MatTooltipModule\n} from '@angular/material';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {BrowserModule} from '@angular/platform-browser';\n\n@NgModule({\n  declarations: [\n    RenderedFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    FormsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MaterialDesignFrameworkModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatCardModule,\n    MatTooltipModule,\n    FormsModule,\n    FlexLayoutModule,\n    ScrollingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA],\n  exports: [\n    RenderedFormComponent\n  ],\n  entryComponents: [\n  ]\n})\nexport class TcFormsLibModule { }\n","import {Injectable} from '@angular/core';\nimport {Resolve} from '@angular/router';\nimport {Observable} from 'rxjs';\n\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Location} from '@angular/common';\nimport {TcCoreCommonFunctions} from '@tibco-tcstk/tc-core-lib';\nimport {map} from 'rxjs/operators';\nimport {CustomFormDefs} from '../models/tc-custom-forms';\n\n@Injectable()\nexport class FormResolver implements Resolve<Observable<CustomFormDefs>> {\n\n  CUSTOM_FORMS_CONFIG_URL = 'assets/config/customForms.json';\n\n  constructor(private http: HttpClient, private location: Location) {\n  }\n\n  resolve(): Observable<CustomFormDefs> {\n    const headers = new HttpHeaders().set('cacheResponse', 'true');\n    return this.http.get(TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, this.CUSTOM_FORMS_CONFIG_URL), { headers }).pipe(\n      map(formsConfig => {\n        return new CustomFormDefs().deserialize(formsConfig);\n      })\n    );\n  }\n\n}\n"],"names":[],"mappings":"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"}