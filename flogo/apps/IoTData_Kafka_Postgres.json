{
    "imports": [
        "github.com/project-flogo/flow",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
        "git.tibco.com/git/product/ipaas/wi-postgres.git/src/app/PostgreSQL/activity/insert",
        "github.com/project-flogo/flow/activity/subflow",
        "github.com/project-flogo/contrib/activity/actreturn",
        "git.tibco.com/git/product/ipaas/wi-plugins.git/contributions/kafka/src/app/Kafka/trigger/consumer",
        "github.com/project-flogo/contrib/function/array",
        "github.com/project-flogo/contrib/function/string",
        "github.com/project-flogo/contrib/function/datetime",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/function/float"
    ],
    "name": "IoTData_Kafka_Postgres",
    "description": " ",
    "version": "1.1.0",
    "type": "flogo:app",
    "appModel": "1.1.1",
    "feVersion": "2.8.1",
    "triggers": [
        {
            "ref": "#consumer",
            "name": "tibco-kafka-consumer-trigger",
            "description": "",
            "settings": {
                "kafkaConnection": {
                    "id": "953c2730-5383-11ea-a293-73298142a997",
                    "type": "flogo:connector",
                    "version": "1.1.1",
                    "name": "tibco-kafka",
                    "hashTags": [],
                    "inputMappings": {},
                    "outputMappings": {},
                    "iteratorMappings": {},
                    "title": "Apache Kafka Client Configuration",
                    "description": "",
                    "ref": "git.tibco.com/git/product/ipaas/wi-plugins.git/contributions/kafka/src/app/Kafka/connector/kafka",
                    "settings": [
                        {
                            "name": "name",
                            "type": "string",
                            "required": true,
                            "display": {
                                "name": "Name",
                                "description": "Name of the configuration"
                            },
                            "value": "IoTKafka"
                        },
                        {
                            "name": "description",
                            "type": "string",
                            "display": {
                                "name": "Description",
                                "description": "Connection description"
                            },
                            "value": "Apache Kafka client configuration"
                        },
                        {
                            "name": "brokers",
                            "type": "string",
                            "required": true,
                            "display": {
                                "name": "Brokers",
                                "description": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster",
                                "appPropertySupport": true
                            },
                            "value": "=$property[\"Kafka.IoTKafka.Brokers\"]"
                        },
                        {
                            "name": "authMode",
                            "type": "string",
                            "display": {
                                "name": "Auth Mode",
                                "description": "Choose authentication mode to connect to Kafka cluster"
                            },
                            "allowed": [
                                "None",
                                "SASL/PLAIN",
                                "SSL"
                            ],
                            "value": "None"
                        },
                        {
                            "name": "userName",
                            "type": "string",
                            "required": true,
                            "display": {
                                "name": "User Name",
                                "visible": false,
                                "description": "User name for SASL authentication",
                                "appPropertySupport": true,
                                "readonly": false,
                                "valid": true
                            },
                            "value": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "required": true,
                            "display": {
                                "name": "Password",
                                "type": "password",
                                "visible": false,
                                "description": "Password for SASL authentication",
                                "appPropertySupport": true,
                                "readonly": false,
                                "valid": true
                            },
                            "value": "SECRET:oeV3a+MFXNqT03op7nLIkw=="
                        },
                        {
                            "name": "clientCert",
                            "type": "string",
                            "display": {
                                "description": "A PEM encoded certificate file",
                                "name": "Client Certificate",
                                "visible": false,
                                "type": "fileselector",
                                "fileExtensions": [
                                    ".pem",
                                    ".cert",
                                    ".cer",
                                    ".crt"
                                ],
                                "readonly": false,
                                "valid": true
                            },
                            "value": ""
                        },
                        {
                            "name": "clientKey",
                            "type": "string",
                            "display": {
                                "description": "A PEM encoded private key file",
                                "name": "Client Key",
                                "visible": false,
                                "type": "fileselector",
                                "fileExtensions": [
                                    ".pem",
                                    ".cert",
                                    ".cer",
                                    ".crt",
                                    ".key"
                                ],
                                "readonly": false,
                                "valid": true
                            },
                            "value": ""
                        },
                        {
                            "name": "caCert",
                            "type": "string",
                            "display": {
                                "description": "A PEM encoded CA or Server certificate file",
                                "name": "CA or Server Certificate",
                                "visible": false,
                                "type": "fileselector",
                                "fileExtensions": [
                                    ".pem",
                                    ".cert",
                                    ".cer",
                                    ".crt"
                                ],
                                "readonly": false,
                                "valid": true
                            },
                            "value": ""
                        },
                        {
                            "name": "connectionTimeout",
                            "type": "integer",
                            "display": {
                                "name": "Connection Timeout",
                                "description": "The amount of time in seconds to wait for the initial connection",
                                "appPropertySupport": true
                            },
                            "value": "=$property[\"Kafka.IoTKafka.Connection_Timeout\"]"
                        },
                        {
                            "name": "retryBackoff",
                            "type": "integer",
                            "display": {
                                "name": "Retry Backoff",
                                "description": "The amount of time in milliseconds to wait for leader election to occur before retrying",
                                "appPropertySupport": true
                            },
                            "value": "=$property[\"Kafka.IoTKafka.Retry_Backoff\"]"
                        },
                        {
                            "name": "retryMax",
                            "type": "integer",
                            "display": {
                                "name": "Max Retry",
                                "description": "The total number of times to retry a metadata request when the cluster is in the middle of a leader election"
                            },
                            "value": 3
                        },
                        {
                            "name": "refreshFrequency",
                            "type": "integer",
                            "display": {
                                "name": "Refresh Frequency",
                                "description": "The amount of time in seconds after which metadata is refreshed in the background. Set 0 to disable it."
                            },
                            "value": 40
                        }
                    ],
                    "outputs": [],
                    "inputs": [],
                    "handler": {
                        "settings": []
                    },
                    "reply": [],
                    "s3Prefix": "Tibco",
                    "key": "Tibco/Kafka/connector/kafka/connector.json",
                    "display": {
                        "category": "Kafka",
                        "smallIcon": "icons/kafka.png",
                        "largeIcon": "icons/kafka.png"
                    },
                    "actions": [
                        {
                            "name": "Save",
                            "display": {
                                "readonly": false,
                                "valid": true,
                                "visible": true
                            }
                        }
                    ],
                    "feature": {},
                    "loopType": "none",
                    "loopSettings": [],
                    "retrySettings": [],
                    "propertyMap": {},
                    "keyfield": "name",
                    "iteratorAccumulate": false,
                    "isValid": true,
                    "lastUpdatedTime": 1582205006184,
                    "user": "flogo",
                    "connectorName": "IoTKafka",
                    "connectorDescription": "Apache Kafka client configuration"
                }
            },
            "id": "KafkaConsumer",
            "handlers": [
                {
                    "description": "",
                    "settings": {
                        "topic": "=$property[\"KafkaTrigger.Topic\"]",
                        "consumerGroup": "=$property[\"KafkaTrigger.ConsumerGroupId\"]",
                        "valueType": "JSON",
                        "commitInterval": "=$property[\"KafkaTrigger.CommitInterval\"]",
                        "initialOffset": "=$property[\"KafkaTrigger.InitialOffset\"]",
                        "fetchMinBytes": "=$property[\"KafkaTrigger.FetchMinBytes\"]",
                        "fetchMaxWait": "=$property[\"KafkaTrigger.FetchMaxWait\"]",
                        "heartbeatInterval": "=$property[\"KafkaTrigger.HeartbeatInterval\"]",
                        "sessionTimeout": "=$property[\"KafkaTrigger.SessionTimeout\"]"
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:IoTDataSubPublishToPostgres"
                        },
                        "input": {
                            "jsonValue": "=$.jsonValue"
                        }
                    },
                    "schemas": {
                        "output": {
                            "jsonValue": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"pushed\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"created\":{\"type\":\"number\"},\"modified\":{\"type\":\"number\"},\"origin\":{\"type\":\"number\"},\"schedule\":{\"type\":\"null\"},\"event\":{\"type\":\"null\"},\"gateway\":{\"type\":\"string\"},\"readings\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"pushed\":{\"type\":\"number\"},\"created\":{\"type\":\"number\"},\"origin\":{\"type\":\"number\"},\"modified\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}}}}",
                                "fe_metadata": "{\n   \"id\":\"5c5f4beb0e3608000114b459\",\n   \"pushed\":0,\n   \"device\":\"ArgonParticle01\",\n   \"created\":1549749227499,\n   \"modified\":0,\n   \"origin\":0,\n   \"schedule\":null,\n   \"event\":null,\n   \"gateway\":\"gtwyname\",\n   \"readings\":[\n      {\n         \"id\":\"5c5f4beb0e3608000114b45a\",\n         \"pushed\":0,\n         \"created\":1549749227499,\n         \"origin\":1549749227486,\n         \"modified\":0,\n         \"device\":\"ArgonParticle01\",\n         \"name\":\"LightSensor\",\n         \"value\":\"1080\"\n      }\n   ]\n}"
                            }
                        }
                    }
                }
            ]
        }
    ],
    "resources": [
        {
            "id": "flow:IoTDataSubPublishToPostgres",
            "data": {
                "name": "IoTDataSubPublishToPostgres",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "PostgreSQLInsert",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "PostgreSQLInsert",
                        "to": "SaveInstrument",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "SaveInstrument",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=\"Received Msg: \" + $flow.jsonValue"
                            }
                        }
                    },
                    {
                        "id": "PostgreSQLInsert",
                        "name": "PostgreSQLInsert",
                        "description": "This activity executes insert on a PostgreSQL database",
                        "type": "iterator",
                        "settings": {
                            "iterate": "=$flow.jsonValue.readings",
                            "accumulate": false
                        },
                        "activity": {
                            "ref": "#insert",
                            "input": {
                                "Connection": {
                                    "id": "ab65ac00-3977-11ea-815e-f1dc5fe42c50",
                                    "type": "flogo:connector",
                                    "version": "2.1.0",
                                    "name": "postgresql-connector",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "PostgreSQL Connector",
                                    "description": "Connector to connect to a PostgreSQL database server",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-postgres.git/src/app/PostgreSQL/connector/connection",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "value": "IoTPostgres"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "host",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Host",
                                                "description": "PostgreSQL Database Host name",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.IoTPostgres.Host\"]"
                                        },
                                        {
                                            "name": "port",
                                            "type": "integer",
                                            "required": true,
                                            "value": "=$property[\"PostgreSQL.IoTPostgres.Port\"]",
                                            "display": {
                                                "name": "Port",
                                                "description": "PostgreSQL Database Port",
                                                "type": "integer",
                                                "visible": true,
                                                "appPropertySupport": true
                                            }
                                        },
                                        {
                                            "name": "databaseName",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Database Name",
                                                "description": "Name of the Database",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.IoTPostgres.Database_Name\"]"
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "User",
                                                "description": "Name of the Database User",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.IoTPostgres.User\"]"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Password",
                                                "description": "PostgreSQL Database Port",
                                                "type": "password",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.IoTPostgres.Password\"]"
                                        },
                                        {
                                            "name": "onprem",
                                            "type": "boolean",
                                            "required": true,
                                            "value": false,
                                            "display": {
                                                "name": "On Premise DBService",
                                                "description": "Flag to indicate that the dbsevice is accessed via a tibtunnel",
                                                "visible": false,
                                                "readonly": false,
                                                "valid": true
                                            }
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/PostgreSQL/connector/connection/connector.json",
                                    "display": {
                                        "description": "Connector to connect to a PostgreSQL database server",
                                        "category": "PostgreSQL",
                                        "visible": true,
                                        "smallIcon": "icons/ic-postgres-connection@2x.png",
                                        "largeIcon": "icons/ic-postgres-connection@3x.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect"
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1583340119215,
                                    "user": "flogo",
                                    "connectorName": "IoTPostgres",
                                    "connectorDescription": " "
                                },
                                "QueryName": "",
                                "Query": "INSERT INTO READINGS (ID, CREATED, GATEWAYID, DEVICEID, RESOURCEID, VALUE) VALUES (?id, ?created, ?gatewayid, ?deviceid, ?resourceid, ?value);",
                                "Fields": [
                                    {
                                        "FieldName": "resourceid",
                                        "Type": "VARCHAR",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Value": true
                                    },
                                    {
                                        "FieldName": "value",
                                        "Type": "VARCHAR",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Value": true
                                    },
                                    {
                                        "FieldName": "id",
                                        "Type": "VARCHAR",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Value": true
                                    },
                                    {
                                        "FieldName": "created",
                                        "Type": "TIMESTAMP",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Value": true
                                    },
                                    {
                                        "FieldName": "gatewayid",
                                        "Type": "VARCHAR",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Value": true
                                    },
                                    {
                                        "FieldName": "deviceid",
                                        "Type": "VARCHAR",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Value": true
                                    }
                                ],
                                "State": "d897cb7d-713b-46ce-92b4-039d3fb10cbcINSERT INTO READINGS (ID, CREATED, GATEWAYID, DEVICEID, RESOURCEID, VALUE) VALUES (?id, ?created, ?gatewayid, ?deviceid, ?resourceid, ?value);",
                                "input": {
                                    "mapping": {
                                        "values": [
                                            {
                                                "gatewayid": "=$flow.jsonValue.gateway",
                                                "resourceid": "=$iteration[value].name",
                                                "value": "=$iteration[value].name",
                                                "id": "=$iteration[value].id",
                                                "created": "=datetime.formatDatetime(string.tostring($iteration[value].created), \"YYYY-MM-DD HH:mm:ss\")",
                                                "deviceid": "=$iteration[value].device"
                                            }
                                        ]
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"resourceid\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"id\":{\"type\":\"string\"},\"created\":{\"type\":\"string\",\"format\":\"time\"},\"gatewayid\":{\"type\":\"string\"},\"deviceid\":{\"type\":\"string\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"resourceid\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"id\":{\"type\":\"string\"},\"created\":{\"type\":\"string\",\"format\":\"time\"},\"gatewayid\":{\"type\":\"string\"},\"deviceid\":{\"type\":\"string\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{}}}}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "SaveInstrument",
                        "name": "SaveInstrument",
                        "description": "Simple SubFlow Activity",
                        "type": "iterator",
                        "settings": {
                            "iterate": "=$flow.jsonValue.readings",
                            "accumulate": false
                        },
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:SaveInstrument"
                            },
                            "input": {
                                "reading": {
                                    "mapping": {
                                        "id": "=$iteration[value].id",
                                        "pushed": "=$iteration[value].pushed",
                                        "created": "=$iteration[value].created",
                                        "origin": "=$iteration[value].origin",
                                        "modified": "=$iteration[value].modified",
                                        "device": "=$iteration[value].device",
                                        "name": "=$iteration[value].name",
                                        "value": "=$iteration[value].value"
                                    }
                                },
                                "gateway": "=$flow.jsonValue.gateway"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"title\":\"ReceiveReading\",\"properties\":{\"gateway\":{\"type\":\"string\"},\"reading\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"pushed\":{\"type\":\"number\"},\"created\":{\"type\":\"number\"},\"origin\":{\"type\":\"number\"},\"modified\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\"type\":\"object\",\"title\":\"ReceiveReading\",\"properties\":{\"gateway\":{\"type\":\"string\"},\"reading\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"pushed\":{\"type\":\"number\"},\"created\":{\"type\":\"number\"},\"origin\":{\"type\":\"number\"},\"modified\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn"
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "topic",
                            "type": "string"
                        },
                        {
                            "name": "partition",
                            "type": "integer"
                        },
                        {
                            "name": "offset",
                            "type": "integer"
                        },
                        {
                            "name": "key",
                            "type": "string"
                        },
                        {
                            "name": "jsonValue",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"id\":{\"type\":\"string\"},\"pushed\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"created\":{\"type\":\"number\"},\"modified\":{\"type\":\"number\"},\"origin\":{\"type\":\"number\"},\"schedule\":{\"type\":\"null\"},\"event\":{\"type\":\"null\"},\"gateway\":{\"type\":\"string\"},\"readings\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"pushed\":{\"type\":\"number\"},\"created\":{\"type\":\"number\"},\"origin\":{\"type\":\"number\"},\"modified\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "output": [],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"KafkaConsumer\",\"properties\":{\"topic\":{\"type\":\"string\",\"required\":false},\"partition\":{\"type\":\"integer\",\"required\":false},\"offset\":{\"type\":\"integer\",\"required\":false},\"key\":{\"type\":\"string\",\"required\":false},\"jsonValue\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"pushed\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"created\":{\"type\":\"number\"},\"modified\":{\"type\":\"number\"},\"origin\":{\"type\":\"number\"},\"schedule\":{\"type\":\"null\"},\"event\":{\"type\":\"null\"},\"gateway\":{\"type\":\"string\"},\"readings\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"pushed\":{\"type\":\"number\"},\"created\":{\"type\":\"number\"},\"origin\":{\"type\":\"number\"},\"modified\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}}}}}}"
                    }
                },
                "explicitReply": true
            }
        },
        {
            "id": "flow:SaveInstrument",
            "data": {
                "name": "SaveInstrument",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "LogMessageNumber",
                        "type": "expression",
                        "label": "LogMessageto",
                        "value": "string.matchRegEx(\"^(-?\\d+\\.\\d+)$|^(-?\\d+)$\", $flow.reading.value)"
                    },
                    {
                        "id": 2,
                        "from": "LogMessageNumber",
                        "to": "InsertReadingNumeric",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "InsertReadingNumeric",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogMessage",
                        "to": "LogMessageString",
                        "type": "exprOtherwise",
                        "label": "LogMessage to "
                    },
                    {
                        "id": 5,
                        "from": "LogMessageString",
                        "to": "InsertReadingString",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "InsertReadingString",
                        "to": "Return1",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "Saving Reading"
                            }
                        }
                    },
                    {
                        "id": "LogMessageNumber",
                        "name": "LogMessageNumber",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "Saving Reading Number"
                            }
                        }
                    },
                    {
                        "id": "InsertReadingNumeric",
                        "name": "InsertReadingNumeric",
                        "description": "This activity executes insert on a PostgreSQL database",
                        "activity": {
                            "ref": "#insert",
                            "input": {
                                "Connection": {
                                    "id": "ab65ac00-3977-11ea-815e-f1dc5fe42c50",
                                    "type": "flogo:connector",
                                    "version": "2.1.0",
                                    "name": "postgresql-connector",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "PostgreSQL Connector",
                                    "description": "Connector to connect to a PostgreSQL database server",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-postgres.git/src/app/PostgreSQL/connector/connection",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "value": "IoTPostgres"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "host",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Host",
                                                "description": "PostgreSQL Database Host name",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.IoTPostgres.Host\"]"
                                        },
                                        {
                                            "name": "port",
                                            "type": "integer",
                                            "required": true,
                                            "value": "=$property[\"PostgreSQL.IoTPostgres.Port\"]",
                                            "display": {
                                                "name": "Port",
                                                "description": "PostgreSQL Database Port",
                                                "type": "integer",
                                                "visible": true,
                                                "appPropertySupport": true
                                            }
                                        },
                                        {
                                            "name": "databaseName",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Database Name",
                                                "description": "Name of the Database",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.IoTPostgres.Database_Name\"]"
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "User",
                                                "description": "Name of the Database User",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.IoTPostgres.User\"]"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Password",
                                                "description": "PostgreSQL Database Port",
                                                "type": "password",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.IoTPostgres.Password\"]"
                                        },
                                        {
                                            "name": "onprem",
                                            "type": "boolean",
                                            "required": true,
                                            "value": false,
                                            "display": {
                                                "name": "On Premise DBService",
                                                "description": "Flag to indicate that the dbsevice is accessed via a tibtunnel",
                                                "visible": false,
                                                "readonly": false,
                                                "valid": true
                                            }
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/PostgreSQL/connector/connection/connector.json",
                                    "display": {
                                        "description": "Connector to connect to a PostgreSQL database server",
                                        "category": "PostgreSQL",
                                        "visible": true,
                                        "smallIcon": "icons/ic-postgres-connection@2x.png",
                                        "largeIcon": "icons/ic-postgres-connection@3x.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect"
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1583340119215,
                                    "user": "flogo",
                                    "connectorName": "IoTPostgres",
                                    "connectorDescription": " "
                                },
                                "QueryName": "",
                                "Query": "INSERT INTO READINGS_NUMERIC (ID, CREATED, GATEWAYID, DEVICEID, RESOURCEID, VALUE) VALUES (?id, ?created, ?gatewayid, ?deviceid, ?resourceid, ?value);",
                                "Fields": [
                                    {
                                        "FieldName": "id",
                                        "Type": "VARCHAR",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Value": true
                                    },
                                    {
                                        "FieldName": "created",
                                        "Type": "TIMESTAMP",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Value": true
                                    },
                                    {
                                        "FieldName": "gatewayid",
                                        "Type": "VARCHAR",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Value": true
                                    },
                                    {
                                        "FieldName": "deviceid",
                                        "Type": "VARCHAR",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Value": true
                                    },
                                    {
                                        "FieldName": "resourceid",
                                        "Type": "VARCHAR",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Value": true
                                    },
                                    {
                                        "FieldName": "value",
                                        "Type": "NUMERIC",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Value": true
                                    }
                                ],
                                "State": "a091b5f6-c22e-4b09-a5aa-6e683fbba080INSERT INTO READINGS_NUMERIC (ID, CREATED, GATEWAYID, DEVICEID, RESOURCEID, VALUE) VALUES (?id, ?created, ?gatewayid, ?deviceid, ?resourceid, ?value);",
                                "input": {
                                    "mapping": {
                                        "values": [
                                            {
                                                "gatewayid": "=$flow.gateway",
                                                "created": "=datetime.formatDatetime(string.tostring($flow.reading.created), \"YYYY-MM-DD HH:mm:ss\")",
                                                "deviceid": "=$flow.reading.device",
                                                "resourceid": "=$flow.reading.name",
                                                "value": "=float.float64($flow.reading.value, 2)",
                                                "id": "=$flow.reading.id"
                                            }
                                        ]
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"created\":{\"type\":\"string\",\"format\":\"time\"},\"gatewayid\":{\"type\":\"string\"},\"deviceid\":{\"type\":\"string\"},\"resourceid\":{\"type\":\"string\"},\"value\":{\"type\":\"number\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"created\":{\"type\":\"string\",\"format\":\"time\"},\"gatewayid\":{\"type\":\"string\"},\"deviceid\":{\"type\":\"string\"},\"resourceid\":{\"type\":\"string\"},\"value\":{\"type\":\"number\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{}}}}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn"
                        }
                    },
                    {
                        "id": "LogMessageString",
                        "name": "LogMessageString",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "Saving Reading String"
                            }
                        }
                    },
                    {
                        "id": "InsertReadingString",
                        "name": "InsertReadingString",
                        "description": "This activity executes insert on a PostgreSQL database",
                        "activity": {
                            "ref": "#insert",
                            "input": {
                                "Connection": {
                                    "id": "ab65ac00-3977-11ea-815e-f1dc5fe42c50",
                                    "type": "flogo:connector",
                                    "version": "2.1.0",
                                    "name": "postgresql-connector",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "PostgreSQL Connector",
                                    "description": "Connector to connect to a PostgreSQL database server",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-postgres.git/src/app/PostgreSQL/connector/connection",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "value": "IoTPostgres"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "host",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Host",
                                                "description": "PostgreSQL Database Host name",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.IoTPostgres.Host\"]"
                                        },
                                        {
                                            "name": "port",
                                            "type": "integer",
                                            "required": true,
                                            "value": "=$property[\"PostgreSQL.IoTPostgres.Port\"]",
                                            "display": {
                                                "name": "Port",
                                                "description": "PostgreSQL Database Port",
                                                "type": "integer",
                                                "visible": true,
                                                "appPropertySupport": true
                                            }
                                        },
                                        {
                                            "name": "databaseName",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Database Name",
                                                "description": "Name of the Database",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.IoTPostgres.Database_Name\"]"
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "User",
                                                "description": "Name of the Database User",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.IoTPostgres.User\"]"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Password",
                                                "description": "PostgreSQL Database Port",
                                                "type": "password",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.IoTPostgres.Password\"]"
                                        },
                                        {
                                            "name": "onprem",
                                            "type": "boolean",
                                            "required": true,
                                            "value": false,
                                            "display": {
                                                "name": "On Premise DBService",
                                                "description": "Flag to indicate that the dbsevice is accessed via a tibtunnel",
                                                "visible": false,
                                                "readonly": false,
                                                "valid": true
                                            }
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/PostgreSQL/connector/connection/connector.json",
                                    "display": {
                                        "description": "Connector to connect to a PostgreSQL database server",
                                        "category": "PostgreSQL",
                                        "visible": true,
                                        "smallIcon": "icons/ic-postgres-connection@2x.png",
                                        "largeIcon": "icons/ic-postgres-connection@3x.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect"
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1583340119215,
                                    "user": "flogo",
                                    "connectorName": "IoTPostgres",
                                    "connectorDescription": " "
                                },
                                "QueryName": "",
                                "Query": "INSERT INTO READINGS_STRING (ID, CREATED, GATEWAYID, DEVICEID, RESOURCEID, VALUE) VALUES (?id, ?created, ?gatewayid, ?deviceid, ?resourceid, ?value);",
                                "Fields": [
                                    {
                                        "FieldName": "resourceid",
                                        "Type": "VARCHAR",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Value": true
                                    },
                                    {
                                        "FieldName": "value",
                                        "Type": "VARCHAR",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Value": true
                                    },
                                    {
                                        "FieldName": "id",
                                        "Type": "VARCHAR",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Value": true
                                    },
                                    {
                                        "FieldName": "created",
                                        "Type": "TIMESTAMP",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Value": true
                                    },
                                    {
                                        "FieldName": "gatewayid",
                                        "Type": "VARCHAR",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Value": true
                                    },
                                    {
                                        "FieldName": "deviceid",
                                        "Type": "VARCHAR",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Value": true
                                    }
                                ],
                                "State": "adc60dc1-18ba-46a9-8ba8-b4816f9e785aINSERT INTO READINGS_STRING (ID, CREATED, GATEWAYID, DEVICEID, RESOURCEID, VALUE) VALUES (?id, ?created, ?gatewayid, ?deviceid, ?resourceid, ?value);",
                                "input": {
                                    "mapping": {
                                        "values": [
                                            {
                                                "value": "=$flow.reading.value",
                                                "id": "=$flow.reading.id",
                                                "created": "=datetime.formatDatetime(string.tostring($flow.reading.created), \"YYYY-MM-DD HH:mm:ss\")",
                                                "deviceid": "=$flow.reading.device",
                                                "resourceid": "=$flow.reading.name",
                                                "gatewayid": "=$flow.gateway"
                                            }
                                        ]
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"resourceid\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"id\":{\"type\":\"string\"},\"created\":{\"type\":\"string\",\"format\":\"time\"},\"gatewayid\":{\"type\":\"string\"},\"deviceid\":{\"type\":\"string\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"resourceid\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"id\":{\"type\":\"string\"},\"created\":{\"type\":\"string\",\"format\":\"time\"},\"gatewayid\":{\"type\":\"string\"},\"deviceid\":{\"type\":\"string\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{}}}}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return1",
                        "name": "Return1",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn"
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "gateway",
                            "type": "string"
                        },
                        {
                            "name": "reading",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"id\":{\"type\":\"string\"},\"pushed\":{\"type\":\"number\"},\"created\":{\"type\":\"number\"},\"origin\":{\"type\":\"number\"},\"modified\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "output": [],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"ReceiveReading\",\"properties\":{\"gateway\":{\"type\":\"string\"},\"reading\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"pushed\":{\"type\":\"number\"},\"created\":{\"type\":\"number\"},\"origin\":{\"type\":\"number\"},\"modified\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}}}"
                    }
                }
            }
        }
    ],
    "properties": [
        {
            "name": "Kafka.IoTKafka.Brokers",
            "type": "string",
            "value": "localhost:9092"
        },
        {
            "name": "Kafka.IoTKafka.Connection_Timeout",
            "type": "float64",
            "value": 30
        },
        {
            "name": "Kafka.IoTKafka.Retry_Backoff",
            "type": "float64",
            "value": 250
        },
        {
            "name": "KafkaTrigger.Topic",
            "type": "string",
            "value": "EdgexGatewayData"
        },
        {
            "name": "KafkaTrigger.ConsumerGroupId",
            "type": "string",
            "value": "PostgresGroup"
        },
        {
            "name": "KafkaTrigger.CommitInterval",
            "type": "float64",
            "value": 5000
        },
        {
            "name": "KafkaTrigger.InitialOffset",
            "type": "string",
            "value": "Oldest"
        },
        {
            "name": "KafkaTrigger.FetchMinBytes",
            "type": "float64",
            "value": 1
        },
        {
            "name": "KafkaTrigger.FetchMaxWait",
            "type": "float64",
            "value": 500
        },
        {
            "name": "KafkaTrigger.HeartbeatInterval",
            "type": "float64",
            "value": 3000
        },
        {
            "name": "KafkaTrigger.SessionTimeout",
            "type": "float64",
            "value": 30000
        },
        {
            "name": "PostgreSQL.IoTPostgres.Host",
            "type": "string",
            "value": "database-iot.cuop7paojpqq.us-east-1.rds.amazonaws.com"
        },
        {
            "name": "PostgreSQL.IoTPostgres.Port",
            "type": "float64",
            "value": 5432
        },
        {
            "name": "PostgreSQL.IoTPostgres.Database_Name",
            "type": "string",
            "value": "postgres"
        },
        {
            "name": "PostgreSQL.IoTPostgres.User",
            "type": "string",
            "value": "postgres"
        },
        {
            "name": "PostgreSQL.IoTPostgres.Password",
            "type": "string",
            "value": "SECRET:Z1DgjY7WTpiTFOIkaD36J6ONTWtMkqtdObs="
        }
    ],
    "connections": {},
    "contrib": "W3sicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1jb250cmliLmdpdC9jb250cmlidXRpb25zL0dlbmVyYWwiLCJzM2xvY2F0aW9uIjoiVGliY28vR2VuZXJhbCJ9LHsicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1wb3N0Z3Jlcy5naXQvc3JjL2FwcC9Qb3N0Z3JlU1FMIiwiczNsb2NhdGlvbiI6IlRpYmNvL1Bvc3RncmVTUUwifSx7InJlZiI6ImdpdC50aWJjby5jb20vZ2l0L3Byb2R1Y3QvaXBhYXMvd2ktcGx1Z2lucy5naXQvY29udHJpYnV0aW9ucy9rYWZrYS9zcmMvYXBwL0thZmthIiwiczNsb2NhdGlvbiI6IlRpYmNvL0thZmthIn1d",
    "fe_metadata": "UEsDBAoAAAAIACCXa1CrqSRGFQAAABMAAAAIAAAAYXBwLmpzb26rViopykxPTy1yy8kvL1ayio6tBQBQSwECFAAKAAAACAAgl2tQq6kkRhUAAAATAAAACAAAAAAAAAAAAAAAAAAAAAAAYXBwLmpzb25QSwUGAAAAAAEAAQA2AAAAOwAAAAAA"
}