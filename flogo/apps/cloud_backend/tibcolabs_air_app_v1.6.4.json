{
    "imports": [
        "github.com/project-flogo/flow",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
        "github.com/project-flogo/flow/activity/subflow",
        "git.tibco.com/git/product/ipaas/wi-postgres.git/src/app/PostgreSQL/activity/query",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/mapper",
        "git.tibco.com/git/product/ipaas/wi-postgres.git/src/app/PostgreSQL/activity/insert",
        "github.com/project-flogo/contrib/activity/actreturn",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/rest",
        "git.tibco.com/git/product/ipaas/wi-plugins.git/contributions/kafka/src/app/Kafka/activity/producer",
        "rest_1 git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/trigger/rest",
        "git.tibco.com/git/product/ipaas/wi-plugins.git/contributions/kafka/src/app/Kafka/trigger/consumer",
        "github.com/project-flogo/contrib/function/number",
        "github.com/project-flogo/contrib/function/string",
        "github.com/project-flogo/contrib/function/array",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/function/boolean",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/function/utility"
    ],
    "name": "tibcolabs_air_app_v1.6.4",
    "description": "  ",
    "version": "1.1.0",
    "type": "flogo:app",
    "appModel": "1.1.1",
    "triggers": [
        {
            "ref": "#rest_1",
            "name": "tibco-wi-rest",
            "description": "Simple REST Trigger",
            "settings": {
                "port": 9997,
                "secureConnection": false,
                "serverKey": "",
                "caCertificate": "",
                "swagger": ""
            },
            "id": "ReceiveHTTPMessage",
            "handlers": [
                {
                    "description": "",
                    "settings": {
                        "Method": "GET",
                        "Path": "/devices/{deviceid}/resources/{resourceid}/attrs/{attrname}",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:ConfigService"
                        },
                        "input": {
                            "method": "GET",
                            "resourceid": "=$.pathParams.resourceid",
                            "deviceid": "=$.pathParams.deviceid",
                            "attrname": "=$.pathParams.attrname"
                        },
                        "output": {
                            "code": "=$.code",
                            "data": "=$.data"
                        }
                    },
                    "reply": {
                        "code": 200,
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"deviceid\":{\"type\":\"string\"},\"resourceid\":{\"type\":\"string\"},\"attrname\":{\"type\":\"string\"},\"attrtype\":{\"type\":\"string\"},\"readwrite\":{\"type\":\"string\"},\"minimum\":{\"type\":\"number\"},\"maximum\":{\"type\":\"number\"},\"defaultvalue\":{\"type\":\"number\"},\"scale\":{\"type\":\"number\"},\"unittype\":{\"type\":\"string\"},\"unitreadwrite\":{\"type\":\"string\"},\"unitdefaultvalue\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"deviceid\": \"value\",\n    \"resourceid\": \"value\",\n    \"attrname\": \"value\",\n    \"attrtype\": \"value\",\n    \"readwrite\": \"RW\",\n    \"minimum\": 1,\n    \"maximum\": 3,\n    \"defaultvalue\": 2,\n    \"scale\": 1,\n    \"unittype\": \"string\",\n    \"unitreadwrite\": \"RW\",\n    \"unitdefaultvalue\": \"lunen\"\n}"
                            }
                        },
                        "output": {
                            "pathParams": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"deviceid\":{\"type\":\"string\"},\"resourceid\":{\"type\":\"string\"},\"attrname\":{\"type\":\"string\"}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"deviceid\",\"type\":\"string\"},{\"parameterName\":\"resourceid\",\"type\":\"string\"},{\"parameterName\":\"attrname\",\"type\":\"string\"}]"
                            },
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            },
                            "body": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"sensordatatype\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"sensordatatype\":\"value\"\n}"
                            }
                        }
                    }
                }
            ]
        },
        {
            "ref": "#rest_1",
            "name": "tibco-wi-rest",
            "description": "Simple REST Trigger",
            "settings": {
                "port": 9998,
                "secureConnection": false,
                "serverKey": "",
                "caCertificate": "",
                "swagger": ""
            },
            "id": "ReceiveHTTPMessage1",
            "handlers": [
                {
                    "description": "",
                    "settings": {
                        "Method": "POST",
                        "Path": "/devices/{deviceid}/resources/{resourceid}/attrs/{attrname}",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:ConfigService"
                        },
                        "input": {
                            "method": "POST",
                            "deviceid": "=$.pathParams.deviceid",
                            "resourceid": "=$.pathParams.resourceid",
                            "attrname": "=$.pathParams.attrname",
                            "attrtype": "=$.body.attrtype",
                            "readwrite": "=$.body.readwrite",
                            "minimum": "=$.body.minimum",
                            "maximum": "=$.body.maximum",
                            "defaultvalue": "=$.body.defaultvalue",
                            "scale": "=$.body.scale",
                            "unittype": "=$.body.unittype",
                            "unitreadwrite": "=$.body.unitreadwrite",
                            "unitdefaultvalue": "=$.body.unitdefaultvalue"
                        },
                        "output": {
                            "code": "=$.code",
                            "data": {
                                "mapping": {
                                    "message": "=$.message"
                                }
                            }
                        }
                    },
                    "reply": {
                        "code": 200,
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"message\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"message\":\"value\"\n}"
                            }
                        },
                        "output": {
                            "pathParams": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"deviceid\":{\"type\":\"string\"},\"resourceid\":{\"type\":\"string\"},\"attrname\":{\"type\":\"string\"}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"deviceid\",\"type\":\"string\"},{\"parameterName\":\"resourceid\",\"type\":\"string\"},{\"parameterName\":\"attrname\",\"type\":\"string\"}]"
                            },
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            },
                            "body": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"deviceid\":{\"type\":\"string\"},\"resourceid\":{\"type\":\"string\"},\"attrname\":{\"type\":\"string\"},\"attrtype\":{\"type\":\"string\"},\"readwrite\":{\"type\":\"string\"},\"minimum\":{\"type\":\"number\"},\"maximum\":{\"type\":\"number\"},\"defaultvalue\":{\"type\":\"number\"},\"scale\":{\"type\":\"number\"},\"unittype\":{\"type\":\"string\"},\"unitreadwrite\":{\"type\":\"string\"},\"unitdefaultvalue\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"deviceid\": \"value\",\n    \"resourceid\": \"value\",\n    \"attrname\": \"value\",\n    \"attrtype\": \"value\",\n    \"readwrite\": \"RW\",\n    \"minimum\": 1,\n    \"maximum\": 3,\n    \"defaultvalue\": 2,\n    \"scale\": 1,\n    \"unittype\": \"string\",\n    \"unitreadwrite\": \"RW\",\n    \"unitdefaultvalue\": \"lunen\"\n}"
                            }
                        }
                    }
                }
            ]
        },
        {
            "ref": "#consumer",
            "name": "tibco-kafka-consumer-trigger",
            "description": "",
            "settings": {
                "kafkaConnection": {
                    "id": "1e13f7c0-b200-11e9-920f-49d703a919c0",
                    "type": "flogo:connector",
                    "version": "1.1.2",
                    "name": "tibco-kafka",
                    "hashTags": [],
                    "inputMappings": {},
                    "outputMappings": {},
                    "iteratorMappings": {},
                    "title": "Apache Kafka Client Configuration",
                    "description": "",
                    "ref": "git.tibco.com/git/product/ipaas/wi-plugins.git/contributions/kafka/src/app/Kafka/connector/kafka",
                    "settings": [
                        {
                            "name": "name",
                            "type": "string",
                            "required": true,
                            "display": {
                                "name": "Name",
                                "description": "Name of the configuration"
                            },
                            "value": "tibcolabs-air-kafka"
                        },
                        {
                            "name": "description",
                            "type": "string",
                            "display": {
                                "name": "Description",
                                "description": "Connection description"
                            },
                            "value": "Apache Kafka client configuration"
                        },
                        {
                            "name": "brokers",
                            "type": "string",
                            "required": true,
                            "display": {
                                "name": "Brokers",
                                "description": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster",
                                "appPropertySupport": true
                            },
                            "value": "=$property[\"Kafka.tibcolabs-air-kafka.Brokers\"]"
                        },
                        {
                            "name": "authMode",
                            "type": "string",
                            "display": {
                                "name": "Auth Mode",
                                "description": "Choose authentication mode to connect to Kafka cluster"
                            },
                            "allowed": [
                                "None",
                                "SASL/PLAIN",
                                "SSL"
                            ],
                            "value": "None"
                        },
                        {
                            "name": "userName",
                            "type": "string",
                            "required": true,
                            "display": {
                                "name": "User Name",
                                "visible": false,
                                "description": "User name for SASL authentication",
                                "appPropertySupport": true,
                                "readonly": false,
                                "valid": true
                            },
                            "value": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "required": true,
                            "display": {
                                "name": "Password",
                                "type": "password",
                                "visible": false,
                                "description": "Password for SASL authentication",
                                "appPropertySupport": true,
                                "readonly": false,
                                "valid": true
                            },
                            "value": "SECRET:HvmEQMk9lMdDiYEZZ376Jw=="
                        },
                        {
                            "name": "clientCert",
                            "type": "string",
                            "display": {
                                "description": "A PEM encoded certificate file",
                                "name": "Client Certificate",
                                "visible": false,
                                "type": "fileselector",
                                "fileExtensions": [
                                    ".pem",
                                    ".cert",
                                    ".cer",
                                    ".crt"
                                ],
                                "readonly": false,
                                "valid": true
                            },
                            "value": ""
                        },
                        {
                            "name": "clientKey",
                            "type": "string",
                            "display": {
                                "description": "A PEM encoded private key file",
                                "name": "Client Key",
                                "visible": false,
                                "type": "fileselector",
                                "fileExtensions": [
                                    ".pem",
                                    ".cert",
                                    ".cer",
                                    ".crt",
                                    ".key"
                                ],
                                "readonly": false,
                                "valid": true
                            },
                            "value": ""
                        },
                        {
                            "name": "caCert",
                            "type": "string",
                            "display": {
                                "description": "A PEM encoded CA or Server certificate file",
                                "name": "CA or Server Certificate",
                                "visible": false,
                                "type": "fileselector",
                                "fileExtensions": [
                                    ".pem",
                                    ".cert",
                                    ".cer",
                                    ".crt"
                                ],
                                "readonly": false,
                                "valid": true
                            },
                            "value": ""
                        },
                        {
                            "name": "connectionTimeout",
                            "type": "integer",
                            "display": {
                                "name": "Connection Timeout",
                                "description": "The amount of time in seconds to wait for the initial connection",
                                "appPropertySupport": true
                            },
                            "value": "=$property[\"Kafka.tibcolabs-air-kafka.Connection_Timeout\"]"
                        },
                        {
                            "name": "retryBackoff",
                            "type": "integer",
                            "display": {
                                "name": "Retry Backoff",
                                "description": "The amount of time in milliseconds to wait for leader election to occur before retrying",
                                "appPropertySupport": true
                            },
                            "value": "=$property[\"Kafka.tibcolabs-air-kafka.Retry_Backoff\"]"
                        },
                        {
                            "name": "retryMax",
                            "type": "integer",
                            "display": {
                                "name": "Max Retry",
                                "description": "The total number of times to retry a metadata request when the cluster is in the middle of a leader election"
                            },
                            "value": 3
                        },
                        {
                            "name": "refreshFrequency",
                            "type": "integer",
                            "display": {
                                "name": "Refresh Frequency",
                                "description": "The amount of time in seconds after which metadata is refreshed in the background. Set 0 to disable it."
                            },
                            "value": 40
                        }
                    ],
                    "outputs": [],
                    "inputs": [],
                    "handler": {
                        "settings": []
                    },
                    "reply": [],
                    "s3Prefix": "Tibco",
                    "key": "Tibco/Kafka/connector/kafka/connector.json",
                    "display": {
                        "category": "Kafka",
                        "smallIcon": "icons/kafka.png",
                        "largeIcon": "icons/kafka.png"
                    },
                    "actions": [
                        {
                            "name": "Save",
                            "display": {
                                "readonly": false,
                                "valid": true,
                                "visible": true
                            }
                        }
                    ],
                    "feature": {},
                    "propertyMap": {},
                    "keyfield": "name",
                    "isValid": true,
                    "lastUpdatedTime": 1564404943259,
                    "user": "eihkymzngv24drdfeyg3otoucgynht2q",
                    "connectorName": "tibcolabs-air-kafka",
                    "connectorDescription": " "
                }
            },
            "id": "KafkaConsumer",
            "handlers": [
                {
                    "description": "",
                    "settings": {
                        "topic": "=$property[\"Kafka_Topic\"]",
                        "topicPattern": "",
                        "consumerGroup": "tibcolabs_air_lb_group2",
                        "valueType": "JSON",
                        "commitInterval": 5000,
                        "initialOffset": "Newest",
                        "fetchMinBytes": 1,
                        "fetchMaxWait": 500,
                        "heartbeatInterval": 3000,
                        "sessionTimeout": 30000
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:mqtt_sub"
                        },
                        "input": {
                            "topic": "=$.topic",
                            "partition": "=$.partition",
                            "offset": "=$.offset",
                            "key": "=$.key",
                            "jsonValue": "=$.jsonValue"
                        }
                    },
                    "schemas": {
                        "output": {
                            "jsonValue": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"DEVICE\":{\"type\":\"string\"},\"ID\":{\"type\":\"string\"},\"NAME\":{\"type\":\"string\"},\"ORIGIN\":{\"type\":\"string\"},\"SENSOR_DEVICE\":{\"type\":\"string\"},\"SENSOR_ORIGIN\":{\"type\":\"string\"},\"VALUE\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"DEVICE\":\"aaaaaaaaaa17\",\n    \"ID\":\"3cad9c76-1d67-413e-bfb4-979f29dda45a\",\n    \"NAME\":\"CellVoltage38\",\n    \"ORIGIN\":\"1567743134726\",\n    \"SENSOR_DEVICE\":\"aaaaaaaaaa17\",\n    \"SENSOR_ORIGIN\":\"1567743134000\",\n    \"VALUE\":\"24.152\"\n}"
                            }
                        }
                    }
                }
            ]
        }
    ],
    "resources": [
        {
            "id": "flow:mqtt_sub",
            "data": {
                "name": "mqtt_sub",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "StartaSubFlow",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=\"mqtt_sub flow : \"+$flow.jsonValue.ID+\",\"+$flow.jsonValue.DEVICE+\",\"+$flow.jsonValue.ORIGIN+\",\"+$flow.jsonValue.SENSOR_ORIGIN+\",\"+$flow.jsonValue.SENSOR_DEVICE+\",\"+$flow.jsonValue.NAME+\",\"+$flow.jsonValue.VALUE"
                            }
                        }
                    },
                    {
                        "id": "StartaSubFlow",
                        "name": "StartaSubFlow",
                        "description": "Simple SubFlow Activity",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:PersistentService4"
                            },
                            "input": {
                                "id": "=$flow.jsonValue.ID",
                                "device": "=$flow.jsonValue.DEVICE",
                                "origin": "=number.int64($flow.jsonValue.ORIGIN)",
                                "sensor_origin": "=number.int64($flow.jsonValue.SENSOR_ORIGIN)",
                                "sensorId": "=$flow.jsonValue.SENSOR_DEVICE",
                                "name": "=$flow.jsonValue.NAME",
                                "value": "=$flow.jsonValue.VALUE"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"device\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"sensor_origin\":{\"type\":\"number\"},\"sensorId\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"id\": \"f7dd8d66-6494-433b-900d-70f9990a4635\",\n    \"device\": \"Random-Boolean-Device\",\n    \"origin\": 1564111671975285000,\n    \"sensor_origin\": 1564111671968145200,\n    \"sensorId\": \"Random-Boolean-Device\",\n    \"name\": \"RandomValue_Bool\",\n    \"value\": \"true\"\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"output\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"output\":\"value\"\n}"
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "topic",
                            "type": "string"
                        },
                        {
                            "name": "partition",
                            "type": "integer"
                        },
                        {
                            "name": "offset",
                            "type": "integer"
                        },
                        {
                            "name": "key",
                            "type": "string"
                        },
                        {
                            "name": "jsonValue",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"DEVICE\":{\"type\":\"string\"},\"ID\":{\"type\":\"string\"},\"NAME\":{\"type\":\"string\"},\"ORIGIN\":{\"type\":\"string\"},\"SENSOR_DEVICE\":{\"type\":\"string\"},\"SENSOR_ORIGIN\":{\"type\":\"string\"},\"VALUE\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "output": [
                        {
                            "name": "id",
                            "type": "string"
                        },
                        {
                            "name": "device",
                            "type": "string"
                        },
                        {
                            "name": "origin",
                            "type": "float64"
                        },
                        {
                            "name": "readings",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"KafkaConsumer\",\"properties\":{\"topic\":{\"type\":\"string\",\"required\":false},\"partition\":{\"type\":\"integer\",\"required\":false},\"offset\":{\"type\":\"integer\",\"required\":false},\"key\":{\"type\":\"string\",\"required\":false},\"jsonValue\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"DEVICE\":{\"type\":\"string\"},\"ID\":{\"type\":\"string\"},\"NAME\":{\"type\":\"string\"},\"ORIGIN\":{\"type\":\"string\"},\"SENSOR_DEVICE\":{\"type\":\"string\"},\"SENSOR_ORIGIN\":{\"type\":\"string\"},\"VALUE\":{\"type\":\"string\"}}}}}",
                        "output": "{\n    \"id\":\"f7dd8d66-6494-433b-900d-70f9990a4635\",\n    \"device\":\"Random-Boolean-Device\",\n    \"origin\":1564111671975285000,\n    \"readings\":[{\"origin\":1564111671968145100,\"device\":\"Random-Boolean-Device\",\"name\":\"RandomValue_Bool\",\"value\":\"true\"}]\n}"
                    }
                },
                "explicitReply": true
            }
        },
        {
            "id": "flow:PostgresService5",
            "data": {
                "name": "PostgresService5",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "StartaSubFlow1",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "StartaSubFlow1",
                        "to": "PostgreSQLQuery",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "PostgreSQLQuery",
                        "to": "Mapper4",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "Mapper4",
                        "to": "Mapper3",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "Mapper3",
                        "to": "Mapper",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "Mapper",
                        "to": "LogMessage4",
                        "type": "default"
                    },
                    {
                        "id": 7,
                        "from": "LogMessage4",
                        "to": "Mapper5",
                        "type": "expression",
                        "value": "$activity[Mapper].output.returncode==200"
                    },
                    {
                        "id": 8,
                        "from": "Mapper5",
                        "to": "PostgreSQLInsert1",
                        "type": "default"
                    },
                    {
                        "id": 9,
                        "from": "PostgreSQLInsert1",
                        "to": "LogMessage2",
                        "type": "default"
                    },
                    {
                        "id": 10,
                        "from": "LogMessage2",
                        "to": "Return1",
                        "type": "default"
                    },
                    {
                        "id": 11,
                        "from": "LogMessage4",
                        "to": "PostgreSQLInsert3",
                        "type": "expression",
                        "value": "$activity[Mapper].output.returncode!=200"
                    },
                    {
                        "id": 12,
                        "from": "PostgreSQLInsert3",
                        "to": "LogMessage7",
                        "type": "default"
                    },
                    {
                        "id": 13,
                        "from": "LogMessage7",
                        "to": "Return2",
                        "type": "default"
                    },
                    {
                        "id": 14,
                        "from": "Mapper",
                        "to": "LogMessage5",
                        "type": "expression",
                        "value": "$activity[Mapper].output.count==0"
                    },
                    {
                        "id": 15,
                        "from": "LogMessage5",
                        "to": "PostgreSQLInsert2",
                        "type": "default"
                    },
                    {
                        "id": 16,
                        "from": "PostgreSQLInsert2",
                        "to": "LogMessage6",
                        "type": "default"
                    },
                    {
                        "id": 17,
                        "from": "LogMessage6",
                        "to": "PostgreSQLQuery1",
                        "type": "default"
                    },
                    {
                        "id": 18,
                        "from": "PostgreSQLQuery1",
                        "to": "Mapper1",
                        "type": "default"
                    },
                    {
                        "id": 19,
                        "from": "Mapper1",
                        "to": "PostgreSQLInsert",
                        "type": "expression",
                        "value": "$activity[Mapper1].output.count==0"
                    },
                    {
                        "id": 20,
                        "from": "PostgreSQLInsert",
                        "to": "LogMessage3",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": true,
                                "message": "=\"PostgresService : \"+$flow.id+\",\"+$flow.deviceId+\",\"+$flow.origin+\",\"+$flow.name+\",\"+string.substringAfter($flow.name, \"_\")+\",\"+$flow.value"
                            }
                        }
                    },
                    {
                        "id": "StartaSubFlow1",
                        "name": "StartaSubFlow1",
                        "description": "Simple SubFlow Activity",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:ConfigService"
                            },
                            "input": {
                                "method": "GET",
                                "deviceid": "=$flow.deviceId",
                                "sensorid": "=$flow.sensorId",
                                "attrname": "=$flow.name",
                                "attrtype": ""
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"method\":{\"type\":\"string\"},\"deviceid\":{\"type\":\"string\"},\"sensorid\":{\"type\":\"string\"},\"attrname\":{\"type\":\"string\"},\"attrtype\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"method\": \"value\",\n    \"deviceid\": \"value\",\n    \"sensorid\": \"value\",\n    \"attrname\": \"value\",\n    \"attrtype\": \"value\"\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"attrtype\":{\"type\":\"string\"},\"returncode\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\n    \"attrtype\": \"value\",\n    \"returncode\": 200\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "PostgreSQLQuery",
                        "name": "PostgreSQLQuery",
                        "description": "This activity executes query on a PostgreSQL database",
                        "activity": {
                            "ref": "#query",
                            "input": {
                                "Connection": {
                                    "id": "a646de80-af69-11e9-b1e1-21c3ee21ed35",
                                    "type": "flogo:connector",
                                    "version": "2.0.1",
                                    "name": "postgresql-connector",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "PostgreSQL Connector",
                                    "description": "Connector to connect to a PostgreSQL database server",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-postgres.git/src/app/PostgreSQL/connector/connection",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "value": "tibcolabs-air-postgresql"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "host",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Host",
                                                "description": "PostgreSQL Database Host name",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.Host\"]"
                                        },
                                        {
                                            "name": "port",
                                            "type": "integer",
                                            "required": true,
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.Port\"]",
                                            "display": {
                                                "name": "Port",
                                                "description": "PostgreSQL Database Port",
                                                "type": "integer",
                                                "visible": true,
                                                "appPropertySupport": true
                                            }
                                        },
                                        {
                                            "name": "databaseName",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Database Name",
                                                "description": "Name of the Database",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.Database_Name\"]"
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "User",
                                                "description": "Name of the Database User",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.User\"]"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Password",
                                                "description": "PostgreSQL Database Port",
                                                "type": "password",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.Password\"]"
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/PostgreSQL/connector/connection/connector.json",
                                    "display": {
                                        "description": "Connector to connect to a PostgreSQL database server",
                                        "category": "PostgreSQL",
                                        "visible": true,
                                        "smallIcon": "icons/ic-postgres-connection@2x.png",
                                        "largeIcon": "icons/ic-postgres-connection@3x.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect"
                                        }
                                    ],
                                    "feature": {},
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "isValid": true,
                                    "lastUpdatedTime": 1566280941839,
                                    "user": "eihkymzngv24drdfeyg3otoucgynht2q",
                                    "connectorName": "tibcolabs-air-postgresql",
                                    "connectorDescription": " "
                                },
                                "QueryName": "",
                                "Query": "SELECT * from sensor1 where deviceId=?deviceId and sensorId=?sensorId;",
                                "Fields": "[{\"FieldName\":\"deviceid\",\"Type\":\"VARCHAR\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false},{\"FieldName\":\"sensorid\",\"Type\":\"VARCHAR\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false},{\"FieldName\":\"providerid\",\"Type\":\"VARCHAR\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false},{\"FieldName\":\"lastupdatetime\",\"Type\":\"INT8\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false},{\"FieldName\":\"sensordatatype\",\"Type\":\"VARCHAR\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false},{\"FieldName\":\"deviceId\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false},{\"FieldName\":\"sensorId\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false}]",
                                "State": "2b13e785-7474-4d50-826b-49c66dc703dcSELECT * from sensor1 where deviceId=?deviceId and sensorId=?sensorId;",
                                "input": {
                                    "mapping": {
                                        "parameters": {
                                            "deviceId": "=$flow.deviceId",
                                            "sensorId": "=$flow.sensorId"
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"deviceId\":{\"type\":\"string\"},\"sensorId\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"deviceId\":{\"type\":\"string\"},\"sensorId\":{\"type\":\"string\"}}}}}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"deviceid\":{\"type\":\"string\"},\"sensorid\":{\"type\":\"string\"},\"providerid\":{\"type\":\"string\"},\"lastupdatetime\":{\"type\":\"integer\"},\"sensordatatype\":{\"type\":\"string\"}}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"deviceid\":{\"type\":\"string\"},\"sensorid\":{\"type\":\"string\"},\"providerid\":{\"type\":\"string\"},\"lastupdatetime\":{\"type\":\"integer\"},\"sensordatatype\":{\"type\":\"string\"}}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Mapper4",
                        "name": "Mapper4",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "values": {
                                            "id": "=$flow.id",
                                            "deviceId": "=$flow.deviceId",
                                            "sensorId": "=$flow.sensorId",
                                            "channel": "=$flow.channel",
                                            "batteryLife": 0,
                                            "origintime": "=$flow.origin",
                                            "providerId": "=$flow.providerId",
                                            "lastupdatetime": "=$flow.sensor_origin",
                                            "attrname": "=$flow.name",
                                            "attrtype": "=$activity[StartaSubFlow1].attrtype",
                                            "attrvalue": "=$flow.value"
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"values\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"deviceId\":{\"type\":\"string\"},\"sensorId\":{\"type\":\"string\"},\"providerId\":{\"type\":\"string\"},\"channel\":{\"type\":\"string\"},\"batteryLife\":{\"type\":\"number\"},\"origintime\":{\"type\":\"number\"},\"lastupdatetime\":{\"type\":\"number\"},\"attrname\":{\"type\":\"string\"},\"attrtype\":{\"type\":\"string\"},\"attrvalue\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\n    \"values\":\n        {\n            \"id\":\"value\", \n            \"deviceId\":\"value\", \n            \"sensorId\":\"value\", \n            \"providerId\":\"value\", \n            \"channel\":\"MQTT\", \n            \"batteryLife\":0, \n            \"origintime\":0, \n            \"lastupdatetime\":0, \n            \"attrname\":\"value\", \n            \"attrtype\":\"Int8\", \n            \"attrvalue\":\"999\"        \n        }\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"values\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"deviceId\": {\n          \"type\": \"string\"\n        },\n        \"sensorId\": {\n          \"type\": \"string\"\n        },\n        \"providerId\": {\n          \"type\": \"string\"\n        },\n        \"channel\": {\n          \"type\": \"string\"\n        },\n        \"batteryLife\": {\n          \"type\": \"number\"\n        },\n        \"origintime\": {\n          \"type\": \"number\"\n        },\n        \"lastupdatetime\": {\n          \"type\": \"number\"\n        },\n        \"attrname\": {\n          \"type\": \"string\"\n        },\n        \"attrtype\": {\n          \"type\": \"string\"\n        },\n        \"attrvalue\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"values\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"deviceId\": {\n          \"type\": \"string\"\n        },\n        \"sensorId\": {\n          \"type\": \"string\"\n        },\n        \"providerId\": {\n          \"type\": \"string\"\n        },\n        \"channel\": {\n          \"type\": \"string\"\n        },\n        \"batteryLife\": {\n          \"type\": \"number\"\n        },\n        \"origintime\": {\n          \"type\": \"number\"\n        },\n        \"lastupdatetime\": {\n          \"type\": \"number\"\n        },\n        \"attrname\": {\n          \"type\": \"string\"\n        },\n        \"attrtype\": {\n          \"type\": \"string\"\n        },\n        \"attrvalue\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Mapper3",
                        "name": "Mapper3",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "inputs": "=array.create($activity[Mapper4].output.values)"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"inputs\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"deviceId\":{\"type\":\"string\"},\"sensorId\":{\"type\":\"string\"},\"providerId\":{\"type\":\"string\"},\"channel\":{\"type\":\"string\"},\"batteryLife\":{\"type\":\"number\"},\"origintime\":{\"type\":\"number\"},\"lastupdatetime\":{\"type\":\"number\"},\"attrname\":{\"type\":\"string\"},\"attrtype\":{\"type\":\"string\"},\"attrvalue\":{\"type\":\"string\"}}}}}}",
                                        "fe_metadata": "{\n    \"inputs\":\n    [\n        {\n    \"id\": \"b710ad27-4eb0-417f-96b8-02830642d8a1\",\n    \"deviceId\": \"Random-Integer-Device\",\n    \"sensorId\": \"Random-Integer-Device\",\n    \"providerId\": \"TIBCO\",\n    \"channel\": \"MQTT\",\n    \"batteryLife\": 0,\n    \"origintime\": 1564113092999608300,\n    \"lastupdatetime\": 1564113092992998000,\n    \"attrname\": \"RandomValue_Int64\",\n    \"attrtype\": \"Int64\",\n    \"attrvalue\": \"-6427502364192134104\"\n        }\n    ]\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"inputs\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"deviceId\": {\n            \"type\": \"string\"\n          },\n          \"sensorId\": {\n            \"type\": \"string\"\n          },\n          \"providerId\": {\n            \"type\": \"string\"\n          },\n          \"channel\": {\n            \"type\": \"string\"\n          },\n          \"batteryLife\": {\n            \"type\": \"number\"\n          },\n          \"origintime\": {\n            \"type\": \"number\"\n          },\n          \"lastupdatetime\": {\n            \"type\": \"number\"\n          },\n          \"attrname\": {\n            \"type\": \"string\"\n          },\n          \"attrtype\": {\n            \"type\": \"string\"\n          },\n          \"attrvalue\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"inputs\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"deviceId\": {\n            \"type\": \"string\"\n          },\n          \"sensorId\": {\n            \"type\": \"string\"\n          },\n          \"providerId\": {\n            \"type\": \"string\"\n          },\n          \"channel\": {\n            \"type\": \"string\"\n          },\n          \"batteryLife\": {\n            \"type\": \"number\"\n          },\n          \"origintime\": {\n            \"type\": \"number\"\n          },\n          \"lastupdatetime\": {\n            \"type\": \"number\"\n          },\n          \"attrname\": {\n            \"type\": \"string\"\n          },\n          \"attrtype\": {\n            \"type\": \"string\"\n          },\n          \"attrvalue\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Mapper",
                        "name": "Mapper",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "count": "=array.count($activity[PostgreSQLQuery].Output.records)",
                                        "sensordatatype": "=$activity[StartaSubFlow1].attrtype",
                                        "returncode": "=$activity[StartaSubFlow1].returncode"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"count\":{\"type\":\"number\"},\"sensordatatype\":{\"type\":\"string\"},\"returncode\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\n    \"count\":1,\n    \"sensordatatype\":\"Int8\",\n    \"returncode\":200\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"count\": {\n      \"type\": \"number\"\n    },\n    \"sensordatatype\": {\n      \"type\": \"string\"\n    },\n    \"returncode\": {\n      \"type\": \"number\"\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"count\": {\n      \"type\": \"number\"\n    },\n    \"sensordatatype\": {\n      \"type\": \"string\"\n    },\n    \"returncode\": {\n      \"type\": \"number\"\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage4",
                        "name": "LogMessage4",
                        "description": "Simple Log Message Activity",
                        "settings": {
                            "iterate": "=$activity[PostgreSQLQuery].Output.records"
                        },
                        "type": "iterator",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=\"PostgresService4 : \"+$activity[StartaSubFlow1].returncode"
                            }
                        }
                    },
                    {
                        "id": "Mapper5",
                        "name": "Mapper5",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "values": "=array.create($activity[Mapper4].output.values)"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"deviceId\":{\"type\":\"string\"},\"sensorId\":{\"type\":\"string\"},\"providerId\":{\"type\":\"string\"},\"channel\":{\"type\":\"string\"},\"batteryLife\":{\"type\":\"number\"},\"origintime\":{\"type\":\"number\"},\"lastupdatetime\":{\"type\":\"number\"},\"attrname\":{\"type\":\"string\"},\"attrtype\":{\"type\":\"string\"},\"attrvalue\":{\"type\":\"string\"}}}}}}",
                                        "fe_metadata": "{\n    \"values\":\n    [\n        {\n            \"id\":\"value\", \n            \"deviceId\":\"value\", \n            \"sensorId\":\"value\", \n            \"providerId\":\"value\", \n            \"channel\":\"MQTT\", \n            \"batteryLife\":0, \n            \"origintime\":0, \n            \"lastupdatetime\":0, \n            \"attrname\":\"value\", \n            \"attrtype\":\"Int8\", \n            \"attrvalue\":\"999\"        \n        }\n    ]\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"values\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"deviceId\": {\n            \"type\": \"string\"\n          },\n          \"sensorId\": {\n            \"type\": \"string\"\n          },\n          \"providerId\": {\n            \"type\": \"string\"\n          },\n          \"channel\": {\n            \"type\": \"string\"\n          },\n          \"batteryLife\": {\n            \"type\": \"number\"\n          },\n          \"origintime\": {\n            \"type\": \"number\"\n          },\n          \"lastupdatetime\": {\n            \"type\": \"number\"\n          },\n          \"attrname\": {\n            \"type\": \"string\"\n          },\n          \"attrtype\": {\n            \"type\": \"string\"\n          },\n          \"attrvalue\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"values\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"deviceId\": {\n            \"type\": \"string\"\n          },\n          \"sensorId\": {\n            \"type\": \"string\"\n          },\n          \"providerId\": {\n            \"type\": \"string\"\n          },\n          \"channel\": {\n            \"type\": \"string\"\n          },\n          \"batteryLife\": {\n            \"type\": \"number\"\n          },\n          \"origintime\": {\n            \"type\": \"number\"\n          },\n          \"lastupdatetime\": {\n            \"type\": \"number\"\n          },\n          \"attrname\": {\n            \"type\": \"string\"\n          },\n          \"attrtype\": {\n            \"type\": \"string\"\n          },\n          \"attrvalue\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "PostgreSQLInsert1",
                        "name": "PostgreSQLInsert1",
                        "description": "This activity executes insert on a PostgreSQL database",
                        "settings": {
                            "iterate": "=$activity[Mapper5].output.values"
                        },
                        "type": "iterator",
                        "activity": {
                            "ref": "#insert",
                            "input": {
                                "Connection": {
                                    "id": "a646de80-af69-11e9-b1e1-21c3ee21ed35",
                                    "type": "flogo:connector",
                                    "version": "2.0.1",
                                    "name": "postgresql-connector",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "PostgreSQL Connector",
                                    "description": "Connector to connect to a PostgreSQL database server",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-postgres.git/src/app/PostgreSQL/connector/connection",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "value": "tibcolabs-air-postgresql"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "host",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Host",
                                                "description": "PostgreSQL Database Host name",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.Host\"]"
                                        },
                                        {
                                            "name": "port",
                                            "type": "integer",
                                            "required": true,
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.Port\"]",
                                            "display": {
                                                "name": "Port",
                                                "description": "PostgreSQL Database Port",
                                                "type": "integer",
                                                "visible": true,
                                                "appPropertySupport": true
                                            }
                                        },
                                        {
                                            "name": "databaseName",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Database Name",
                                                "description": "Name of the Database",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.Database_Name\"]"
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "User",
                                                "description": "Name of the Database User",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.User\"]"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Password",
                                                "description": "PostgreSQL Database Port",
                                                "type": "password",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.Password\"]"
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/PostgreSQL/connector/connection/connector.json",
                                    "display": {
                                        "description": "Connector to connect to a PostgreSQL database server",
                                        "category": "PostgreSQL",
                                        "visible": true,
                                        "smallIcon": "icons/ic-postgres-connection@2x.png",
                                        "largeIcon": "icons/ic-postgres-connection@3x.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect"
                                        }
                                    ],
                                    "feature": {},
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "isValid": true,
                                    "lastUpdatedTime": 1566280941839,
                                    "user": "eihkymzngv24drdfeyg3otoucgynht2q",
                                    "connectorName": "tibcolabs-air-postgresql",
                                    "connectorDescription": " "
                                },
                                "QueryName": "",
                                "Query": "INSERT INTO sensor_data1 (id, deviceid, sensorid, providerid, channel, batterylife, origintime, lastupdatetime, attrname, attrtype, attrvalue) VALUES (?id, ?deviceid, ?sensorid, ?providerid, ?channel, ?batterylife, ?origintime, ?lastupdatetime, ?attrname, ?attrtype, ?attrvalue);",
                                "Fields": "[{\"FieldName\":\"origintime\",\"Type\":\"INT8\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"batterylife\",\"Type\":\"INT4\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"providerid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"channel\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"sensorid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"deviceid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"attrtype\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"id\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"attrvalue\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"attrname\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"lastupdatetime\",\"Type\":\"INT8\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true}]",
                                "State": "cc35973d-ec8b-43ac-afc8-248101e7371eINSERT INTO sensor_data1 (id, deviceid, sensorid, providerid, channel, batterylife, origintime, lastupdatetime, attrname, attrtype, attrvalue) VALUES (?id, ?deviceid, ?sensorid, ?providerid, ?channel, ?batterylife, ?origintime, ?lastupdatetime, ?attrname, ?attrtype, ?attrvalue);",
                                "input": {
                                    "mapping": {
                                        "values": {
                                            "@foreach($activity[\"Mapper5\"].output.values,values)": {
                                                "id": "=$loop.id",
                                                "batterylife": "=$loop.batteryLife",
                                                "attrvalue": "=$loop.attrvalue",
                                                "lastupdatetime": "=$loop.lastupdatetime",
                                                "attrname": "=$loop.attrname",
                                                "attrtype": "=$activity[StartaSubFlow1].attrtype",
                                                "sensorid": "=$loop.sensorId",
                                                "channel": "=$loop.channel",
                                                "origintime": "=$loop.origintime",
                                                "providerid": "=$loop.providerId",
                                                "deviceid": "=$loop.deviceId"
                                            }
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"origintime\":{\"type\":\"integer\"},\"batterylife\":{\"type\":\"integer\"},\"providerid\":{\"type\":\"string\"},\"channel\":{\"type\":\"string\"},\"sensorid\":{\"type\":\"string\"},\"deviceid\":{\"type\":\"string\"},\"attrtype\":{\"type\":\"string\"},\"id\":{\"type\":\"string\"},\"attrvalue\":{\"type\":\"string\"},\"attrname\":{\"type\":\"string\"},\"lastupdatetime\":{\"type\":\"integer\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"origintime\":{\"type\":\"integer\"},\"batterylife\":{\"type\":\"integer\"},\"providerid\":{\"type\":\"string\"},\"channel\":{\"type\":\"string\"},\"sensorid\":{\"type\":\"string\"},\"deviceid\":{\"type\":\"string\"},\"attrtype\":{\"type\":\"string\"},\"id\":{\"type\":\"string\"},\"attrvalue\":{\"type\":\"string\"},\"attrname\":{\"type\":\"string\"},\"lastupdatetime\":{\"type\":\"integer\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{}}}}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage2",
                        "name": "LogMessage2",
                        "description": "Simple Log Message Activity",
                        "settings": {
                            "iterate": "=$activity[PostgreSQLInsert1].Output.records"
                        },
                        "type": "iterator",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=\"PostgresService : \"+string.tostring($iteration[value])"
                            }
                        }
                    },
                    {
                        "id": "Return1",
                        "name": "Return1",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "message": "success"
                                }
                            }
                        }
                    },
                    {
                        "id": "PostgreSQLInsert3",
                        "name": "PostgreSQLInsert3",
                        "description": "This activity executes insert on a PostgreSQL database",
                        "activity": {
                            "ref": "#insert",
                            "input": {
                                "Connection": {
                                    "id": "a646de80-af69-11e9-b1e1-21c3ee21ed35",
                                    "type": "flogo:connector",
                                    "version": "2.0.1",
                                    "name": "postgresql-connector",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "PostgreSQL Connector",
                                    "description": "Connector to connect to a PostgreSQL database server",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-postgres.git/src/app/PostgreSQL/connector/connection",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "value": "tibcolabs-air-postgresql"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "host",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Host",
                                                "description": "PostgreSQL Database Host name",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.Host\"]"
                                        },
                                        {
                                            "name": "port",
                                            "type": "integer",
                                            "required": true,
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.Port\"]",
                                            "display": {
                                                "name": "Port",
                                                "description": "PostgreSQL Database Port",
                                                "type": "integer",
                                                "visible": true,
                                                "appPropertySupport": true
                                            }
                                        },
                                        {
                                            "name": "databaseName",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Database Name",
                                                "description": "Name of the Database",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.Database_Name\"]"
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "User",
                                                "description": "Name of the Database User",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.User\"]"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Password",
                                                "description": "PostgreSQL Database Port",
                                                "type": "password",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.Password\"]"
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/PostgreSQL/connector/connection/connector.json",
                                    "display": {
                                        "description": "Connector to connect to a PostgreSQL database server",
                                        "category": "PostgreSQL",
                                        "visible": true,
                                        "smallIcon": "icons/ic-postgres-connection@2x.png",
                                        "largeIcon": "icons/ic-postgres-connection@3x.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect"
                                        }
                                    ],
                                    "feature": {},
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "isValid": true,
                                    "lastUpdatedTime": 1566280941839,
                                    "user": "eihkymzngv24drdfeyg3otoucgynht2q",
                                    "connectorName": "tibcolabs-air-postgresql",
                                    "connectorDescription": " "
                                },
                                "QueryName": "",
                                "Query": "INSERT INTO sensor_data1 (id, deviceId, sensorId, providerId, channel, batteryLife, origintime, lastupdatetime, attrname, attrtype, attrvalue) VALUES (?id, ?deviceId, ?sensorId, ?providerid, ?channel, ?batteryLife, ?origintime, ?lastupdatetime, ?attrname, ?attrtype, ?attrvalue);",
                                "Fields": "[{\"FieldName\":\"origintime\",\"Type\":\"INT8\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"attrname\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"channel\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"attrtype\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"deviceid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":false,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"attrvalue\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"sensorid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":false,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"deviceId\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false},{\"FieldName\":\"sensorId\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false},{\"FieldName\":\"providerid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"lastupdatetime\",\"Type\":\"INT8\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"batteryLife\",\"Type\":\"INT4\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false},{\"FieldName\":\"batterylife\",\"Type\":\"INT4\",\"Selected\":false,\"Parameter\":false,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"id\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true}]",
                                "State": "733e7991-d05d-4c92-9182-1e387231bcc9INSERT INTO sensor_data1 (id, deviceId, sensorId, providerId, channel, batteryLife, origintime, lastupdatetime, attrname, attrtype, attrvalue) VALUES (?id, ?deviceId, ?sensorId, ?providerid, ?channel, ?batteryLife, ?origintime, ?lastupdatetime, ?attrname, ?attrtype, ?attrvalue);",
                                "input": {
                                    "mapping": {
                                        "values": {
                                            "@foreach($activity[\"Mapper3\"].output.inputs,values)": {
                                                "id": "=$loop.id",
                                                "attrvalue": "=$loop.attrvalue",
                                                "deviceid": "=$loop.deviceId",
                                                "origintime": "=$loop.origintime",
                                                "lastupdatetime": "=$loop.lastupdatetime",
                                                "attrtype": "=string.substringAfter($loop.attrname,\"_\")",
                                                "channel": "=$loop.channel",
                                                "attrname": "=$loop.attrname",
                                                "sensorid": "=$loop.sensorId",
                                                "providerid": "=$loop.providerId"
                                            }
                                        },
                                        "parameters": {
                                            "deviceId": "=$activity[Mapper3].output.inputs[0].deviceId",
                                            "batteryLife": 0,
                                            "sensorId": "=$activity[Mapper3].output.inputs[0].sensorId"
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"origintime\":{\"type\":\"integer\"},\"attrname\":{\"type\":\"string\"},\"channel\":{\"type\":\"string\"},\"attrtype\":{\"type\":\"string\"},\"deviceid\":{\"type\":\"string\"},\"attrvalue\":{\"type\":\"string\"},\"sensorid\":{\"type\":\"string\"},\"providerid\":{\"type\":\"string\"},\"lastupdatetime\":{\"type\":\"integer\"},\"batterylife\":{\"type\":\"integer\"},\"id\":{\"type\":\"string\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{\"deviceId\":{\"type\":\"string\"},\"sensorId\":{\"type\":\"string\"},\"batteryLife\":{\"type\":\"integer\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"origintime\":{\"type\":\"integer\"},\"attrname\":{\"type\":\"string\"},\"channel\":{\"type\":\"string\"},\"attrtype\":{\"type\":\"string\"},\"deviceid\":{\"type\":\"string\"},\"attrvalue\":{\"type\":\"string\"},\"sensorid\":{\"type\":\"string\"},\"providerid\":{\"type\":\"string\"},\"lastupdatetime\":{\"type\":\"integer\"},\"batterylife\":{\"type\":\"integer\"},\"id\":{\"type\":\"string\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{\"deviceId\":{\"type\":\"string\"},\"sensorId\":{\"type\":\"string\"},\"batteryLife\":{\"type\":\"integer\"}}}}}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage7",
                        "name": "LogMessage7",
                        "description": "Simple Log Message Activity",
                        "settings": {
                            "iterate": "=$activity[PostgreSQLInsert3].Output.records"
                        },
                        "type": "iterator",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=\"Postgres Service : \"+string.tostring($iteration[value])"
                            }
                        }
                    },
                    {
                        "id": "Return2",
                        "name": "Return2",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "message": "success"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage5",
                        "name": "LogMessage5",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($activity[Mapper].output.count)"
                            }
                        }
                    },
                    {
                        "id": "PostgreSQLInsert2",
                        "name": "PostgreSQLInsert2",
                        "description": "This activity executes insert on a PostgreSQL database",
                        "activity": {
                            "ref": "#insert",
                            "input": {
                                "Connection": {
                                    "id": "a646de80-af69-11e9-b1e1-21c3ee21ed35",
                                    "type": "flogo:connector",
                                    "version": "2.0.1",
                                    "name": "postgresql-connector",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "PostgreSQL Connector",
                                    "description": "Connector to connect to a PostgreSQL database server",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-postgres.git/src/app/PostgreSQL/connector/connection",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "value": "tibcolabs-air-postgresql"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "host",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Host",
                                                "description": "PostgreSQL Database Host name",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.Host\"]"
                                        },
                                        {
                                            "name": "port",
                                            "type": "integer",
                                            "required": true,
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.Port\"]",
                                            "display": {
                                                "name": "Port",
                                                "description": "PostgreSQL Database Port",
                                                "type": "integer",
                                                "visible": true,
                                                "appPropertySupport": true
                                            }
                                        },
                                        {
                                            "name": "databaseName",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Database Name",
                                                "description": "Name of the Database",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.Database_Name\"]"
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "User",
                                                "description": "Name of the Database User",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.User\"]"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Password",
                                                "description": "PostgreSQL Database Port",
                                                "type": "password",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.Password\"]"
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/PostgreSQL/connector/connection/connector.json",
                                    "display": {
                                        "description": "Connector to connect to a PostgreSQL database server",
                                        "category": "PostgreSQL",
                                        "visible": true,
                                        "smallIcon": "icons/ic-postgres-connection@2x.png",
                                        "largeIcon": "icons/ic-postgres-connection@3x.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect"
                                        }
                                    ],
                                    "feature": {},
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "isValid": true,
                                    "lastUpdatedTime": 1566280941839,
                                    "user": "eihkymzngv24drdfeyg3otoucgynht2q",
                                    "connectorName": "tibcolabs-air-postgresql",
                                    "connectorDescription": " "
                                },
                                "QueryName": "",
                                "Query": "INSERT INTO SENSOR1 (deviceId, sensorId, providerId, lastupdatetime) VALUES (?deviceId, ?sensorId, ?providerid, ?origin);",
                                "Fields": "[{\"FieldName\":\"deviceId\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false},{\"FieldName\":\"sensorId\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false},{\"FieldName\":\"lastupdatetime\",\"Type\":\"INT8\",\"Selected\":false,\"Parameter\":false,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"deviceid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":false,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"sensorid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":false,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"providerid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"origin\",\"Type\":\"INT8\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false}]",
                                "State": "0a8e7c8c-96ef-41a5-b950-c677645c9f95INSERT INTO SENSOR1 (deviceId, sensorId, providerId, lastupdatetime) VALUES (?deviceId, ?sensorId, ?providerid, ?origin);",
                                "input": {
                                    "mapping": {
                                        "values": {
                                            "@foreach($activity[\"Mapper3\"].output.inputs,values)": {
                                                "sensorid": "=$loop.sensorId",
                                                "providerid": "TIBCO",
                                                "lastupdatetime": "=$loop.lastupdatetime",
                                                "deviceid": "=$flow.deviceId"
                                            }
                                        },
                                        "parameters": {
                                            "deviceId": "=$flow.deviceId",
                                            "sensorId": "=$activity[Mapper3].output.inputs[0].sensorId",
                                            "origin": "=$activity[Mapper3].output.inputs[0].origintime"
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"lastupdatetime\":{\"type\":\"integer\"},\"deviceid\":{\"type\":\"string\"},\"sensorid\":{\"type\":\"string\"},\"providerid\":{\"type\":\"string\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{\"deviceId\":{\"type\":\"string\"},\"sensorId\":{\"type\":\"string\"},\"origin\":{\"type\":\"integer\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"lastupdatetime\":{\"type\":\"integer\"},\"deviceid\":{\"type\":\"string\"},\"sensorid\":{\"type\":\"string\"},\"providerid\":{\"type\":\"string\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{\"deviceId\":{\"type\":\"string\"},\"sensorId\":{\"type\":\"string\"},\"origin\":{\"type\":\"integer\"}}}}}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage6",
                        "name": "LogMessage6",
                        "description": "Simple Log Message Activity",
                        "settings": {
                            "iterate": "=$activity[PostgreSQLInsert2].Output.records"
                        },
                        "type": "iterator",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($iteration[value])"
                            }
                        }
                    },
                    {
                        "id": "PostgreSQLQuery1",
                        "name": "PostgreSQLQuery1",
                        "description": "This activity executes query on a PostgreSQL database",
                        "activity": {
                            "ref": "#query",
                            "input": {
                                "Connection": {
                                    "id": "a646de80-af69-11e9-b1e1-21c3ee21ed35",
                                    "type": "flogo:connector",
                                    "version": "2.0.1",
                                    "name": "postgresql-connector",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "PostgreSQL Connector",
                                    "description": "Connector to connect to a PostgreSQL database server",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-postgres.git/src/app/PostgreSQL/connector/connection",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "value": "tibcolabs-air-postgresql"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "host",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Host",
                                                "description": "PostgreSQL Database Host name",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.Host\"]"
                                        },
                                        {
                                            "name": "port",
                                            "type": "integer",
                                            "required": true,
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.Port\"]",
                                            "display": {
                                                "name": "Port",
                                                "description": "PostgreSQL Database Port",
                                                "type": "integer",
                                                "visible": true,
                                                "appPropertySupport": true
                                            }
                                        },
                                        {
                                            "name": "databaseName",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Database Name",
                                                "description": "Name of the Database",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.Database_Name\"]"
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "User",
                                                "description": "Name of the Database User",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.User\"]"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Password",
                                                "description": "PostgreSQL Database Port",
                                                "type": "password",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.Password\"]"
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/PostgreSQL/connector/connection/connector.json",
                                    "display": {
                                        "description": "Connector to connect to a PostgreSQL database server",
                                        "category": "PostgreSQL",
                                        "visible": true,
                                        "smallIcon": "icons/ic-postgres-connection@2x.png",
                                        "largeIcon": "icons/ic-postgres-connection@3x.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect"
                                        }
                                    ],
                                    "feature": {},
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "isValid": true,
                                    "lastUpdatedTime": 1566280941839,
                                    "user": "eihkymzngv24drdfeyg3otoucgynht2q",
                                    "connectorName": "tibcolabs-air-postgresql",
                                    "connectorDescription": " "
                                },
                                "QueryName": "",
                                "Query": "SELECT count(*) from device1 where deviceid=?deviceid;",
                                "Fields": "[{\"FieldName\":\"count\",\"Type\":\"BIGINT\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false},{\"FieldName\":\"deviceid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false}]",
                                "State": "a646de80-af69-11e9-b1e1-21c3ee21ed35SELECT count(*) from device1 where deviceid=?deviceid;",
                                "input": {
                                    "mapping": {
                                        "parameters": {
                                            "deviceid": "=$flow.deviceId"
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"deviceid\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"deviceid\":{\"type\":\"string\"}}}}}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"count\":{\"type\":\"integer\"}}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"count\":{\"type\":\"integer\"}}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Mapper1",
                        "name": "Mapper1",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "count": "=$activity[PostgreSQLQuery1].Output.records[0].count"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"count\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\n    \"count\":0\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"count\": {\n      \"type\": \"number\"\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"count\": {\n      \"type\": \"number\"\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "PostgreSQLInsert",
                        "name": "PostgreSQLInsert",
                        "description": "This activity executes insert on a PostgreSQL database",
                        "activity": {
                            "ref": "#insert",
                            "input": {
                                "Connection": {
                                    "id": "a646de80-af69-11e9-b1e1-21c3ee21ed35",
                                    "type": "flogo:connector",
                                    "version": "2.0.1",
                                    "name": "postgresql-connector",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "PostgreSQL Connector",
                                    "description": "Connector to connect to a PostgreSQL database server",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-postgres.git/src/app/PostgreSQL/connector/connection",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "value": "tibcolabs-air-postgresql"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "host",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Host",
                                                "description": "PostgreSQL Database Host name",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.Host\"]"
                                        },
                                        {
                                            "name": "port",
                                            "type": "integer",
                                            "required": true,
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.Port\"]",
                                            "display": {
                                                "name": "Port",
                                                "description": "PostgreSQL Database Port",
                                                "type": "integer",
                                                "visible": true,
                                                "appPropertySupport": true
                                            }
                                        },
                                        {
                                            "name": "databaseName",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Database Name",
                                                "description": "Name of the Database",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.Database_Name\"]"
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "User",
                                                "description": "Name of the Database User",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.User\"]"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Password",
                                                "description": "PostgreSQL Database Port",
                                                "type": "password",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs-air-postgresql.Password\"]"
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/PostgreSQL/connector/connection/connector.json",
                                    "display": {
                                        "description": "Connector to connect to a PostgreSQL database server",
                                        "category": "PostgreSQL",
                                        "visible": true,
                                        "smallIcon": "icons/ic-postgres-connection@2x.png",
                                        "largeIcon": "icons/ic-postgres-connection@3x.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect"
                                        }
                                    ],
                                    "feature": {},
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "isValid": true,
                                    "lastUpdatedTime": 1566280941839,
                                    "user": "eihkymzngv24drdfeyg3otoucgynht2q",
                                    "connectorName": "tibcolabs-air-postgresql",
                                    "connectorDescription": " "
                                },
                                "QueryName": "",
                                "Query": "INSERT INTO device1 (deviceid, providerId, networktype, origintime, lastupdatetime, devicetype, lat, lon) VALUES (?deviceId, ?providerid, ?networktype, ?origin, ?origin, ?devicetype, 0, 0);",
                                "Fields": "[{\"FieldName\":\"deviceId\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false},{\"FieldName\":\"devicetype\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"origin\",\"Type\":\"INT8\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false},{\"FieldName\":\"lastupdatetime\",\"Type\":\"INT8\",\"Selected\":false,\"Parameter\":false,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"lat\",\"Type\":\"FLOAT4\",\"Selected\":false,\"Parameter\":false,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"lon\",\"Type\":\"FLOAT4\",\"Selected\":false,\"Parameter\":false,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"deviceid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":false,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"providerid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"networktype\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"origintime\",\"Type\":\"INT8\",\"Selected\":false,\"Parameter\":false,\"isEditable\":false,\"Value\":true}]",
                                "State": "5da3a91f-e5e0-4f01-8871-2647514b9e3cINSERT INTO device1 (deviceid, providerId, networktype, origintime, lastupdatetime, devicetype, lat, lon) VALUES (?deviceId, ?providerid, ?networktype, ?origin, ?origin, ?devicetype, 0, 0);",
                                "input": {
                                    "mapping": {
                                        "values": {
                                            "@foreach($activity[\"Mapper3\"].output.inputs,values)": {
                                                "lastupdatetime": "=$loop.lastupdatetime",
                                                "networktype": "=$flow.networkType",
                                                "devicetype": "=$flow.deviceType",
                                                "origintime": "=$flow.origin",
                                                "providerid": "=$flow.providerId",
                                                "deviceid": "=$flow.deviceId"
                                            }
                                        },
                                        "parameters": {
                                            "origin": "=$flow.origin",
                                            "deviceId": "=$flow.deviceId"
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"devicetype\":{\"type\":\"string\"},\"lastupdatetime\":{\"type\":\"integer\"},\"lat\":{\"type\":\"number\"},\"lon\":{\"type\":\"number\"},\"deviceid\":{\"type\":\"string\"},\"providerid\":{\"type\":\"string\"},\"networktype\":{\"type\":\"string\"},\"origintime\":{\"type\":\"integer\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{\"deviceId\":{\"type\":\"string\"},\"origin\":{\"type\":\"integer\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"devicetype\":{\"type\":\"string\"},\"lastupdatetime\":{\"type\":\"integer\"},\"lat\":{\"type\":\"number\"},\"lon\":{\"type\":\"number\"},\"deviceid\":{\"type\":\"string\"},\"providerid\":{\"type\":\"string\"},\"networktype\":{\"type\":\"string\"},\"origintime\":{\"type\":\"integer\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{\"deviceId\":{\"type\":\"string\"},\"origin\":{\"type\":\"integer\"}}}}}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage3",
                        "name": "LogMessage3",
                        "description": "Simple Log Message Activity",
                        "settings": {
                            "iterate": "=$activity[PostgreSQLInsert].Output.records"
                        },
                        "type": "iterator",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($iteration[value])"
                            }
                        }
                    }
                ],
                "errorHandler": {
                    "tasks": [
                        {
                            "id": "LogMessage8",
                            "name": "LogMessage8",
                            "description": "Simple Log Message Activity",
                            "activity": {
                                "ref": "#log",
                                "input": {
                                    "Log Level": "INFO",
                                    "flowInfo": false,
                                    "message": "=$error.message"
                                }
                            }
                        },
                        {
                            "id": "Return",
                            "name": "Return",
                            "description": "Simple Return Activity",
                            "activity": {
                                "ref": "#actreturn"
                            }
                        }
                    ],
                    "links": [
                        {
                            "id": 21,
                            "from": "LogMessage8",
                            "to": "Return",
                            "type": "default"
                        }
                    ]
                },
                "metadata": {
                    "input": [
                        {
                            "name": "id",
                            "type": "string"
                        },
                        {
                            "name": "deviceId",
                            "type": "string"
                        },
                        {
                            "name": "providerId",
                            "type": "string"
                        },
                        {
                            "name": "networkType",
                            "type": "string"
                        },
                        {
                            "name": "deviceType",
                            "type": "string"
                        },
                        {
                            "name": "origin",
                            "type": "float64"
                        },
                        {
                            "name": "sensor_origin",
                            "type": "float64"
                        },
                        {
                            "name": "sensorId",
                            "type": "string"
                        },
                        {
                            "name": "channel",
                            "type": "string"
                        },
                        {
                            "name": "name",
                            "type": "string"
                        },
                        {
                            "name": "value",
                            "type": "string"
                        },
                        {
                            "name": "eventime",
                            "type": "float64"
                        }
                    ],
                    "output": [
                        {
                            "name": "message",
                            "type": "string"
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\n    \"id\": \"b710ad27-4eb0-417f-96b8-02830642d8a1\",\n    \"deviceId\": \"Random-Integer-Device\",\n    \"providerId\": \"TIBCO\",\n    \"networkType\": \"BLE\",\n    \"deviceType\": \"Temperature\",\n    \"origin\": 1564113092999608300,\n    \"sensor_origin\": 1564113092992998000,\n    \"sensorId\": \"Random-Integer-Device\",\n    \"channel\": \"MQTT\",\n    \"name\": \"RandomValue_Int64\",\n    \"value\": \"-6427502364192134104\",\n    \"eventime\": 1564113092992998000\n}",
                        "output": "{\n    \"message\": \"value\"\n}"
                    }
                }
            }
        },
        {
            "id": "flow:PostgresService6",
            "data": {
                "name": "PostgresService6",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "StartaSubFlow1",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "StartaSubFlow1",
                        "to": "PostgreSQLQuery",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "PostgreSQLQuery",
                        "to": "Mapper4",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "Mapper4",
                        "to": "Mapper3",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "Mapper3",
                        "to": "Mapper",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "Mapper",
                        "to": "LogMessage4",
                        "type": "default"
                    },
                    {
                        "id": 7,
                        "from": "LogMessage4",
                        "to": "Mapper5",
                        "type": "expression",
                        "value": "$activity[Mapper].output.returncode==200"
                    },
                    {
                        "id": 8,
                        "from": "Mapper5",
                        "to": "PostgreSQLInsert1",
                        "type": "default"
                    },
                    {
                        "id": 9,
                        "from": "PostgreSQLInsert1",
                        "to": "LogMessage2",
                        "type": "default"
                    },
                    {
                        "id": 10,
                        "from": "LogMessage2",
                        "to": "Return1",
                        "type": "default"
                    },
                    {
                        "id": 11,
                        "from": "LogMessage4",
                        "to": "PostgreSQLInsert3",
                        "type": "expression",
                        "value": "$activity[Mapper].output.returncode!=200"
                    },
                    {
                        "id": 12,
                        "from": "PostgreSQLInsert3",
                        "to": "LogMessage7",
                        "type": "default"
                    },
                    {
                        "id": 13,
                        "from": "LogMessage7",
                        "to": "Return2",
                        "type": "default"
                    },
                    {
                        "id": 14,
                        "from": "Mapper",
                        "to": "LogMessage5",
                        "type": "expression",
                        "value": "$activity[Mapper].output.count==0"
                    },
                    {
                        "id": 15,
                        "from": "LogMessage5",
                        "to": "PostgreSQLInsert2",
                        "type": "default"
                    },
                    {
                        "id": 16,
                        "from": "PostgreSQLInsert2",
                        "to": "LogMessage6",
                        "type": "default"
                    },
                    {
                        "id": 17,
                        "from": "LogMessage6",
                        "to": "PostgreSQLQuery1",
                        "type": "default"
                    },
                    {
                        "id": 18,
                        "from": "PostgreSQLQuery1",
                        "to": "Mapper1",
                        "type": "default"
                    },
                    {
                        "id": 19,
                        "from": "Mapper1",
                        "to": "Mapper6",
                        "type": "expression",
                        "value": "$activity[Mapper1].output.count==0"
                    },
                    {
                        "id": 20,
                        "from": "Mapper6",
                        "to": "PostgreSQLInsert",
                        "type": "default"
                    },
                    {
                        "id": 21,
                        "from": "PostgreSQLInsert",
                        "to": "LogMessage3",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": true,
                                "message": "=\"PostgresService : \"+$flow.id+\",\"+$flow.deviceId+\",\"+$flow.origin+\",\"+$flow.name+\",\"+string.substringAfter($flow.name, \"_\")+\",\"+$flow.value"
                            }
                        }
                    },
                    {
                        "id": "StartaSubFlow1",
                        "name": "StartaSubFlow1",
                        "description": "Simple SubFlow Activity",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:ConfigService"
                            },
                            "input": {
                                "method": "GET",
                                "deviceid": "=$flow.deviceId",
                                "attrname": "=$flow.name",
                                "attrtype": "",
                                "resourceid": "=$flow.sensorId"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"method\":{\"type\":\"string\"},\"deviceid\":{\"type\":\"string\"},\"resourceid\":{\"type\":\"string\"},\"attrname\":{\"type\":\"string\"},\"attrtype\":{\"type\":\"string\"},\"readwrite\":{\"type\":\"string\"},\"minimum\":{\"type\":\"number\"},\"maximum\":{\"type\":\"number\"},\"defaultvalue\":{\"type\":\"number\"},\"scale\":{\"type\":\"number\"},\"unittype\":{\"type\":\"string\"},\"unitreadwrite\":{\"type\":\"string\"},\"unitdefaultvalue\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"method\": \"value\",\n    \"deviceid\": \"value\",\n    \"resourceid\": \"value\",\n    \"attrname\": \"value\",\n    \"attrtype\": \"value\",\n    \"readwrite\": \"RW\",\n    \"minimum\": 1,\n    \"maximum\": 3,\n    \"defaultvalue\": 2,\n    \"scale\": 1,\n    \"unittype\": \"string\",\n    \"unitreadwrite\": \"RW\",\n    \"unitdefaultvalue\": \"lunen\"\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"number\"},\"data\":{\"type\":\"object\",\"properties\":{\"deviceid\":{\"type\":\"string\"},\"resourceid\":{\"type\":\"string\"},\"attrname\":{\"type\":\"string\"},\"attrtype\":{\"type\":\"string\"},\"readwrite\":{\"type\":\"string\"},\"minimum\":{\"type\":\"number\"},\"maximum\":{\"type\":\"number\"},\"defaultvalue\":{\"type\":\"number\"},\"scale\":{\"type\":\"number\"},\"unittype\":{\"type\":\"string\"},\"unitreadwrite\":{\"type\":\"string\"},\"unitdefaultvalue\":{\"type\":\"string\"}}},\"message\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"code\": 200,\n    \"data\": {\n        \"deviceid\": \"value\",\n        \"resourceid\": \"value\",\n        \"attrname\": \"value\",\n        \"attrtype\": \"value\",\n        \"readwrite\": \"RW\",\n        \"minimum\": 1,\n        \"maximum\": 3,\n        \"defaultvalue\": 2,\n        \"scale\": 1,\n        \"unittype\": \"string\",\n        \"unitreadwrite\": \"RW\",\n        \"unitdefaultvalue\": \"lunen\"\n    },\n    \"message\":\"value\"\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "PostgreSQLQuery",
                        "name": "PostgreSQLQuery",
                        "description": "This activity executes query on a PostgreSQL database",
                        "activity": {
                            "ref": "#query",
                            "input": {
                                "Connection": {
                                    "type": "flogo:connector",
                                    "version": "2.1.0",
                                    "name": "postgresql-connector",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "PostgreSQL Connector",
                                    "description": "Connector to connect to a PostgreSQL database server",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-postgres.git/src/app/PostgreSQL/connector/connection",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "value": "tibcolabs_air_v164"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "host",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Host",
                                                "description": "PostgreSQL Database Host name",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Host\"]"
                                        },
                                        {
                                            "name": "port",
                                            "type": "integer",
                                            "required": true,
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Port\"]",
                                            "display": {
                                                "name": "Port",
                                                "description": "PostgreSQL Database Port",
                                                "type": "integer",
                                                "visible": true,
                                                "appPropertySupport": true
                                            }
                                        },
                                        {
                                            "name": "databaseName",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Database Name",
                                                "description": "Name of the Database",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Database_Name\"]"
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "User",
                                                "description": "Name of the Database User",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.User\"]"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Password",
                                                "description": "PostgreSQL Database Port",
                                                "type": "password",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Password\"]"
                                        },
                                        {
                                            "name": "onprem",
                                            "type": "boolean",
                                            "required": true,
                                            "value": false,
                                            "display": {
                                                "name": "On Premise DBService",
                                                "description": "Flag to indicate that the dbsevice is accessed via a tibtunnel",
                                                "visible": true,
                                                "readonly": false,
                                                "valid": true
                                            }
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/PostgreSQL/connector/connection/connector.json",
                                    "display": {
                                        "description": "Connector to connect to a PostgreSQL database server",
                                        "category": "PostgreSQL",
                                        "visible": true,
                                        "smallIcon": "icons/ic-postgres-connection@2x.png",
                                        "largeIcon": "icons/ic-postgres-connection@3x.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect"
                                        }
                                    ],
                                    "feature": {},
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "isValid": true,
                                    "lastUpdatedTime": 1569404012833,
                                    "createdTime": 1569404012833,
                                    "user": "eihkymzngv24drdfeyg3otoucgynht2q",
                                    "subscriptionId": "TIB_SUB_01BB7F22MGX01K6MQK0TD02DYV",
                                    "id": "8a71d910-df77-11e9-88b9-15625b17a0d3",
                                    "connectorName": "tibcolabs_air_v164",
                                    "connectorDescription": " "
                                },
                                "QueryName": "",
                                "Query": "SELECT * from resource where deviceid=?deviceid and resourceid=?resourceid;",
                                "Fields": "[{\"FieldName\":\"resourceid\",\"Type\":\"VARCHAR\",\"Selected\":true,\"Parameter\":true,\"isEditable\":false},{\"FieldName\":\"interface\",\"Type\":\"VARCHAR\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false},{\"FieldName\":\"updated\",\"Type\":\"TIMESTAMP\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false},{\"FieldName\":\"deviceid\",\"Type\":\"VARCHAR\",\"Selected\":true,\"Parameter\":true,\"isEditable\":false},{\"FieldName\":\"normalize\",\"Type\":\"BOOLEAN\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false},{\"FieldName\":\"pintype\",\"Type\":\"VARCHAR\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false},{\"FieldName\":\"description\",\"Type\":\"VARCHAR\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false},{\"FieldName\":\"name\",\"Type\":\"VARCHAR\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false},{\"FieldName\":\"created\",\"Type\":\"TIMESTAMP\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false},{\"FieldName\":\"pinnum\",\"Type\":\"VARCHAR\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false}]",
                                "State": "d7c8ec3c-bbce-45e9-9e27-9b2897beab41SELECT * from resource where deviceid=?deviceid and resourceid=?resourceid;",
                                "input": {
                                    "mapping": {
                                        "parameters": {
                                            "deviceid": "=$flow.deviceId",
                                            "resourceid": "=$flow.sensorId"
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"resourceid\":{\"type\":\"string\"},\"deviceid\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"resourceid\":{\"type\":\"string\"},\"deviceid\":{\"type\":\"string\"}}}}}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"resourceid\":{\"type\":\"string\"},\"interface\":{\"type\":\"string\"},\"updated\":{\"type\":\"string\",\"format\":\"time\"},\"deviceid\":{\"type\":\"string\"},\"normalize\":{\"type\":\"boolean\"},\"pintype\":{\"type\":\"string\"},\"description\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"created\":{\"type\":\"string\",\"format\":\"time\"},\"pinnum\":{\"type\":\"string\"}}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"resourceid\":{\"type\":\"string\"},\"interface\":{\"type\":\"string\"},\"updated\":{\"type\":\"string\",\"format\":\"time\"},\"deviceid\":{\"type\":\"string\"},\"normalize\":{\"type\":\"boolean\"},\"pintype\":{\"type\":\"string\"},\"description\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"created\":{\"type\":\"string\",\"format\":\"time\"},\"pinnum\":{\"type\":\"string\"}}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Mapper4",
                        "name": "Mapper4",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "values": {
                                            "id": "=$flow.id",
                                            "channel": "=$flow.channel",
                                            "attrname": "=$flow.name",
                                            "attrtype": "=$activity[StartaSubFlow1].data.attrtype",
                                            "attrvalue": "=$flow.value",
                                            "deviceid": "=$flow.deviceId",
                                            "resourceid": "=$flow.sensorId",
                                            "battery": 0,
                                            "origin": "=$flow.origin",
                                            "received": "=$flow.sensor_origin"
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"values\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"deviceid\":{\"type\":\"string\"},\"resourceid\":{\"type\":\"string\"},\"channel\":{\"type\":\"string\"},\"battery\":{\"type\":\"number\"},\"origin\":{\"type\":\"number\"},\"received\":{\"type\":\"number\"},\"attrname\":{\"type\":\"string\"},\"attrtype\":{\"type\":\"string\"},\"attrvalue\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\n    \"values\":\n        {\n            \"id\":\"value\", \n            \"deviceid\":\"value\", \n            \"resourceid\":\"value\", \n            \"channel\":\"MQTT\", \n            \"battery\":0.0, \n            \"origin\":0, \n            \"received\":0, \n            \"attrname\":\"value\", \n            \"attrtype\":\"Int8\", \n            \"attrvalue\":\"999\"        \n        }\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"values\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"deviceid\": {\n          \"type\": \"string\"\n        },\n        \"resourceid\": {\n          \"type\": \"string\"\n        },\n        \"channel\": {\n          \"type\": \"string\"\n        },\n        \"battery\": {\n          \"type\": \"number\"\n        },\n        \"origin\": {\n          \"type\": \"number\"\n        },\n        \"received\": {\n          \"type\": \"number\"\n        },\n        \"attrname\": {\n          \"type\": \"string\"\n        },\n        \"attrtype\": {\n          \"type\": \"string\"\n        },\n        \"attrvalue\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"values\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"deviceid\": {\n          \"type\": \"string\"\n        },\n        \"resourceid\": {\n          \"type\": \"string\"\n        },\n        \"channel\": {\n          \"type\": \"string\"\n        },\n        \"battery\": {\n          \"type\": \"number\"\n        },\n        \"origin\": {\n          \"type\": \"number\"\n        },\n        \"received\": {\n          \"type\": \"number\"\n        },\n        \"attrname\": {\n          \"type\": \"string\"\n        },\n        \"attrtype\": {\n          \"type\": \"string\"\n        },\n        \"attrvalue\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Mapper3",
                        "name": "Mapper3",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "inputs": "=array.create($activity[Mapper4].output.values)"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"inputs\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"deviceid\":{\"type\":\"string\"},\"resourceid\":{\"type\":\"string\"},\"channel\":{\"type\":\"string\"},\"battery\":{\"type\":\"number\"},\"origin\":{\"type\":\"number\"},\"received\":{\"type\":\"number\"},\"attrname\":{\"type\":\"string\"},\"attrtype\":{\"type\":\"string\"},\"attrvalue\":{\"type\":\"string\"}}}}}}",
                                        "fe_metadata": "{\n    \"inputs\":\n    [\n        {\n            \"id\":\"value\", \n            \"deviceid\":\"value\", \n            \"resourceid\":\"value\", \n            \"channel\":\"MQTT\", \n            \"battery\":0.0, \n            \"origin\":0, \n            \"received\":0, \n            \"attrname\":\"value\", \n            \"attrtype\":\"Int8\", \n            \"attrvalue\":\"999\"        \n        }\n    ]\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"inputs\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"deviceid\": {\n            \"type\": \"string\"\n          },\n          \"resourceid\": {\n            \"type\": \"string\"\n          },\n          \"channel\": {\n            \"type\": \"string\"\n          },\n          \"battery\": {\n            \"type\": \"number\"\n          },\n          \"origin\": {\n            \"type\": \"number\"\n          },\n          \"received\": {\n            \"type\": \"number\"\n          },\n          \"attrname\": {\n            \"type\": \"string\"\n          },\n          \"attrtype\": {\n            \"type\": \"string\"\n          },\n          \"attrvalue\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"inputs\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"deviceid\": {\n            \"type\": \"string\"\n          },\n          \"resourceid\": {\n            \"type\": \"string\"\n          },\n          \"channel\": {\n            \"type\": \"string\"\n          },\n          \"battery\": {\n            \"type\": \"number\"\n          },\n          \"origin\": {\n            \"type\": \"number\"\n          },\n          \"received\": {\n            \"type\": \"number\"\n          },\n          \"attrname\": {\n            \"type\": \"string\"\n          },\n          \"attrtype\": {\n            \"type\": \"string\"\n          },\n          \"attrvalue\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Mapper",
                        "name": "Mapper",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "count": "=array.count($activity[PostgreSQLQuery].Output.records)",
                                        "sensordatatype": "=$activity[StartaSubFlow1].data.attrtype",
                                        "returncode": "=$activity[StartaSubFlow1].code"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"count\":{\"type\":\"number\"},\"sensordatatype\":{\"type\":\"string\"},\"returncode\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\n    \"count\":1,\n    \"sensordatatype\":\"Int8\",\n    \"returncode\":200\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"count\": {\n      \"type\": \"number\"\n    },\n    \"sensordatatype\": {\n      \"type\": \"string\"\n    },\n    \"returncode\": {\n      \"type\": \"number\"\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"count\": {\n      \"type\": \"number\"\n    },\n    \"sensordatatype\": {\n      \"type\": \"string\"\n    },\n    \"returncode\": {\n      \"type\": \"number\"\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage4",
                        "name": "LogMessage4",
                        "description": "Simple Log Message Activity",
                        "settings": {
                            "iterate": "=$activity[PostgreSQLQuery].Output.records"
                        },
                        "type": "iterator",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=\"PostgresService4 : \"+$activity[StartaSubFlow1].code"
                            }
                        }
                    },
                    {
                        "id": "Mapper5",
                        "name": "Mapper5",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "values": "=array.create($activity[Mapper4].output.values)"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"deviceid\":{\"type\":\"string\"},\"resourceid\":{\"type\":\"string\"},\"channel\":{\"type\":\"string\"},\"battery\":{\"type\":\"number\"},\"origin\":{\"type\":\"number\"},\"received\":{\"type\":\"number\"},\"attrname\":{\"type\":\"string\"},\"attrtype\":{\"type\":\"string\"},\"attrvalue\":{\"type\":\"string\"}}}}}}",
                                        "fe_metadata": "{\n    \"values\":\n    [\n        {\n            \"id\":\"value\", \n            \"deviceid\":\"value\", \n            \"resourceid\":\"value\", \n            \"channel\":\"MQTT\", \n            \"battery\":0.0, \n            \"origin\":0, \n            \"received\":0, \n            \"attrname\":\"value\", \n            \"attrtype\":\"Int8\", \n            \"attrvalue\":\"999\"        \n        }\n    ]\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"values\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"deviceid\": {\n            \"type\": \"string\"\n          },\n          \"resourceid\": {\n            \"type\": \"string\"\n          },\n          \"channel\": {\n            \"type\": \"string\"\n          },\n          \"battery\": {\n            \"type\": \"number\"\n          },\n          \"origin\": {\n            \"type\": \"number\"\n          },\n          \"received\": {\n            \"type\": \"number\"\n          },\n          \"attrname\": {\n            \"type\": \"string\"\n          },\n          \"attrtype\": {\n            \"type\": \"string\"\n          },\n          \"attrvalue\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"values\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"deviceid\": {\n            \"type\": \"string\"\n          },\n          \"resourceid\": {\n            \"type\": \"string\"\n          },\n          \"channel\": {\n            \"type\": \"string\"\n          },\n          \"battery\": {\n            \"type\": \"number\"\n          },\n          \"origin\": {\n            \"type\": \"number\"\n          },\n          \"received\": {\n            \"type\": \"number\"\n          },\n          \"attrname\": {\n            \"type\": \"string\"\n          },\n          \"attrtype\": {\n            \"type\": \"string\"\n          },\n          \"attrvalue\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "PostgreSQLInsert1",
                        "name": "PostgreSQLInsert1",
                        "description": "This activity executes insert on a PostgreSQL database",
                        "activity": {
                            "ref": "#insert",
                            "input": {
                                "Connection": {
                                    "type": "flogo:connector",
                                    "version": "2.1.0",
                                    "name": "postgresql-connector",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "PostgreSQL Connector",
                                    "description": "Connector to connect to a PostgreSQL database server",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-postgres.git/src/app/PostgreSQL/connector/connection",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "value": "tibcolabs_air_v164"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "host",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Host",
                                                "description": "PostgreSQL Database Host name",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Host\"]"
                                        },
                                        {
                                            "name": "port",
                                            "type": "integer",
                                            "required": true,
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Port\"]",
                                            "display": {
                                                "name": "Port",
                                                "description": "PostgreSQL Database Port",
                                                "type": "integer",
                                                "visible": true,
                                                "appPropertySupport": true
                                            }
                                        },
                                        {
                                            "name": "databaseName",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Database Name",
                                                "description": "Name of the Database",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Database_Name\"]"
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "User",
                                                "description": "Name of the Database User",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.User\"]"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Password",
                                                "description": "PostgreSQL Database Port",
                                                "type": "password",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Password\"]"
                                        },
                                        {
                                            "name": "onprem",
                                            "type": "boolean",
                                            "required": true,
                                            "value": false,
                                            "display": {
                                                "name": "On Premise DBService",
                                                "description": "Flag to indicate that the dbsevice is accessed via a tibtunnel",
                                                "visible": true,
                                                "readonly": false,
                                                "valid": true
                                            }
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/PostgreSQL/connector/connection/connector.json",
                                    "display": {
                                        "description": "Connector to connect to a PostgreSQL database server",
                                        "category": "PostgreSQL",
                                        "visible": true,
                                        "smallIcon": "icons/ic-postgres-connection@2x.png",
                                        "largeIcon": "icons/ic-postgres-connection@3x.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect"
                                        }
                                    ],
                                    "feature": {},
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "isValid": true,
                                    "lastUpdatedTime": 1569404012833,
                                    "createdTime": 1569404012833,
                                    "user": "eihkymzngv24drdfeyg3otoucgynht2q",
                                    "subscriptionId": "TIB_SUB_01BB7F22MGX01K6MQK0TD02DYV",
                                    "id": "8a71d910-df77-11e9-88b9-15625b17a0d3",
                                    "connectorName": "tibcolabs_air_v164",
                                    "connectorDescription": " "
                                },
                                "QueryName": "",
                                "Query": "INSERT INTO sensor_data (id, deviceid, resourceid, channel, battery, origin, received, attrname, attrtype, attrvalue) VALUES (?id, ?deviceid, ?resourceid, ?channel, ?battery, ?origin, ?received, ?attrname, ?attrtype, ?attrvalue);",
                                "Fields": "[{\"FieldName\":\"battery\",\"Type\":\"FLOAT4\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"resourceid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"id\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"attrvalue\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"origin\",\"Type\":\"INT8\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"deviceid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"channel\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"attrtype\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"received\",\"Type\":\"INT8\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"attrname\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true}]",
                                "State": "b36d1d72-8988-4bf5-8bcf-c1772d6664cdINSERT INTO sensor_data (id, deviceid, resourceid, channel, battery, origin, received, attrname, attrtype, attrvalue) VALUES (?id, ?deviceid, ?resourceid, ?channel, ?battery, ?origin, ?received, ?attrname, ?attrtype, ?attrvalue);",
                                "input": {
                                    "mapping": {
                                        "values": {
                                            "@foreach($activity[\"Mapper5\"].output.values,values)": {
                                                "id": "=$loop.id",
                                                "batterylife": "=$loop.batteryLife",
                                                "attrvalue": "=$loop.attrvalue",
                                                "lastupdatetime": "=$loop.lastupdatetime",
                                                "attrname": "=$loop.attrname",
                                                "attrtype": "=$loop.attrtype",
                                                "sensorid": "=$loop.sensorId",
                                                "channel": "=$loop.channel",
                                                "origintime": "=$loop.origintime",
                                                "providerid": "=$loop.providerId",
                                                "deviceid": "=$loop.deviceid",
                                                "battery": "=$loop.battery",
                                                "resourceid": "=$loop.resourceid",
                                                "origin": "=$loop.origin",
                                                "received": "=$loop.received"
                                            }
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"battery\":{\"type\":\"number\"},\"resourceid\":{\"type\":\"string\"},\"id\":{\"type\":\"string\"},\"attrvalue\":{\"type\":\"string\"},\"origin\":{\"type\":\"integer\"},\"deviceid\":{\"type\":\"string\"},\"channel\":{\"type\":\"string\"},\"attrtype\":{\"type\":\"string\"},\"received\":{\"type\":\"integer\"},\"attrname\":{\"type\":\"string\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"battery\":{\"type\":\"number\"},\"resourceid\":{\"type\":\"string\"},\"id\":{\"type\":\"string\"},\"attrvalue\":{\"type\":\"string\"},\"origin\":{\"type\":\"integer\"},\"deviceid\":{\"type\":\"string\"},\"channel\":{\"type\":\"string\"},\"attrtype\":{\"type\":\"string\"},\"received\":{\"type\":\"integer\"},\"attrname\":{\"type\":\"string\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{}}}}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage2",
                        "name": "LogMessage2",
                        "description": "Simple Log Message Activity",
                        "settings": {
                            "iterate": "=$activity[PostgreSQLInsert1].Output.records"
                        },
                        "type": "iterator",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=\"PostgresService : \"+string.tostring($iteration[value])"
                            }
                        }
                    },
                    {
                        "id": "Return1",
                        "name": "Return1",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "message": "success"
                                }
                            }
                        }
                    },
                    {
                        "id": "PostgreSQLInsert3",
                        "name": "PostgreSQLInsert3",
                        "description": "This activity executes insert on a PostgreSQL database",
                        "activity": {
                            "ref": "#insert",
                            "input": {
                                "Connection": {
                                    "type": "flogo:connector",
                                    "version": "2.1.0",
                                    "name": "postgresql-connector",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "PostgreSQL Connector",
                                    "description": "Connector to connect to a PostgreSQL database server",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-postgres.git/src/app/PostgreSQL/connector/connection",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "value": "tibcolabs_air_v164"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "host",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Host",
                                                "description": "PostgreSQL Database Host name",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Host\"]"
                                        },
                                        {
                                            "name": "port",
                                            "type": "integer",
                                            "required": true,
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Port\"]",
                                            "display": {
                                                "name": "Port",
                                                "description": "PostgreSQL Database Port",
                                                "type": "integer",
                                                "visible": true,
                                                "appPropertySupport": true
                                            }
                                        },
                                        {
                                            "name": "databaseName",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Database Name",
                                                "description": "Name of the Database",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Database_Name\"]"
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "User",
                                                "description": "Name of the Database User",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.User\"]"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Password",
                                                "description": "PostgreSQL Database Port",
                                                "type": "password",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Password\"]"
                                        },
                                        {
                                            "name": "onprem",
                                            "type": "boolean",
                                            "required": true,
                                            "value": false,
                                            "display": {
                                                "name": "On Premise DBService",
                                                "description": "Flag to indicate that the dbsevice is accessed via a tibtunnel",
                                                "visible": true,
                                                "readonly": false,
                                                "valid": true
                                            }
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/PostgreSQL/connector/connection/connector.json",
                                    "display": {
                                        "description": "Connector to connect to a PostgreSQL database server",
                                        "category": "PostgreSQL",
                                        "visible": true,
                                        "smallIcon": "icons/ic-postgres-connection@2x.png",
                                        "largeIcon": "icons/ic-postgres-connection@3x.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect"
                                        }
                                    ],
                                    "feature": {},
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "isValid": true,
                                    "lastUpdatedTime": 1569404012833,
                                    "createdTime": 1569404012833,
                                    "user": "eihkymzngv24drdfeyg3otoucgynht2q",
                                    "subscriptionId": "TIB_SUB_01BB7F22MGX01K6MQK0TD02DYV",
                                    "id": "8a71d910-df77-11e9-88b9-15625b17a0d3",
                                    "connectorName": "tibcolabs_air_v164",
                                    "connectorDescription": " "
                                },
                                "QueryName": "",
                                "Query": "INSERT INTO sensor_data (id, deviceid, resourceid, channel, battery, origin, received, attrname, attrtype, attrvalue) VALUES (?id, ?deviceid, ?resourceid, ?channel, ?battery, ?origin, ?received, ?attrname, ?attrtype, ?attrvalue);",
                                "Fields": "[{\"FieldName\":\"deviceid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"origin\",\"Type\":\"INT8\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"id\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"resourceid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"attrname\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"received\",\"Type\":\"INT8\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"channel\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"attrtype\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"battery\",\"Type\":\"FLOAT4\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"attrvalue\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true}]",
                                "State": "a789aef7-cb76-430b-92b1-6df80492713aINSERT INTO sensor_data (id, deviceid, resourceid, channel, battery, origin, received, attrname, attrtype, attrvalue) VALUES (?id, ?deviceid, ?resourceid, ?channel, ?battery, ?origin, ?received, ?attrname, ?attrtype, ?attrvalue);",
                                "input": {
                                    "mapping": {
                                        "values": {
                                            "@foreach($activity[\"Mapper3\"].output.inputs,values)": {
                                                "id": "=$loop.id",
                                                "attrvalue": "=$loop.attrvalue",
                                                "deviceid": "=$loop.deviceid",
                                                "origintime": "=$loop.origintime",
                                                "lastupdatetime": "=$loop.lastupdatetime",
                                                "attrtype": "Float64",
                                                "channel": "=$loop.channel",
                                                "attrname": "=$loop.attrname",
                                                "sensorid": "=$loop.sensorId",
                                                "providerid": "=$loop.providerId",
                                                "origin": "=$loop.origin",
                                                "resourceid": "=$loop.resourceid",
                                                "received": "=$loop.received",
                                                "battery": "=$loop.battery"
                                            }
                                        },
                                        "parameters": {
                                            "deviceId": "=$activity[Mapper3].output.inputs[0].deviceId",
                                            "batteryLife": 0,
                                            "sensorId": "=$activity[Mapper3].output.inputs[0].sensorId"
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"deviceid\":{\"type\":\"string\"},\"origin\":{\"type\":\"integer\"},\"id\":{\"type\":\"string\"},\"resourceid\":{\"type\":\"string\"},\"attrname\":{\"type\":\"string\"},\"received\":{\"type\":\"integer\"},\"channel\":{\"type\":\"string\"},\"attrtype\":{\"type\":\"string\"},\"battery\":{\"type\":\"number\"},\"attrvalue\":{\"type\":\"string\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"deviceid\":{\"type\":\"string\"},\"origin\":{\"type\":\"integer\"},\"id\":{\"type\":\"string\"},\"resourceid\":{\"type\":\"string\"},\"attrname\":{\"type\":\"string\"},\"received\":{\"type\":\"integer\"},\"channel\":{\"type\":\"string\"},\"attrtype\":{\"type\":\"string\"},\"battery\":{\"type\":\"number\"},\"attrvalue\":{\"type\":\"string\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{}}}}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage7",
                        "name": "LogMessage7",
                        "description": "Simple Log Message Activity",
                        "settings": {
                            "iterate": "=$activity[PostgreSQLInsert3].Output.records"
                        },
                        "type": "iterator",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=\"Postgres Service : \"+string.tostring($iteration[value])"
                            }
                        }
                    },
                    {
                        "id": "Return2",
                        "name": "Return2",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "message": "success"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage5",
                        "name": "LogMessage5",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($activity[Mapper].output.count)"
                            }
                        }
                    },
                    {
                        "id": "PostgreSQLInsert2",
                        "name": "PostgreSQLInsert2",
                        "description": "This activity executes insert on a PostgreSQL database",
                        "activity": {
                            "ref": "#insert",
                            "input": {
                                "Connection": {
                                    "type": "flogo:connector",
                                    "version": "2.1.0",
                                    "name": "postgresql-connector",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "PostgreSQL Connector",
                                    "description": "Connector to connect to a PostgreSQL database server",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-postgres.git/src/app/PostgreSQL/connector/connection",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "value": "tibcolabs_air_v164"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "host",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Host",
                                                "description": "PostgreSQL Database Host name",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Host\"]"
                                        },
                                        {
                                            "name": "port",
                                            "type": "integer",
                                            "required": true,
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Port\"]",
                                            "display": {
                                                "name": "Port",
                                                "description": "PostgreSQL Database Port",
                                                "type": "integer",
                                                "visible": true,
                                                "appPropertySupport": true
                                            }
                                        },
                                        {
                                            "name": "databaseName",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Database Name",
                                                "description": "Name of the Database",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Database_Name\"]"
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "User",
                                                "description": "Name of the Database User",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.User\"]"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Password",
                                                "description": "PostgreSQL Database Port",
                                                "type": "password",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Password\"]"
                                        },
                                        {
                                            "name": "onprem",
                                            "type": "boolean",
                                            "required": true,
                                            "value": false,
                                            "display": {
                                                "name": "On Premise DBService",
                                                "description": "Flag to indicate that the dbsevice is accessed via a tibtunnel",
                                                "visible": true,
                                                "readonly": false,
                                                "valid": true
                                            }
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/PostgreSQL/connector/connection/connector.json",
                                    "display": {
                                        "description": "Connector to connect to a PostgreSQL database server",
                                        "category": "PostgreSQL",
                                        "visible": true,
                                        "smallIcon": "icons/ic-postgres-connection@2x.png",
                                        "largeIcon": "icons/ic-postgres-connection@3x.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect"
                                        }
                                    ],
                                    "feature": {},
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "isValid": true,
                                    "lastUpdatedTime": 1569404012833,
                                    "createdTime": 1569404012833,
                                    "user": "eihkymzngv24drdfeyg3otoucgynht2q",
                                    "subscriptionId": "TIB_SUB_01BB7F22MGX01K6MQK0TD02DYV",
                                    "id": "8a71d910-df77-11e9-88b9-15625b17a0d3",
                                    "connectorName": "tibcolabs_air_v164",
                                    "connectorDescription": " "
                                },
                                "QueryName": "",
                                "Query": "insert into resource(resourceid, deviceid, name, description) values(?resourceid, ?deviceid, ?name, ?description);",
                                "Fields": "[{\"FieldName\":\"name\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"description\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"resourceid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"deviceid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true}]",
                                "State": "d5d9a07b-0142-4cd2-a4eb-a11d599ac7b7insert into resource(resourceid, deviceid, name, description) values(?resourceid, ?deviceid, ?name, ?description);",
                                "input": {
                                    "mapping": {
                                        "values": {
                                            "@foreach($activity[\"Mapper3\"].output.inputs,values)": {
                                                "sensorid": "=$loop.sensorId",
                                                "providerid": "TIBCO",
                                                "lastupdatetime": "=$loop.lastupdatetime",
                                                "deviceid": "=$loop.deviceid",
                                                "name": "=$loop.resourceid",
                                                "resourceid": "=$loop.resourceid",
                                                "description": "auto learned from data"
                                            }
                                        },
                                        "parameters": {
                                            "deviceId": "=$flow.deviceId",
                                            "sensorId": "=$activity[Mapper3].output.inputs[0].sensorId",
                                            "origin": "=$activity[Mapper3].output.inputs[0].origintime"
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"description\":{\"type\":\"string\"},\"resourceid\":{\"type\":\"string\"},\"deviceid\":{\"type\":\"string\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"description\":{\"type\":\"string\"},\"resourceid\":{\"type\":\"string\"},\"deviceid\":{\"type\":\"string\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{}}}}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage6",
                        "name": "LogMessage6",
                        "description": "Simple Log Message Activity",
                        "settings": {
                            "iterate": "=$activity[PostgreSQLInsert2].Output.records"
                        },
                        "type": "iterator",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($iteration[value])"
                            }
                        }
                    },
                    {
                        "id": "PostgreSQLQuery1",
                        "name": "PostgreSQLQuery1",
                        "description": "This activity executes query on a PostgreSQL database",
                        "activity": {
                            "ref": "#query",
                            "input": {
                                "Connection": {
                                    "type": "flogo:connector",
                                    "version": "2.1.0",
                                    "name": "postgresql-connector",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "PostgreSQL Connector",
                                    "description": "Connector to connect to a PostgreSQL database server",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-postgres.git/src/app/PostgreSQL/connector/connection",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "value": "tibcolabs_air_v164"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "host",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Host",
                                                "description": "PostgreSQL Database Host name",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Host\"]"
                                        },
                                        {
                                            "name": "port",
                                            "type": "integer",
                                            "required": true,
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Port\"]",
                                            "display": {
                                                "name": "Port",
                                                "description": "PostgreSQL Database Port",
                                                "type": "integer",
                                                "visible": true,
                                                "appPropertySupport": true
                                            }
                                        },
                                        {
                                            "name": "databaseName",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Database Name",
                                                "description": "Name of the Database",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Database_Name\"]"
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "User",
                                                "description": "Name of the Database User",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.User\"]"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Password",
                                                "description": "PostgreSQL Database Port",
                                                "type": "password",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Password\"]"
                                        },
                                        {
                                            "name": "onprem",
                                            "type": "boolean",
                                            "required": true,
                                            "value": false,
                                            "display": {
                                                "name": "On Premise DBService",
                                                "description": "Flag to indicate that the dbsevice is accessed via a tibtunnel",
                                                "visible": true,
                                                "readonly": false,
                                                "valid": true
                                            }
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/PostgreSQL/connector/connection/connector.json",
                                    "display": {
                                        "description": "Connector to connect to a PostgreSQL database server",
                                        "category": "PostgreSQL",
                                        "visible": true,
                                        "smallIcon": "icons/ic-postgres-connection@2x.png",
                                        "largeIcon": "icons/ic-postgres-connection@3x.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect"
                                        }
                                    ],
                                    "feature": {},
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "isValid": true,
                                    "lastUpdatedTime": 1569404012833,
                                    "createdTime": 1569404012833,
                                    "user": "eihkymzngv24drdfeyg3otoucgynht2q",
                                    "subscriptionId": "TIB_SUB_01BB7F22MGX01K6MQK0TD02DYV",
                                    "id": "8a71d910-df77-11e9-88b9-15625b17a0d3",
                                    "connectorName": "tibcolabs_air_v164",
                                    "connectorDescription": " "
                                },
                                "QueryName": "",
                                "Query": "SELECT count(*) from device where deviceid=?deviceid;",
                                "Fields": "[{\"FieldName\":\"count\",\"Type\":\"BIGINT\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false},{\"FieldName\":\"deviceid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false}]",
                                "State": "63ce58d0-4048-4a90-b89d-378d306ae7c6SELECT count(*) from device where deviceid=?deviceid;",
                                "input": {
                                    "mapping": {
                                        "parameters": {
                                            "deviceid": "=$flow.deviceId"
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"deviceid\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"deviceid\":{\"type\":\"string\"}}}}}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"count\":{\"type\":\"integer\"}}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"count\":{\"type\":\"integer\"}}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Mapper1",
                        "name": "Mapper1",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "count": "=$activity[PostgreSQLQuery1].Output.records[0].count"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"count\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\n    \"count\":0\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"count\": {\n      \"type\": \"number\"\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"count\": {\n      \"type\": \"number\"\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Mapper6",
                        "name": "Mapper6",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "inputs": {
                                            "@foreach($activity[\"Mapper3\"].output.inputs,inputs)": {
                                                "deviceid": "=$loop.deviceid",
                                                "gatewayid": "default",
                                                "profileid": "default",
                                                "subscriptionid": "default",
                                                "name": "=$loop.deviceid",
                                                "description": "auto learned from data",
                                                "networktype": "=$flow.networkType",
                                                "devicetype": "=$flow.deviceType",
                                                "adminstate": "ENABLED",
                                                "operatingstate": "ACTIVE",
                                                "batterylife": "=$loop.battery"
                                            }
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"inputs\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"deviceid\":{\"type\":\"string\"},\"gatewayid\":{\"type\":\"string\"},\"profileid\":{\"type\":\"string\"},\"subscriptionid\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"description\":{\"type\":\"string\"},\"networktype\":{\"type\":\"string\"},\"devicetype\":{\"type\":\"string\"},\"adminstate\":{\"type\":\"string\"},\"operatingstate\":{\"type\":\"string\"},\"batterylife\":{\"type\":\"number\"},\"latitude\":{\"type\":\"number\"},\"longitude\":{\"type\":\"number\"}}}}}}",
                                        "fe_metadata": "{\n    \"inputs\":\n    [\n        {\n            \"deviceid\":\"value\", \n            \"gatewayid\":\"value\",\n            \"profileid\":\"value\",\n            \"subscriptionid\":\"value\",\n            \"name\":\"value\", \n            \"description\":\"value\",\n            \"networktype\":\"value\",\n            \"devicetype\":\"value\",\n            \"adminstate\":\"value\",\n            \"operatingstate\":\"value\",\n            \"batterylife\":0.0, \n            \"latitude\":0.0, \n            \"longitude\":0.0\n        }\n    ]\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"inputs\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"deviceid\": {\n            \"type\": \"string\"\n          },\n          \"gatewayid\": {\n            \"type\": \"string\"\n          },\n          \"profileid\": {\n            \"type\": \"string\"\n          },\n          \"subscriptionid\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"networktype\": {\n            \"type\": \"string\"\n          },\n          \"devicetype\": {\n            \"type\": \"string\"\n          },\n          \"adminstate\": {\n            \"type\": \"string\"\n          },\n          \"operatingstate\": {\n            \"type\": \"string\"\n          },\n          \"batterylife\": {\n            \"type\": \"number\"\n          },\n          \"latitude\": {\n            \"type\": \"number\"\n          },\n          \"longitude\": {\n            \"type\": \"number\"\n          }\n        }\n      }\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"inputs\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"deviceid\": {\n            \"type\": \"string\"\n          },\n          \"gatewayid\": {\n            \"type\": \"string\"\n          },\n          \"profileid\": {\n            \"type\": \"string\"\n          },\n          \"subscriptionid\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"networktype\": {\n            \"type\": \"string\"\n          },\n          \"devicetype\": {\n            \"type\": \"string\"\n          },\n          \"adminstate\": {\n            \"type\": \"string\"\n          },\n          \"operatingstate\": {\n            \"type\": \"string\"\n          },\n          \"batterylife\": {\n            \"type\": \"number\"\n          },\n          \"latitude\": {\n            \"type\": \"number\"\n          },\n          \"longitude\": {\n            \"type\": \"number\"\n          }\n        }\n      }\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "PostgreSQLInsert",
                        "name": "PostgreSQLInsert",
                        "description": "This activity executes insert on a PostgreSQL database",
                        "activity": {
                            "ref": "#insert",
                            "input": {
                                "Connection": {
                                    "type": "flogo:connector",
                                    "version": "2.1.0",
                                    "name": "postgresql-connector",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "PostgreSQL Connector",
                                    "description": "Connector to connect to a PostgreSQL database server",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-postgres.git/src/app/PostgreSQL/connector/connection",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "value": "tibcolabs_air_v164"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "host",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Host",
                                                "description": "PostgreSQL Database Host name",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Host\"]"
                                        },
                                        {
                                            "name": "port",
                                            "type": "integer",
                                            "required": true,
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Port\"]",
                                            "display": {
                                                "name": "Port",
                                                "description": "PostgreSQL Database Port",
                                                "type": "integer",
                                                "visible": true,
                                                "appPropertySupport": true
                                            }
                                        },
                                        {
                                            "name": "databaseName",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Database Name",
                                                "description": "Name of the Database",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Database_Name\"]"
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "User",
                                                "description": "Name of the Database User",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.User\"]"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Password",
                                                "description": "PostgreSQL Database Port",
                                                "type": "password",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Password\"]"
                                        },
                                        {
                                            "name": "onprem",
                                            "type": "boolean",
                                            "required": true,
                                            "value": false,
                                            "display": {
                                                "name": "On Premise DBService",
                                                "description": "Flag to indicate that the dbsevice is accessed via a tibtunnel",
                                                "visible": true,
                                                "readonly": false,
                                                "valid": true
                                            }
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/PostgreSQL/connector/connection/connector.json",
                                    "display": {
                                        "description": "Connector to connect to a PostgreSQL database server",
                                        "category": "PostgreSQL",
                                        "visible": true,
                                        "smallIcon": "icons/ic-postgres-connection@2x.png",
                                        "largeIcon": "icons/ic-postgres-connection@3x.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect"
                                        }
                                    ],
                                    "feature": {},
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "isValid": true,
                                    "lastUpdatedTime": 1569404012833,
                                    "createdTime": 1569404012833,
                                    "user": "eihkymzngv24drdfeyg3otoucgynht2q",
                                    "subscriptionId": "TIB_SUB_01BB7F22MGX01K6MQK0TD02DYV",
                                    "id": "8a71d910-df77-11e9-88b9-15625b17a0d3",
                                    "connectorName": "tibcolabs_air_v164",
                                    "connectorDescription": " "
                                },
                                "QueryName": "",
                                "Query": "INSERT INTO device (deviceid, gatewayid, profileid, subscriptionid, name, description, networktype, devicetype, adminstate, operatingstate, batterylife, latitude, longitude) VALUES (?deviceid, ?gatewayid, ?profileid, ?subscriptionid, ?name, ?description, ?networktype, ?devicetype, ?adminstate, ?operatingstate, ?batterylife, ?latitude, ?longitude);",
                                "Fields": "[{\"FieldName\":\"adminstate\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"batterylife\",\"Type\":\"FLOAT4\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"networktype\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"latitude\",\"Type\":\"FLOAT4\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"deviceid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"name\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"profileid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"devicetype\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"operatingstate\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"gatewayid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"longitude\",\"Type\":\"FLOAT4\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"subscriptionid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"description\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true}]",
                                "State": "cd8ed829-a501-43fc-9ff0-4af428d70476INSERT INTO device (deviceid, gatewayid, profileid, subscriptionid, name, description, networktype, devicetype, adminstate, operatingstate, batterylife, latitude, longitude) VALUES (?deviceid, ?gatewayid, ?profileid, ?subscriptionid, ?name, ?description, ?networktype, ?devicetype, ?adminstate, ?operatingstate, ?batterylife, ?latitude, ?longitude);",
                                "input": {
                                    "mapping": {
                                        "values": {
                                            "@foreach($activity[\"Mapper6\"].output.inputs,values)": {
                                                "lastupdatetime": "=$loop.lastupdatetime",
                                                "networktype": "=$loop.networktype",
                                                "devicetype": "=$loop.devicetype",
                                                "origintime": "=$flow.origin",
                                                "providerid": "=$flow.providerId",
                                                "deviceid": "=$loop.deviceid",
                                                "name": "=$loop.name",
                                                "latitude": "=$loop.latitude",
                                                "longitude": "=$loop.longitude",
                                                "description": "=$loop.description",
                                                "operatingstate": "=$loop.operatingstate",
                                                "adminstate": "=$loop.adminstate",
                                                "batterylife": "=$loop.batterylife",
                                                "profileid": "=$loop.profileid",
                                                "gatewayid": "=$loop.gatewayid",
                                                "subscriptionid": "=$loop.subscriptionid"
                                            }
                                        },
                                        "parameters": {
                                            "origin": "=$flow.origin",
                                            "deviceId": "=$flow.deviceId"
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"adminstate\":{\"type\":\"string\"},\"batterylife\":{\"type\":\"number\"},\"networktype\":{\"type\":\"string\"},\"latitude\":{\"type\":\"number\"},\"deviceid\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"profileid\":{\"type\":\"string\"},\"devicetype\":{\"type\":\"string\"},\"operatingstate\":{\"type\":\"string\"},\"gatewayid\":{\"type\":\"string\"},\"longitude\":{\"type\":\"number\"},\"subscriptionid\":{\"type\":\"string\"},\"description\":{\"type\":\"string\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"adminstate\":{\"type\":\"string\"},\"batterylife\":{\"type\":\"number\"},\"networktype\":{\"type\":\"string\"},\"latitude\":{\"type\":\"number\"},\"deviceid\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"profileid\":{\"type\":\"string\"},\"devicetype\":{\"type\":\"string\"},\"operatingstate\":{\"type\":\"string\"},\"gatewayid\":{\"type\":\"string\"},\"longitude\":{\"type\":\"number\"},\"subscriptionid\":{\"type\":\"string\"},\"description\":{\"type\":\"string\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{}}}}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage3",
                        "name": "LogMessage3",
                        "description": "Simple Log Message Activity",
                        "settings": {
                            "iterate": "=$activity[PostgreSQLInsert].Output.records"
                        },
                        "type": "iterator",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($iteration[value])"
                            }
                        }
                    }
                ],
                "errorHandler": {
                    "tasks": [
                        {
                            "id": "LogMessage8",
                            "name": "LogMessage8",
                            "description": "Simple Log Message Activity",
                            "activity": {
                                "ref": "#log",
                                "input": {
                                    "Log Level": "INFO",
                                    "flowInfo": false,
                                    "message": "=$error.message"
                                }
                            }
                        },
                        {
                            "id": "Return",
                            "name": "Return",
                            "description": "Simple Return Activity",
                            "activity": {
                                "ref": "#actreturn"
                            }
                        }
                    ],
                    "links": [
                        {
                            "id": 22,
                            "from": "LogMessage8",
                            "to": "Return",
                            "type": "default"
                        }
                    ]
                },
                "metadata": {
                    "input": [
                        {
                            "name": "id",
                            "type": "string"
                        },
                        {
                            "name": "deviceId",
                            "type": "string"
                        },
                        {
                            "name": "providerId",
                            "type": "string"
                        },
                        {
                            "name": "networkType",
                            "type": "string"
                        },
                        {
                            "name": "deviceType",
                            "type": "string"
                        },
                        {
                            "name": "origin",
                            "type": "float64"
                        },
                        {
                            "name": "sensor_origin",
                            "type": "float64"
                        },
                        {
                            "name": "sensorId",
                            "type": "string"
                        },
                        {
                            "name": "channel",
                            "type": "string"
                        },
                        {
                            "name": "name",
                            "type": "string"
                        },
                        {
                            "name": "value",
                            "type": "string"
                        },
                        {
                            "name": "eventime",
                            "type": "float64"
                        }
                    ],
                    "output": [
                        {
                            "name": "message",
                            "type": "string"
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\n    \"id\": \"b710ad27-4eb0-417f-96b8-02830642d8a1\",\n    \"deviceId\": \"Random-Integer-Device\",\n    \"providerId\": \"TIBCO\",\n    \"networkType\": \"BLE\",\n    \"deviceType\": \"Temperature\",\n    \"origin\": 1564113092999608300,\n    \"sensor_origin\": 1564113092992998000,\n    \"sensorId\": \"Random-Integer-Device\",\n    \"channel\": \"MQTT\",\n    \"name\": \"RandomValue_Int64\",\n    \"value\": \"-6427502364192134104\",\n    \"eventime\": 1564113092992998000\n}",
                        "output": "{\n    \"message\": \"value\"\n}"
                    }
                }
            }
        },
        {
            "id": "flow:PersistentService3",
            "data": {
                "name": "PersistentService3",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "Mapper",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "Mapper",
                        "to": "LogMessage1",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogMessage1",
                        "to": "LogMessage2",
                        "type": "expression",
                        "value": "$activity[Mapper].output.bit0==\"1\""
                    },
                    {
                        "id": 4,
                        "from": "LogMessage2",
                        "to": "StartaSubFlow",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "LogMessage1",
                        "to": "LogMessage3",
                        "type": "expression",
                        "value": "$activity[Mapper].output.bit1==\"1\""
                    },
                    {
                        "id": 6,
                        "from": "LogMessage3",
                        "to": "StartaSubFlow1",
                        "type": "default"
                    },
                    {
                        "id": 7,
                        "from": "LogMessage1",
                        "to": "LogMessage4",
                        "type": "expression",
                        "value": "$activity[Mapper].output.bit2==\"1\""
                    },
                    {
                        "id": 8,
                        "from": "LogMessage4",
                        "to": "InvokeRESTService",
                        "type": "default"
                    },
                    {
                        "id": 9,
                        "from": "InvokeRESTService",
                        "to": "LogMessage6",
                        "type": "default"
                    },
                    {
                        "id": 10,
                        "from": "LogMessage1",
                        "to": "LogMessage5",
                        "type": "expression",
                        "value": "$activity[Mapper].output.bit3==\"3\""
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "settings": {
                            "iterate": "=$flow.readings"
                        },
                        "type": "iterator",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=\"PersistentService : \"+$flow.id+\",\"+$flow.device+\",\"+$flow.origin+\",\"+$iteration[value].origin+\",\"+$iteration[value].sensorId+\",\"+$iteration[value].name+\",\"+$iteration[value].value"
                            }
                        }
                    },
                    {
                        "id": "Mapper",
                        "name": "Mapper",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "bit0": "=string.substring($property[\"PersistFlag\"], 0, 1)",
                                        "bit1": "=string.substring($property[\"PersistFlag\"], 1, 1)",
                                        "bit2": "=string.substring($property[\"PersistFlag\"], 2, 1)",
                                        "bit3": "=string.substring($property[\"PersistFlag\"], 3, 1)"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"bit0\":{\"type\":\"string\"},\"bit1\":{\"type\":\"string\"},\"bit2\":{\"type\":\"string\"},\"bit3\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"bit0\":\"value\",\n    \"bit1\":\"value\",\n    \"bit2\":\"value\",\n    \"bit3\":\"value\"\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"bit0\": {\n      \"type\": \"string\"\n    },\n    \"bit1\": {\n      \"type\": \"string\"\n    },\n    \"bit2\": {\n      \"type\": \"string\"\n    },\n    \"bit3\": {\n      \"type\": \"string\"\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"bit0\": {\n      \"type\": \"string\"\n    },\n    \"bit1\": {\n      \"type\": \"string\"\n    },\n    \"bit2\": {\n      \"type\": \"string\"\n    },\n    \"bit3\": {\n      \"type\": \"string\"\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage1",
                        "name": "LogMessage1",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=\"PersistentService : \"+$activity[Mapper].output.bit0+\",\"+$activity[Mapper].output.bit1+\",\"+$activity[Mapper].output.bit2+\",\"+$activity[Mapper].output.bit3"
                            }
                        }
                    },
                    {
                        "id": "LogMessage2",
                        "name": "LogMessage2",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "PersistentService : Persist to PostgresDB"
                            }
                        }
                    },
                    {
                        "id": "StartaSubFlow",
                        "name": "StartaSubFlow",
                        "description": "Simple SubFlow Activity",
                        "settings": {
                            "iterate": "=$flow.readings"
                        },
                        "type": "iterator",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:PostgresService4"
                            },
                            "input": {
                                "id": "=$flow.id",
                                "origin": "=$flow.origin",
                                "readings": {
                                    "mapping": [
                                        {
                                            "origin": "=$iteration[value].origin",
                                            "name": "=$iteration[value].name",
                                            "value": "=$iteration[value].value",
                                            "sensorId": "=$iteration[value].sensorId",
                                            "channel": "MQTT"
                                        }
                                    ]
                                },
                                "deviceId": "=$flow.device",
                                "providerId": "TIBCO",
                                "networkType": "UNKNOWN",
                                "deviceType": "=$flow.device"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"deviceId\":{\"type\":\"string\"},\"providerId\":{\"type\":\"string\"},\"networkType\":{\"type\":\"string\"},\"deviceType\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"readings\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"origin\":{\"type\":\"number\"},\"sensorId\":{\"type\":\"string\"},\"channel\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}}}}",
                                        "fe_metadata": "{\n    \"id\": \"b710ad27-4eb0-417f-96b8-02830642d8a1\",\n    \"deviceId\": \"Random-Integer-Device\",\n    \"providerId\": \"TIBCO\",\n    \"networkType\": \"BLE\",\n    \"deviceType\": \"Temperature\",\n    \"origin\": 1564113092999608300,\n    \"readings\": [\n        {\n            \"origin\": 1564113092992998000,\n            \"sensorId\": \"Random-Integer-Device\",\n            \"channel\": \"MQTT\",\n            \"name\": \"RandomValue_Int64\",\n            \"value\": \"-6427502364192134104\"\n        }\n    ]\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"message\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"message\": \"value\"\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage3",
                        "name": "LogMessage3",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "PersistentService : Persist to Kafka"
                            }
                        }
                    },
                    {
                        "id": "StartaSubFlow1",
                        "name": "StartaSubFlow1",
                        "description": "Simple SubFlow Activity",
                        "settings": {
                            "iterate": "=$flow.readings"
                        },
                        "type": "iterator",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:KafkaService2"
                            },
                            "input": {
                                "device": "=$flow.device",
                                "origin": "=$flow.origin",
                                "id": "=$flow.id",
                                "sensor_origin": "=$iteration[value].origin",
                                "sensor_device": "=$iteration[value].sensorId",
                                "name": "=$iteration[value].name",
                                "value": "=$iteration[value].value"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"device\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"sensor_origin\":{\"type\":\"number\"},\"sensor_device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"id\": \"b710ad27-4eb0-417f-96b8-02830642d8a1\",\n    \"device\": \"Random-Integer-Device\",\n    \"origin\": 1564113092999608300,\n    \"sensor_origin\": 1564113092992998000,\n    \"sensor_device\": \"Random-Integer-Device\",\n    \"name\": \"RandomValue_Int64\",\n    \"value\": \"-6427502364192134104\"\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage4",
                        "name": "LogMessage4",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "PersistentService : Persist to Redis"
                            }
                        }
                    },
                    {
                        "id": "InvokeRESTService",
                        "name": "InvokeRESTService",
                        "description": "Simple REST Activity",
                        "activity": {
                            "ref": "#rest",
                            "input": {
                                "Method": "POST",
                                "Uri": "=$property[\"RedisServiceEndpoint\"]",
                                "requestType": "application/json",
                                "responseType": "application/json",
                                "Use certificate for verification": false,
                                "Server Certificate": "",
                                "body": {
                                    "mapping": {
                                        "id": "=$flow.id",
                                        "device": "=$flow.device",
                                        "origin": "=$flow.origin",
                                        "readings": {
                                            "@foreach($flow.readings,readings)": {
                                                "origin": "=$loop.origin",
                                                "device": "=$loop.sensorId",
                                                "name": "=$loop.name",
                                                "value": "=$loop.value"
                                            }
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "headers": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                                    },
                                    "body": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"device\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"readings\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}}}}",
                                        "fe_metadata": "{\n    \"id\": \"b710ad27-4eb0-417f-96b8-02830644444\",\n    \"device\": \"Random-Integer-Device\",\n    \"origin\": 1564113092999698300,\n    \"readings\": [\n        {\n            \"origin\": 1564113092992998300,\n            \"device\": \"Random-Integer-Device\",\n            \"name\": \"RandomValue_Int8\",\n            \"value\": \"100\"\n        }\n    ]\n}"
                                    }
                                },
                                "output": {
                                    "headers": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage6",
                        "name": "LogMessage6",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($activity[InvokeRESTService].statusCode)"
                            }
                        }
                    },
                    {
                        "id": "LogMessage5",
                        "name": "LogMessage5",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "PersistentService : Reserved"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "id",
                            "type": "string"
                        },
                        {
                            "name": "device",
                            "type": "string"
                        },
                        {
                            "name": "origin",
                            "type": "float64"
                        },
                        {
                            "name": "readings",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"origin\":{\"type\":\"number\"},\"sensorId\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}"
                            }
                        }
                    ],
                    "output": [
                        {
                            "name": "output",
                            "type": "string"
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\n    \"id\": \"f7dd8d66-6494-433b-900d-70f9990a4635\",\n    \"device\": \"Random-Boolean-Device\",\n    \"origin\": 1564111671975285000,\n    \"readings\": [\n        {\n            \"origin\": 1564111671968145200,\n            \"sensorId\": \"Random-Boolean-Device\",\n            \"name\": \"RandomValue_Bool\",\n            \"value\": \"true\"\n        }\n    ]\n}",
                        "output": "{\n    \"output\":\"value\"\n}"
                    }
                }
            }
        },
        {
            "id": "flow:PersistentService4",
            "data": {
                "name": "PersistentService4",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "Mapper",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "Mapper",
                        "to": "LogMessage1",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogMessage1",
                        "to": "LogMessage2",
                        "type": "expression",
                        "value": "$activity[Mapper].output.bit0==\"1\""
                    },
                    {
                        "id": 4,
                        "from": "LogMessage2",
                        "to": "StartaSubFlow",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "LogMessage1",
                        "to": "LogMessage3",
                        "type": "expression",
                        "value": "$activity[Mapper].output.bit1==\"1\""
                    },
                    {
                        "id": 6,
                        "from": "LogMessage3",
                        "to": "StartaSubFlow1",
                        "type": "default"
                    },
                    {
                        "id": 7,
                        "from": "LogMessage1",
                        "to": "LogMessage4",
                        "type": "expression",
                        "value": "$activity[Mapper].output.bit2==\"1\""
                    },
                    {
                        "id": 8,
                        "from": "LogMessage4",
                        "to": "Mapper1",
                        "type": "default"
                    },
                    {
                        "id": 9,
                        "from": "Mapper1",
                        "to": "InvokeRESTService",
                        "type": "default"
                    },
                    {
                        "id": 10,
                        "from": "InvokeRESTService",
                        "to": "LogMessage6",
                        "type": "default"
                    },
                    {
                        "id": 11,
                        "from": "LogMessage1",
                        "to": "LogMessage5",
                        "type": "expression",
                        "value": "$activity[Mapper].output.bit3==\"3\""
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=\"PersistentService : \"+$flow.id+\",\"+$flow.device+\",\"+$flow.origin+\",\"+$flow.sensor_origin+\",\"+$flow.sensorId+\",\"+$flow.name+\",\"+$flow.value"
                            }
                        }
                    },
                    {
                        "id": "Mapper",
                        "name": "Mapper",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "bit0": "=string.substring($property[\"PersistFlag\"], 0, 1)",
                                        "bit1": "=string.substring($property[\"PersistFlag\"], 1, 1)",
                                        "bit2": "=string.substring($property[\"PersistFlag\"], 2, 1)",
                                        "bit3": "=string.substring($property[\"PersistFlag\"], 3, 1)"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"bit0\":{\"type\":\"string\"},\"bit1\":{\"type\":\"string\"},\"bit2\":{\"type\":\"string\"},\"bit3\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"bit0\":\"value\",\n    \"bit1\":\"value\",\n    \"bit2\":\"value\",\n    \"bit3\":\"value\"\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"bit0\": {\n      \"type\": \"string\"\n    },\n    \"bit1\": {\n      \"type\": \"string\"\n    },\n    \"bit2\": {\n      \"type\": \"string\"\n    },\n    \"bit3\": {\n      \"type\": \"string\"\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"bit0\": {\n      \"type\": \"string\"\n    },\n    \"bit1\": {\n      \"type\": \"string\"\n    },\n    \"bit2\": {\n      \"type\": \"string\"\n    },\n    \"bit3\": {\n      \"type\": \"string\"\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage1",
                        "name": "LogMessage1",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=\"PersistentService : \"+$activity[Mapper].output.bit0+\",\"+$activity[Mapper].output.bit1+\",\"+$activity[Mapper].output.bit2+\",\"+$activity[Mapper].output.bit3"
                            }
                        }
                    },
                    {
                        "id": "LogMessage2",
                        "name": "LogMessage2",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "PersistentService : Persist to PostgresDB"
                            }
                        }
                    },
                    {
                        "id": "StartaSubFlow",
                        "name": "StartaSubFlow",
                        "description": "Simple SubFlow Activity",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:PostgresService6"
                            },
                            "input": {
                                "id": "=$flow.id",
                                "origin": "=$flow.origin",
                                "deviceId": "=$flow.device",
                                "providerId": "TIBCO",
                                "networkType": "UNKNOWN",
                                "deviceType": "=$flow.device",
                                "sensor_origin": "=$flow.sensor_origin",
                                "sensorId": "=$flow.name",
                                "channel": "MQTT",
                                "name": "=$flow.name",
                                "value": "=$flow.value",
                                "eventime": "=$flow.sensor_origin"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"deviceId\":{\"type\":\"string\"},\"providerId\":{\"type\":\"string\"},\"networkType\":{\"type\":\"string\"},\"deviceType\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"sensor_origin\":{\"type\":\"number\"},\"sensorId\":{\"type\":\"string\"},\"channel\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"eventime\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\n    \"id\": \"b710ad27-4eb0-417f-96b8-02830642d8a1\",\n    \"deviceId\": \"Random-Integer-Device\",\n    \"providerId\": \"TIBCO\",\n    \"networkType\": \"BLE\",\n    \"deviceType\": \"Temperature\",\n    \"origin\": 1564113092999608300,\n    \"sensor_origin\": 1564113092992998000,\n    \"sensorId\": \"Random-Integer-Device\",\n    \"channel\": \"MQTT\",\n    \"name\": \"RandomValue_Int64\",\n    \"value\": \"-6427502364192134104\",\n    \"eventime\": 1564113092992998000\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"message\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"message\": \"value\"\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage3",
                        "name": "LogMessage3",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "PersistentService : Persist to Kafka"
                            }
                        }
                    },
                    {
                        "id": "StartaSubFlow1",
                        "name": "StartaSubFlow1",
                        "description": "Simple SubFlow Activity",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:KafkaService2"
                            },
                            "input": {
                                "device": "=$flow.device",
                                "origin": "=$flow.origin",
                                "id": "=$flow.id",
                                "sensor_origin": "=$flow.sensor_origin",
                                "sensor_device": "=$flow.name",
                                "name": "=$flow.name",
                                "value": "=$flow.value"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"device\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"sensor_origin\":{\"type\":\"number\"},\"sensor_device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"id\": \"b710ad27-4eb0-417f-96b8-02830642d8a1\",\n    \"device\": \"Random-Integer-Device\",\n    \"origin\": 1564113092999608300,\n    \"sensor_origin\": 1564113092992998000,\n    \"sensor_device\": \"Random-Integer-Device\",\n    \"name\": \"RandomValue_Int64\",\n    \"value\": \"-6427502364192134104\"\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage4",
                        "name": "LogMessage4",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "PersistentService : Persist to Redis"
                            }
                        }
                    },
                    {
                        "id": "Mapper1",
                        "name": "Mapper1",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "readings": {
                                            "origin": "=$flow.sensor_origin",
                                            "device": "=$flow.name",
                                            "name": "=$flow.name",
                                            "value": "=$flow.value"
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"readings\":{\"type\":\"object\",\"properties\":{\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\n    \"readings\":\n    {\n    \"origin\": 1564111671975285000,\n    \"device\": \"Random-Boolean-Device\",\n    \"name\": \"RandomValue_Bool\",\n    \"value\": \"true\"\n    }\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"readings\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"origin\": {\n          \"type\": \"number\"\n        },\n        \"device\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"value\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"readings\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"origin\": {\n          \"type\": \"number\"\n        },\n        \"device\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"value\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "InvokeRESTService",
                        "name": "InvokeRESTService",
                        "description": "Simple REST Activity",
                        "activity": {
                            "ref": "#rest",
                            "input": {
                                "Method": "POST",
                                "Uri": "=$property[\"RedisServiceEndpoint\"]",
                                "requestType": "application/json",
                                "responseType": "application/json",
                                "Use certificate for verification": false,
                                "Server Certificate": "",
                                "body": {
                                    "mapping": {
                                        "id": "=$flow.id",
                                        "device": "=$flow.device",
                                        "origin": "=$flow.origin",
                                        "readings": "=array.create($activity[Mapper1].output.readings)"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "headers": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                                    },
                                    "body": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"device\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"readings\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}}}}",
                                        "fe_metadata": "{\n    \"id\": \"b710ad27-4eb0-417f-96b8-02830644444\",\n    \"device\": \"Random-Integer-Device\",\n    \"origin\": 1564113092999698300,\n    \"readings\": [\n        {\n            \"origin\": 1564113092992998300,\n            \"device\": \"Random-Integer-Device\",\n            \"name\": \"RandomValue_Int8\",\n            \"value\": \"100\"\n        }\n    ]\n}"
                                    }
                                },
                                "output": {
                                    "headers": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage6",
                        "name": "LogMessage6",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.tostring($activity[InvokeRESTService].statusCode)"
                            }
                        }
                    },
                    {
                        "id": "LogMessage5",
                        "name": "LogMessage5",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "PersistentService : Reserved"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "id",
                            "type": "string"
                        },
                        {
                            "name": "device",
                            "type": "string"
                        },
                        {
                            "name": "origin",
                            "type": "float64"
                        },
                        {
                            "name": "sensor_origin",
                            "type": "float64"
                        },
                        {
                            "name": "sensorId",
                            "type": "string"
                        },
                        {
                            "name": "name",
                            "type": "string"
                        },
                        {
                            "name": "value",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "output",
                            "type": "string"
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\n    \"id\": \"f7dd8d66-6494-433b-900d-70f9990a4635\",\n    \"device\": \"Random-Boolean-Device\",\n    \"origin\": 1564111671975285000,\n    \"sensor_origin\": 1564111671968145200,\n    \"sensorId\": \"Random-Boolean-Device\",\n    \"name\": \"RandomValue_Bool\",\n    \"value\": \"true\"\n}",
                        "output": "{\n    \"output\":\"value\"\n}"
                    }
                }
            }
        },
        {
            "id": "flow:KafkaService2",
            "data": {
                "name": "KafkaService2",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "Mapper",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "Mapper",
                        "to": "Mapper1",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "Mapper1",
                        "to": "LogMessage2",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogMessage2",
                        "to": "KafkaProducer",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=\"KafkaService : \"+$flow.id+\",\"+$flow.device+\",\"+$flow.origin+\",\"+$flow.sensor_origin+\",\"+$flow.sensor_device+\",\"+$flow.name+\",\"+$flow.value"
                            }
                        }
                    },
                    {
                        "id": "Mapper",
                        "name": "Mapper",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "ID": "=$flow.id",
                                        "DEVICE": "=$flow.device",
                                        "ORIGIN": "=string.tostring($flow.origin)",
                                        "SENSOR_ORIGIN": "=string.tostring($flow.sensor_origin)",
                                        "SENSOR_DEVICE": "=$flow.sensor_device",
                                        "NAME": "=$flow.name",
                                        "VALUE": "=$flow.value"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"ID\":{\"type\":\"string\"},\"DEVICE\":{\"type\":\"string\"},\"ORIGIN\":{\"type\":\"string\"},\"SENSOR_ORIGIN\":{\"type\":\"string\"},\"SENSOR_DEVICE\":{\"type\":\"string\"},\"NAME\":{\"type\":\"string\"},\"VALUE\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"ID\": \"b710ad27-4eb0-417f-96b8-02830642d8a1\",\n    \"DEVICE\": \"Random-Integer-Device\",\n    \"ORIGIN\": \"1564113092999608300\",\n    \"SENSOR_ORIGIN\": \"1564113092992998000\",\n    \"SENSOR_DEVICE\": \"Random-Integer-Device\",\n    \"NAME\": \"RandomValue_Int64\",\n    \"VALUE\": \"-6427502364192134104\"\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"ID\": {\n      \"type\": \"string\"\n    },\n    \"DEVICE\": {\n      \"type\": \"string\"\n    },\n    \"ORIGIN\": {\n      \"type\": \"string\"\n    },\n    \"SENSOR_ORIGIN\": {\n      \"type\": \"string\"\n    },\n    \"SENSOR_DEVICE\": {\n      \"type\": \"string\"\n    },\n    \"NAME\": {\n      \"type\": \"string\"\n    },\n    \"VALUE\": {\n      \"type\": \"string\"\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"ID\": {\n      \"type\": \"string\"\n    },\n    \"DEVICE\": {\n      \"type\": \"string\"\n    },\n    \"ORIGIN\": {\n      \"type\": \"string\"\n    },\n    \"SENSOR_ORIGIN\": {\n      \"type\": \"string\"\n    },\n    \"SENSOR_DEVICE\": {\n      \"type\": \"string\"\n    },\n    \"NAME\": {\n      \"type\": \"string\"\n    },\n    \"VALUE\": {\n      \"type\": \"string\"\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Mapper1",
                        "name": "Mapper1",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "msg": "=utility.renderJSON($activity[Mapper].output, boolean.false())"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"msg\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"msg\":\"value\"}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"msg\": {\n      \"type\": \"string\"\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"msg\": {\n      \"type\": \"string\"\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage2",
                        "name": "LogMessage2",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=$activity[Mapper1].output.msg"
                            }
                        }
                    },
                    {
                        "id": "KafkaProducer",
                        "name": "KafkaProducer",
                        "description": "",
                        "activity": {
                            "ref": "#producer",
                            "input": {
                                "kafkaConnection": {
                                    "id": "1e13f7c0-b200-11e9-920f-49d703a919c0",
                                    "type": "flogo:connector",
                                    "version": "1.1.2",
                                    "name": "tibco-kafka",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "Apache Kafka Client Configuration",
                                    "description": "",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-plugins.git/contributions/kafka/src/app/Kafka/connector/kafka",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Name",
                                                "description": "Name of the configuration"
                                            },
                                            "value": "tibcolabs-air-kafka"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "description": "Connection description"
                                            },
                                            "value": "Apache Kafka client configuration"
                                        },
                                        {
                                            "name": "brokers",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Brokers",
                                                "description": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster",
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"Kafka.tibcolabs-air-kafka.Brokers\"]"
                                        },
                                        {
                                            "name": "authMode",
                                            "type": "string",
                                            "display": {
                                                "name": "Auth Mode",
                                                "description": "Choose authentication mode to connect to Kafka cluster"
                                            },
                                            "allowed": [
                                                "None",
                                                "SASL/PLAIN",
                                                "SSL"
                                            ],
                                            "value": "None"
                                        },
                                        {
                                            "name": "userName",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "User Name",
                                                "visible": false,
                                                "description": "User name for SASL authentication",
                                                "appPropertySupport": true,
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Password",
                                                "type": "password",
                                                "visible": false,
                                                "description": "Password for SASL authentication",
                                                "appPropertySupport": true,
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": "SECRET:ZClR3t4vLLWaLiyCHM787A=="
                                        },
                                        {
                                            "name": "clientCert",
                                            "type": "string",
                                            "display": {
                                                "description": "A PEM encoded certificate file",
                                                "name": "Client Certificate",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".pem",
                                                    ".cert",
                                                    ".cer",
                                                    ".crt"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "clientKey",
                                            "type": "string",
                                            "display": {
                                                "description": "A PEM encoded private key file",
                                                "name": "Client Key",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".pem",
                                                    ".cert",
                                                    ".cer",
                                                    ".crt",
                                                    ".key"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "caCert",
                                            "type": "string",
                                            "display": {
                                                "description": "A PEM encoded CA or Server certificate file",
                                                "name": "CA or Server Certificate",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".pem",
                                                    ".cert",
                                                    ".cer",
                                                    ".crt"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "connectionTimeout",
                                            "type": "integer",
                                            "display": {
                                                "name": "Connection Timeout",
                                                "description": "The amount of time in seconds to wait for the initial connection",
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"Kafka.tibcolabs-air-kafka.Connection_Timeout\"]"
                                        },
                                        {
                                            "name": "retryBackoff",
                                            "type": "integer",
                                            "display": {
                                                "name": "Retry Backoff",
                                                "description": "The amount of time in milliseconds to wait for leader election to occur before retrying",
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"Kafka.tibcolabs-air-kafka.Retry_Backoff\"]"
                                        },
                                        {
                                            "name": "retryMax",
                                            "type": "integer",
                                            "display": {
                                                "name": "Max Retry",
                                                "description": "The total number of times to retry a metadata request when the cluster is in the middle of a leader election"
                                            },
                                            "value": 3
                                        },
                                        {
                                            "name": "refreshFrequency",
                                            "type": "integer",
                                            "display": {
                                                "name": "Refresh Frequency",
                                                "description": "The amount of time in seconds after which metadata is refreshed in the background. Set 0 to disable it."
                                            },
                                            "value": 40
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/Kafka/connector/kafka/connector.json",
                                    "display": {
                                        "category": "Kafka",
                                        "smallIcon": "icons/kafka.png",
                                        "largeIcon": "icons/kafka.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Save",
                                            "display": {
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            }
                                        }
                                    ],
                                    "feature": {},
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "isValid": true,
                                    "lastUpdatedTime": 1564404943259,
                                    "user": "eihkymzngv24drdfeyg3otoucgynht2q",
                                    "connectorName": "tibcolabs-air-kafka",
                                    "connectorDescription": " "
                                },
                                "ackMode": "All",
                                "ackTimeout": 10000,
                                "compressionType": "None",
                                "valueType": "String",
                                "maxRequestSize": 1048576,
                                "maxMessages": 0,
                                "frequency": 1000,
                                "topic": "=$property[\"Kafka_Topic\"]",
                                "partition": 0,
                                "key": "",
                                "stringValue": "=$activity[Mapper1].output.msg"
                            },
                            "schemas": {
                                "input": {
                                    "headers": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"Message\":{\"type\":\"string\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"Message\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"isEditable\":true}]"
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "id",
                            "type": "string"
                        },
                        {
                            "name": "device",
                            "type": "string"
                        },
                        {
                            "name": "origin",
                            "type": "float64"
                        },
                        {
                            "name": "sensor_origin",
                            "type": "float64"
                        },
                        {
                            "name": "sensor_device",
                            "type": "string"
                        },
                        {
                            "name": "name",
                            "type": "string"
                        },
                        {
                            "name": "value",
                            "type": "string"
                        }
                    ],
                    "output": [],
                    "fe_metadata": {
                        "input": "{\n    \"id\": \"b710ad27-4eb0-417f-96b8-02830642d8a1\",\n    \"device\": \"Random-Integer-Device\",\n    \"origin\": 1564113092999608300,\n    \"sensor_origin\": 1564113092992998000,\n    \"sensor_device\": \"Random-Integer-Device\",\n    \"name\": \"RandomValue_Int64\",\n    \"value\": \"-6427502364192134104\"\n}"
                    }
                }
            }
        },
        {
            "id": "flow:TransformService",
            "data": {
                "name": "TransformService",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "Mapper",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Mapper",
                        "name": "Mapper",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "id": "=$flow.id",
                                        "deviceId": "=$flow.device",
                                        "providerId": "TIBCO",
                                        "networkType": "BLE",
                                        "deviceType": "UNKNOWN",
                                        "origin": "=$flow.origin",
                                        "readings": {
                                            "@foreach($flow.readings,index)": {
                                                "origin": "=$loop.origin",
                                                "sensorId": "=$loop.device",
                                                "name": "=$loop.name",
                                                "value": "=$loop.value",
                                                "channel": "MQTT"
                                            }
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"deviceId\":{\"type\":\"string\"},\"providerId\":{\"type\":\"string\"},\"networkType\":{\"type\":\"string\"},\"deviceType\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"readings\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"origin\":{\"type\":\"number\"},\"sensorId\":{\"type\":\"string\"},\"channel\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}}}}",
                                        "fe_metadata": "{\n    \"id\": \"b710ad27-4eb0-417f-96b8-02830642d8a1\",\n    \"deviceId\": \"Random-Integer-Device\",\n    \"providerId\": \"TIBCO\",\n    \"networkType\": \"BLE\",\n    \"deviceType\": \"Temperature\",\n    \"origin\": 1564113092999608300,\n    \"readings\": [\n        {\n            \"origin\": 1564113092992998000,\n            \"sensorId\": \"Random-Integer-Device\",\n            \"channel\": \"MQTT\",\n            \"name\": \"RandomValue_Int64\",\n            \"value\": \"-6427502364192134104\"\n        }\n    ]\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"deviceId\": {\n      \"type\": \"string\"\n    },\n    \"providerId\": {\n      \"type\": \"string\"\n    },\n    \"networkType\": {\n      \"type\": \"string\"\n    },\n    \"deviceType\": {\n      \"type\": \"string\"\n    },\n    \"origin\": {\n      \"type\": \"number\"\n    },\n    \"readings\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"origin\": {\n            \"type\": \"number\"\n          },\n          \"sensorId\": {\n            \"type\": \"string\"\n          },\n          \"channel\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"deviceId\": {\n      \"type\": \"string\"\n    },\n    \"providerId\": {\n      \"type\": \"string\"\n    },\n    \"networkType\": {\n      \"type\": \"string\"\n    },\n    \"deviceType\": {\n      \"type\": \"string\"\n    },\n    \"origin\": {\n      \"type\": \"number\"\n    },\n    \"readings\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"origin\": {\n            \"type\": \"number\"\n          },\n          \"sensorId\": {\n            \"type\": \"string\"\n          },\n          \"channel\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "id": "=$activity[Mapper].output.id",
                                    "deviceId": "=$activity[Mapper].output.deviceId",
                                    "providerId": "=$activity[Mapper].output.providerId",
                                    "networkType": "=$activity[Mapper].output.networkType",
                                    "deviceType": "=$activity[Mapper].output.deviceType",
                                    "origin": "=$activity[Mapper].output.origin",
                                    "readings": {
                                        "mapping": {
                                            "@foreach($activity[Mapper].output.readings,index)": {
                                                "origin": "=$loop.origin",
                                                "sensorId": "=$loop.sensorId",
                                                "channel": "=$loop.channel",
                                                "name": "=$loop.name",
                                                "value": "=$loop.value"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "id",
                            "type": "string"
                        },
                        {
                            "name": "device",
                            "type": "string"
                        },
                        {
                            "name": "origin",
                            "type": "float64"
                        },
                        {
                            "name": "readings",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}"
                            }
                        }
                    ],
                    "output": [
                        {
                            "name": "id",
                            "type": "string"
                        },
                        {
                            "name": "deviceId",
                            "type": "string"
                        },
                        {
                            "name": "providerId",
                            "type": "string"
                        },
                        {
                            "name": "networkType",
                            "type": "string"
                        },
                        {
                            "name": "deviceType",
                            "type": "string"
                        },
                        {
                            "name": "origin",
                            "type": "float64"
                        },
                        {
                            "name": "readings",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"origin\":{\"type\":\"number\"},\"sensorId\":{\"type\":\"string\"},\"channel\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\n    \"id\": \"b710ad27-4eb0-417f-96b8-02830642d8a1\",\n    \"device\": \"Random-Integer-Device\",\n    \"origin\": 1564113092999608300,\n    \"readings\": [\n        {\n            \"origin\": 1564113092992998000,\n            \"device\": \"Random-Integer-Device\",\n            \"name\": \"RandomValue_Int64\",\n            \"value\": \"-6427502364192134104\"\n        }\n    ]\n}",
                        "output": "{\n    \"id\": \"b710ad27-4eb0-417f-96b8-02830642d8a1\",\n    \"deviceId\": \"Random-Integer-Device\",\n    \"providerId\": \"TIBCO\",\n    \"networkType\": \"BLE\",\n    \"deviceType\": \"Temperature\",\n    \"origin\": 1564113092999608300,\n    \"readings\": [\n        {\n            \"origin\": 1564113092992998000,\n            \"sensorId\": \"Random-Integer-Device\",\n            \"channel\": \"MQTT\",\n            \"name\": \"RandomValue_Int64\",\n            \"value\": \"-6427502364192134104\"\n        }\n    ]\n}"
                    }
                }
            }
        },
        {
            "id": "flow:ConfigService",
            "data": {
                "name": "ConfigService",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "GETLogMessage",
                        "type": "expression",
                        "value": "$flow.method==\"GET\""
                    },
                    {
                        "id": 2,
                        "from": "GETLogMessage",
                        "to": "PostgreSQLQuery",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "PostgreSQLQuery",
                        "to": "LogMessage3",
                        "type": "expression",
                        "value": "array.count($activity[PostgreSQLQuery].Output.records)>0"
                    },
                    {
                        "id": 4,
                        "from": "LogMessage3",
                        "to": "Return3",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "PostgreSQLQuery",
                        "to": "LogMessage2",
                        "type": "expression",
                        "value": "array.count($activity[PostgreSQLQuery].Output.records)==0"
                    },
                    {
                        "id": 6,
                        "from": "LogMessage2",
                        "to": "Return4",
                        "type": "default"
                    },
                    {
                        "id": 7,
                        "from": "LogMessage",
                        "to": "Mapper",
                        "type": "expression",
                        "value": "$flow.method==\"POST\""
                    },
                    {
                        "id": 8,
                        "from": "Mapper",
                        "to": "POSTLogMessage",
                        "type": "default"
                    },
                    {
                        "id": 9,
                        "from": "POSTLogMessage",
                        "to": "PostgreSQLInsert",
                        "type": "default"
                    },
                    {
                        "id": 10,
                        "from": "PostgreSQLInsert",
                        "to": "Return2",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=\"ConfigService : \"+$flow.deviceid+\", \"+$flow.resourceid+\", \"+$flow.attrname+\", \"+$flow.attrtype"
                            }
                        }
                    },
                    {
                        "id": "GETLogMessage",
                        "name": "GETLogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "ConfigService : GET"
                            }
                        }
                    },
                    {
                        "id": "PostgreSQLQuery",
                        "name": "PostgreSQLQuery",
                        "description": "This activity executes query on a PostgreSQL database",
                        "activity": {
                            "ref": "#query",
                            "input": {
                                "Connection": {
                                    "type": "flogo:connector",
                                    "version": "2.1.0",
                                    "name": "postgresql-connector",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "PostgreSQL Connector",
                                    "description": "Connector to connect to a PostgreSQL database server",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-postgres.git/src/app/PostgreSQL/connector/connection",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "value": "tibcolabs_air_v164"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "host",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Host",
                                                "description": "PostgreSQL Database Host name",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Host\"]"
                                        },
                                        {
                                            "name": "port",
                                            "type": "integer",
                                            "required": true,
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Port\"]",
                                            "display": {
                                                "name": "Port",
                                                "description": "PostgreSQL Database Port",
                                                "type": "integer",
                                                "visible": true,
                                                "appPropertySupport": true
                                            }
                                        },
                                        {
                                            "name": "databaseName",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Database Name",
                                                "description": "Name of the Database",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Database_Name\"]"
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "User",
                                                "description": "Name of the Database User",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.User\"]"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Password",
                                                "description": "PostgreSQL Database Port",
                                                "type": "password",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Password\"]"
                                        },
                                        {
                                            "name": "onprem",
                                            "type": "boolean",
                                            "required": true,
                                            "value": false,
                                            "display": {
                                                "name": "On Premise DBService",
                                                "description": "Flag to indicate that the dbsevice is accessed via a tibtunnel",
                                                "visible": true,
                                                "readonly": false,
                                                "valid": true
                                            }
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/PostgreSQL/connector/connection/connector.json",
                                    "display": {
                                        "description": "Connector to connect to a PostgreSQL database server",
                                        "category": "PostgreSQL",
                                        "visible": true,
                                        "smallIcon": "icons/ic-postgres-connection@2x.png",
                                        "largeIcon": "icons/ic-postgres-connection@3x.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect"
                                        }
                                    ],
                                    "feature": {},
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "isValid": true,
                                    "lastUpdatedTime": 1569404012833,
                                    "createdTime": 1569404012833,
                                    "user": "eihkymzngv24drdfeyg3otoucgynht2q",
                                    "subscriptionId": "TIB_SUB_01BB7F22MGX01K6MQK0TD02DYV",
                                    "id": "8a71d910-df77-11e9-88b9-15625b17a0d3",
                                    "connectorName": "tibcolabs_air_v164",
                                    "connectorDescription": " "
                                },
                                "QueryName": "",
                                "Query": "select * from instrument where deviceid=?deviceid and resourceid=?resourceid and attrname=?attrname;",
                                "Fields": "[{\"FieldName\":\"updated\",\"Type\":\"TIMESTAMP\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false},{\"FieldName\":\"attrname\",\"Type\":\"VARCHAR\",\"Selected\":true,\"Parameter\":true,\"isEditable\":false},{\"FieldName\":\"unitreadwrite\",\"Type\":\"VARCHAR\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false},{\"FieldName\":\"maximum\",\"Type\":\"FLOAT4\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false},{\"FieldName\":\"created\",\"Type\":\"TIMESTAMP\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false},{\"FieldName\":\"readwrite\",\"Type\":\"VARCHAR\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false},{\"FieldName\":\"scale\",\"Type\":\"INT8\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false},{\"FieldName\":\"resourceid\",\"Type\":\"VARCHAR\",\"Selected\":true,\"Parameter\":true,\"isEditable\":false},{\"FieldName\":\"minimum\",\"Type\":\"FLOAT4\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false},{\"FieldName\":\"unitdefaultvalue\",\"Type\":\"VARCHAR\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false},{\"FieldName\":\"attrtype\",\"Type\":\"VARCHAR\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false},{\"FieldName\":\"defaultvalue\",\"Type\":\"FLOAT4\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false},{\"FieldName\":\"deviceid\",\"Type\":\"VARCHAR\",\"Selected\":true,\"Parameter\":true,\"isEditable\":false},{\"FieldName\":\"unittype\",\"Type\":\"VARCHAR\",\"Selected\":true,\"Parameter\":false,\"isEditable\":false}]",
                                "State": "c9035d04-abbe-4c46-a64e-6287c9299249select * from instrument where deviceid=?deviceid and resourceid=?resourceid and attrname=?attrname;",
                                "input": {
                                    "mapping": {
                                        "parameters": {
                                            "deviceid": "=$flow.deviceid",
                                            "attrname": "=$flow.attrname",
                                            "resourceid": "=$flow.resourceid"
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"attrname\":{\"type\":\"string\"},\"resourceid\":{\"type\":\"string\"},\"deviceid\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"attrname\":{\"type\":\"string\"},\"resourceid\":{\"type\":\"string\"},\"deviceid\":{\"type\":\"string\"}}}}}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"updated\":{\"type\":\"string\",\"format\":\"time\"},\"attrname\":{\"type\":\"string\"},\"unitreadwrite\":{\"type\":\"string\"},\"maximum\":{\"type\":\"number\"},\"created\":{\"type\":\"string\",\"format\":\"time\"},\"readwrite\":{\"type\":\"string\"},\"scale\":{\"type\":\"integer\"},\"resourceid\":{\"type\":\"string\"},\"minimum\":{\"type\":\"number\"},\"unitdefaultvalue\":{\"type\":\"string\"},\"attrtype\":{\"type\":\"string\"},\"defaultvalue\":{\"type\":\"number\"},\"deviceid\":{\"type\":\"string\"},\"unittype\":{\"type\":\"string\"}}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"updated\":{\"type\":\"string\",\"format\":\"time\"},\"attrname\":{\"type\":\"string\"},\"unitreadwrite\":{\"type\":\"string\"},\"maximum\":{\"type\":\"number\"},\"created\":{\"type\":\"string\",\"format\":\"time\"},\"readwrite\":{\"type\":\"string\"},\"scale\":{\"type\":\"integer\"},\"resourceid\":{\"type\":\"string\"},\"minimum\":{\"type\":\"number\"},\"unitdefaultvalue\":{\"type\":\"string\"},\"attrtype\":{\"type\":\"string\"},\"defaultvalue\":{\"type\":\"number\"},\"deviceid\":{\"type\":\"string\"},\"unittype\":{\"type\":\"string\"}}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage3",
                        "name": "LogMessage3",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=\"ConfigService : \"+array.count($activity[PostgreSQLQuery].Output.records)+\", success\""
                            }
                        }
                    },
                    {
                        "id": "Return3",
                        "name": "Return3",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "code": 200,
                                    "data": {
                                        "mapping": {
                                            "deviceid": "=$activity[PostgreSQLQuery].Output.records[0].deviceid",
                                            "resourceid": "=$activity[PostgreSQLQuery].Output.records[0].resourceid",
                                            "attrname": "=$activity[PostgreSQLQuery].Output.records[0].attrname",
                                            "attrtype": "=$activity[PostgreSQLQuery].Output.records[0].attrtype",
                                            "readwrite": "=$activity[PostgreSQLQuery].Output.records[0].readwrite",
                                            "minimum": "=$activity[PostgreSQLQuery].Output.records[0].minimum",
                                            "maximum": "=$activity[PostgreSQLQuery].Output.records[0].maximum",
                                            "defaultvalue": "=$activity[PostgreSQLQuery].Output.records[0].defaultvalue",
                                            "scale": "=$activity[PostgreSQLQuery].Output.records[0].scale",
                                            "unittype": "=$activity[PostgreSQLQuery].Output.records[0].unittype",
                                            "unitreadwrite": "=$activity[PostgreSQLQuery].Output.records[0].unitreadwrite",
                                            "unitdefaultvalue": "=$activity[PostgreSQLQuery].Output.records[0].unitdefaultvalue"
                                        }
                                    },
                                    "message": "success"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage2",
                        "name": "LogMessage2",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=\"ConfigService : \"+array.count($activity[PostgreSQLQuery].Output.records)+\n\", failed\""
                            }
                        }
                    },
                    {
                        "id": "Return4",
                        "name": "Return4",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "code": 404,
                                    "message": "Record not found"
                                }
                            }
                        }
                    },
                    {
                        "id": "Mapper",
                        "name": "Mapper",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "deviceid": "=$flow.deviceid",
                                        "attrname": "=$flow.attrname",
                                        "attrtype": "=$flow.attrtype",
                                        "resourceid": "=$flow.resourceid",
                                        "readwrite": "=$flow.readwrite",
                                        "minimum": "=$flow.minimum",
                                        "maximum": "=$flow.maximum",
                                        "defaultvalue": "=$flow.defaultvalue",
                                        "scale": "=$flow.scale",
                                        "unittype": "=$flow.unittype",
                                        "unitreadwrite": "=$flow.unitreadwrite",
                                        "unitdefaultvalue": "=$flow.unitdefaultvalue"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"deviceid\":{\"type\":\"string\"},\"resourceid\":{\"type\":\"string\"},\"attrname\":{\"type\":\"string\"},\"attrtype\":{\"type\":\"string\"},\"readwrite\":{\"type\":\"string\"},\"minimum\":{\"type\":\"number\"},\"maximum\":{\"type\":\"number\"},\"defaultvalue\":{\"type\":\"number\"},\"scale\":{\"type\":\"number\"},\"unittype\":{\"type\":\"string\"},\"unitreadwrite\":{\"type\":\"string\"},\"unitdefaultvalue\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"deviceid\": \"value\",\n    \"resourceid\": \"value\",\n    \"attrname\": \"value\",\n    \"attrtype\": \"value\",\n    \"readwrite\": \"RW\",\n    \"minimum\": 1,\n    \"maximum\": 3,\n    \"defaultvalue\": 2,\n    \"scale\": 1,\n    \"unittype\": \"string\",\n    \"unitreadwrite\": \"RW\",\n    \"unitdefaultvalue\": \"lunen\"\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"deviceid\": {\n      \"type\": \"string\"\n    },\n    \"resourceid\": {\n      \"type\": \"string\"\n    },\n    \"attrname\": {\n      \"type\": \"string\"\n    },\n    \"attrtype\": {\n      \"type\": \"string\"\n    },\n    \"readwrite\": {\n      \"type\": \"string\"\n    },\n    \"minimum\": {\n      \"type\": \"number\"\n    },\n    \"maximum\": {\n      \"type\": \"number\"\n    },\n    \"defaultvalue\": {\n      \"type\": \"number\"\n    },\n    \"scale\": {\n      \"type\": \"number\"\n    },\n    \"unittype\": {\n      \"type\": \"string\"\n    },\n    \"unitreadwrite\": {\n      \"type\": \"string\"\n    },\n    \"unitdefaultvalue\": {\n      \"type\": \"string\"\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"deviceid\": {\n      \"type\": \"string\"\n    },\n    \"resourceid\": {\n      \"type\": \"string\"\n    },\n    \"attrname\": {\n      \"type\": \"string\"\n    },\n    \"attrtype\": {\n      \"type\": \"string\"\n    },\n    \"readwrite\": {\n      \"type\": \"string\"\n    },\n    \"minimum\": {\n      \"type\": \"number\"\n    },\n    \"maximum\": {\n      \"type\": \"number\"\n    },\n    \"defaultvalue\": {\n      \"type\": \"number\"\n    },\n    \"scale\": {\n      \"type\": \"number\"\n    },\n    \"unittype\": {\n      \"type\": \"string\"\n    },\n    \"unitreadwrite\": {\n      \"type\": \"string\"\n    },\n    \"unitdefaultvalue\": {\n      \"type\": \"string\"\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "POSTLogMessage",
                        "name": "POSTLogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "ConfigService : POST"
                            }
                        }
                    },
                    {
                        "id": "PostgreSQLInsert",
                        "name": "PostgreSQLInsert",
                        "description": "This activity executes insert on a PostgreSQL database",
                        "activity": {
                            "ref": "#insert",
                            "input": {
                                "Connection": {
                                    "type": "flogo:connector",
                                    "version": "2.1.0",
                                    "name": "postgresql-connector",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "PostgreSQL Connector",
                                    "description": "Connector to connect to a PostgreSQL database server",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-postgres.git/src/app/PostgreSQL/connector/connection",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "value": "tibcolabs_air_v164"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "host",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Host",
                                                "description": "PostgreSQL Database Host name",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Host\"]"
                                        },
                                        {
                                            "name": "port",
                                            "type": "integer",
                                            "required": true,
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Port\"]",
                                            "display": {
                                                "name": "Port",
                                                "description": "PostgreSQL Database Port",
                                                "type": "integer",
                                                "visible": true,
                                                "appPropertySupport": true
                                            }
                                        },
                                        {
                                            "name": "databaseName",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Database Name",
                                                "description": "Name of the Database",
                                                "type": "string",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Database_Name\"]"
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "User",
                                                "description": "Name of the Database User",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.User\"]"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Password",
                                                "description": "PostgreSQL Database Port",
                                                "type": "password",
                                                "visible": true,
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"PostgreSQL.tibcolabs_air_v164.Password\"]"
                                        },
                                        {
                                            "name": "onprem",
                                            "type": "boolean",
                                            "required": true,
                                            "value": false,
                                            "display": {
                                                "name": "On Premise DBService",
                                                "description": "Flag to indicate that the dbsevice is accessed via a tibtunnel",
                                                "visible": true,
                                                "readonly": false,
                                                "valid": true
                                            }
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/PostgreSQL/connector/connection/connector.json",
                                    "display": {
                                        "description": "Connector to connect to a PostgreSQL database server",
                                        "category": "PostgreSQL",
                                        "visible": true,
                                        "smallIcon": "icons/ic-postgres-connection@2x.png",
                                        "largeIcon": "icons/ic-postgres-connection@3x.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Connect"
                                        }
                                    ],
                                    "feature": {},
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "isValid": true,
                                    "lastUpdatedTime": 1569404012833,
                                    "createdTime": 1569404012833,
                                    "user": "eihkymzngv24drdfeyg3otoucgynht2q",
                                    "subscriptionId": "TIB_SUB_01BB7F22MGX01K6MQK0TD02DYV",
                                    "id": "8a71d910-df77-11e9-88b9-15625b17a0d3",
                                    "connectorName": "tibcolabs_air_v164",
                                    "connectorDescription": " "
                                },
                                "QueryName": "",
                                "Query": "insert into instrument(deviceid,resourceid,attrname,attrtype,readwrite,minimum,maximum,defaultvalue,scale,unittype,unitreadwrite,unitdefaultvalue) values(?deviceid,?resourceid,?attrname,?attrtype,?readwrite,?minimum,?maximum,?defaultvalue,?scale,?unittype,?unitreadwrite,?unitdefaultvalue);",
                                "Fields": "[{\"FieldName\":\"defaultvalue\",\"Type\":\"FLOAT4\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"scale\",\"Type\":\"INT8\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"attrtype\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"deviceid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"attrname\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"unittype\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"unitreadwrite\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"minimum\",\"Type\":\"FLOAT4\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"unitdefaultvalue\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"maximum\",\"Type\":\"FLOAT4\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"resourceid\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true},{\"FieldName\":\"readwrite\",\"Type\":\"VARCHAR\",\"Selected\":false,\"Parameter\":true,\"isEditable\":false,\"Value\":true}]",
                                "State": "88949083-5e2a-4ac0-aa6e-b59a907425a8insert into instrument(deviceid,resourceid,attrname,attrtype,readwrite,minimum,maximum,defaultvalue,scale,unittype,unitreadwrite,unitdefaultvalue) values(?deviceid,?resourceid,?attrname,?attrtype,?readwrite,?minimum,?maximum,?defaultvalue,?scale,?unittype,?unitreadwrite,?unitdefaultvalue);",
                                "input": {
                                    "mapping": {
                                        "values": [
                                            {
                                                "attrtype": "=$activity[Mapper].output.attrtype",
                                                "deviceid": "=$activity[Mapper].output.deviceid",
                                                "sensorid": "=$activity[Mapper].output.sensorid",
                                                "attrname": "=$activity[Mapper].output.attrname",
                                                "defaultvalue": "=$activity[Mapper].output.defaultvalue",
                                                "maximum": "=$activity[Mapper].output.maximum",
                                                "unitreadwrite": "=$activity[Mapper].output.unitreadwrite",
                                                "resourceid": "=$activity[Mapper].output.resourceid",
                                                "unitdefaultvalue": "=$activity[Mapper].output.unitdefaultvalue",
                                                "minimum": "=$activity[Mapper].output.minimum",
                                                "scale": "=$activity[Mapper].output.scale",
                                                "readwrite": "=$activity[Mapper].output.readwrite",
                                                "unittype": "=$activity[Mapper].output.unittype"
                                            }
                                        ],
                                        "parameters": "=$activity[Mapper].output"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"defaultvalue\":{\"type\":\"number\"},\"scale\":{\"type\":\"integer\"},\"attrtype\":{\"type\":\"string\"},\"deviceid\":{\"type\":\"string\"},\"attrname\":{\"type\":\"string\"},\"unittype\":{\"type\":\"string\"},\"unitreadwrite\":{\"type\":\"string\"},\"minimum\":{\"type\":\"number\"},\"unitdefaultvalue\":{\"type\":\"string\"},\"maximum\":{\"type\":\"number\"},\"resourceid\":{\"type\":\"string\"},\"readwrite\":{\"type\":\"string\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"values\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"defaultvalue\":{\"type\":\"number\"},\"scale\":{\"type\":\"integer\"},\"attrtype\":{\"type\":\"string\"},\"deviceid\":{\"type\":\"string\"},\"attrname\":{\"type\":\"string\"},\"unittype\":{\"type\":\"string\"},\"unitreadwrite\":{\"type\":\"string\"},\"minimum\":{\"type\":\"number\"},\"unitdefaultvalue\":{\"type\":\"string\"},\"maximum\":{\"type\":\"number\"},\"resourceid\":{\"type\":\"string\"},\"readwrite\":{\"type\":\"string\"}}}},\"parameters\":{\"type\":\"object\",\"properties\":{}}}}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return2",
                        "name": "Return2",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "code": 200
                                }
                            }
                        }
                    }
                ],
                "errorHandler": {
                    "tasks": [
                        {
                            "id": "LogMessage1",
                            "name": "LogMessage1",
                            "description": "Simple Log Message Activity",
                            "activity": {
                                "ref": "#log",
                                "input": {
                                    "Log Level": "INFO",
                                    "flowInfo": false,
                                    "message": "=$error.message"
                                }
                            }
                        },
                        {
                            "id": "Return5",
                            "name": "Return5",
                            "description": "Simple Return Activity",
                            "activity": {
                                "ref": "#actreturn",
                                "settings": {
                                    "mappings": {
                                        "returncode": 500,
                                        "attrtype": "",
                                        "code": 500,
                                        "message": "=$error.message"
                                    }
                                }
                            }
                        }
                    ],
                    "links": [
                        {
                            "id": 11,
                            "from": "LogMessage1",
                            "to": "Return5",
                            "type": "default"
                        }
                    ]
                },
                "metadata": {
                    "input": [
                        {
                            "name": "method",
                            "type": "string"
                        },
                        {
                            "name": "deviceid",
                            "type": "string"
                        },
                        {
                            "name": "resourceid",
                            "type": "string"
                        },
                        {
                            "name": "attrname",
                            "type": "string"
                        },
                        {
                            "name": "attrtype",
                            "type": "string"
                        },
                        {
                            "name": "readwrite",
                            "type": "string"
                        },
                        {
                            "name": "minimum",
                            "type": "float64"
                        },
                        {
                            "name": "maximum",
                            "type": "float64"
                        },
                        {
                            "name": "defaultvalue",
                            "type": "float64"
                        },
                        {
                            "name": "scale",
                            "type": "float64"
                        },
                        {
                            "name": "unittype",
                            "type": "string"
                        },
                        {
                            "name": "unitreadwrite",
                            "type": "string"
                        },
                        {
                            "name": "unitdefaultvalue",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "code",
                            "type": "float64"
                        },
                        {
                            "name": "data",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"deviceid\":{\"type\":\"string\"},\"resourceid\":{\"type\":\"string\"},\"attrname\":{\"type\":\"string\"},\"attrtype\":{\"type\":\"string\"},\"readwrite\":{\"type\":\"string\"},\"minimum\":{\"type\":\"number\"},\"maximum\":{\"type\":\"number\"},\"defaultvalue\":{\"type\":\"number\"},\"scale\":{\"type\":\"number\"},\"unittype\":{\"type\":\"string\"},\"unitreadwrite\":{\"type\":\"string\"},\"unitdefaultvalue\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "message",
                            "type": "string"
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\n    \"method\": \"value\",\n    \"deviceid\": \"value\",\n    \"resourceid\": \"value\",\n    \"attrname\": \"value\",\n    \"attrtype\": \"value\",\n    \"readwrite\": \"RW\",\n    \"minimum\": 1,\n    \"maximum\": 3,\n    \"defaultvalue\": 2,\n    \"scale\": 1,\n    \"unittype\": \"string\",\n    \"unitreadwrite\": \"RW\",\n    \"unitdefaultvalue\": \"lunen\"\n}",
                        "output": "{\n    \"code\": 200,\n    \"data\": {\n        \"deviceid\": \"value\",\n        \"resourceid\": \"value\",\n        \"attrname\": \"value\",\n        \"attrtype\": \"value\",\n        \"readwrite\": \"RW\",\n        \"minimum\": 1,\n        \"maximum\": 3,\n        \"defaultvalue\": 2,\n        \"scale\": 1,\n        \"unittype\": \"string\",\n        \"unitreadwrite\": \"RW\",\n        \"unitdefaultvalue\": \"lunen\"\n    },\n    \"message\":\"value\"\n}"
                    }
                },
                "explicitReply": true
            }
        }
    ],
    "properties": [
        {
            "name": "PostgreSQL.tibcolabs-air-postgresql.Host",
            "type": "string",
            "value": "3.218.102.175"
        },
        {
            "name": "PostgreSQL.tibcolabs-air-postgresql.Port",
            "type": "float64",
            "value": 5432
        },
        {
            "name": "PostgreSQL.tibcolabs-air-postgresql.Database_Name",
            "type": "string",
            "value": "tibcolabs_air"
        },
        {
            "name": "PostgreSQL.tibcolabs-air-postgresql.User",
            "type": "string",
            "value": "other_user"
        },
        {
            "name": "PostgreSQL.tibcolabs-air-postgresql.Password",
            "type": "string",
            "value": "SECRET:0+Tp+wPP53EpM98pkfq+AqmN1e6MsFAZwk02RieO2hx4njM="
        },
        {
            "name": "PersistFlag",
            "type": "string",
            "value": "1000"
        },
        {
            "name": "Kafka.tibcolabs-air-kafka.Brokers",
            "type": "string",
            "value": "3.218.102.175:9092,3.221.228.215:9092,3.222.144.249:9092"
        },
        {
            "name": "Kafka.tibcolabs-air-kafka.Connection_Timeout",
            "type": "float64",
            "value": 30
        },
        {
            "name": "Kafka.tibcolabs-air-kafka.Retry_Backoff",
            "type": "float64",
            "value": 250
        },
        {
            "name": "Kafka_Topic",
            "type": "string",
            "value": "tibcolabs_air_lb"
        },
        {
            "name": "RedisServiceEndpoint",
            "type": "string",
            "value": "https://integration.cloud.tibcoapps.com/unmaafy2uqgb3r6z7bwh4k6kve5hykzm/redisservice"
        },
        {
            "name": "PostgreSQL.tibcolabs_air_v164.Host",
            "type": "string",
            "value": "3.218.102.175"
        },
        {
            "name": "PostgreSQL.tibcolabs_air_v164.Port",
            "type": "float64",
            "value": 5432
        },
        {
            "name": "PostgreSQL.tibcolabs_air_v164.Database_Name",
            "type": "string",
            "value": "tibcolabs_air_v164"
        },
        {
            "name": "PostgreSQL.tibcolabs_air_v164.User",
            "type": "string",
            "value": "other_user"
        },
        {
            "name": "PostgreSQL.tibcolabs_air_v164.Password",
            "type": "string",
            "value": "SECRET:OdeCsQEpGImBX4Hzk7kVc/4wN90muDU3bzPiVl5k7x65yzA="
        }
    ],
    "contrib": "W3sicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1jb250cmliLmdpdC9jb250cmlidXRpb25zL0dlbmVyYWwiLCJzM2xvY2F0aW9uIjoiVGliY28vR2VuZXJhbCJ9LHsicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1wbHVnaW5zLmdpdC9jb250cmlidXRpb25zL2thZmthL3NyYy9hcHAvS2Fma2EiLCJzM2xvY2F0aW9uIjoiVGliY28vS2Fma2EifSx7InJlZiI6ImdpdC50aWJjby5jb20vZ2l0L3Byb2R1Y3QvaXBhYXMvd2ktcG9zdGdyZXMuZ2l0L3NyYy9hcHAvUG9zdGdyZVNRTCIsInMzbG9jYXRpb24iOiJUaWJjby9Qb3N0Z3JlU1FMIn1d",
    "fe_metadata": "UEsDBAoAAAAIAEQZVk+rqSRGFQAAABMAAAAIAAAAYXBwLmpzb26rViopykxPTy1yy8kvL1ayio6tBQBQSwECFAAKAAAACABEGVZPq6kkRhUAAAATAAAACAAAAAAAAAAAAAAAAAAAAAAAYXBwLmpzb25QSwUGAAAAAAEAAQA2AAAAOwAAAAAA"
}