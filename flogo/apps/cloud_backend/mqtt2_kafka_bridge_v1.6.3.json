{
    "imports": [
        "github.com/project-flogo/flow",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
        "git.tibco.com/git/product/ipaas/wi-plugins.git/contributions/kafka/src/app/Kafka/activity/producer",
        "git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/trigger/subscribe",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/function/utility",
        "github.com/project-flogo/contrib/function/array"
    ],
    "name": "mqtt2_kafka_bridge_v1.6.3",
    "description": "  ",
    "version": "1.1.0",
    "type": "flogo:app",
    "appModel": "1.1.1",
    "triggers": [
        {
            "ref": "#subscribe",
            "name": "mqtt-trigger",
            "description": "Subscribe to an MQTT topic",
            "settings": {
                "mqttConnection": {
                    "type": "flogo:connector",
                    "version": "1.0.0",
                    "name": "connection",
                    "hashTags": [],
                    "inputMappings": {},
                    "outputMappings": {},
                    "iteratorMappings": {},
                    "title": "MQTT Connector",
                    "description": "MQTT Connector",
                    "ref": "git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/connector/connection",
                    "settings": [
                        {
                            "name": "name",
                            "type": "string",
                            "required": true,
                            "display": {
                                "name": "Connection Name",
                                "visible": true
                            },
                            "value": "tibcolabs_air_mqtt2"
                        },
                        {
                            "name": "description",
                            "type": "string",
                            "display": {
                                "name": "Description",
                                "visible": true
                            },
                            "value": ""
                        },
                        {
                            "name": "broker",
                            "type": "string",
                            "required": true,
                            "display": {
                                "name": "Broker URL",
                                "visible": true,
                                "Description": "Enter a broker URL in the form '<protocol>://<host>:<port>'"
                            },
                            "value": "3.221.228.215:1883"
                        },
                        {
                            "name": "user",
                            "type": "string",
                            "required": false,
                            "display": {
                                "name": "Username",
                                "visible": true,
                                "Description": "Enter a username if this connection requires one"
                            },
                            "value": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "required": false,
                            "display": {
                                "name": "Password",
                                "visible": true,
                                "type": "password",
                                "encryptable": true,
                                "Description": "Enter a password if this connection requires one"
                            },
                            "value": "SECRET:lNIu2kEiRoihi6UCFAwKaQ=="
                        },
                        {
                            "name": "encryptionMode",
                            "type": "string",
                            "display": {
                                "name": "Encryption Mode",
                                "description": "Choose the type of authentication to use"
                            },
                            "allowed": [
                                "None",
                                "TLS-Cert",
                                "TLS-ClientAuth"
                            ],
                            "value": "None"
                        },
                        {
                            "name": "cacert",
                            "type": "string",
                            "required": false,
                            "display": {
                                "name": "Cacert",
                                "description": "Select the CA certificate file used to sign the broker's certificate",
                                "visible": false,
                                "type": "fileselector",
                                "fileExtensions": [
                                    ".crt",
                                    ".cert",
                                    ".pem"
                                ],
                                "readonly": false,
                                "valid": true
                            },
                            "value": ""
                        },
                        {
                            "name": "clientcert",
                            "type": "string",
                            "required": false,
                            "display": {
                                "name": "Client Cert",
                                "description": "Select the client certificate file for connections requiring client auth",
                                "visible": false,
                                "type": "fileselector",
                                "fileExtensions": [
                                    ".crt",
                                    ".cert",
                                    ".pem"
                                ],
                                "readonly": false,
                                "valid": true
                            },
                            "value": ""
                        },
                        {
                            "name": "clientkey",
                            "type": "string",
                            "required": false,
                            "display": {
                                "name": "Client Key",
                                "description": "Select the client key file used for connections requiring client auth",
                                "visible": false,
                                "type": "fileselector",
                                "fileExtensions": [
                                    ".key",
                                    ".pem"
                                ],
                                "readonly": false,
                                "valid": true
                            },
                            "value": ""
                        }
                    ],
                    "outputs": [],
                    "inputs": [],
                    "handler": {
                        "settings": []
                    },
                    "reply": [],
                    "s3Prefix": "Tibco",
                    "key": "Tibco/Mqtt/connector/connection/connector.json",
                    "display": {
                        "description": "MQTT Connector",
                        "category": "Mqtt",
                        "smallIcon": "icons/mqtt.png",
                        "largeIcon": "icons/mqtt.png",
                        "visible": true
                    },
                    "actions": [
                        {
                            "name": "Save"
                        }
                    ],
                    "feature": {},
                    "propertyMap": {},
                    "keyfield": "name",
                    "isValid": true,
                    "lastUpdatedTime": 1568085440403,
                    "createdTime": 1568085440403,
                    "user": "eihkymzngv24drdfeyg3otoucgynht2q",
                    "subscriptionId": "TIB_SUB_01BB7F22MGX01K6MQK0TD02DYV",
                    "id": "80081e30-d379-11e9-834f-1f74079254db",
                    "connectorName": "tibcolabs_air_mqtt2",
                    "connectorDescription": " "
                }
            },
            "id": "MQTTSubscriber",
            "handlers": [
                {
                    "description": "",
                    "settings": {
                        "topic": "EdgeXDataTopic1",
                        "qos": 2,
                        "valueType": "JSON",
                        "showwill": false,
                        "will": "",
                        "willtopic": "",
                        "willqos": 0,
                        "willretain": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:mqtt_consumer"
                        },
                        "input": {
                            "topic": "=$.topic",
                            "retained": "=$.retained",
                            "qos": "=$.qos",
                            "jsonValue": "=$.jsonValue"
                        }
                    },
                    "schemas": {
                        "output": {
                            "jsonValue": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"device\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"readings\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}}}}",
                                "fe_metadata": "{\n    \"id\": \"b710ad27-4eb0-417f-96b8-d0000000027\",\n    \"device\": \"d004\",\n    \"origin\": 1565917200000,\n    \"readings\": [\n        {\n            \"origin\": 1565917200000,\n            \"device\": \"s003\",\n            \"name\": \"current\",\n            \"value\": \"4\"\n        }\n    ]\n}"
                            }
                        }
                    }
                }
            ]
        }
    ],
    "resources": [
        {
            "id": "flow:mqtt_consumer",
            "data": {
                "name": "mqtt_consumer",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "KafkaProducer",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=utility.renderJSON($flow.jsonValue, false)"
                            }
                        }
                    },
                    {
                        "id": "KafkaProducer",
                        "name": "KafkaProducer",
                        "description": "",
                        "activity": {
                            "ref": "#producer",
                            "input": {
                                "kafkaConnection": {
                                    "id": "1e13f7c0-b200-11e9-920f-49d703a919c0",
                                    "type": "flogo:connector",
                                    "version": "1.1.2",
                                    "name": "tibco-kafka",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "Apache Kafka Client Configuration",
                                    "description": "",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-plugins.git/contributions/kafka/src/app/Kafka/connector/kafka",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Name",
                                                "description": "Name of the configuration"
                                            },
                                            "value": "tibcolabs-air-kafka"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "description": "Connection description"
                                            },
                                            "value": "Apache Kafka client configuration"
                                        },
                                        {
                                            "name": "brokers",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Brokers",
                                                "description": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster",
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"Kafka.tibcolabs-air-kafka.Brokers\"]"
                                        },
                                        {
                                            "name": "authMode",
                                            "type": "string",
                                            "display": {
                                                "name": "Auth Mode",
                                                "description": "Choose authentication mode to connect to Kafka cluster"
                                            },
                                            "allowed": [
                                                "None",
                                                "SASL/PLAIN",
                                                "SSL"
                                            ],
                                            "value": "None"
                                        },
                                        {
                                            "name": "userName",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "User Name",
                                                "visible": false,
                                                "description": "User name for SASL authentication",
                                                "appPropertySupport": true,
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Password",
                                                "type": "password",
                                                "visible": false,
                                                "description": "Password for SASL authentication",
                                                "appPropertySupport": true,
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": "SECRET:ArI/X/EBCmzC2Y9EVOCwig=="
                                        },
                                        {
                                            "name": "clientCert",
                                            "type": "string",
                                            "display": {
                                                "description": "A PEM encoded certificate file",
                                                "name": "Client Certificate",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".pem",
                                                    ".cert",
                                                    ".cer",
                                                    ".crt"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "clientKey",
                                            "type": "string",
                                            "display": {
                                                "description": "A PEM encoded private key file",
                                                "name": "Client Key",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".pem",
                                                    ".cert",
                                                    ".cer",
                                                    ".crt",
                                                    ".key"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "caCert",
                                            "type": "string",
                                            "display": {
                                                "description": "A PEM encoded CA or Server certificate file",
                                                "name": "CA or Server Certificate",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".pem",
                                                    ".cert",
                                                    ".cer",
                                                    ".crt"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "connectionTimeout",
                                            "type": "integer",
                                            "display": {
                                                "name": "Connection Timeout",
                                                "description": "The amount of time in seconds to wait for the initial connection",
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"Kafka.tibcolabs-air-kafka.Connection_Timeout\"]"
                                        },
                                        {
                                            "name": "retryBackoff",
                                            "type": "integer",
                                            "display": {
                                                "name": "Retry Backoff",
                                                "description": "The amount of time in milliseconds to wait for leader election to occur before retrying",
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"Kafka.tibcolabs-air-kafka.Retry_Backoff\"]"
                                        },
                                        {
                                            "name": "retryMax",
                                            "type": "integer",
                                            "display": {
                                                "name": "Max Retry",
                                                "description": "The total number of times to retry a metadata request when the cluster is in the middle of a leader election"
                                            },
                                            "value": 3
                                        },
                                        {
                                            "name": "refreshFrequency",
                                            "type": "integer",
                                            "display": {
                                                "name": "Refresh Frequency",
                                                "description": "The amount of time in seconds after which metadata is refreshed in the background. Set 0 to disable it."
                                            },
                                            "value": 40
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/Kafka/connector/kafka/connector.json",
                                    "display": {
                                        "category": "Kafka",
                                        "smallIcon": "icons/kafka.png",
                                        "largeIcon": "icons/kafka.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Save",
                                            "display": {
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            }
                                        }
                                    ],
                                    "feature": {},
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "isValid": true,
                                    "lastUpdatedTime": 1564404943259,
                                    "user": "eihkymzngv24drdfeyg3otoucgynht2q",
                                    "connectorName": "tibcolabs-air-kafka",
                                    "connectorDescription": " "
                                },
                                "ackMode": "Leader",
                                "ackTimeout": 10000,
                                "compressionType": "None",
                                "valueType": "JSON",
                                "maxRequestSize": 1048576,
                                "maxMessages": 0,
                                "frequency": 1000,
                                "topic": "=$property[\"Kafka_Topic\"]",
                                "partition": 0,
                                "key": "",
                                "stringValue": "",
                                "jsonValue": {
                                    "mapping": {
                                        "id": "=$flow.jsonValue.id",
                                        "device": "=$flow.jsonValue.device",
                                        "origin": "=$flow.jsonValue.origin",
                                        "readings": {
                                            "@foreach($flow.jsonValue.readings,readings)": {
                                                "origin": "=$loop.origin",
                                                "device": "=$loop.device",
                                                "name": "=$loop.name",
                                                "value": "=$loop.value"
                                            }
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "jsonValue": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"device\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"readings\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}}}}",
                                        "fe_metadata": "{\n    \"id\": \"b710ad27-4eb0-417f-96b8-d0000000083\",\n    \"device\": \"d004\",\n    \"origin\": 1565920300000,\n    \"readings\": [\n        {\n            \"origin\": 1565920300000,\n            \"device\": \"s003\",\n            \"name\": \"current\",\n            \"value\": \"8\"\n        }\n    ]\n}"
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "topic",
                            "type": "string"
                        },
                        {
                            "name": "retained",
                            "type": "boolean"
                        },
                        {
                            "name": "qos",
                            "type": "integer"
                        },
                        {
                            "name": "jsonValue",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"id\":{\"type\":\"string\"},\"device\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"readings\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "output": [],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"MQTTSubscriber\",\"properties\":{\"topic\":{\"type\":\"string\",\"required\":false},\"retained\":{\"type\":\"boolean\",\"required\":false},\"qos\":{\"type\":\"integer\",\"required\":false},\"jsonValue\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"device\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"readings\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"}}}}}}}}"
                    }
                }
            }
        }
    ],
    "properties": [
        {
            "name": "Kafka.tibcolabs-air-kafka.Brokers",
            "type": "string",
            "value": "3.218.102.175:9092,3.221.228.215:9092,3.222.144.249:9092"
        },
        {
            "name": "Kafka.tibcolabs-air-kafka.Connection_Timeout",
            "type": "float64",
            "value": 30
        },
        {
            "name": "Kafka.tibcolabs-air-kafka.Retry_Backoff",
            "type": "float64",
            "value": 250
        },
        {
            "name": "Kafka_Topic",
            "type": "string",
            "value": "tibcolabs_air_ingress"
        }
    ],
    "contrib": "W3sicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1tcXR0LmdpdC9NcXR0IiwiczNsb2NhdGlvbiI6IlRpYmNvL01xdHQifSx7InJlZiI6ImdpdC50aWJjby5jb20vZ2l0L3Byb2R1Y3QvaXBhYXMvd2ktY29udHJpYi5naXQvY29udHJpYnV0aW9ucy9HZW5lcmFsIiwiczNsb2NhdGlvbiI6IlRpYmNvL0dlbmVyYWwifSx7InJlZiI6ImdpdC50aWJjby5jb20vZ2l0L3Byb2R1Y3QvaXBhYXMvd2ktcGx1Z2lucy5naXQvY29udHJpYnV0aW9ucy9rYWZrYS9zcmMvYXBwL0thZmthIiwiczNsb2NhdGlvbiI6IlRpYmNvL0thZmthIn1d",
    "fe_metadata": "UEsDBAoAAAAIAMUYVk+rqSRGFQAAABMAAAAIAAAAYXBwLmpzb26rViopykxPTy1yy8kvL1ayio6tBQBQSwECFAAKAAAACADFGFZPq6kkRhUAAAATAAAACAAAAAAAAAAAAAAAAAAAAAAAYXBwLmpzb25QSwUGAAAAAAEAAQA2AAAAOwAAAAAA"
}