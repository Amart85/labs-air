!function(o,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("angular6-json-schema-form"),require("@angular/router"),require("@angular/material"),require("@angular/forms"),require("@angular/flex-layout"),require("@angular/cdk/scrolling"),require("@angular/platform-browser/animations"),require("@angular/platform-browser"),require("@angular/common/http"),require("@angular/common"),require("@tibco-tcstk/tc-core-lib"),require("rxjs/operators")):"function"==typeof define&&define.amd?define("@tibco-tcstk/tc-forms-lib",["exports","@angular/core","angular6-json-schema-form","@angular/router","@angular/material","@angular/forms","@angular/flex-layout","@angular/cdk/scrolling","@angular/platform-browser/animations","@angular/platform-browser","@angular/common/http","@angular/common","@tibco-tcstk/tc-core-lib","rxjs/operators"],e):e(((o=o||self)["tibco-tcstk"]=o["tibco-tcstk"]||{},o["tibco-tcstk"]["tc-forms-lib"]={}),o.ng.core,o.angular6JsonSchemaForm,o.ng.router,o.ng.material,o.ng.forms,o.ng["flex-layout"],o.ng.cdk.scrolling,o.ng.platformBrowser.animations,o.ng.platformBrowser,o.ng.common.http,o.ng.common,o.tcCoreLib,o.rxjs.operators)}(this,function(o,e,t,r,a,n,s,u,m,i,l,c,f,d){"use strict";var p=function(){function o(){}return o.prototype.deserialize=function(o){return Object.assign(this,o),this},o}(),h=function(){function o(o){var t=this;this.route=o,this.schema={},this.layout=[],this.data={},this.formsFramework=this.formsFramework?this.formsFramework:"material-design",this.formSubmit=new e.EventEmitter,this.formData={},this.submitForm=function(o){console.warn("*** Forms: Submitting form with payload: ",o),console.warn("*** Forms: JSON: ",JSON.stringify(o)),t.formSubmit.emit(o)},this.handleLayoutOutput=function(o){console.log("Layout:"),console.log(JSON.stringify(o))},this.onChanges=function(o){t.data=o}}return o.prototype.ngOnInit=function(){},o.prototype.ngOnChanges=function(o){if(this.customFormDefs&&o.formRef&&o.formRef.currentValue&&o.formRef.currentValue!==o.formRef.previousValue&&(this.customFormDefs&&this.customFormDefs.customForms&&(this.useCustomForm=-1!==this.customFormDefs.customForms.findIndex(function(e){return e===o.formRef.currentValue})),console.warn("*** Forms: Custom Form configuration (customForm.json): ",this.customFormDefs),this.useCustomForm?console.warn("*** Forms: > Using custom form (formRef):",this.formRef):console.warn("*** Forms: > Using auto-rendered form (formRef):",this.formRef)),o.schema&&o.schema.currentValue&&o.schema.currentValue!==o.schema.previousValue){var e=o.schema.currentValue;o.schema.currentValue.$schema&&delete e.$schema,this.formSchema=e,console.warn("*** Forms: Form Schema: ",JSON.stringify(this.formSchema))}o.data&&o.data.currentValue&&o.data.currentValue!==o.data.previousValue&&(this.formData=this.data,console.warn("*** Forms: Initial Form Data:",this.formData),console.warn("*** Forms: Initial Form Data (JSON):",JSON.stringify(this.formData))),o.layout&&o.layout.currentValue&&o.layout.currentValue!==o.layout.previousValue&&(this.formLayout=this.layout)},o.decorators=[{type:e.Component,args:[{selector:"tcfrm-rendered-form",template:'<div fxFill fxLayout="row" fxLayoutAlign = "center start">\n  <div class="tcs-rendered-form">\n    <json-schema-form #renderedForm *ngIf="!useCustomForm && formSchema"\n      loadExternalAssets="false"\n      [framework]="formsFramework"\n      [schema]="formSchema"\n      [layout]="formLayout"\n      [data]="formData"\n      [options]="options"\n      (onChanges)="onChanges($event)"\n      (onSubmit)="submitForm($event)"\n      (formLayout)="handleLayoutOutput($event)"\n    >\n    </json-schema-form>\n\n    \x3c!-- form-app="\'\'" - this is to work around an issue where the element doesnt display the form properly unless we pass in an additional input - angular bug? --\x3e\n    <custom-form *ngIf="useCustomForm && formRef && formData && appId" form-app="\'\'" [formRef]="formRef" [caseRef]="caseRef" [appId]="appId" [data]="formData" (formSubmitted)="submitForm($event.detail)"></custom-form>\n    <span *ngIf="!formSchema && !useCustomForm">A form cannot be generated as no schema is available. Use a supported form or register a custom form app.</span>\n  </div>\n</div>\n',styles:[".tcs-rendered-form{box-shadow:0 2px 8px 0 #dedede;background-color:#fff;width:100%;padding:20px}"]}]}],o.ctorParameters=function(){return[{type:r.ActivatedRoute}]},o.propDecorators={schema:[{type:e.Input}],layout:[{type:e.Input}],data:[{type:e.Input}],options:[{type:e.Input}],formRef:[{type:e.Input}],caseRef:[{type:e.Input}],appId:[{type:e.Input}],formsFramework:[{type:e.Input}],customFormDefs:[{type:e.Input}],formSubmit:[{type:e.Output}]},o}(),g=function(){function o(){}return o.decorators=[{type:e.NgModule,args:[{declarations:[h],imports:[i.BrowserModule,m.BrowserAnimationsModule,s.FlexLayoutModule,n.FormsModule,a.MatButtonModule,a.MatCardModule,a.MatCheckboxModule,a.MatIconModule,a.MatMenuModule,a.MatSelectModule,a.MatToolbarModule,t.MaterialDesignFrameworkModule,t.Bootstrap4FrameworkModule,a.MatButtonModule,a.MatCardModule,a.MatCheckboxModule,a.MatListModule,a.MatFormFieldModule,a.MatInputModule,a.MatIconModule,a.MatSelectModule,a.MatOptionModule,a.MatDialogModule,a.MatMenuModule,a.MatCardModule,a.MatTooltipModule,n.FormsModule,s.FlexLayoutModule,u.ScrollingModule,n.FormsModule,n.ReactiveFormsModule],schemas:[e.CUSTOM_ELEMENTS_SCHEMA],exports:[h],entryComponents:[]}]}],o}(),M=function(){function o(o,e){this.http=o,this.location=e,this.CUSTOM_FORMS_CONFIG_URL="assets/config/customForms.json"}return o.prototype.resolve=function(){var o=(new l.HttpHeaders).set("cacheResponse","true");return this.http.get(f.TcCoreCommonFunctions.prepareUrlForStaticResource(this.location,this.CUSTOM_FORMS_CONFIG_URL),{headers:o}).pipe(d.map(function(o){return(new p).deserialize(o)}))},o.decorators=[{type:e.Injectable}],o.ctorParameters=function(){return[{type:l.HttpClient},{type:c.Location}]},o}();o.CustomFormDefs=p,o.FormResolver=M,o.RenderedFormComponent=h,o.TcFormsLibModule=g,Object.defineProperty(o,"__esModule",{value:!0})});
//# sourceMappingURL=tibco-tcstk-tc-forms-lib.umd.min.js.map