{"version":3,"file":"tibco-tcstk-tc-forms-lib.umd.js","sources":["ng://@tibco-tcstk/tc-forms-lib/lib/models/tc-custom-forms.ts","ng://@tibco-tcstk/tc-forms-lib/lib/components/rendered-form/rendered-form.component.ts","ng://@tibco-tcstk/tc-forms-lib/lib/tc-forms-lib.module.ts","ng://@tibco-tcstk/tc-forms-lib/lib/resolvers/form.resolver.ts"],"sourcesContent":["import {Deserializable} from '@tibco-tcstk/tc-core-lib';\n\nexport class CustomFormDefs implements Deserializable {\n  customForms: string[];\n  deserialize(input: any): this {\n    Object.assign(this, input);\n    return this;\n  }\n}\n","/**\n * @ngdoc component\n * @name RenderedFormComponent\n *\n * @description\n * `<tcfrm-rendered-form>` is a component providing the ability to reneder a form using the third party angular6-json-form library.\n *\n * @usage\n *\n * This component is used by tc--liveapps-lib to render forms based on a JSON schema that is supplied by the liveapps API\n *\n * It is located into this dedicated library to make it easier to plug in an alternative form rendering library\n *\n */\n\nimport {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {JsonSchemaFormComponent, MaterialDesignFrameworkModule} from 'angular6-json-schema-form';\nimport {ActivatedRoute} from '@angular/router';\nimport {CustomFormDefs} from '../../models/tc-custom-forms';\n\n@Component({\n  selector: 'tcfrm-rendered-form',\n  templateUrl: './rendered-form.component.html',\n  styleUrls: ['./rendered-form.component.css']\n})\nexport class RenderedFormComponent implements OnInit, OnChanges {\n  @Input() schema: any = {};\n  @Input() layout: any[] = [];\n  @Input() data: any = {};\n  @Input() options: any[];\n  @Input() formRef: string;\n  @Input() caseRef: string;\n  @Input() appId: string;\n  @Input() formsFramework: string = this.formsFramework ? this.formsFramework : 'material-design';\n  @Input() customFormDefs: CustomFormDefs;\n  /**\n   * ~event formSubmit : form submitted\n   * ~payload any : data submitted from the form on submit (type=any)\n   */\n  @Output() formSubmit: EventEmitter<any> = new EventEmitter<any>();\n\n  formSchema: any;\n  formLayout: any[];\n  formData: any = {};\n  test: string;\n  useCustomForm: boolean;\n\n  submitForm = (data: any) => {\n    console.warn('*** Forms: Submitting form with payload: ', data);\n    console.warn('*** Forms: JSON: ', JSON.stringify(data));\n    this.formSubmit.emit(data);\n  }\n\n  handleLayoutOutput = (layout: any) => {\n    console.log('Layout:');\n    console.log(JSON.stringify(layout));\n  }\n\n  constructor(protected route: ActivatedRoute) { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // handle input param changes\n    if (this.customFormDefs && changes.formRef && changes.formRef.currentValue && (changes.formRef.currentValue !== changes.formRef.previousValue)) {\n      // check if this is a custom form\n      if (this.customFormDefs && this.customFormDefs.customForms) {\n        this.useCustomForm = (this.customFormDefs.customForms.findIndex((form) => {\n          return (form === changes.formRef.currentValue);\n        }) !== -1);\n      }\n      console.warn('*** Forms: Custom Form configuration (customForm.json): ', this.customFormDefs);\n      if (this.useCustomForm) {\n        console.warn('*** Forms: > Using custom form (formRef):', this.formRef);\n      } else {\n        console.warn('*** Forms: > Using auto-rendered form (formRef):', this.formRef);\n      }\n    }\n    if (changes.schema && changes.schema.currentValue && (changes.schema.currentValue !== changes.schema.previousValue)) {\n      const tmpSchema = changes.schema.currentValue;\n      // json-schema-form doesnt like the $schema and wont parse the schema if it is present. So remove it.\n      if (changes.schema.currentValue.$schema) {\n        delete tmpSchema.$schema;\n      }\n      this.formSchema = tmpSchema;\n      console.warn('*** Forms: Form Schema: ', JSON.stringify(this.formSchema));\n    }\n    if (changes.data && changes.data.currentValue && (changes.data.currentValue !== changes.data.previousValue)) {\n      this.formData = this.data;\n      console.warn('*** Forms: Initial Form Data:', this.formData);\n      console.warn('*** Forms: Initial Form Data (JSON):', JSON.stringify(this.formData));\n    }\n    if (changes.layout && changes.layout.currentValue && (changes.layout.currentValue !== changes.layout.previousValue)) {\n      this.formLayout = this.layout;\n    }\n  }\n\n  onChanges = ($event) => {\n    this.data = $event;\n  }\n\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { MaterialDesignFrameworkModule } from 'angular6-json-schema-form';\nimport { Bootstrap4FrameworkModule} from 'angular6-json-schema-form';\nimport {RenderedFormComponent} from './components/rendered-form/rendered-form.component';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule, MatDialogModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule, MatMenuModule, MatOptionModule, MatSelectModule, MatToolbarModule, MatTooltipModule\n} from '@angular/material';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {BrowserModule} from '@angular/platform-browser';\n\n@NgModule({\n  declarations: [\n    RenderedFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    FormsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MaterialDesignFrameworkModule,\n    Bootstrap4FrameworkModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatCardModule,\n    MatTooltipModule,\n    FormsModule,\n    FlexLayoutModule,\n    ScrollingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA],\n  exports: [\n    RenderedFormComponent\n  ],\n  entryComponents: [\n  ]\n})\nexport class TcFormsLibModule { }\n","import {Injectable} from '@angular/core';\nimport {Resolve} from '@angular/router';\nimport {Observable} from 'rxjs';\n\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Location} from '@angular/common';\nimport {TcCoreCommonFunctions} from '@tibco-tcstk/tc-core-lib';\nimport {map} from 'rxjs/operators';\nimport {CustomFormDefs} from '../models/tc-custom-forms';\n\n@Injectable()\nexport class FormResolver implements Resolve<Observable<CustomFormDefs>> {\n\n  CUSTOM_FORMS_CONFIG_URL = 'assets/config/customForms.json';\n\n  constructor(private http: HttpClient, private location: Location) {\n  }\n\n  resolve(): Observable<CustomFormDefs> {\n    const headers = new HttpHeaders().set('cacheResponse', 'true');\n    return this.http.get(TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, this.CUSTOM_FORMS_CONFIG_URL), { headers }).pipe(\n      map(formsConfig => {\n        return new CustomFormDefs().deserialize(formsConfig);\n      })\n    );\n  }\n\n}\n"],"names":["EventEmitter","Component","ActivatedRoute","Input","Output","NgModule","BrowserModule","BrowserAnimationsModule","FlexLayoutModule","FormsModule","MatButtonModule","MatCardModule","MatCheckboxModule","MatIconModule","MatMenuModule","MatSelectModule","MatToolbarModule","MaterialDesignFrameworkModule","Bootstrap4FrameworkModule","MatListModule","MatFormFieldModule","MatInputModule","MatOptionModule","MatDialogModule","MatTooltipModule","ScrollingModule","ReactiveFormsModule","CUSTOM_ELEMENTS_SCHEMA","HttpHeaders","TcCoreCommonFunctions","map","Injectable","HttpClient","Location"],"mappings":"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"}