/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { TcGeneralConfigService } from '../../services/tc-general-config.service';
import { MatSnackBar } from '@angular/material';
/**
 * Manages general settings for Config page
 *
 * ![alt-text](../tibco-cloud-settings-general.png "Image")
 *
 * \@example <tc-tibco-cloud-settings-general></tc-tibco-cloud-settings-general>
 */
var TibcoCloudSettingsGeneralComponent = /** @class */ (function () {
    function TibcoCloudSettingsGeneralComponent(route, generalConfigService, snackBar) {
        var _this = this;
        this.route = route;
        this.generalConfigService = generalConfigService;
        this.snackBar = snackBar;
        this.panelOpenState = false;
        this.runSaveFunction = (/**
         * @return {?}
         */
        function () {
            _this.generalConfigService.updateGeneralConfig(_this.sandboxId, _this.generalConfig.uiAppId, _this.generalConfig, _this.generalConfig.id).subscribe((/**
             * @param {?} result
             * @return {?}
             */
            function (result) {
                _this.snackBar.open('General configuration saved', 'OK', {
                    duration: 3000
                });
            }), (/**
             * @param {?} error
             * @return {?}
             */
            function (error) {
                _this.snackBar.open('Error saving general configuration saved', 'OK', {
                    duration: 3000
                });
            }));
        });
    }
    /**
     * @return {?}
     */
    TibcoCloudSettingsGeneralComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.generalConfig = this.route.snapshot.data.generalConfigHolder;
        this.claims = this.route.snapshot.data.claims;
        this.sandboxId = Number(this.claims.primaryProductionSandbox.id).valueOf();
        this.applicationTitle = this.generalConfig.applicationTitle;
        // this.roles = this.generalConfig.roles;
        this.displayName = this.generalConfig.displayName;
        this.documentationURL = this.generalConfig.documentationUrl;
    };
    /**
     * @protected
     * @return {?}
     */
    TibcoCloudSettingsGeneralComponent.prototype.getRoute = /**
     * @protected
     * @return {?}
     */
    function () {
        return this.route;
    };
    TibcoCloudSettingsGeneralComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tc-tibco-cloud-settings-general',
                    template: "<div fxLayout=\"column\" fxFill>\n  <tc-tibco-cloud-widget-header style=\"height: 40px;\" [icon]=\"'tcs-capabilities'\"\n                                [headerText]=\"'General Configuration'\"></tc-tibco-cloud-widget-header>\n  <div fxFlex style=\"padding: 20px; overflow: hidden\" fxLayout=\"column\">\n    <div style=\"overflow: auto;\">\n      <div fxLayout=\"column\" fxFlex>\n        <p>You can some of the default Application Settings here.</p>\n        <br>\n        <!-- Application specifics -->\n        <div class=\"tcs-app-form-field\" fxLayout=\"row\">\n          <mat-form-field style=\"min-width: 400px\">\n            <input matInput placeholder=\"Browser Tab Title\" [(ngModel)]=\"generalConfig.browserTitle\">\n          </mat-form-field>\n        </div>\n        <div class=\"tcs-app-form-field\" fxLayout=\"row\">\n          <mat-form-field style=\"min-width: 400px\">\n            <input matInput placeholder=\"Application Title\" [(ngModel)]=\"generalConfig.applicationTitle\">\n          </mat-form-field>\n        </div>\n        <div class=\"tcs-app-form-field\" fxLayout=\"row\">\n          <mat-form-field style=\"min-width: 400px\">\n            <input matInput placeholder=\"Welcome Message\" [(ngModel)]=\"generalConfig.welcomeMessage\">\n          </mat-form-field>\n        </div>\n\n        <!-- Advanced Settings (all Optional from Shared State) -->\n        <mat-accordion>\n          <mat-expansion-panel>\n            <mat-expansion-panel-header>\n              <mat-panel-title>Advanced Settings</mat-panel-title>\n            </mat-expansion-panel-header>\n            <mat-form-field style=\"min-width: 400px\">\n              <input matInput placeholder=\"Application Documentation URL\" [(ngModel)]=\"generalConfig.documentationUrl\">\n            </mat-form-field>\n          </mat-expansion-panel>\n        </mat-accordion>\n      </div>\n\n    </div>\n    <div fxFlex class=\"tcs-filler-panel\"></div>\n    <div fxLayout=\"column\" fxLayoutAlign=\"end end\" style=\"min-height: 50px\">\n      <button mat-raised-button color=\"primary\" (click)=\"runSaveFunction()\">Save</button>\n    </div>\n  </div>\n</div>\n",
                    styles: [".tcs-app-form-field{min-height:57px}"]
                }] }
    ];
    /** @nocollapse */
    TibcoCloudSettingsGeneralComponent.ctorParameters = function () { return [
        { type: ActivatedRoute },
        { type: TcGeneralConfigService },
        { type: MatSnackBar }
    ]; };
    return TibcoCloudSettingsGeneralComponent;
}());
export { TibcoCloudSettingsGeneralComponent };
if (false) {
    /** @type {?} */
    TibcoCloudSettingsGeneralComponent.prototype.applicationTitle;
    /** @type {?} */
    TibcoCloudSettingsGeneralComponent.prototype.roles;
    /** @type {?} */
    TibcoCloudSettingsGeneralComponent.prototype.displayName;
    /** @type {?} */
    TibcoCloudSettingsGeneralComponent.prototype.documentationURL;
    /** @type {?} */
    TibcoCloudSettingsGeneralComponent.prototype.panelOpenState;
    /** @type {?} */
    TibcoCloudSettingsGeneralComponent.prototype.generalConfig;
    /** @type {?} */
    TibcoCloudSettingsGeneralComponent.prototype.sandboxId;
    /** @type {?} */
    TibcoCloudSettingsGeneralComponent.prototype.claims;
    /** @type {?} */
    TibcoCloudSettingsGeneralComponent.prototype.runSaveFunction;
    /**
     * @type {?}
     * @protected
     */
    TibcoCloudSettingsGeneralComponent.prototype.route;
    /**
     * @type {?}
     * @protected
     */
    TibcoCloudSettingsGeneralComponent.prototype.generalConfigService;
    /**
     * @type {?}
     * @protected
     */
    TibcoCloudSettingsGeneralComponent.prototype.snackBar;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGliY28tY2xvdWQtc2V0dGluZ3MtZ2VuZXJhbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGliY28tdGNzdGsvdGMtY29yZS1saWIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aWJjby1jbG91ZC1zZXR0aW5ncy1nZW5lcmFsL3RpYmNvLWNsb3VkLXNldHRpbmdzLWdlbmVyYWwuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUVqRCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUVsRixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7Ozs7Ozs7O0FBVWhEO0lBZ0JJLDRDQUFzQixLQUFxQixFQUFZLG9CQUE0QyxFQUFZLFFBQXFCO1FBQXBJLGlCQUF5STtRQUFuSCxVQUFLLEdBQUwsS0FBSyxDQUFnQjtRQUFZLHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBd0I7UUFBWSxhQUFRLEdBQVIsUUFBUSxDQUFhO1FBTDdILG1CQUFjLEdBQUcsS0FBSyxDQUFDO1FBc0J2QixvQkFBZTs7O1FBQUc7WUFDdkIsS0FBSSxDQUFDLG9CQUFvQixDQUFDLG1CQUFtQixDQUFDLEtBQUksQ0FBQyxTQUFTLEVBQUUsS0FBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLEVBQUUsS0FBSSxDQUFDLGFBQWEsRUFBRSxLQUFJLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQyxDQUFDLFNBQVM7Ozs7WUFDMUksVUFBQSxNQUFNO2dCQUNGLEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLDZCQUE2QixFQUFFLElBQUksRUFBRTtvQkFDcEQsUUFBUSxFQUFFLElBQUk7aUJBQ2pCLENBQUMsQ0FBQztZQUNQLENBQUM7Ozs7WUFDRCxVQUFBLEtBQUs7Z0JBQ0QsS0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsMENBQTBDLEVBQUUsSUFBSSxFQUFFO29CQUNqRSxRQUFRLEVBQUUsSUFBSTtpQkFDakIsQ0FBQyxDQUFDO1lBQ1AsQ0FBQyxFQUNKLENBQUM7UUFDSixDQUFDLEVBQUE7SUE5QnVJLENBQUM7Ozs7SUFFekkscURBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUM7UUFDbEUsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQzlDLElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsd0JBQXdCLENBQUMsRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7UUFFekUsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsZ0JBQWdCLENBQUM7UUFDNUQseUNBQXlDO1FBQ3pDLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUM7UUFDbEQsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsZ0JBQWdCLENBQUM7SUFDaEUsQ0FBQzs7Ozs7SUFFUyxxREFBUTs7OztJQUFsQjtRQUNFLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNwQixDQUFDOztnQkEvQkosU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxpQ0FBaUM7b0JBQzNDLDBuRUFBNEQ7O2lCQUUvRDs7OztnQkFsQlEsY0FBYztnQkFFZCxzQkFBc0I7Z0JBRXRCLFdBQVc7O0lBMERwQix5Q0FBQztDQUFBLEFBaERELElBZ0RDO1NBM0NZLGtDQUFrQzs7O0lBRTNDLDhEQUFnQzs7SUFDaEMsbURBQWE7O0lBQ2IseURBQTRCOztJQUM1Qiw4REFBZ0M7O0lBQ2hDLDREQUE4Qjs7SUFDOUIsMkRBQW9DOztJQUNwQyx1REFBeUI7O0lBQ3pCLG9EQUFxQjs7SUFtQnJCLDZEQWFDOzs7OztJQTlCVyxtREFBK0I7Ozs7O0lBQUUsa0VBQXNEOzs7OztJQUFFLHNEQUErQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBY3RpdmF0ZWRSb3V0ZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBHZW5lcmFsQ29uZmlnIH0gZnJvbSAnLi4vLi4vbW9kZWxzL3RjLWdlbmVyYWwtY29uZmlnJztcbmltcG9ydCB7IFRjR2VuZXJhbENvbmZpZ1NlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy90Yy1nZW5lcmFsLWNvbmZpZy5zZXJ2aWNlJztcbmltcG9ydCB7IENsYWltIH0gZnJvbSAnLi4vLi4vbW9kZWxzL3RjLWxvZ2luJztcbmltcG9ydCB7IE1hdFNuYWNrQmFyIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwnO1xuXG5cbi8qKlxuICogTWFuYWdlcyBnZW5lcmFsIHNldHRpbmdzIGZvciBDb25maWcgcGFnZVxuICpcbiAqICFbYWx0LXRleHRdKC4uL3RpYmNvLWNsb3VkLXNldHRpbmdzLWdlbmVyYWwucG5nIFwiSW1hZ2VcIilcbiAqXG4gKkBleGFtcGxlIDx0Yy10aWJjby1jbG91ZC1zZXR0aW5ncy1nZW5lcmFsPjwvdGMtdGliY28tY2xvdWQtc2V0dGluZ3MtZ2VuZXJhbD5cbiAqL1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0Yy10aWJjby1jbG91ZC1zZXR0aW5ncy1nZW5lcmFsJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vdGliY28tY2xvdWQtc2V0dGluZ3MtZ2VuZXJhbC5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vdGliY28tY2xvdWQtc2V0dGluZ3MtZ2VuZXJhbC5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgVGliY29DbG91ZFNldHRpbmdzR2VuZXJhbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgICBwdWJsaWMgYXBwbGljYXRpb25UaXRsZTogc3RyaW5nO1xuICAgIHB1YmxpYyByb2xlcztcbiAgICBwdWJsaWMgZGlzcGxheU5hbWU6IGJvb2xlYW47XG4gICAgcHVibGljIGRvY3VtZW50YXRpb25VUkw6IHN0cmluZztcbiAgICBwdWJsaWMgcGFuZWxPcGVuU3RhdGUgPSBmYWxzZTtcbiAgICBwdWJsaWMgZ2VuZXJhbENvbmZpZzogR2VuZXJhbENvbmZpZztcbiAgICBwdWJsaWMgc2FuZGJveElkOiBudW1iZXI7XG4gICAgcHVibGljIGNsYWltczogQ2xhaW07XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgcm91dGU6IEFjdGl2YXRlZFJvdXRlLCBwcm90ZWN0ZWQgZ2VuZXJhbENvbmZpZ1NlcnZpY2U6IFRjR2VuZXJhbENvbmZpZ1NlcnZpY2UsIHByb3RlY3RlZCBzbmFja0JhcjogTWF0U25hY2tCYXIpIHsgfVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICB0aGlzLmdlbmVyYWxDb25maWcgPSB0aGlzLnJvdXRlLnNuYXBzaG90LmRhdGEuZ2VuZXJhbENvbmZpZ0hvbGRlcjtcbiAgICAgIHRoaXMuY2xhaW1zID0gdGhpcy5yb3V0ZS5zbmFwc2hvdC5kYXRhLmNsYWltcztcbiAgICAgIHRoaXMuc2FuZGJveElkID0gTnVtYmVyKHRoaXMuY2xhaW1zLnByaW1hcnlQcm9kdWN0aW9uU2FuZGJveC5pZCkudmFsdWVPZigpO1xuXG4gICAgICAgIHRoaXMuYXBwbGljYXRpb25UaXRsZSA9IHRoaXMuZ2VuZXJhbENvbmZpZy5hcHBsaWNhdGlvblRpdGxlO1xuICAgICAgICAvLyB0aGlzLnJvbGVzID0gdGhpcy5nZW5lcmFsQ29uZmlnLnJvbGVzO1xuICAgICAgICB0aGlzLmRpc3BsYXlOYW1lID0gdGhpcy5nZW5lcmFsQ29uZmlnLmRpc3BsYXlOYW1lO1xuICAgICAgICB0aGlzLmRvY3VtZW50YXRpb25VUkwgPSB0aGlzLmdlbmVyYWxDb25maWcuZG9jdW1lbnRhdGlvblVybDtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgZ2V0Um91dGUoKTogQWN0aXZhdGVkUm91dGUge1xuICAgICAgcmV0dXJuIHRoaXMucm91dGU7XG4gICAgfVxuXG4gICAgcHVibGljIHJ1blNhdmVGdW5jdGlvbiA9ICgpID0+IHtcbiAgICAgIHRoaXMuZ2VuZXJhbENvbmZpZ1NlcnZpY2UudXBkYXRlR2VuZXJhbENvbmZpZyh0aGlzLnNhbmRib3hJZCwgdGhpcy5nZW5lcmFsQ29uZmlnLnVpQXBwSWQsIHRoaXMuZ2VuZXJhbENvbmZpZywgdGhpcy5nZW5lcmFsQ29uZmlnLmlkKS5zdWJzY3JpYmUoXG4gICAgICAgICAgcmVzdWx0ID0+IHtcbiAgICAgICAgICAgICAgdGhpcy5zbmFja0Jhci5vcGVuKCdHZW5lcmFsIGNvbmZpZ3VyYXRpb24gc2F2ZWQnLCAnT0snLCB7XG4gICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMzAwMFxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgICAgICAgdGhpcy5zbmFja0Jhci5vcGVuKCdFcnJvciBzYXZpbmcgZ2VuZXJhbCBjb25maWd1cmF0aW9uIHNhdmVkJywgJ09LJywge1xuICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDMwMDBcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgKTtcbiAgICB9XG5cbn1cbiJdfQ==