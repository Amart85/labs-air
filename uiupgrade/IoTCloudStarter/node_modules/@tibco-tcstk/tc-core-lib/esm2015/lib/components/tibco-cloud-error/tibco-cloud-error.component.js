/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
/**
 * Global Error Handling, contains generic Error Handling for
 *
 * - NO_ROLE :: You are not a Member of this Application, please contact the Application- or Subscription-Owner
 * - NO_ACCESS :: You are not entitled to access this Application, please contact the Application- or Subscription-Owner
 * - NO_ROUTE_ACCESS :: Sorry but you do not have the required role to access this page of the application, please contact the application owner
 * - NOT_ADMIN_INIT :: Before using this application a member of the TIBCO Live Apps Admin Group must login to set initial configuration
 */
/**
 * Exception Handling page
 *
 * \@example <tc-tibco-cloud-error></tc-tibco-cloud-error>
 */
export class TibcoCloudErrorComponent {
    /**
     * todo: Add logger
     * @param {?} route
     */
    constructor(route) {
        this.route = route;
        this.knownErrorList = [
            {
                'errorCode': 'NO_ROLE',
                'errorTitle': 'Access Denied',
                'errorMessage': 'You are not a Member of this Application, please contact the Application- or Subscription-Owner.'
            },
            {
                'errorCode': 'NO_ACCESS',
                'errorTitle': 'Access Denied',
                'errorMessage': 'You are not entitled to access this Application, please contact the Application- or Subscription-Owner.'
            },
            {
                'errorCode': 'NO_ROUTE_ACCESS',
                'errorTitle': 'Access Denied',
                'errorMessage': 'Sorry but you do not have the required role to access this page of the application, please contact the application owner'
            },
            {
                'errorCode': 'NOT_ADMIN_INIT',
                'errorTitle': 'Admin configuration required',
                'errorMessage': 'Before using this application a member of the TIBCO Live Apps Admin Group must login to set initial configuration'
            }
        ];
        this.message = '';
        this.route.params.subscribe((/**
         * @param {?} params
         * @return {?}
         */
        params => {
            console.log(params); // log the entire params object
            console.log(params['errorCode']);
            console.log(params['errorData?']);
            if (params['errorCode'] != null) {
                this.code = params['errorCode'];
                this.title = this.knownErrorList.find((/**
                 * @param {?} x
                 * @return {?}
                 */
                x => x.errorCode === this.code)).errorTitle;
                this.message = this.knownErrorList.find((/**
                 * @param {?} x
                 * @return {?}
                 */
                x => x.errorCode === this.code)).errorMessage;
                this.data = params['errorData'];
            }
            else {
                this.code = 'Unknown Error Code';
            }
        }));
    }
    /**
     * @ignore
     * @return {?}
     */
    ngOnInit() {
    }
}
TibcoCloudErrorComponent.decorators = [
    { type: Component, args: [{
                selector: 'tc-tibco-cloud-error',
                template: "<div fxFill fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"start center\">\n    <mat-icon class=\"tcs-error-icon\" [svgIcon]=\"'ic-error-handler'\"></mat-icon>\n    <div style=\"margin-left: 30px; margin-right: 30px;\" fxLayout=\"column\" fxLayoutGap=\"10px\">\n      <span class=\"tcs-error-title\">{{title}}</span>\n      <span class=\"tcs-error-message\">{{message}}</span>\n      <span class=\"tcs-error-code\">[{{code}}] - {{data}}</span>\n    </div>\n  </div>\n</div>\n",
                styles: [".tcs-error-icon{height:300px;width:300px}.tcs-error-icon svg{width:300px;height:300px}.tcs-error-title{font-family:\"Source Sans Pro\";font-size:40px}.tcs-error-message{font-family:\"Source Sans Pro\";font-size:16px;font-color:#212121}.tcs-error-code{font-family:\"Source Sans Pro\";font-size:16px;font-color:grey}"]
            }] }
];
/** @nocollapse */
TibcoCloudErrorComponent.ctorParameters = () => [
    { type: ActivatedRoute }
];
if (false) {
    /** @type {?} */
    TibcoCloudErrorComponent.prototype.code;
    /** @type {?} */
    TibcoCloudErrorComponent.prototype.title;
    /** @type {?} */
    TibcoCloudErrorComponent.prototype.message;
    /** @type {?} */
    TibcoCloudErrorComponent.prototype.data;
    /** @type {?} */
    TibcoCloudErrorComponent.prototype.knownErrorList;
    /**
     * @type {?}
     * @protected
     */
    TibcoCloudErrorComponent.prototype.route;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGliY28tY2xvdWQtZXJyb3IuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpYmNvLXRjc3RrL3RjLWNvcmUtbGliLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGliY28tY2xvdWQtZXJyb3IvdGliY28tY2xvdWQtZXJyb3IuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7QUFxQi9DLE1BQU0sT0FBTyx3QkFBd0I7Ozs7O0lBS25DLFlBQXNCLEtBQXFCO1FBQXJCLFVBQUssR0FBTCxLQUFLLENBQWdCO1FBc0IzQyxtQkFBYyxHQUFHO1lBQ2Y7Z0JBQ0UsV0FBVyxFQUFHLFNBQVM7Z0JBQ3ZCLFlBQVksRUFBRyxlQUFlO2dCQUM5QixjQUFjLEVBQUcsa0dBQWtHO2FBRXBIO1lBQ0Q7Z0JBQ0UsV0FBVyxFQUFHLFdBQVc7Z0JBQ3pCLFlBQVksRUFBRyxlQUFlO2dCQUM5QixjQUFjLEVBQUcseUdBQXlHO2FBRTNIO1lBQ0Q7Z0JBQ0UsV0FBVyxFQUFHLGlCQUFpQjtnQkFDL0IsWUFBWSxFQUFHLGVBQWU7Z0JBQzlCLGNBQWMsRUFBRywwSEFBMEg7YUFDNUk7WUFDRDtnQkFDRSxXQUFXLEVBQUcsZ0JBQWdCO2dCQUM5QixZQUFZLEVBQUcsOEJBQThCO2dCQUM3QyxjQUFjLEVBQUcsbUhBQW1IO2FBQ3JJO1NBQ0YsQ0FBQztRQTVDQSxJQUFJLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUNsQixJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxTQUFTOzs7O1FBQUMsTUFBTSxDQUFDLEVBQUU7WUFDbkMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLCtCQUErQjtZQUNwRCxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO1lBQ2pDLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUM7WUFDbEMsSUFBSSxNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksSUFBSSxFQUFFO2dCQUMvQixJQUFJLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQztnQkFDaEMsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUk7Ozs7Z0JBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsU0FBUyxLQUFLLElBQUksQ0FBQyxJQUFJLEVBQUMsQ0FBQyxVQUFVLENBQUM7Z0JBQ2pGLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJOzs7O2dCQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFNBQVMsS0FBSyxJQUFJLENBQUMsSUFBSSxFQUFDLENBQUMsWUFBWSxDQUFDO2dCQUNyRixJQUFJLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQzthQUNqQztpQkFBTTtnQkFDTCxJQUFJLENBQUMsSUFBSSxHQUFHLG9CQUFvQixDQUFDO2FBQ2xDO1FBQ0gsQ0FBQyxFQUFDLENBQUM7SUFDTCxDQUFDOzs7OztJQW1DRCxRQUFRO0lBQ1IsQ0FBQzs7O1lBN0RGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsc0JBQXNCO2dCQUNoQyw2aEJBQWlEOzthQUVsRDs7OztZQXBCTyxjQUFjOzs7O0lBMkNwQix3Q0FBYTs7SUFDYix5Q0FBYzs7SUFDZCwyQ0FBZ0I7O0lBQ2hCLHdDQUFhOztJQUViLGtEQXVCRTs7Ozs7SUE3Q1UseUNBQStCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7QWN0aXZhdGVkUm91dGV9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5cbi8qKlxuICogR2xvYmFsIEVycm9yIEhhbmRsaW5nLCBjb250YWlucyBnZW5lcmljIEVycm9yIEhhbmRsaW5nIGZvclxuICpcbiAqIC0gTk9fUk9MRSA6OiBZb3UgYXJlIG5vdCBhIE1lbWJlciBvZiB0aGlzIEFwcGxpY2F0aW9uLCBwbGVhc2UgY29udGFjdCB0aGUgQXBwbGljYXRpb24tIG9yIFN1YnNjcmlwdGlvbi1Pd25lclxuICogLSBOT19BQ0NFU1MgOjogWW91IGFyZSBub3QgZW50aXRsZWQgdG8gYWNjZXNzIHRoaXMgQXBwbGljYXRpb24sIHBsZWFzZSBjb250YWN0IHRoZSBBcHBsaWNhdGlvbi0gb3IgU3Vic2NyaXB0aW9uLU93bmVyXG4gKiAtIE5PX1JPVVRFX0FDQ0VTUyA6OiBTb3JyeSBidXQgeW91IGRvIG5vdCBoYXZlIHRoZSByZXF1aXJlZCByb2xlIHRvIGFjY2VzcyB0aGlzIHBhZ2Ugb2YgdGhlIGFwcGxpY2F0aW9uLCBwbGVhc2UgY29udGFjdCB0aGUgYXBwbGljYXRpb24gb3duZXJcbiAqIC0gTk9UX0FETUlOX0lOSVQgOjogQmVmb3JlIHVzaW5nIHRoaXMgYXBwbGljYXRpb24gYSBtZW1iZXIgb2YgdGhlIFRJQkNPIExpdmUgQXBwcyBBZG1pbiBHcm91cCBtdXN0IGxvZ2luIHRvIHNldCBpbml0aWFsIGNvbmZpZ3VyYXRpb25cbiAqL1xuXG4vKipcbiAqIEV4Y2VwdGlvbiBIYW5kbGluZyBwYWdlXG4gKlxuICpAZXhhbXBsZSA8dGMtdGliY28tY2xvdWQtZXJyb3I+PC90Yy10aWJjby1jbG91ZC1lcnJvcj5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGMtdGliY28tY2xvdWQtZXJyb3InLFxuICB0ZW1wbGF0ZVVybDogJy4vdGliY28tY2xvdWQtZXJyb3IuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi90aWJjby1jbG91ZC1lcnJvci5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgVGliY29DbG91ZEVycm9yQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAvKipcbiAgICogdG9kbzogQWRkIGxvZ2dlclxuICAgKi9cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZSkge1xuICAgIHRoaXMubWVzc2FnZSA9ICcnO1xuICAgIHRoaXMucm91dGUucGFyYW1zLnN1YnNjcmliZShwYXJhbXMgPT4ge1xuICAgICAgY29uc29sZS5sb2cocGFyYW1zKTsgLy8gbG9nIHRoZSBlbnRpcmUgcGFyYW1zIG9iamVjdFxuICAgICAgY29uc29sZS5sb2cocGFyYW1zWydlcnJvckNvZGUnXSk7XG4gICAgICBjb25zb2xlLmxvZyhwYXJhbXNbJ2Vycm9yRGF0YT8nXSk7XG4gICAgICBpZiAocGFyYW1zWydlcnJvckNvZGUnXSAhPSBudWxsKSB7XG4gICAgICAgIHRoaXMuY29kZSA9IHBhcmFtc1snZXJyb3JDb2RlJ107XG4gICAgICAgIHRoaXMudGl0bGUgPSB0aGlzLmtub3duRXJyb3JMaXN0LmZpbmQoeCA9PiB4LmVycm9yQ29kZSA9PT0gdGhpcy5jb2RlKS5lcnJvclRpdGxlO1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSB0aGlzLmtub3duRXJyb3JMaXN0LmZpbmQoeCA9PiB4LmVycm9yQ29kZSA9PT0gdGhpcy5jb2RlKS5lcnJvck1lc3NhZ2U7XG4gICAgICAgIHRoaXMuZGF0YSA9IHBhcmFtc1snZXJyb3JEYXRhJ107XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmNvZGUgPSAnVW5rbm93biBFcnJvciBDb2RlJztcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGNvZGU6IHN0cmluZztcbiAgdGl0bGU6IHN0cmluZztcbiAgbWVzc2FnZTogc3RyaW5nO1xuICBkYXRhOiBzdHJpbmc7XG5cbiAga25vd25FcnJvckxpc3QgPSBbXG4gICAge1xuICAgICAgJ2Vycm9yQ29kZScgOiAnTk9fUk9MRScsXG4gICAgICAnZXJyb3JUaXRsZScgOiAnQWNjZXNzIERlbmllZCcsXG4gICAgICAnZXJyb3JNZXNzYWdlJyA6ICdZb3UgYXJlIG5vdCBhIE1lbWJlciBvZiB0aGlzIEFwcGxpY2F0aW9uLCBwbGVhc2UgY29udGFjdCB0aGUgQXBwbGljYXRpb24tIG9yIFN1YnNjcmlwdGlvbi1Pd25lci4nXG5cbiAgICB9LFxuICAgIHtcbiAgICAgICdlcnJvckNvZGUnIDogJ05PX0FDQ0VTUycsXG4gICAgICAnZXJyb3JUaXRsZScgOiAnQWNjZXNzIERlbmllZCcsXG4gICAgICAnZXJyb3JNZXNzYWdlJyA6ICdZb3UgYXJlIG5vdCBlbnRpdGxlZCB0byBhY2Nlc3MgdGhpcyBBcHBsaWNhdGlvbiwgcGxlYXNlIGNvbnRhY3QgdGhlIEFwcGxpY2F0aW9uLSBvciBTdWJzY3JpcHRpb24tT3duZXIuJ1xuXG4gICAgfSxcbiAgICB7XG4gICAgICAnZXJyb3JDb2RlJyA6ICdOT19ST1VURV9BQ0NFU1MnLFxuICAgICAgJ2Vycm9yVGl0bGUnIDogJ0FjY2VzcyBEZW5pZWQnLFxuICAgICAgJ2Vycm9yTWVzc2FnZScgOiAnU29ycnkgYnV0IHlvdSBkbyBub3QgaGF2ZSB0aGUgcmVxdWlyZWQgcm9sZSB0byBhY2Nlc3MgdGhpcyBwYWdlIG9mIHRoZSBhcHBsaWNhdGlvbiwgcGxlYXNlIGNvbnRhY3QgdGhlIGFwcGxpY2F0aW9uIG93bmVyJ1xuICAgIH0sXG4gICAge1xuICAgICAgJ2Vycm9yQ29kZScgOiAnTk9UX0FETUlOX0lOSVQnLFxuICAgICAgJ2Vycm9yVGl0bGUnIDogJ0FkbWluIGNvbmZpZ3VyYXRpb24gcmVxdWlyZWQnLFxuICAgICAgJ2Vycm9yTWVzc2FnZScgOiAnQmVmb3JlIHVzaW5nIHRoaXMgYXBwbGljYXRpb24gYSBtZW1iZXIgb2YgdGhlIFRJQkNPIExpdmUgQXBwcyBBZG1pbiBHcm91cCBtdXN0IGxvZ2luIHRvIHNldCBpbml0aWFsIGNvbmZpZ3VyYXRpb24nXG4gICAgfVxuICBdO1xuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBuZ09uSW5pdCgpIHtcbiAgfVxuXG5cbn1cblxuXG4iXX0=