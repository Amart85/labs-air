/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild, ElementRef, Input } from '@angular/core';
import { Location } from '@angular/common';
import { TcCoreCommonFunctions } from '../../common/tc-core-common-functions';
import { MessageTopicService } from '../../common/tc-core-topic-comm';
/**
 * TIBCO Cloud Navigation Bar
 *
 * ![alt-text](../tibco-cloud-navbar.png "Image")
 *
 * \@example <tc-tibco-cloud-navbar appName=""></tc-tibco-cloud-navbar>
 */
export class TibcoCloudNavbarComponent {
    /**
     * single empty Constructor of TIBCO Cloud Navigation Bar
     * @param {?} location
     * @param {?} messageService
     */
    constructor(location, messageService) {
        this.location = location;
        this.messageService = messageService;
        this.ms = messageService;
    }
    /**
     * @ignore
     * @return {?}
     */
    ngOnInit() {
        if (this.docUrl && (this.docUrl.slice(0, 4).toLowerCase() !== 'http')) {
            //      this.docUrl = this.location.prepareExternalUrl(this.docUrl);        // This will work with non hash routing
            this.docUrl = TcCoreCommonFunctions.prepareUrlForStaticResource(this.location, this.docUrl); // This will work with hash routing
        }
        this.navbar = new GlobalNavbar({
            container: '#navbar',
            textAfterLogo: this.appName ? this.appName : undefined,
            iconMenus: {
                search: {
                    visible: false // for versions 0.1.X the propertie is "disabled" instead of "visible".
                },
                download: {
                    visible: false
                },
                help: {
                    visible: true
                },
                notifications: {
                    visible: false
                },
                products: {
                    visible: false
                },
                region: {
                    visible: false
                },
                accountswitcher: {
                    visible: false
                }
            },
            customProfilePanel: {
                account: {
                    visible: false,
                    disabled: true
                },
                subscriptions: {
                    visible: false,
                    disabled: true
                },
                organization: {
                    visible: false
                },
                tenants: {
                    visible: false
                }
            },
            customizedComponents: [
                {
                    name: 'help',
                    template: '#help-template'
                }
            ]
        });
        if (this.logoUrl || this.logoClickTargetUrl || this.rebrandConfig) {
            /** @type {?} */
            const style = {};
            if (this.logoUrl || this.logoClickTargetUrl) {
                style.logo = {
                    'src': this.logoUrl,
                    'url': this.logoClickTargetUrl // If the url is not set then the logo will redirect to TSC.
                };
            }
            if (this.rebrandConfig) {
                if (this.rebrandConfig.backgroundColor) {
                    style.backgroundColor = this.rebrandConfig.backgroundColor;
                }
                if (this.rebrandConfig.fontColor) {
                    style.fontColor = this.rebrandConfig.fontColor;
                }
                if (this.rebrandConfig.fontFamily) {
                    style.fontFamily = this.rebrandConfig.fontFamily;
                }
                if (this.rebrandConfig.iconColor) {
                    style.iconColor = this.rebrandConfig.iconColor;
                }
            }
            this.navbar.refreshRebrandingStyle(style);
        }
        this.navbar.load();
        // console.log('DOC URL: ' + this.docUrl);
        /** @type {?} */
        const initialHelpURL = this.docUrl + '/help.html';
        this.urlExists(initialHelpURL, (/**
         * @param {?} exists
         * @return {?}
         */
        exists => {
            if (exists) {
                this.navbar.customizePanel('help', '<embed src="' + initialHelpURL + '" style="height: 100%; width: 100%">'); // set HTML string
            }
            else {
                this.navbar.customizePanel('help', '<b> No Help Page Found</b>'); // set HTML string
            }
        }));
        this.ms.getMessage('help').subscribe((/**
         * @param {?} data
         * @return {?}
         */
        data => {
            // console.log('Got message: ' + data.text);
            this.findHelpFile('assets/help/' + data.text + '/help.html');
        }));
    }
    /**
     * @param {?} helpUrl
     * @return {?}
     */
    findHelpFile(helpUrl) {
        this.urlExists(helpUrl, (/**
         * @param {?} exists
         * @return {?}
         */
        exists => {
            // console.log('RESULT: url=' + helpUrl + ', exists=' + exists);
            if (exists) {
                console.log('Setting help page: ' + helpUrl);
                this.navbar.customizePanel('help', '<embed src="' + helpUrl + '" style="height: 100%; width: 100%">');
            }
            else {
                if (helpUrl.includes('/')) {
                    // Find one step lower
                    // console.log('HelpURL before: |' + helpUrl + '|');
                    helpUrl = helpUrl.substring(0, helpUrl.lastIndexOf('/help.html'));
                    // console.log('HelpURL middle: |' + helpUrl + '|');
                    helpUrl = helpUrl.substring(0, helpUrl.lastIndexOf('/') + 1);
                    // console.log('HelpURL  after: |' + helpUrl + '|');
                    this.findHelpFile(helpUrl + 'help.html');
                }
                else {
                    console.log('No valid help file found...');
                    this.navbar.customizePanel('help', '<b> No Help Page Found</b>'); // set HTML string
                }
            }
        }));
    }
    // The "callback" argument is called with either true or false
    // depending on whether the "url" exists or not.
    /**
     * @param {?} url
     * @param {?} callback
     * @return {?}
     */
    urlExists(url, callback) {
        /** @type {?} */
        const http = new XMLHttpRequest();
        http.open('GET', url, true);
        http.onload = (/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            if (http.readyState === 4) {
                if (http.status === 200) {
                    callback(true);
                }
                else {
                    callback(false);
                }
            }
        });
        http.send();
    }
}
TibcoCloudNavbarComponent.decorators = [
    { type: Component, args: [{
                selector: 'tc-tibco-cloud-navbar',
                template: "<div class=\"tai-navbar\">\n<div id=\"navbar\" class=\"tai-navbar\" #navbar></div>\n</div>\n",
                styles: [""]
            }] }
];
/** @nocollapse */
TibcoCloudNavbarComponent.ctorParameters = () => [
    { type: Location },
    { type: MessageTopicService }
];
TibcoCloudNavbarComponent.propDecorators = {
    navbarRef: [{ type: ViewChild, args: ['navbar', { static: true },] }],
    appName: [{ type: Input }],
    docUrl: [{ type: Input }],
    logoUrl: [{ type: Input }],
    rebrandConfig: [{ type: Input }],
    logoClickTargetUrl: [{ type: Input }]
};
if (false) {
    /**
     * Reference Element
     * @type {?}
     * @private
     */
    TibcoCloudNavbarComponent.prototype.navbarRef;
    /**
     * diaplayed Application Name
     * @type {?}
     */
    TibcoCloudNavbarComponent.prototype.appName;
    /**
     * Documentation URL
     * @type {?}
     */
    TibcoCloudNavbarComponent.prototype.docUrl;
    /**
     * Custom Logo URL
     * @type {?}
     */
    TibcoCloudNavbarComponent.prototype.logoUrl;
    /**
     * rebrand config - example: { "backgroundColor": "#cfcfcf", "fontColor": "#682782", "fontFamily": "Oswald", "iconColor": "red" }
     * @type {?}
     */
    TibcoCloudNavbarComponent.prototype.rebrandConfig;
    /**
     * Where to redirect on click of logo
     * @type {?}
     */
    TibcoCloudNavbarComponent.prototype.logoClickTargetUrl;
    /**
     * @type {?}
     * @private
     */
    TibcoCloudNavbarComponent.prototype.navbar;
    /**
     * @type {?}
     * @private
     */
    TibcoCloudNavbarComponent.prototype.ms;
    /**
     * @type {?}
     * @protected
     */
    TibcoCloudNavbarComponent.prototype.location;
    /**
     * @type {?}
     * @protected
     */
    TibcoCloudNavbarComponent.prototype.messageService;
}
//# sourceMappingURL=data:application/json;base64,