/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { TcGeneralConfigService } from '../../services/tc-general-config.service';
import { MatSnackBar } from '@angular/material';
/**
 * Manages general settings for Config page
 *
 * ![alt-text](../tibco-cloud-settings-general.png "Image")
 *
 * \@example <tc-tibco-cloud-settings-general></tc-tibco-cloud-settings-general>
 */
export class TibcoCloudSettingsGeneralComponent {
    /**
     * @param {?} route
     * @param {?} generalConfigService
     * @param {?} snackBar
     */
    constructor(route, generalConfigService, snackBar) {
        this.route = route;
        this.generalConfigService = generalConfigService;
        this.snackBar = snackBar;
        this.panelOpenState = false;
        this.runSaveFunction = (/**
         * @return {?}
         */
        () => {
            this.generalConfigService.updateGeneralConfig(this.sandboxId, this.generalConfig.uiAppId, this.generalConfig, this.generalConfig.id).subscribe((/**
             * @param {?} result
             * @return {?}
             */
            result => {
                this.snackBar.open('General configuration saved', 'OK', {
                    duration: 3000
                });
            }), (/**
             * @param {?} error
             * @return {?}
             */
            error => {
                this.snackBar.open('Error saving general configuration saved', 'OK', {
                    duration: 3000
                });
            }));
        });
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.generalConfig = this.route.snapshot.data.generalConfigHolder;
        this.claims = this.route.snapshot.data.claims;
        this.sandboxId = Number(this.claims.primaryProductionSandbox.id).valueOf();
        this.applicationTitle = this.generalConfig.applicationTitle;
        // this.roles = this.generalConfig.roles;
        this.displayName = this.generalConfig.displayName;
        this.documentationURL = this.generalConfig.documentationUrl;
    }
    /**
     * @protected
     * @return {?}
     */
    getRoute() {
        return this.route;
    }
}
TibcoCloudSettingsGeneralComponent.decorators = [
    { type: Component, args: [{
                selector: 'tc-tibco-cloud-settings-general',
                template: "<div fxLayout=\"column\" fxFill>\n  <tc-tibco-cloud-widget-header style=\"height: 40px;\" [icon]=\"'tcs-capabilities'\"\n                                [headerText]=\"'General Configuration'\"></tc-tibco-cloud-widget-header>\n  <div fxFlex style=\"padding: 20px; overflow: hidden\" fxLayout=\"column\">\n    <div style=\"overflow: auto;\">\n      <div fxLayout=\"column\" fxFlex>\n        <p>You can some of the default Application Settings here.</p>\n        <br>\n        <!-- Application specifics -->\n        <div class=\"tcs-app-form-field\" fxLayout=\"row\">\n          <mat-form-field style=\"min-width: 400px\">\n            <input matInput placeholder=\"Browser Tab Title\" [(ngModel)]=\"generalConfig.browserTitle\">\n          </mat-form-field>\n        </div>\n        <div class=\"tcs-app-form-field\" fxLayout=\"row\">\n          <mat-form-field style=\"min-width: 400px\">\n            <input matInput placeholder=\"Application Title\" [(ngModel)]=\"generalConfig.applicationTitle\">\n          </mat-form-field>\n        </div>\n        <div class=\"tcs-app-form-field\" fxLayout=\"row\">\n          <mat-form-field style=\"min-width: 400px\">\n            <input matInput placeholder=\"Welcome Message\" [(ngModel)]=\"generalConfig.welcomeMessage\">\n          </mat-form-field>\n        </div>\n\n        <!-- Advanced Settings (all Optional from Shared State) -->\n        <mat-accordion>\n          <mat-expansion-panel>\n            <mat-expansion-panel-header>\n              <mat-panel-title>Advanced Settings</mat-panel-title>\n            </mat-expansion-panel-header>\n            <mat-form-field style=\"min-width: 400px\">\n              <input matInput placeholder=\"Application Documentation URL\" [(ngModel)]=\"generalConfig.documentationUrl\">\n            </mat-form-field>\n          </mat-expansion-panel>\n        </mat-accordion>\n      </div>\n\n    </div>\n    <div fxFlex class=\"tcs-filler-panel\"></div>\n    <div fxLayout=\"column\" fxLayoutAlign=\"end end\" style=\"min-height: 50px\">\n      <button mat-raised-button color=\"primary\" (click)=\"runSaveFunction()\">Save</button>\n    </div>\n  </div>\n</div>\n",
                styles: [".tcs-app-form-field{min-height:57px}"]
            }] }
];
/** @nocollapse */
TibcoCloudSettingsGeneralComponent.ctorParameters = () => [
    { type: ActivatedRoute },
    { type: TcGeneralConfigService },
    { type: MatSnackBar }
];
if (false) {
    /** @type {?} */
    TibcoCloudSettingsGeneralComponent.prototype.applicationTitle;
    /** @type {?} */
    TibcoCloudSettingsGeneralComponent.prototype.roles;
    /** @type {?} */
    TibcoCloudSettingsGeneralComponent.prototype.displayName;
    /** @type {?} */
    TibcoCloudSettingsGeneralComponent.prototype.documentationURL;
    /** @type {?} */
    TibcoCloudSettingsGeneralComponent.prototype.panelOpenState;
    /** @type {?} */
    TibcoCloudSettingsGeneralComponent.prototype.generalConfig;
    /** @type {?} */
    TibcoCloudSettingsGeneralComponent.prototype.sandboxId;
    /** @type {?} */
    TibcoCloudSettingsGeneralComponent.prototype.claims;
    /** @type {?} */
    TibcoCloudSettingsGeneralComponent.prototype.runSaveFunction;
    /**
     * @type {?}
     * @protected
     */
    TibcoCloudSettingsGeneralComponent.prototype.route;
    /**
     * @type {?}
     * @protected
     */
    TibcoCloudSettingsGeneralComponent.prototype.generalConfigService;
    /**
     * @type {?}
     * @protected
     */
    TibcoCloudSettingsGeneralComponent.prototype.snackBar;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGliY28tY2xvdWQtc2V0dGluZ3MtZ2VuZXJhbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGliY28tdGNzdGsvdGMtY29yZS1saWIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90aWJjby1jbG91ZC1zZXR0aW5ncy1nZW5lcmFsL3RpYmNvLWNsb3VkLXNldHRpbmdzLWdlbmVyYWwuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUVqRCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUVsRixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7Ozs7Ozs7O0FBZWhELE1BQU0sT0FBTyxrQ0FBa0M7Ozs7OztJQVczQyxZQUFzQixLQUFxQixFQUFZLG9CQUE0QyxFQUFZLFFBQXFCO1FBQTlHLFVBQUssR0FBTCxLQUFLLENBQWdCO1FBQVkseUJBQW9CLEdBQXBCLG9CQUFvQixDQUF3QjtRQUFZLGFBQVEsR0FBUixRQUFRLENBQWE7UUFMN0gsbUJBQWMsR0FBRyxLQUFLLENBQUM7UUFzQnZCLG9CQUFlOzs7UUFBRyxHQUFHLEVBQUU7WUFDNUIsSUFBSSxDQUFDLG9CQUFvQixDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQyxDQUFDLFNBQVM7Ozs7WUFDMUksTUFBTSxDQUFDLEVBQUU7Z0JBQ0wsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsNkJBQTZCLEVBQUUsSUFBSSxFQUFFO29CQUNwRCxRQUFRLEVBQUUsSUFBSTtpQkFDakIsQ0FBQyxDQUFDO1lBQ1AsQ0FBQzs7OztZQUNELEtBQUssQ0FBQyxFQUFFO2dCQUNKLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLDBDQUEwQyxFQUFFLElBQUksRUFBRTtvQkFDakUsUUFBUSxFQUFFLElBQUk7aUJBQ2pCLENBQUMsQ0FBQztZQUNQLENBQUMsRUFDSixDQUFDO1FBQ0osQ0FBQyxFQUFBO0lBOUJ1SSxDQUFDOzs7O0lBRXpJLFFBQVE7UUFDTixJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQztRQUNsRSxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDOUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyx3QkFBd0IsQ0FBQyxFQUFFLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUV6RSxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQztRQUM1RCx5Q0FBeUM7UUFDekMsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQztRQUNsRCxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQztJQUNoRSxDQUFDOzs7OztJQUVTLFFBQVE7UUFDaEIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7OztZQS9CSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLGlDQUFpQztnQkFDM0MsMG5FQUE0RDs7YUFFL0Q7Ozs7WUFsQlEsY0FBYztZQUVkLHNCQUFzQjtZQUV0QixXQUFXOzs7O0lBaUJoQiw4REFBZ0M7O0lBQ2hDLG1EQUFhOztJQUNiLHlEQUE0Qjs7SUFDNUIsOERBQWdDOztJQUNoQyw0REFBOEI7O0lBQzlCLDJEQUFvQzs7SUFDcEMsdURBQXlCOztJQUN6QixvREFBcUI7O0lBbUJyQiw2REFhQzs7Ozs7SUE5QlcsbURBQStCOzs7OztJQUFFLGtFQUFzRDs7Ozs7SUFBRSxzREFBK0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWN0aXZhdGVkUm91dGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgR2VuZXJhbENvbmZpZyB9IGZyb20gJy4uLy4uL21vZGVscy90Yy1nZW5lcmFsLWNvbmZpZyc7XG5pbXBvcnQgeyBUY0dlbmVyYWxDb25maWdTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvdGMtZ2VuZXJhbC1jb25maWcuc2VydmljZSc7XG5pbXBvcnQgeyBDbGFpbSB9IGZyb20gJy4uLy4uL21vZGVscy90Yy1sb2dpbic7XG5pbXBvcnQgeyBNYXRTbmFja0JhciB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsJztcblxuXG4vKipcbiAqIE1hbmFnZXMgZ2VuZXJhbCBzZXR0aW5ncyBmb3IgQ29uZmlnIHBhZ2VcbiAqXG4gKiAhW2FsdC10ZXh0XSguLi90aWJjby1jbG91ZC1zZXR0aW5ncy1nZW5lcmFsLnBuZyBcIkltYWdlXCIpXG4gKlxuICpAZXhhbXBsZSA8dGMtdGliY28tY2xvdWQtc2V0dGluZ3MtZ2VuZXJhbD48L3RjLXRpYmNvLWNsb3VkLXNldHRpbmdzLWdlbmVyYWw+XG4gKi9cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndGMtdGliY28tY2xvdWQtc2V0dGluZ3MtZ2VuZXJhbCcsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3RpYmNvLWNsb3VkLXNldHRpbmdzLWdlbmVyYWwuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL3RpYmNvLWNsb3VkLXNldHRpbmdzLWdlbmVyYWwuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIFRpYmNvQ2xvdWRTZXR0aW5nc0dlbmVyYWxDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gICAgcHVibGljIGFwcGxpY2F0aW9uVGl0bGU6IHN0cmluZztcbiAgICBwdWJsaWMgcm9sZXM7XG4gICAgcHVibGljIGRpc3BsYXlOYW1lOiBib29sZWFuO1xuICAgIHB1YmxpYyBkb2N1bWVudGF0aW9uVVJMOiBzdHJpbmc7XG4gICAgcHVibGljIHBhbmVsT3BlblN0YXRlID0gZmFsc2U7XG4gICAgcHVibGljIGdlbmVyYWxDb25maWc6IEdlbmVyYWxDb25maWc7XG4gICAgcHVibGljIHNhbmRib3hJZDogbnVtYmVyO1xuICAgIHB1YmxpYyBjbGFpbXM6IENsYWltO1xuXG4gICAgY29uc3RydWN0b3IocHJvdGVjdGVkIHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZSwgcHJvdGVjdGVkIGdlbmVyYWxDb25maWdTZXJ2aWNlOiBUY0dlbmVyYWxDb25maWdTZXJ2aWNlLCBwcm90ZWN0ZWQgc25hY2tCYXI6IE1hdFNuYWNrQmFyKSB7IH1cblxuICAgIG5nT25Jbml0KCkge1xuICAgICAgdGhpcy5nZW5lcmFsQ29uZmlnID0gdGhpcy5yb3V0ZS5zbmFwc2hvdC5kYXRhLmdlbmVyYWxDb25maWdIb2xkZXI7XG4gICAgICB0aGlzLmNsYWltcyA9IHRoaXMucm91dGUuc25hcHNob3QuZGF0YS5jbGFpbXM7XG4gICAgICB0aGlzLnNhbmRib3hJZCA9IE51bWJlcih0aGlzLmNsYWltcy5wcmltYXJ5UHJvZHVjdGlvblNhbmRib3guaWQpLnZhbHVlT2YoKTtcblxuICAgICAgICB0aGlzLmFwcGxpY2F0aW9uVGl0bGUgPSB0aGlzLmdlbmVyYWxDb25maWcuYXBwbGljYXRpb25UaXRsZTtcbiAgICAgICAgLy8gdGhpcy5yb2xlcyA9IHRoaXMuZ2VuZXJhbENvbmZpZy5yb2xlcztcbiAgICAgICAgdGhpcy5kaXNwbGF5TmFtZSA9IHRoaXMuZ2VuZXJhbENvbmZpZy5kaXNwbGF5TmFtZTtcbiAgICAgICAgdGhpcy5kb2N1bWVudGF0aW9uVVJMID0gdGhpcy5nZW5lcmFsQ29uZmlnLmRvY3VtZW50YXRpb25Vcmw7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIGdldFJvdXRlKCk6IEFjdGl2YXRlZFJvdXRlIHtcbiAgICAgIHJldHVybiB0aGlzLnJvdXRlO1xuICAgIH1cblxuICAgIHB1YmxpYyBydW5TYXZlRnVuY3Rpb24gPSAoKSA9PiB7XG4gICAgICB0aGlzLmdlbmVyYWxDb25maWdTZXJ2aWNlLnVwZGF0ZUdlbmVyYWxDb25maWcodGhpcy5zYW5kYm94SWQsIHRoaXMuZ2VuZXJhbENvbmZpZy51aUFwcElkLCB0aGlzLmdlbmVyYWxDb25maWcsIHRoaXMuZ2VuZXJhbENvbmZpZy5pZCkuc3Vic2NyaWJlKFxuICAgICAgICAgIHJlc3VsdCA9PiB7XG4gICAgICAgICAgICAgIHRoaXMuc25hY2tCYXIub3BlbignR2VuZXJhbCBjb25maWd1cmF0aW9uIHNhdmVkJywgJ09LJywge1xuICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDMwMDBcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgICAgIHRoaXMuc25hY2tCYXIub3BlbignRXJyb3Igc2F2aW5nIGdlbmVyYWwgY29uZmlndXJhdGlvbiBzYXZlZCcsICdPSycsIHtcbiAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAzMDAwXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICk7XG4gICAgfVxuXG59XG4iXX0=