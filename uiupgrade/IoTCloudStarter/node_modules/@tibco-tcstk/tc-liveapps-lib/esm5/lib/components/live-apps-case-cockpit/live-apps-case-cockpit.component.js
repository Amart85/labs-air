/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ContentChildren, ElementRef, EventEmitter, Input, Output, ViewChild, ViewChildren } from '@angular/core';
import { Router } from '@angular/router';
import { take, takeUntil } from 'rxjs/operators';
import { Subject } from 'rxjs';
import { LiveAppsCaseActionsComponent } from '../live-apps-case-actions/live-apps-case-actions.component';
import { LiveAppsCaseAuditComponent } from '../live-apps-case-audit/live-apps-case-audit.component';
import { LiveAppsCaseDataComponent } from '../live-apps-case-data/live-apps-case-data.component';
import { LiveAppsCaseStateAuditComponent } from '../live-apps-case-state-audit/live-apps-case-state-audit.component';
import { LiveAppsCaseStatesComponent } from '../live-apps-case-states/live-apps-case-states.component';
import { LiveAppsDocumentsComponent } from '../live-apps-documents/live-apps-documents.component';
import { LiveAppsNotesComponent } from '../live-apps-notes/live-apps-notes.component';
import { LiveAppsCaseSummaryComponent } from '../live-apps-case-summary/live-apps-case-summary.component';
import { LiveAppsService } from '../../services/live-apps.service';
import { TcButtonsHelperService } from '@tibco-tcstk/tc-core-lib';
import { MatTabGroup } from '@angular/material';
import { QueryList } from '@angular/core';
import { RouteAction } from '@tibco-tcstk/tc-core-lib';
import { Roles, RouteAccessControlConfigurationElement } from '../../models/tc-groups-data';
import { TcRolesService } from '../../services/tc-roles-service.ts.service';
import { CustomFormDefs } from '@tibco-tcstk/tc-forms-lib';
import { LiveAppsLegacyFormComponent } from '../live-apps-legacy-form/live-apps-legacy-form.component';
import { FormTab } from '../../models/liveappsdata';
import { FormControl } from '@angular/forms';
import { LiveAppsCaseActionComponent } from '../live-apps-case-action/live-apps-case-action.component';
import { LiveAppsWorkitemsComponent } from '../live-apps-workitems/live-apps-workitems.component';
/**
 * High level component to allow interaction with case.
 *
 *  ![alt-text](../live-apps-case-cockpit.png "Image")
 *
 * \@example <tcla-live-apps-case-cockpit></tcla-live-apps-case-cockpit>
 */
var LiveAppsCaseCockpitComponent = /** @class */ (function () {
    function LiveAppsCaseCockpitComponent(liveapps, buttonsHelper, router, rolesService) {
        var _this = this;
        this.liveapps = liveapps;
        this.buttonsHelper = buttonsHelper;
        this.router = router;
        this.rolesService = rolesService;
        // this default layout displays all data but will hide buttons
        this.DEFAULT_CASE_DATA_LAYOUT = [
            '*',
            { type: 'submit', title: 'Save', condition: '1===2' },
            { type: 'actions', title: 'Hidden', condition: '1===2' }
        ];
        /**
         * Enable legacy workitems
         */
        this.legacyWorkitems = this.legacyWorkitems ? this.legacyWorkitems : false;
        /**
         * Enable legacy actions
         */
        this.legacyActions = this.legacyActions ? this.legacyActions : false;
        /**
         * Layout object that can be passed to override default layout of the form renderer
         */
        this.layout = this.layout ? this.layout : this.DEFAULT_CASE_DATA_LAYOUT;
        /**
         * Allow override of forms framework
         * Options: bootstrap-4 or material-design
         */
        this.formsFramework = this.formsFramework ? this.formsFramework : 'material-design';
        /**
         * Whether to show workitems in context panel (default true)
         */
        this.showWorkitems = this.showWorkitems ? this.showWorkitems : true;
        /**
         * Whether to show notes in context panel (default true)
         */
        this.showNotes = this.showNotes ? this.showNotes : true;
        /**
         * Whether to show documents in context panel (default true)
         */
        this.showDocuments = this.showDocuments ? this.showDocuments : true;
        /**
         * Whether to show states in context panel (default true)
         */
        this.showStates = this.showStates ? this.showStates : true;
        /**
         * Whether to show audit in context panel (default true)
         */
        this.showAudit = this.showAudit ? this.showAudit : true;
        /**
         * ~event routeAction : Component requests route to another page
         * ~payload RouteAction : RouteAction object to tell caller to navigate somewhere
         */
        this.routeAction = new EventEmitter();
        this.valid = false;
        this.toolbarButtons = [];
        this.incConfigButton = true;
        this.incFavButton = true;
        this.incRefreshButton = true;
        this.incHomeButton = true;
        this.formTabs = [];
        this.actionVisible = false;
        this.selected = new FormControl(0);
        // use the _destroyed$/takeUntil pattern to avoid memory leaks if a response was never received
        this._destroyed$ = new Subject();
        this.createToolbarButtons = (/**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var buttons = [];
            if (_this.incConfigButton) {
                /** @type {?} */
                var configButton = _this.buttonsHelper.createButton('config', 'tcs-capabilities', true, 'Config', (_this.access ? _this.rolesService.checkButton('configure', _this.access) : true), true);
                buttons.push(configButton);
            }
            if (_this.incFavButton) {
                /** @type {?} */
                var favButton = _this.buttonsHelper.createButton('favorite', 'tcs-favorites-icon', _this.isFavorite, 'Toggle Favorite', (_this.access ? _this.rolesService.checkButton('favorite', _this.access) : true), true);
                buttons.push(favButton);
            }
            if (_this.incRefreshButton) {
                /** @type {?} */
                var refreshButton = _this.buttonsHelper.createButton('refresh', 'tcs-refresh-icon', true, 'Refresh', (_this.access ? _this.rolesService.checkButton('refresh', _this.access) : true), true);
                buttons.push(refreshButton);
            }
            if (_this.incHomeButton) {
                /** @type {?} */
                var homeButton = _this.buttonsHelper.createButton('close', 'tcs-close-icon', true, 'Close', true, true);
                buttons.push(homeButton);
            }
            return buttons;
        });
        this.handleToolbarButtonEvent = (/**
         * @param {?} buttonId
         * @return {?}
         */
        function (buttonId) {
            if (buttonId === 'favorite') {
                _this.toggleFavorite();
            }
            if (buttonId === 'refresh') {
                _this.refresh();
            }
            if (buttonId === 'close') {
                _this.routeAction.emit(new RouteAction('backClicked', null));
            }
            if (buttonId === 'config') {
                _this.routeAction.emit(new RouteAction('configClicked', null));
            }
        });
        this.handleActionSelection = (/**
         * @param {?} actionSelection
         * @return {?}
         */
        function (actionSelection) {
            // this.caseActionsComponent.toggleEnable();
            // this.actionSelection = actionSelection;
            _this.addActionFormTab(actionSelection);
        });
        this.handleActionCompleted = (/**
         * @param {?} formTab
         * @return {?}
         */
        function (formTab) {
            _this.caseActionsComponent.toggleEnable();
            _this.formTabs.splice(_this.formTabs.findIndex((/**
             * @param {?} tab
             * @return {?}
             */
            function (tab) {
                return tab.type === 'actionTab' && tab.action === formTab.action;
            })), 1);
            _this.selected.setValue(0);
            // to allow case to update async before we refresh
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.refresh();
            }), 1000);
        });
        this.handleClickWorkitem = (/**
         * @param {?} caseroute
         * @return {?}
         */
        function (caseroute) {
            console.log(caseroute.workitemId);
            // remove any existing WI
            /** @type {?} */
            var exWiTabIdx = _this.formTabs.findIndex((/**
             * @param {?} tab
             * @return {?}
             */
            function (tab) {
                return tab.type === 'wiTab' && tab.workitemId === tab.workitemId;
            }));
            if (exWiTabIdx && exWiTabIdx !== -1) {
                _this.formTabs.splice(exWiTabIdx, 1);
            }
            _this.addWiFormTab(caseroute.workitemId);
        });
        this.refresh = (/**
         * @return {?}
         */
        function () {
            if (_this.caseSummaryComponent) {
                _this.caseSummaryComponent.refresh();
            }
            if (_this.caseDataComponent) {
                _this.caseDataComponent.refresh();
            }
            if (_this.caseStatesComponent) {
                _this.caseStatesComponent.refresh();
            }
            if (_this.caseActionsComponent) {
                _this.caseActionsComponent.refresh();
            }
            if (_this.caseAuditComponent) {
                _this.caseAuditComponent.refresh();
            }
            if (_this.caseStateAuditComponent) {
                _this.caseStateAuditComponent.refresh();
            }
            if (_this.caseStatesComponent) {
                _this.caseStatesComponent.refresh();
            }
            if (_this.caseDocumentsComponent) {
                _this.caseDocumentsComponent.refresh();
            }
            if (_this.caseNotesComponent) {
                _this.caseNotesComponent.refresh();
            }
            if (_this.caseWorkitemsComponent) {
                _this.caseWorkitemsComponent.refresh();
            }
        });
        this.toggleFavorite = (/**
         * @return {?}
         */
        function () {
            _this.liveapps.setFavoriteCase(_this.caseRef, _this.uiAppId, _this.sandboxId);
            _this.isFavorite = !_this.isFavorite;
            /** @type {?} */
            var updatedFavButton = _this.buttonsHelper.createButton('favorite', 'tcs-favorites-icon', _this.isFavorite, 'Toggle Favorite', true, true);
            _this.toolbarButtons = _this.buttonsHelper.updateButtons([updatedFavButton], _this.toolbarButtons);
        });
        this.handleWorkitemComplete = (/**
         * @param {?} wiId
         * @return {?}
         */
        function (wiId) {
            _this.formTabs.splice(_this.formTabs.findIndex((/**
             * @param {?} tab
             * @return {?}
             */
            function (tab) {
                return tab.type === 'wiTab' && tab.workitemId === wiId;
            })), 1);
            _this.selected.setValue(0);
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.refresh();
            }), 1000);
        });
        this.handleTabCancel = (/**
         * @param {?} formTab
         * @return {?}
         */
        function (formTab) {
            if (formTab.type === 'wiTab') {
                _this.workitemComponent.cancelWi(formTab.workitemId);
                _this.formTabs.splice(_this.formTabs.findIndex((/**
                 * @param {?} tab
                 * @return {?}
                 */
                function (tab) {
                    return tab.type === 'wiTab' && tab.workitemId === formTab.workitemId;
                })), 1);
                // if we are closing the selected tab then switch to the first tab
                /** @type {?} */
                var currentTabIdx = _this.dataTabGroups._tabs.toArray().findIndex((/**
                 * @param {?} tab
                 * @return {?}
                 */
                function (tab) {
                    return tab.textLabel === 'wiTab';
                }));
                if (currentTabIdx === _this.dataTabGroups.selectedIndex) {
                    _this.selected.setValue(0);
                }
            }
            else if (formTab.type === 'actionTab') {
                _this.formTabs.splice(_this.formTabs.findIndex((/**
                 * @param {?} tab
                 * @return {?}
                 */
                function (tab) {
                    return tab.type === 'actionTab' && tab.action === formTab.action;
                })), 1);
                // if we are closing the selected tab then switch to the first tab
                /** @type {?} */
                var currentTabIdx = _this.dataTabGroups._tabs.toArray().findIndex((/**
                 * @param {?} tab
                 * @return {?}
                 */
                function (tab) {
                    return tab.textLabel === 'actionTab';
                }));
                if (currentTabIdx === _this.dataTabGroups.selectedIndex) {
                    _this.selected.setValue(0);
                }
                _this.caseActionComponent.cancelAction();
                _this.caseActionsComponent.toggleEnable();
            }
        });
        this.addWiFormTab = (/**
         * @param {?} wiId
         * @return {?}
         */
        function (wiId) {
            _this.formTabs.push(new FormTab().deserialize({
                type: 'wiTab',
                title: 'WorkItem: ' + wiId,
                workitemId: wiId
            }));
            _this.selected.setValue(_this.formTabs.length);
        });
        this.addActionFormTab = (/**
         * @param {?} actionSelection
         * @return {?}
         */
        function (actionSelection) {
            /** @type {?} */
            var newTab = new FormTab().deserialize({
                type: 'actionTab',
                title: 'Action: ' + actionSelection.process.name,
                workitemId: undefined,
                action: actionSelection
            });
            _this.formTabs.push(newTab);
            _this.selectedTab = newTab;
            setTimeout((/**
             * @param {?} handler
             * @return {?}
             */
            function (handler) {
                _this.selected.setValue(_this.formTabs.length);
            }));
            _this.caseActionsComponent.toggleEnable();
        });
        this.handleTabChange = (/**
         * @param {?} tabChange
         * @return {?}
         */
        function (tabChange) {
            if (tabChange.tab.textLabel === 'actionTab') {
                document.getElementById('dataTabGroup').style.height = '0px';
                setTimeout((/**
                 * @param {?} handler
                 * @return {?}
                 */
                function (handler) {
                    _this.actionVisible = true;
                }));
            }
            else {
                document.getElementById('dataTabGroup').style.height = '100%';
                _this.actionVisible = false;
            }
        });
    }
    /**
     * @return {?}
     */
    LiveAppsCaseCockpitComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (!isNaN(Number(this.caseRef))) {
            // dont set recent if it is in the exclude app list
            if (!this.exclRecentAppIds || (this.exclRecentAppIds.indexOf(this.appId) === -1)) {
                this.liveapps.setRecentCase(this.caseRef, this.uiAppId, this.sandboxId);
            }
            this.valid = true;
        }
        if (this.incFavButton) {
            this.liveapps.isFavoriteCase(this.caseRef, this.uiAppId, this.sandboxId)
                .pipe(take(1), takeUntil(this._destroyed$))
                .subscribe((/**
             * @param {?} result
             * @return {?}
             */
            function (result) {
                _this.isFavorite = result;
                _this.toolbarButtons = _this.toolbarButtons.concat(_this.createToolbarButtons());
                return result;
            }), (/**
             * @param {?} error
             * @return {?}
             */
            function (error) {
                _this.errorMessage = 'Error retrieving isFavorite: ' + error.error.errorMsg;
            }));
        }
        else {
            this.toolbarButtons = this.toolbarButtons.concat(this.createToolbarButtons());
        }
    };
    /**
     * @return {?}
     */
    LiveAppsCaseCockpitComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this._destroyed$.next();
    };
    /**
     * @return {?}
     */
    LiveAppsCaseCockpitComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.matTabGroup._tabs.reset(tslib_1.__spread(this.inclusiveTabs.toArray(), this.tabsFromNgContent.toArray()));
        // this.matTabGroup.afterViewInit();
        if (this.workitemId) {
            this.addWiFormTab(this.workitemId);
        }
    };
    LiveAppsCaseCockpitComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tcla-live-apps-case-cockpit',
                    template: "<div fxFill fxLayout=\"column\" fxLayoutAlign=\"space-between stretch\" style=\"overflow: hidden\">\n  <tc-tibco-cloud-menu-bar [toolbarButtons]=\"toolbarButtons\" (toolbarButtonEvent)=\"handleToolbarButtonEvent($event)\">\n    <!-- this is content projection. Tibco cloud menu bar contains ng-template and content here is projected inside the ng-content -->\n    <tcla-live-apps-case-summary fxFlex class=\"live-apps-widget\" [uiAppId]=\"uiAppId\" [typeBar]=\"true\" [borderCard]=\"false\" [displayType]=\"'staticlist'\" [sandboxId]=\"sandboxId\" [caseRef]=\"caseRef\"></tcla-live-apps-case-summary>\n    <ng-content select=\"[customToolbarContent]\" fxFlex></ng-content>\n  </tc-tibco-cloud-menu-bar>\n  <div *ngIf=\"valid\" fxLayout=\"column\" fxFlex fxFill style=\"padding: 20px; overflow: hidden;\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\n      <tcla-live-apps-case-states fxFlex [sandboxId]=\"sandboxId\" [caseRef]=\"caseRef\" [appId]=\"appId\"></tcla-live-apps-case-states>\n    </div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"end center\" class=\"tcs-actions-bar\">\n      <tcla-live-apps-case-actions [sandboxId]=\"sandboxId\" [typeId]=\"typeId\" [appId]=\"appId\" [caseRef]=\"caseRef\" [maxActions]=\"5\" (actionClicked)=\"handleActionSelection($event)\"></tcla-live-apps-case-actions>\n    </div>\n    <div fxLayout=\"row\" style=\"overflow: hidden; height: 100%\">\n      <div fxFlex fxLayoutGap=\"20px\" fxLayout.gt-md=\"row\" fxLayout.lt-lg=\"column\" ngStyle.lt-lg=\"overflow: auto\">\n        <div fxLayout=\"column\" fxFlex.gt-md=\"1 0 50\" fxFlex.lt-lg=\"none\">\n          <mat-tab-group id=\"dataTabGroup\" #dataTabGroup style=\"overflow: hidden; min-height: 49px; height: 100%;\" (selectedTabChange)=\"handleTabChange($event)\" [selectedIndex]=\"selected.value\">\n            <mat-tab label=\"Case Data\">\n              <ng-template matTabContent>\n                <tcla-live-apps-case-data class=\"live-apps-widget\" fxFill [caseRef]=\"caseRef\" [sandboxId]=\"sandboxId\" [uiAppId]=\"uiAppId\" [appId]=\"appId\" [typeId]=\"typeId\" [layout]=\"layout\" [showHeader]=\"false\" [customFormDefs]=\"customFormDefs\" [formsFramework]=\"formsFramework\" (refreshEvent)=\"refresh()\"></tcla-live-apps-case-data>\n              </ng-template>\n            </mat-tab>\n            <mat-tab *ngFor=\"let tab of formTabs\" [label]=\"tab.type === 'actionTab' ? 'actionTab' : 'wiTab'\">\n                <ng-template mat-tab-label>\n                  <span>{{tab.title}}</span>\n                  <mat-icon fxLayoutAlign=\"end start\" class=\"tcs-cancel-action-button\" [svgIcon]=\"'tcs-close-icon'\" (click)=\"handleTabCancel(tab)\"></mat-icon>\n                </ng-template>\n                <tcla-live-apps-legacy-form *ngIf=\"tab.type === 'wiTab'\" class=\"live-apps-widget\" [workitemId]=\"tab.workitemId\" (workitemComplete)=\"handleWorkitemComplete($event)\" fxFill></tcla-live-apps-legacy-form>\n            </mat-tab>\n          </mat-tab-group>\n          <!-- Using a hidden tab here to workaround the fact that web components seems to disappear on tab change-->\n          <div *ngIf=\"selectedTab\" [hidden]=\"!actionVisible\" style=\"overflow: auto; height: 100%\">\n            <tcla-live-apps-case-action [customFormDefs]=\"customFormDefs\" [legacyActions]=\"legacyActions\" [process]=\"selectedTab.action\" [caseRef]=\"caseRef\" [typeId]=\"typeId\" [applicationId]=\"appId\" [sandboxId]=\"sandboxId\" [formsFramework]=\"formsFramework\" (caseChanged)=\"handleActionCompleted(selectedTab)\"></tcla-live-apps-case-action>\n          </div>\n        </div>\n        <div fxLayout=\"column\" fxFlex.gt-md=\"1 1 50\" fxFlex.lt-lg=\"none\" ngStyle.lt-lg=\"min-height: 500px\" fxLayoutGap=\"20px\" style=\"overflow: hidden;\" *ngIf=\"showAudit || showNotes || showDocuments || showStates || tabsFromNgContent.length > 0\">\n          <mat-tab-group #contextTabGroup style=\"overflow: hidden; height: 100%\">\n            <ng-content></ng-content>\n            <mat-tab #contextTabs label=\"Workitems\" *ngIf=\"legacyWorkitems && showWorkitems\">\n              <ng-template matTabContent>\n                <tcla-live-apps-workitems [caseRef]=\"caseRef\" [uiAppId]=\"uiAppId\" [displayType]=\"'miniCard'\" [sandboxId]=\"sandboxId\" [showHeader]=\"true\" (clickCase)=\"handleClickWorkitem($event)\"></tcla-live-apps-workitems>\n              </ng-template>\n            </mat-tab>\n            <mat-tab #contextTabs label=\"Notes\" *ngIf=\"showNotes\">\n              <ng-template matTabContent>\n                <tcla-live-apps-notes class=\"live-apps-widget\" [relatedItemType]=\"'CASE_APP'\" [relatedItemId]=\"caseRef\" [userId]=\"userId\"></tcla-live-apps-notes>\n              </ng-template>\n            </mat-tab>\n            <mat-tab #contextTabs label=\"Documents\" *ngIf=\"showDocuments\">\n              <ng-template matTabContent>\n                <tcla-live-apps-documents class=\"live-apps-widget\" [sandboxId]=\"sandboxId\" [folderId]=\"caseRef\" [folderType]=\"'caseFolders'\"></tcla-live-apps-documents>\n              </ng-template>\n            </mat-tab>\n            <mat-tab #contextTabs label=\"States\" *ngIf=\"showStates\">\n              <ng-template matTabContent>\n                <tcla-live-apps-case-state-audit [caseRef]=\"caseRef\" [sandboxId]=\"sandboxId\" [appId]=\"appId\"></tcla-live-apps-case-state-audit>\n              </ng-template>\n            </mat-tab>\n            <mat-tab #contextTabs label=\"Audit\" *ngIf=\"showAudit\">\n              <ng-template matTabContent>\n                <tcla-live-apps-case-audit [sandboxId]=\"sandboxId\" [caseRef]=\"caseRef\"></tcla-live-apps-case-audit>\n              </ng-template>\n            </mat-tab>\n          </mat-tab-group>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n",
                    styles: [".live-apps-widget{background-color:#fff;border-radius:3px}.tcs-actions-bar{height:50px;margin-top:5px}:host ::ng-deep .tcs-cancel-action-button svg{width:15px;height:15px}"]
                }] }
    ];
    /** @nocollapse */
    LiveAppsCaseCockpitComponent.ctorParameters = function () { return [
        { type: LiveAppsService },
        { type: TcButtonsHelperService },
        { type: Router },
        { type: TcRolesService }
    ]; };
    LiveAppsCaseCockpitComponent.propDecorators = {
        matTabGroup: [{ type: ViewChild, args: ['contextTabGroup', { static: false },] }],
        inclusiveTabs: [{ type: ViewChildren, args: ['contextTabs',] }],
        tabsFromNgContent: [{ type: ContentChildren, args: ['projectedTab',] }],
        uiAppId: [{ type: Input }],
        appId: [{ type: Input }],
        typeId: [{ type: Input }],
        sandboxId: [{ type: Input }],
        caseRef: [{ type: Input }],
        workitemId: [{ type: Input }],
        userId: [{ type: Input }],
        exclRecentAppIds: [{ type: Input }],
        roles: [{ type: Input }],
        access: [{ type: Input }],
        customFormDefs: [{ type: Input }],
        legacyWorkitems: [{ type: Input }],
        legacyActions: [{ type: Input }],
        layout: [{ type: Input }],
        formsFramework: [{ type: Input }],
        showWorkitems: [{ type: Input }],
        showNotes: [{ type: Input }],
        showDocuments: [{ type: Input }],
        showStates: [{ type: Input }],
        showAudit: [{ type: Input }],
        routeAction: [{ type: Output }],
        caseSummaryComponent: [{ type: ViewChild, args: [LiveAppsCaseSummaryComponent, { static: false },] }],
        caseDataComponent: [{ type: ViewChild, args: [LiveAppsCaseDataComponent, { static: false },] }],
        caseActionsComponent: [{ type: ViewChild, args: [LiveAppsCaseActionsComponent, { static: false },] }],
        caseActionComponent: [{ type: ViewChild, args: [LiveAppsCaseActionComponent, { static: false },] }],
        caseAuditComponent: [{ type: ViewChild, args: [LiveAppsCaseAuditComponent, { static: false },] }],
        caseDocumentsComponent: [{ type: ViewChild, args: [LiveAppsDocumentsComponent, { static: false },] }],
        caseNotesComponent: [{ type: ViewChild, args: [LiveAppsNotesComponent, { static: false },] }],
        caseStatesComponent: [{ type: ViewChild, args: [LiveAppsCaseStatesComponent, { static: false },] }],
        caseStateAuditComponent: [{ type: ViewChild, args: [LiveAppsCaseStateAuditComponent, { static: false },] }],
        workitemComponent: [{ type: ViewChild, args: [LiveAppsLegacyFormComponent, { static: false },] }],
        caseWorkitemsComponent: [{ type: ViewChild, args: [LiveAppsWorkitemsComponent, { static: false },] }],
        dataTabGroups: [{ type: ViewChild, args: ['dataTabGroup', { static: false },] }],
        dataTabGroupEl: [{ type: ViewChild, args: ['dataTabGroup', { static: false },] }]
    };
    return LiveAppsCaseCockpitComponent;
}());
export { LiveAppsCaseCockpitComponent };
if (false) {
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.matTabGroup;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.inclusiveTabs;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.tabsFromNgContent;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.DEFAULT_CASE_DATA_LAYOUT;
    /**
     * The Application ID of the UI (should ideally be unique as it is shared state key)
     * @type {?}
     */
    LiveAppsCaseCockpitComponent.prototype.uiAppId;
    /**
     * The LA Application Id
     * @type {?}
     */
    LiveAppsCaseCockpitComponent.prototype.appId;
    /**
     * The LA Application Type Id (generally 1)
     * @type {?}
     */
    LiveAppsCaseCockpitComponent.prototype.typeId;
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsCaseCockpitComponent.prototype.sandboxId;
    /**
     * The case reference
     * @type {?}
     */
    LiveAppsCaseCockpitComponent.prototype.caseRef;
    /**
     * The workitem Id
     * @type {?}
     */
    LiveAppsCaseCockpitComponent.prototype.workitemId;
    /**
     * The ID of the logged user
     * @type {?}
     */
    LiveAppsCaseCockpitComponent.prototype.userId;
    /**
     * The list of LA Application Ids you want to mark as recent cases when accessed
     * @type {?}
     */
    LiveAppsCaseCockpitComponent.prototype.exclRecentAppIds;
    /**
     * Roles - The users current roles
     * @type {?}
     */
    LiveAppsCaseCockpitComponent.prototype.roles;
    /**
     * RouteAccessControlConfig - basically the config for access control
     * @type {?}
     */
    LiveAppsCaseCockpitComponent.prototype.access;
    /**
     * Custom Form configuration file
     * @type {?}
     */
    LiveAppsCaseCockpitComponent.prototype.customFormDefs;
    /**
     * Enable legacy workitems
     * @type {?}
     */
    LiveAppsCaseCockpitComponent.prototype.legacyWorkitems;
    /**
     * Enable legacy actions
     * @type {?}
     */
    LiveAppsCaseCockpitComponent.prototype.legacyActions;
    /**
     * Layout object that can be passed to override default layout of the form renderer
     * @type {?}
     */
    LiveAppsCaseCockpitComponent.prototype.layout;
    /**
     * Allow override of forms framework
     * Options: bootstrap-4 or material-design
     * @type {?}
     */
    LiveAppsCaseCockpitComponent.prototype.formsFramework;
    /**
     * Whether to show workitems in context panel (default true)
     * @type {?}
     */
    LiveAppsCaseCockpitComponent.prototype.showWorkitems;
    /**
     * Whether to show notes in context panel (default true)
     * @type {?}
     */
    LiveAppsCaseCockpitComponent.prototype.showNotes;
    /**
     * Whether to show documents in context panel (default true)
     * @type {?}
     */
    LiveAppsCaseCockpitComponent.prototype.showDocuments;
    /**
     * Whether to show states in context panel (default true)
     * @type {?}
     */
    LiveAppsCaseCockpitComponent.prototype.showStates;
    /**
     * Whether to show audit in context panel (default true)
     * @type {?}
     */
    LiveAppsCaseCockpitComponent.prototype.showAudit;
    /**
     * ~event routeAction : Component requests route to another page
     * ~payload RouteAction : RouteAction object to tell caller to navigate somewhere
     * @type {?}
     */
    LiveAppsCaseCockpitComponent.prototype.routeAction;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.caseSummaryComponent;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.caseDataComponent;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.caseActionsComponent;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.caseActionComponent;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.caseAuditComponent;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.caseDocumentsComponent;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.caseNotesComponent;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.caseStatesComponent;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.caseStateAuditComponent;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.workitemComponent;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.caseWorkitemsComponent;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.dataTabGroups;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.dataTabGroupEl;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.isFavorite;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.valid;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.toolbarButtons;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.incConfigButton;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.incFavButton;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.incRefreshButton;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.incHomeButton;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.formTabs;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.selectedTab;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.actionVisible;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.selected;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsCaseCockpitComponent.prototype._destroyed$;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsCaseCockpitComponent.prototype.errorMessage;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsCaseCockpitComponent.prototype.createToolbarButtons;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.handleToolbarButtonEvent;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.handleActionSelection;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.handleActionCompleted;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.handleClickWorkitem;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.refresh;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.toggleFavorite;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.handleWorkitemComplete;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.handleTabCancel;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.addWiFormTab;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.addActionFormTab;
    /** @type {?} */
    LiveAppsCaseCockpitComponent.prototype.handleTabChange;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsCaseCockpitComponent.prototype.liveapps;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsCaseCockpitComponent.prototype.buttonsHelper;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsCaseCockpitComponent.prototype.router;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsCaseCockpitComponent.prototype.rolesService;
}
//# sourceMappingURL=data:application/json;base64,