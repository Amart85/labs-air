/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { LiveAppsService } from '../../services/live-apps.service';
import { CaseInfo, CaseRoute } from '../../models/liveappsdata';
import { take, takeUntil } from 'rxjs/operators';
import { DomSanitizer } from '@angular/platform-browser';
import { LiveAppsStateIconComponent } from '../live-apps-state-icon/live-apps-state-icon.component';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
import { TcCaseCardConfigService } from '../../services/tc-case-card-config.service';
/**
 * Renders case summary cards
 *
 * ![alt-text](../live-apps-case-summary.png "Image")
 *
 * ![alt-text](../live-apps-case-summary-2.png "Image")
 *
 * \@example <tcla-live-apps-case-summary></tcla-live-apps-case-summary>
 */
var LiveAppsCaseSummaryComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LiveAppsCaseSummaryComponent, _super);
    function LiveAppsCaseSummaryComponent(liveapps, caseCardConfigService, sanitizer) {
        var _this = _super.call(this) || this;
        _this.liveapps = liveapps;
        _this.caseCardConfigService = caseCardConfigService;
        _this.sanitizer = sanitizer;
        /**
         * ~event clickCase : Case clicked
         * ~payload CaseRoute : CaseRoute object output when case is clicked so calling component can route accordingly - ie. route to case
         */
        _this.clickCase = new EventEmitter();
        /**
         * ~event deleted : Case Displayed has been deleted
         * ~payload string : string emitted when summary tries to load data for a case that has been deleted (so it can be hidden.removed from - for example recent cases list)
         */
        _this.deleted = new EventEmitter();
        _this.clickCaseAction = (/**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var caseRoute = new CaseRoute().deserialize({ caseRef: _this.caseRef, appId: _this.appId, typeId: _this.typeId, workitemId: _this.workitemId });
            _this.clickCase.emit(caseRoute);
        });
        _this.restylePreview = (/**
         * @param {?} icon
         * @param {?} fill
         * @return {?}
         */
        function (icon, fill) {
            _this.metadata.stateIcon = icon;
            _this.metadata.stateColor = fill;
            _this.stateIconComponent.refresh(icon, fill);
        });
        _this.restylePreviewCaseType = (/**
         * @param {?} icon
         * @param {?} fill
         * @return {?}
         */
        function (icon, fill) {
            _this.metadata.caseTypeIcon = icon;
            _this.metadata.caseTypeColor = fill;
            _this.caseTypeIconComponent.refresh(icon, fill);
        });
        _this.refresh = (/**
         * @return {?}
         */
        function () {
            if (!_this.configMode) {
                _this.caseCardConfigService.getCaseWithSummary(_this.caseRef, _this.sandboxId, _this.uiAppId)
                    .pipe(take(1), takeUntil(_this._destroyed$)).subscribe((/**
                 * @param {?} caseinfo
                 * @return {?}
                 */
                function (caseinfo) {
                    if (!caseinfo.deleted) {
                        _this.appId = caseinfo.metadata.applicationId;
                        _this.typeId = caseinfo.metadata.typeId;
                        _this.casedata = caseinfo.untaggedCasedataObj;
                        _this.metadata = caseinfo.metadata;
                        _this.summary = caseinfo.summaryObj;
                        _this.summaryKeys = Object.keys(_this.summary);
                        _this.summaryValues = Object.values(_this.summary);
                    }
                    else {
                        // notify parent case has been deleted
                        _this.deleted.emit(_this.caseRef);
                    }
                }), (/**
                 * @param {?} error
                 * @return {?}
                 */
                function (error) {
                    _this.errorMessage = 'Error retrieving case data: ' + error.error.errorMsg;
                }));
            }
            else {
                /** @type {?} */
                var sampleCaseInfoJSON = '{\n' +
                    '  "untaggedCasedata": "",\n' +
                    '  "summary": "{\\"state\\":\\"Current State\\",\\"Summary1\\":\\"000001\\",\\"Summary2\\":\\"summary data\\",\\"Summary3\\":\\"summary data\\"}",\n' +
                    '  "metadata": {\n' +
                    '    "createdBy": "-1",\n' +
                    '    "creationTimestamp": "2018-11-27T08:40:03.404Z",\n' +
                    '    "createdByDetails": {\n' +
                    '      "username": "creator@mycompany.com"\n' +
                    '    },\n' +
                    '    "modifiedBy": "-1",\n' +
                    '    "modificationTimestamp": "2018-11-27T08:40:22.010Z",\n' +
                    '    "lockType": "1",\n' +
                    '    "msLockExpiry": "1543308022271",\n' +
                    '    "msSystemTime": "1545127800839",\n' +
                    '    "applicationId": "934",\n' +
                    '    "typeId": "1"\n' +
                    '  },\n' +
                    '  "summaryObj": {\n' +
                    '    "state": "Current State",\n' +
                    '    "Summary 1": "000001",\n' +
                    '    "Summary 2": "The case name",\n' +
                    '    "Summary 3": "The case description"\n' +
                    '  },\n' +
                    '  "untaggedCasedataObj": {\n' +
                    '  }\n' +
                    '}';
                /** @type {?} */
                var caseinfo = new CaseInfo().deserialize(JSON.parse(sampleCaseInfoJSON));
                _this.casedata = caseinfo.untaggedCasedataObj;
                _this.metadata = caseinfo.metadata;
                _this.summary = caseinfo.summaryObj;
                _this.summaryKeys = Object.keys(_this.summary);
                _this.summaryValues = Object.values(_this.summary);
                _this.metadata.stateIcon = _this.configModeIcon;
                _this.metadata.stateColor = _this.configModeColor;
                _this.metadata.caseTypeColor = _this.configModeCaseTypeColor;
                _this.metadata.caseTypeIcon = _this.configModeCaseTypeIcon;
                _this.metadata.applicationLabel = _this.configModeAppTypeLabel;
            }
        });
        return _this;
    }
    /**
     * @return {?}
     */
    LiveAppsCaseSummaryComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        _super.prototype.ngAfterViewInit.call(this);
        this.containerChanges$.subscribe();
    };
    /**
     * @return {?}
     */
    LiveAppsCaseSummaryComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        _super.prototype.ngOnInit.call(this);
        this.refresh();
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    LiveAppsCaseSummaryComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.configModeAppTypeLabel && !changes.configModeAppTypeLabel.isFirstChange() && (changes.configModeAppTypeLabel.currentValue !== changes.configModeAppTypeLabel.previousValue)) {
            this.refresh();
        }
    };
    LiveAppsCaseSummaryComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tcla-live-apps-case-summary',
                    template: "<div #componentDiv fxFill>\n  <div *ngIf=\"displayType === 'miniCard'\" (click)=\"clickCaseAction()\" style=\"height: 100%\">\n    <mat-card *ngIf=\"configMode || (metadata && metadata.applicationLabel && metadata.createdByDetails && metadata.stateColor && metadata.stateIcon && metadata.caseTypeIcon && metadata.caseTypeColor)\" class=\"tcs-case-summary-mini-card\" [ngClass]=\"{border: borderCard}\" fxLayout=\"row\" fxLayoutAlign=\"start stretch\">\n      <div *ngIf=\"typeBar\" class=\"tcs-case-summary-mini-card-side-bar\" [style.background-color]=\"metadata.useCaseTypeColor ? metadata.caseTypeColor : metadata.stateColor\"></div>\n      <div class=\"tcs-case-summary-mini-card-right-content\" fxFlex>\n        <div class=\"tcs-case-summary-mini-card-left\" fxLayout=\"column\" fxLayoutAlign=\"space-between start\" fxFlex>\n          <div *ngIf=\"description\" class=\"tcs-case-summary-summary1-text mini\" matTooltip=\"{{description}}\" matTooltipShowDelay=\"1000\" matTooltipPosition=\"above\">{{description | ellipsis: 45}}</div>\n          <div *ngIf=\"!description && summaryValues[1]\" class=\"tcs-case-summary-summary1-text mini\" matTooltip=\"{{summaryKeys[1]}}\" matTooltipShowDelay=\"1000\" matTooltipPosition=\"above\">{{summaryValues[1]  | ellipsis: 45}}</div>\n          <div class=\"tcs-case-summary-creation-text\" fxLayout=\"row\">\n            <div *ngIf=\"metadata.createdByDetails\">Created {{metadata.creationTimestamp | durationSince}} by {{metadata.createdByDetails.username ? metadata.createdByDetails.username: 'system'}}</div>\n          </div>\n          <div *ngIf=\"summaryValues[2]\" class=\"tcs-case-summary-summary2-text mini\" matTooltip=\"{{summaryValues[2]}}\" matTooltipShowDelay=\"1000\" matTooltipPosition=\"below\">{{summaryValues[2] | ellipsis: 45}}</div>\n          <div class=\"tcs-case-summary-mini-card-state-box\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n            <tcla-live-apps-state-icon #caseTypeIcon class=\"tcs-case-summary-state-icon\" [iconPath]=\"metadata.caseTypeIcon\" [color]=\"metadata.caseTypeColor\" matTooltipShowDelay=\"1000\" matTooltip=\"Case type: {{metadata.applicationLabel}}\"></tcla-live-apps-state-icon>\n            <div class=\"tcs-case-summary-state-text\" matTooltip=\"{{summaryValues[1]}}\" matTooltipShowDelay=\"1000\" matTooltipPosition=\"above\">{{metadata.applicationLabel}}</div>\n            <div fxLayout=\"row\" fxLayoutAlign=\"end center\" fxFlex>\n              <tcla-live-apps-state-icon #caseStateIcon class=\"tcs-case-summary-state-icon\" [iconPath]=\"metadata.stateIcon\" [color]=\"metadata.stateColor\" [appId]=\"appId\"></tcla-live-apps-state-icon>\n              <div class=\"tcs-case-summary-state-text\">{{summaryValues[0]}}</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"tcs-case-summary-mini-card-right\" fxLayout=\"row\" fxLayoutAlign=\"end center\" matTooltipPosition=\"left\" matTooltipShowDelay=\"1000\" matTooltip=\"Open Case\">\n          <mat-icon class=\"tcs-icon tcs-case-summary-details-icon\" svgIcon=\"tcs-summary-details-button\"></mat-icon>\n        </div>\n      </div>\n    </mat-card>\n  </div>\n\n  <div *ngIf=\"displayType === 'wiMiniCard'\" (click)=\"clickCaseAction()\" style=\"height: 100%\">\n    <mat-card *ngIf=\"configMode || (metadata && metadata.applicationLabel && metadata.createdByDetails && metadata.stateColor && metadata.stateIcon && metadata.caseTypeIcon && metadata.caseTypeColor)\" class=\"tcs-case-summary-mini-card\" [ngClass]=\"{border: borderCard}\" fxLayout=\"row\" fxLayoutAlign=\"start stretch\">\n      <div *ngIf=\"typeBar\" class=\"tcs-case-summary-mini-card-side-bar\" [style.background-color]=\"metadata.useCaseTypeColor ? metadata.caseTypeColor : metadata.stateColor\"></div>\n      <div class=\"tcs-case-summary-mini-card-right-content\" fxFlex>\n        <div class=\"tcs-case-summary-mini-card-left\" fxLayout=\"column\" fxLayoutAlign=\"space-between start\" fxFlex>\n          <div fxLayout=\"row\">\n            <div *ngIf=\"workitemId\" class=\"tcs-case-summary-summary1-text mini\">{{workitemId}}:&nbsp;</div>\n            <div *ngIf=\"description\" class=\"tcs-case-summary-summary1-text mini\" matTooltip=\"{{description}}\" matTooltipShowDelay=\"1000\" matTooltipPosition=\"above\">{{description | ellipsis: 45}}</div>\n          </div>\n          <div class=\"tcs-case-summary-creation-text\" fxLayout=\"row\">\n            <div *ngIf=\"metadata.createdByDetails\">Created {{metadata.creationTimestamp | durationSince}} by {{metadata.createdByDetails.username ? metadata.createdByDetails.username: 'system'}}</div>\n          </div>\n          <div *ngIf=\"summaryValues[2]\" class=\"tcs-case-summary-summary2-text mini\" matTooltip=\"{{summaryValues[2]}}\" matTooltipShowDelay=\"1000\" matTooltipPosition=\"below\">{{summaryValues[2] | ellipsis: 45}}</div>\n          <div class=\"tcs-case-summary-mini-card-state-box\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n            <tcla-live-apps-state-icon #caseTypeIcon class=\"tcs-case-summary-state-icon\" [iconPath]=\"metadata.caseTypeIcon\" [color]=\"metadata.caseTypeColor\" matTooltipShowDelay=\"1000\" matTooltip=\"Case type: {{metadata.applicationLabel}}\"></tcla-live-apps-state-icon>\n            <div class=\"tcs-case-summary-state-text\" matTooltip=\"{{summaryValues[1]}}\" matTooltipShowDelay=\"1000\" matTooltipPosition=\"above\">{{metadata.applicationLabel}}</div>\n            <div fxLayout=\"row\" fxLayoutAlign=\"end center\" fxFlex>\n              <tcla-live-apps-state-icon #caseStateIcon class=\"tcs-case-summary-state-icon\" [iconPath]=\"metadata.stateIcon\" [color]=\"metadata.stateColor\" [appId]=\"appId\"></tcla-live-apps-state-icon>\n              <div class=\"tcs-case-summary-state-text\">{{summaryValues[0]}}</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"tcs-case-summary-mini-card-right\" fxLayout=\"row\" fxLayoutAlign=\"end center\" matTooltipPosition=\"left\" matTooltipShowDelay=\"1000\" matTooltip=\"Open Case\">\n          <mat-icon class=\"tcs-icon tcs-case-summary-details-icon\" svgIcon=\"tcs-summary-details-button\"></mat-icon>\n        </div>\n      </div>\n    </mat-card>\n  </div>\n\n  <div *ngIf=\"displayType === 'card'\" style=\"height: 100%\">\n  <mat-card *ngIf=\"configMode || (metadata && metadata.applicationLabel && metadata.createdByDetails && metadata.stateColor && metadata.stateIcon && metadata.caseTypeIcon && metadata.caseTypeColor)\" class=\"tcs-case-summary-card\" fxLayout=\"column\" fxLayoutAlign=\"start start\" (click)=\"clickCaseAction()\">\n    <div *ngIf=\"typeBar\" class=\"tcs-case-summary-header\" [style.background-color]=\"metadata.useCaseTypeColor ? metadata.caseTypeColor : metadata.stateColor\"></div>\n    <div class=\"tcs-case-summary-card-contents\" fxFlex fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <div fxFlex>\n        <div class=\"tcs-case-summary-case-type-text\">{{metadata.applicationLabel}}</div>\n      </div>\n      <div fxFlex>\n        <div *ngIf=\"summaryValues[1]\" class=\"tcs-case-summary-summary1-text\" matTooltip=\"{{summaryKeys[1]}}\" matTooltipShowDelay=\"1000\" matTooltipPosition=\"above\">{{summaryValues[1] | ellipsis: 45}}</div>\n      </div>\n      <div fxFlex>\n        <div class=\"tcs-case-summary-creation-text\">\n          <div *ngIf=\"metadata.createdByDetails\">Created {{metadata.creationTimestamp | durationSince}} by {{metadata.createdByDetails.username ? metadata.createdByDetails.username : 'system'}}</div>\n        </div>\n      </div>\n      <div fxFlex>\n        <div class=\"tcs-case-summary-line\"></div>\n      </div>\n      <div fxFlex>\n        <div *ngIf=\"summaryValues[2]\" class=\"tcs-case-summary-summary2-text\">{{summaryValues[2]}}</div>\n      </div>\n    </div>\n    <div class=\"tcs-case-summary-case-footer\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <tcla-live-apps-state-icon #caseTypeIcon class=\"tcs-case-summary-state-icon\" [iconPath]=\"metadata.caseTypeIcon\" [color]=\"metadata.caseTypeColor\" matTooltipShowDelay=\"1000\" matTooltip=\"Case type: {{metadata.applicationLabel}}\"></tcla-live-apps-state-icon>\n        <tcla-live-apps-state-icon #caseStateIcon class=\"tcs-case-summary-state-icon\" [iconPath]=\"metadata.stateIcon\" [color]=\"metadata.stateColor\" [appId]=\"appId\"></tcla-live-apps-state-icon>\n        <div class=\"tcs-case-summary-state-text\">{{summaryValues[0]}}</div>\n      </div>\n      <div class=\"tcs-case-summary-view-details\" fxLayout=\"row\" fxLayoutAlign=\"end center\" matTooltipPosition=\"above\" matTooltip=\"Open Case\" matTooltipShowDelay=\"1000\">\n        <div class=\"tcs-case-summary-view-details-text\">View Details</div>\n        <mat-icon class=\"tcs-icon tcs-case-summary-details-icon\" svgIcon=\"tcs-summary-details-button\"></mat-icon>\n      </div>\n    </div>\n  </mat-card>\n  </div>\n  <div class=\"summary-card-list-format\" *ngIf=\"displayType === 'list'\" style=\"min-height: 50px; height: 100%; background-color: white\">\n    <mat-card *ngIf=\"configMode || (metadata && metadata.applicationLabel && metadata.createdByDetails && metadata.stateColor && metadata.stateIcon && metadata.caseTypeIcon && metadata.caseTypeColor)\" class=\"tcs-case-summary-list-card\" [ngClass]=\"{border: borderCard}\" fxLayout=\"row\" fxLayoutAlign=\"start stretch\" (click)=\"clickCaseAction()\">\n      <div *ngIf=\"typeBar\" class=\"tcs-case-summary-mini-card-side-bar\" [style.background-color]=\"metadata.useCaseTypeColor ? metadata.caseTypeColor : metadata.stateColor\"></div>\n      <div class=\"tcs-case-summary-mini-card-right-content\" fxFlex>\n        <div class=\"tcs-case-summary-list-card-left\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex fxLayoutGap=\"10px\">\n          <div class=\"tcs-case-summary-list-summary1-text tcs-case-summary-list-details-box\">\n            <div fxFlex=\"nogrow\" *ngIf=\"summaryValues[1]\" matTooltipShowDelay=\"1000\" matTooltipPosition=\"above\" [innerHTML]=\"summaryValues[1] | ellipsis : 20 | highlight : highlight : 'Multi-Match' : false : 'tcs-case-summary-highlight'\" matTooltipShowDelay=\"1000\" matTooltip=\"{{summaryValues[1]}}\"></div>\n          </div>\n          <div *ngIf=\"widget.gtXs\">\n            <div *ngIf=\"widget.ltMd\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"5px\">\n              <!-- App Icon and label -->\n              <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"tcs-case-summary-list-details-box\">\n                <tcla-live-apps-state-icon #caseTypeIcon class=\"tcs-case-summary-state-icon\" [iconPath]=\"metadata.caseTypeIcon\" [color]=\"metadata.caseTypeColor\" matTooltipShowDelay=\"1000\" matTooltip=\"Case type: {{metadata.applicationLabel}}\"></tcla-live-apps-state-icon>\n                <div class=\"tcs-case-summary-state-text\">{{metadata.applicationLabel |  ellipsis: 20}}</div>\n              </div>\n              <!-- State Icon and Label -->\n              <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"tcs-case-summary-list-details-box\">\n                <tcla-live-apps-state-icon #caseStateIcon class=\"tcs-case-summary-state-icon\" [iconPath]=\"metadata.stateIcon\" [color]=\"metadata.stateColor\" [appId]=\"appId\"></tcla-live-apps-state-icon>\n                <div class=\"tcs-case-summary-state-text\">{{summaryValues[0]}}</div>\n              </div>\n            </div>\n            <div *ngIf=\"widget.gtSm\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"tcs-case-summary-list-details-box\">\n              <tcla-live-apps-state-icon #caseTypeIcon class=\"tcs-case-summary-state-icon\" [iconPath]=\"metadata.caseTypeIcon\" [color]=\"metadata.caseTypeColor\" matTooltipShowDelay=\"1000\" matTooltip=\"Case type: {{metadata.applicationLabel}}\"></tcla-live-apps-state-icon>\n              <div class=\"tcs-case-summary-state-text\">{{metadata.applicationLabel |  ellipsis: 20}}</div>\n            </div>\n            <div *ngIf=\"widget.gtSm\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"tcs-case-summary-list-details-box\">\n              <tcla-live-apps-state-icon #caseStateIcon class=\"tcs-case-summary-state-icon\" [iconPath]=\"metadata.stateIcon\" [color]=\"metadata.stateColor\" [appId]=\"appId\"></tcla-live-apps-state-icon>\n              <div class=\"tcs-case-summary-state-text\">{{summaryValues[0]}}</div>\n            </div>\n          </div>\n          <div *ngIf=\"widget.ltMd\" class=\"summary-text-ltmd\" fxLayout=\"column\" fxLayoutAlign=\"center start\" fxLayoutGap=\"5px\" style=\"max-width: 180px;width: 180px\">\n            <div class=\"tcs-case-summary-list-summary2-text tcs-case-summary-list-large-details-box\">\n              <div fxFlex *ngIf=\"summaryValues[2]\" [innerHTML]=\"summaryValues[2] | highlight : highlight : 'Multi-Match' : false : 'tcs-case-summary-highlight'\" matTooltipShowDelay=\"1000\" matTooltip=\"{{summaryValues[2]}}\"></div>\n            </div>\n            <div class=\"tcs-case-summary-list-summary3-text tcs-case-summary-list-details-box\">\n              <div fxFlex=\"nogrow\" *ngIf=\"summaryValues[3]\" [innerHTML]=\"summaryValues[3] | ellipsis : 20 | highlight : highlight : 'Multi-Match' : false : 'tcs-case-summary-highlight'\" matTooltipShowDelay=\"1000\" matTooltip=\"{{summaryValues[3]}}\"></div>\n            </div>\n          </div>\n          <div *ngIf=\"widget.gtSm\" class=\"tcs-case-summary-list-summary2-text tcs-case-summary-list-large-details-box\">\n            <div fxFlex *ngIf=\"summaryValues[2]\" [innerHTML]=\"summaryValues[2] | highlight : highlight : 'Multi-Match' : false : 'tcs-case-summary-highlight'\" matTooltipShowDelay=\"1000\" matTooltip=\"{{summaryValues[2]}}\"></div>\n          </div>\n          <div *ngIf=\"widget.gtSm\" fxFlex=\"nogrow\" class=\"tcs-case-summary-list-summary3-text tcs-case-summary-list-details-box\">\n            <div fxFlex=\"nogrow\" *ngIf=\"summaryValues[3]\" [innerHTML]=\"summaryValues[3] | ellipsis : 20 | highlight : highlight : 'Multi-Match' : false : 'tcs-case-summary-highlight'\" matTooltipShowDelay=\"1000\" matTooltip=\"{{summaryValues[3]}}\"></div>\n          </div>\n          <div fxFlex class=\"tcs-case-summary-list-details-box tcs-case-summary-creation-text\" fxLayoutAlign=\"center center\">\n            <div *ngIf=\"metadata.createdByDetails\">Created {{metadata.creationTimestamp | durationSince}} by {{metadata.createdByDetails.username ? metadata.createdByDetails.username : 'system'}}</div>\n          </div>\n        </div>\n\n        <div class=\"tcs-case-summary-mini-card-right\" fxLayout=\"row\" fxLayoutAlign=\"end center\" matTooltipPosition=\"left\" matTooltipShowDelay=\"1000\" matTooltip=\"Open Case\">\n          <mat-icon class=\"tcs-icon tcs-case-summary-details-icon\" svgIcon=\"tcs-summary-details-button\"></mat-icon>\n        </div>\n      </div>\n    </mat-card>\n  </div>\n\n  <div *ngIf=\"displayType === 'miniList'\" style=\"min-height: 50px; background-color: white\">\n    <mat-card *ngIf=\"configMode || (metadata && metadata.applicationLabel && metadata.createdByDetails && metadata.stateColor && metadata.stateIcon && metadata.caseTypeIcon && metadata.caseTypeColor)\" class=\"tcs-case-summary-list-card\" [ngClass]=\"{border: borderCard}\" fxLayout=\"row\" fxLayoutAlign=\"start stretch\" (click)=\"clickCaseAction()\">\n      <div *ngIf=\"typeBar\" class=\"tcs-case-summary-mini-card-side-bar\" [style.background-color]=\"metadata.useCaseTypeColor ? metadata.caseTypeColor : metadata.stateColor\"></div>\n      <div class=\"tcs-case-summary-mini-card-right-content\" fxFlex>\n        <div class=\"tcs-case-summary-list-card-left\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex fxLayoutGap=\"10px\">\n          <div class=\"tcs-case-summary-list-summary1-text tcs-case-summary-list-details-box\">\n            <div fxFlex=\"nogrow\" *ngIf=\"summaryValues[1]\" matTooltipShowDelay=\"1000\" matTooltipPosition=\"above\" [innerHTML]=\"summaryValues[1] | ellipsis : 20 | highlight : highlight : 'Multi-Match' : false : 'tcs-case-summary-highlight'\" matTooltipShowDelay=\"1000\" matTooltip=\"{{summaryValues[1]}}\"></div>\n          </div>\n        </div>\n        <div class=\"tcs-case-summary-mini-card-right\" fxLayout=\"row\" fxLayoutAlign=\"end center\" matTooltipPosition=\"left\" matTooltipShowDelay=\"1000\" matTooltip=\"Open Case\">\n          <mat-icon class=\"tcs-icon tcs-case-summary-details-icon\" svgIcon=\"tcs-summary-details-button\"></mat-icon>\n        </div>\n      </div>\n    </mat-card>\n  </div>\n\n\n  <div *ngIf=\"displayType === 'staticlist'\" style=\"min-height: 50px;  height: 100%; background-color: white\">\n    <mat-card *ngIf=\"configMode || (metadata && metadata.applicationLabel && metadata.createdByDetails && metadata.stateColor && metadata.stateIcon && metadata.caseTypeIcon && metadata.caseTypeColor)\" class=\"tcs-case-summary-static-list-card\" [ngClass]=\"{border: borderCard}\" fxLayout=\"row\" fxLayoutAlign=\"start stretch\">\n      <div *ngIf=\"typeBar\" class=\"tcs-case-summary-mini-card-side-bar\" [style.background-color]=\"metadata.useCaseTypeColor ? metadata.caseTypeColor : metadata.stateColor\"></div>\n      <div class=\"tcs-case-summary-mini-card-right-content\" fxFlex>\n        <div class=\"tcs-case-summary-list-card-left\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex fxLayoutGap=\"10px\">\n          <div class=\"tcs-case-summary-list-summary1-text tcs-case-summary-list-details-box\">\n            <div fxFlex=\"nogrow\" *ngIf=\"summaryValues[1]\" matTooltipShowDelay=\"1000\" matTooltipPosition=\"above\" [innerHTML]=\"summaryValues[1] | ellipsis : 20 | highlight : highlight : 'Multi-Match' : false : 'tcs-case-summary-highlight'\" matTooltipShowDelay=\"1000\" matTooltip=\"{{summaryValues[1]}}\"></div>\n          </div>\n          <div *ngIf=\"widget.ltMd\" class=\"summary-text-ltmd\" fxLayout=\"column\" fxLayoutAlign=\"center start\" fxLayoutGap=\"5px\" style=\"max-width: 180px;width: 180px\">\n            <div class=\"tcs-case-summary-list-summary2-text tcs-case-summary-list-large-details-box\">\n              <div fxFlex *ngIf=\"summaryValues[2]\" [innerHTML]=\"summaryValues[2] | highlight : highlight : 'Multi-Match' : false : 'tcs-case-summary-highlight'\" matTooltipShowDelay=\"1000\" matTooltip=\"{{summaryValues[2]}}\"></div>\n            </div>\n            <div class=\"tcs-case-summary-list-summary3-text tcs-case-summary-list-details-box\">\n              <div fxFlex=\"nogrow\" *ngIf=\"summaryValues[3]\" [innerHTML]=\"summaryValues[3] | ellipsis : 20 | highlight : highlight : 'Multi-Match' : false : 'tcs-case-summary-highlight'\" matTooltipShowDelay=\"1000\" matTooltip=\"{{summaryValues[3]}}\"></div>\n            </div>\n          </div>\n          <div *ngIf=\"widget.gtSm\" class=\"tcs-case-summary-list-summary2-text tcs-case-summary-list-large-details-box\">\n            <div fxFlex *ngIf=\"summaryValues[2]\" [innerHTML]=\"summaryValues[2] | highlight : highlight : 'Multi-Match' : false : 'tcs-case-summary-highlight'\" matTooltipShowDelay=\"1000\" matTooltip=\"{{summaryValues[2]}}\"></div>\n          </div>\n          <div *ngIf=\"widget.gtSm\" fxFlex=\"nogrow\" class=\"tcs-case-summary-list-summary3-text tcs-case-summary-list-details-box\">\n            <div fxFlex=\"nogrow\" *ngIf=\"summaryValues[3]\" [innerHTML]=\"summaryValues[3] | ellipsis : 20 | highlight : highlight : 'Multi-Match' : false : 'tcs-case-summary-highlight'\" matTooltipShowDelay=\"1000\" matTooltip=\"{{summaryValues[3]}}\"></div>\n          </div>\n          <div *ngIf=\"widget.gtXs\">\n            <div *ngIf=\"widget.ltMd\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"5px\">\n              <!-- App Icon and label -->\n              <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"tcs-case-summary-list-details-box\">\n                <tcla-live-apps-state-icon #caseTypeIcon class=\"tcs-case-summary-state-icon\" [iconPath]=\"metadata.caseTypeIcon\" [color]=\"metadata.caseTypeColor\" matTooltipShowDelay=\"1000\" matTooltip=\"Case type: {{metadata.applicationLabel}}\"></tcla-live-apps-state-icon>\n                <div class=\"tcs-case-summary-state-text\">{{metadata.applicationLabel |  ellipsis: 20}}</div>\n              </div>\n              <!-- State Icon and Label -->\n              <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"tcs-case-summary-list-details-box\">\n                <tcla-live-apps-state-icon #caseStateIcon class=\"tcs-case-summary-state-icon\" [iconPath]=\"metadata.stateIcon\" [color]=\"metadata.stateColor\" [appId]=\"appId\"></tcla-live-apps-state-icon>\n                <div class=\"tcs-case-summary-state-text\">{{summaryValues[0]}}</div>\n              </div>\n            </div>\n            <div *ngIf=\"widget.gtSm\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"tcs-case-summary-list-details-box\">\n              <tcla-live-apps-state-icon #caseTypeIcon class=\"tcs-case-summary-state-icon\" [iconPath]=\"metadata.caseTypeIcon\" [color]=\"metadata.caseTypeColor\" matTooltipShowDelay=\"1000\" matTooltip=\"Case type: {{metadata.applicationLabel}}\"></tcla-live-apps-state-icon>\n              <div class=\"tcs-case-summary-state-text\">{{metadata.applicationLabel |  ellipsis: 20}}</div>\n            </div>\n            <div *ngIf=\"widget.gtSm\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"tcs-case-summary-list-details-box\">\n              <tcla-live-apps-state-icon #caseStateIcon class=\"tcs-case-summary-state-icon\" [iconPath]=\"metadata.stateIcon\" [color]=\"metadata.stateColor\" [appId]=\"appId\"></tcla-live-apps-state-icon>\n              <div class=\"tcs-case-summary-state-text\">{{summaryValues[0]}}</div>\n            </div>\n          </div>\n          <div fxFlex class=\"tcs-case-summary-list-details-box tcs-case-summary-creation-text\" fxLayoutAlign=\"center center\">\n            <div *ngIf=\"metadata.createdByDetails\">Created {{metadata.creationTimestamp | durationSince}} by {{metadata.createdByDetails.username ? metadata.createdByDetails.username : 'system'}}</div>\n          </div>\n        </div>\n      </div>\n    </mat-card>\n  </div>\n</div>\n",
                    styles: [".tcs-case-summary-list{width:100%;height:190px;border-radius:3px;box-shadow:0 2px 4px 0 rgba(0,0,0,.33);background-color:#fff;padding:0}.tcs-case-summary-card{width:100%;height:100%;border-radius:3px;box-shadow:0 2px 4px 0 rgba(0,0,0,.33);background-color:#fff;padding:0}.tcs-case-summary-mini-card{padding:0;height:100%;min-width:285px;min-height:91px;background-color:#fff;box-shadow:none;border-radius:3px}.tcs-case-summary-list-card{padding:0;height:100%;min-height:50px;overflow:hidden;background-color:#fff;box-shadow:none;border-radius:3px}.tcs-case-summary-static-list-card{padding:0;height:50px;min-height:50px;background-color:#fff;box-shadow:none;border-radius:3px}.tcs-case-summary-mini-card-right-content{padding:7px 5px}.tcs-case-summary-mini-card.border{box-shadow:0 2px 4px 0 rgba(0,0,0,.33);border-radius:3px}.tcs-case-summary-mini-card:hover{box-shadow:0 3px 8px 4px rgba(0,0,0,.33);border-radius:3px;cursor:pointer}.tcs-case-summary-card:hover{box-shadow:0 3px 8px 4px rgba(0,0,0,.33);cursor:pointer}.tcs-case-summary-list-card:hover{box-shadow:0 3px 8px 4px rgba(0,0,0,.33);border-radius:3px;cursor:pointer}.tcs-case-summary-header{width:100%;height:20px;border-radius:3px 3px 0 0}.tcs-case-summary-mini-card-side-bar{border-radius:3px 0 0 3px;width:20px}.tcs-case-summary-card-contents{width:100%;padding:4px 12px}.tcs-case-summary-case-footer{width:100%;height:36px;border-radius:0 0 3px 3px;background-color:#fff;padding-left:12px;padding-right:12px}.tcs-case-summary-case-type-text{font-family:Source Sans Pro;font-size:12px;font-weight:600;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;text-align:center;color:#727272}.tcs-case-summary-summary1-text{font-family:Source Sans Pro;font-size:16px;font-weight:600;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;text-align:center;color:#212121;margin-top:12px;height:18px;min-height:18px}.tcs-case-summary-summary1-text.mini{margin-top:0}.tcs-case-summary-creation-text{min-height:15px}.tcs-case-summary-creation-text div{font-family:Source Sans Pro;font-size:10px;font-weight:400;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;color:#727272}.tcs-case-summary-line{padding:0;width:100%;margin:12px 20px 0;border-bottom:1.1px solid #f4f4f4}.tcs-case-summary-summary2-text{font-family:Source Sans Pro;font-size:12px;font-weight:400;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;text-align:center;color:#000;margin-top:8px}.tcs-case-summary-list-summary2-text{font-family:Source Sans Pro;font-size:12px;font-weight:400;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;color:#000;padding-right:10px}.tcs-case-summary-list-summary3-text{font-family:Source Sans Pro;font-size:12px;font-weight:400;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;color:#000}.tcs-case-summary-summary2-text.mini{margin-top:0}.tcs-case-summary-case-footer:hover,.tcs-case-summary-mini-card-right:hover{cursor:pointer}.tcs-case-summary-view-details-text{font-family:Source Sans Pro;font-size:10px;font-weight:600;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;text-align:right;color:#0081cb}.tcs-case-summary-state-text{font-family:Source Sans Pro;font-size:10px;font-weight:600;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;color:#727272}.tcs-case-summary-details-icon{height:14px;width:14px;margin-left:5px}.tcs-case-summary-mini-card-state-box{width:100%}.tcs-case-summary-state-icon{margin-right:5px}.tcs-case-summary-list-card-left{margin-left:10px;margin-right:10px;overflow:hidden}.tcs-case-summary-list-details-box{min-width:130px}.tcs-case-summary-list-details-box.tcs-case-summary-creation-text{min-width:110px}.tcs-case-summary-list-summary1-text{min-width:100px;font-family:Source Sans Pro;font-size:16px;font-weight:600;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;color:#212121;height:18px;min-height:18px}.tcs-case-summary-list-large-details-box{min-width:30%}:host ::ng-deep .tcs-case-summary-highlight{color:#000;font-weight:900}"]
                }] }
    ];
    /** @nocollapse */
    LiveAppsCaseSummaryComponent.ctorParameters = function () { return [
        { type: LiveAppsService },
        { type: TcCaseCardConfigService },
        { type: DomSanitizer }
    ]; };
    LiveAppsCaseSummaryComponent.propDecorators = {
        stateIconComponent: [{ type: ViewChild, args: ['caseStateIcon', { static: false },] }],
        caseTypeIconComponent: [{ type: ViewChild, args: ['caseTypeIcon', { static: false },] }],
        componentDiv: [{ type: ViewChild, args: ['componentDiv', { static: false },] }],
        configMode: [{ type: Input }],
        configModeColor: [{ type: Input }],
        configModeIcon: [{ type: Input }],
        configModeCaseTypeColor: [{ type: Input }],
        configModeCaseTypeIcon: [{ type: Input }],
        configModeAppTypeLabel: [{ type: Input }],
        caseRef: [{ type: Input }],
        description: [{ type: Input }],
        workitemId: [{ type: Input }],
        sandboxId: [{ type: Input }],
        displayType: [{ type: Input }],
        borderCard: [{ type: Input }],
        typeBar: [{ type: Input }],
        uiAppId: [{ type: Input }],
        highlight: [{ type: Input }],
        clickCase: [{ type: Output }],
        deleted: [{ type: Output }]
    };
    return LiveAppsCaseSummaryComponent;
}(LiveAppsComponent));
export { LiveAppsCaseSummaryComponent };
if (false) {
    /** @type {?} */
    LiveAppsCaseSummaryComponent.prototype.stateIconComponent;
    /** @type {?} */
    LiveAppsCaseSummaryComponent.prototype.caseTypeIconComponent;
    /** @type {?} */
    LiveAppsCaseSummaryComponent.prototype.componentDiv;
    /**
     * Whether to use static data (ie. when in app config box)
     * @type {?}
     */
    LiveAppsCaseSummaryComponent.prototype.configMode;
    /**
     * static data for app config box
     * @type {?}
     */
    LiveAppsCaseSummaryComponent.prototype.configModeColor;
    /**
     * static data for app config box
     * @type {?}
     */
    LiveAppsCaseSummaryComponent.prototype.configModeIcon;
    /**
     * static data for app config box
     * @type {?}
     */
    LiveAppsCaseSummaryComponent.prototype.configModeCaseTypeColor;
    /**
     * static data for app config box
     * @type {?}
     */
    LiveAppsCaseSummaryComponent.prototype.configModeCaseTypeIcon;
    /**
     * static data for app config box
     * @type {?}
     */
    LiveAppsCaseSummaryComponent.prototype.configModeAppTypeLabel;
    /**
     * The case reference
     * @type {?}
     */
    LiveAppsCaseSummaryComponent.prototype.caseRef;
    /**
     * Card Description
     * @type {?}
     */
    LiveAppsCaseSummaryComponent.prototype.description;
    /**
     * Workitem Id
     * @type {?}
     */
    LiveAppsCaseSummaryComponent.prototype.workitemId;
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsCaseSummaryComponent.prototype.sandboxId;
    /**
     * case card format - list, card, miniCard, staticList (no click event)
     * @type {?}
     */
    LiveAppsCaseSummaryComponent.prototype.displayType;
    /**
     * Whether to display a border around the card
     * @type {?}
     */
    LiveAppsCaseSummaryComponent.prototype.borderCard;
    /**
     * Whether to display the colored "bar" on a summary card (on left or top)
     * @type {?}
     */
    LiveAppsCaseSummaryComponent.prototype.typeBar;
    /**
     * The Application ID of the UI (should ideally be unique as it is shared state key)
     * @type {?}
     */
    LiveAppsCaseSummaryComponent.prototype.uiAppId;
    /**
     * Text to highlight in the list of cases (normall text that was searched)
     * @type {?}
     */
    LiveAppsCaseSummaryComponent.prototype.highlight;
    /**
     * ~event clickCase : Case clicked
     * ~payload CaseRoute : CaseRoute object output when case is clicked so calling component can route accordingly - ie. route to case
     * @type {?}
     */
    LiveAppsCaseSummaryComponent.prototype.clickCase;
    /**
     * ~event deleted : Case Displayed has been deleted
     * ~payload string : string emitted when summary tries to load data for a case that has been deleted (so it can be hidden.removed from - for example recent cases list)
     * @type {?}
     */
    LiveAppsCaseSummaryComponent.prototype.deleted;
    /** @type {?} */
    LiveAppsCaseSummaryComponent.prototype.casedata;
    /** @type {?} */
    LiveAppsCaseSummaryComponent.prototype.summary;
    /** @type {?} */
    LiveAppsCaseSummaryComponent.prototype.summaryKeys;
    /** @type {?} */
    LiveAppsCaseSummaryComponent.prototype.summaryValues;
    /** @type {?} */
    LiveAppsCaseSummaryComponent.prototype.metadata;
    /** @type {?} */
    LiveAppsCaseSummaryComponent.prototype.appStateConfig;
    /** @type {?} */
    LiveAppsCaseSummaryComponent.prototype.errorMessage;
    /** @type {?} */
    LiveAppsCaseSummaryComponent.prototype.appId;
    /** @type {?} */
    LiveAppsCaseSummaryComponent.prototype.typeId;
    /** @type {?} */
    LiveAppsCaseSummaryComponent.prototype.color;
    /** @type {?} */
    LiveAppsCaseSummaryComponent.prototype.clickCaseAction;
    /** @type {?} */
    LiveAppsCaseSummaryComponent.prototype.restylePreview;
    /** @type {?} */
    LiveAppsCaseSummaryComponent.prototype.restylePreviewCaseType;
    /** @type {?} */
    LiveAppsCaseSummaryComponent.prototype.refresh;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsCaseSummaryComponent.prototype.liveapps;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsCaseSummaryComponent.prototype.caseCardConfigService;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsCaseSummaryComponent.prototype.sanitizer;
}
//# sourceMappingURL=data:application/json;base64,