/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { take, takeUntil } from 'rxjs/operators';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
import { TcCaseAuditService } from '../../services/tc-case-audit.service';
/**
 * Render audit trail for a case
 *
 *  ![alt-text](../live-apps-case-audit.png "Image")
 *
 * \@example <tcla-live-apps-case-audit></tcla-live-apps-case-audit>
 */
var LiveAppsCaseAuditComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LiveAppsCaseAuditComponent, _super);
    function LiveAppsCaseAuditComponent(caseAuditService) {
        var _this = _super.call(this) || this;
        _this.caseAuditService = caseAuditService;
        _this.auditEvents = [];
        _this.startat = undefined;
        _this.top = 20;
        _this.end = false;
        _this.refresh = (/**
         * @return {?}
         */
        function () {
            _this.startat = undefined;
            _this.top = 20;
            _this.end = false;
            _this.auditEvents = [];
            _this.getAuditEvents(_this.caseRef, _this.sandboxId, _this.startat, _this.top);
        });
        _this.getAuditEvents = (/**
         * @param {?} caseRef
         * @param {?} sandboxId
         * @param {?} startAt
         * @param {?} top
         * @return {?}
         */
        function (caseRef, sandboxId, startAt, top) {
            _this.caseAuditService.getCaseAudit(_this.caseRef, _this.sandboxId, _this.startat, _this.top)
                .pipe(take(1), takeUntil(_this._destroyed$)).subscribe((/**
             * @param {?} auditeventlist
             * @return {?}
             */
            function (auditeventlist) {
                // this will strip any duplicates that may have been retrieved due to fast scrolling
                /** @type {?} */
                var filteredEvents = auditeventlist.auditevents.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                function (x) { return _this.auditEvents.every((/**
                 * @param {?} y
                 * @return {?}
                 */
                function (y) { return y.key.value !== x.key.value; })); }));
                _this.auditEvents = _this.auditEvents.concat(filteredEvents);
                if (auditeventlist.auditevents.length < _this.top) {
                    _this.end = true;
                }
                else {
                    _this.startat = auditeventlist.auditevents[auditeventlist.auditevents.length - 1].key.value;
                }
            }), (/**
             * @param {?} error
             * @return {?}
             */
            function (error) {
                _this.errorMessage = 'Error retrieving case audit: ' + error.error.errorMsg;
            }));
        });
        _this.getNextBatch = (/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (!_this.end) {
                _this.getAuditEvents(_this.caseRef, _this.sandboxId, _this.startat, _this.top);
            }
        });
        return _this;
    }
    LiveAppsCaseAuditComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tcla-live-apps-case-audit',
                    template: "<div class=\"tcs-case-audit-pane\" fxLayout=\"column\" fxFill style=\"overflow: hidden;\">\n  <tc-tibco-cloud-widget-header fxFlex=\"nogrow\" [headerText]=\"'Audit'\"\n                                [icon]=\"'tcs-recent-icon'\"></tc-tibco-cloud-widget-header>\n\n\n  <!--div *ngIf=\"auditEvents && auditEvents.length > 0\" class=\"tcs-case-audit-container\">\n\n  </div-->\n  <div class=\"audit-template\" fxFlex>\n    <cdk-virtual-scroll-viewport style=\"height: 100%\" itemSize=\"50\" (scrolledIndexChange)=\"getNextBatch($event)\">\n      <ul style=\"\"\n          *cdkVirtualFor=\"let item of auditEvents; let i = index\">\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'BP_INSTANCE_CREATED'\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"BP_INSTANCE_CREATED\"></mat-icon>\n          </div>\n          <div class=\"audit-details\">\n            <li>\n              <span *ngIf=\"item.principalName\">{{item.principalName.value}} </span>\n              <span>\n                      <span> started </span>\n                      <b>{{item.procName.value}}</b>\n                      <span> on {{item.creationTime.value | date:'full'}}</span>\n                  </span>\n            </li>\n          </div>\n          <div class=\"audit-line\"></div>\n        </div>\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'BP_AUTO_STARTED_INSTANCE'\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"BP_AUTO_STARTED_INSTANCE\"></mat-icon>\n          </div>\n          <li>\n            <!--span *ngIf=\"item.principalName\">{{item.principalName.value}} </span-->\n            <span>\n                    <b>{{item.procName.value}}</b>\n                    <span> auto initiated on {{item.creationTime.value | date:'full'}}</span>\n                </span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'BP_DELAYED_AUTO_STARTED_INSTANCE'\">\n          <!-- todo: JS fix this -->\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"BP_DELAYED_AUTO_STARTED_INSTANCE\"></mat-icon>\n          </div>\n          <li>\n          <span>\n                    <b>{{item.procName.value}}</b>\n\t\t\t\t\t<span> deadline auto initiated on {{item.creationTime.value | date:'full'}}</span>\n          <span>. </span>\n          <span> Time to deadline {{item.delayTime.value}}></span>. </span>\n            <!--span class=\"skip-delay\" *ngIf=\"isInstanceDelayed(item)\" ng-click=\"skipDelay(item)\" skip\"></span>\n                  </span-->\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'BP_DELAYED_AUTO_START_TIMER_EXPIRED'\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"BP_DELAYED_AUTO_START_TIMER_EXPIRED\"></mat-icon>\n          </div>\n          <li>\n          <span>\n            <b>{{item.procName.value}}</b>\n\t\t\t\t\t  <span> deadline reached {{item.creationTime.value | date: 'full'}}></span>\n          </span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n        <div class=\"tcs-case-audit-dtl\"\n             *ngIf=\"item.messageId.value === 'BP_DELAYED_AUTO_STARTED_INSTANCE_CANCELLED_DUE_TO_STATE_CHANGE'\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"BP_DELAYED_AUTO_STARTED_INSTANCE_CANCELLED_DUE_TO_STATE_CHANGE\"></mat-icon>\n          </div>\n          <li>\n            <!--span *ngIf=\"item.principalName\">{{item.principalName.value}} </span-->\n            <span>\n                    <b>{{item.procName.value}}</b>\n            <span> deadline cancelled {{item.creationTime.value | date: 'full'}}</span>\n          </span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n        <div class=\"tcs-case-audit-dtl\"\n             *ngIf=\"item.messageId.value === 'BP_TASK_CREATED' && ['User Task','Email Task','Calculation Task','TCI Task','AuditSafe Task'].indexOf(item.taskType.value) > -1\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"{{item.taskType.value}}\"></mat-icon>\n          </div>\n          <li>\n                <span>\n                    <b>{{item.taskName.value}}</b>\n                    <span> initiated on {{item.creationTime.value | date: 'full'}}</span>\n                </span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'CM_CASE_CREATED'\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"CM_CASE_CREATED\"></mat-icon>\n          </div>\n          <li>\n            <span *ngIf=\"item.principalName\">{{item.principalName.value}}</span>\n            <span class=\"spanPadding\">\n                    <span> created </span>\n                    <b> {{item.label.value}}</b>\n                    <span> in state</span>\n                    <span class=\"audit-state\">\"{{item.caseState.value}}\"</span>\n                    <span> on {{item.creationTime.value | date: 'full'}}</span>\n                </span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'CM_CASE_UPDATED_STATE_CHANGED'\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"CM_CASE_UPDATED_STATE_CHANGED\"></mat-icon>\n          </div>\n          <li>\n            <span *ngIf=\"item.principalName\">{{item.principalName.value}}</span>\n            <span class=\"spanPadding\">\n                    <span> updated </span>\n                    <b> {{item.label.value}}</b>\n                    <span>, new state is></span>\n                    <span class=\"audit-state\"> \"{{item.caseState.value}}\" </span>\n                    <span> on {{item.creationTime.value | date: 'full'}}</span>\n                </span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'CM_CASE_UPDATED'\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"CM_CASE_UPDATED\"></mat-icon>\n          </div>\n          <li>\n            <span *ngIf=\"item.principalName\">{{item.principalName.value}}</span>\n            <span class=\"spanPadding\">\n                    <span> updated </span>\n                    <b> {{item.label.value}} </b>\n                    <span> on {{item.creationTime.value | date: 'full'}}</span>\n                </span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'WR_FOLDER_ARTIFACT_CREATED'\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"WR_FOLDER_ARTIFACT_CREATED\"></mat-icon>\n          </div>\n          <li>\n            <span *ngIf=\"item.principalName\">{{item.principalName.value}}</span>\n            <span class=\"spanPadding\">\n                    <span> uploaded </span>\n                    <span>{{item.artifactName.value}}</span>\n                    <span> on {{item.creationTime.value | date:'full'}}</span>\n                </span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'WR_FOLDER_ARTIFACT_UPDATED'\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"WR_FOLDER_ARTIFACT_UPDATED\"></mat-icon>\n          </div>\n          <li>\n            <span *ngIf=\"item.principalName\">{{item.principalName.value}}</span>\n            <span class=\"spanPadding\">\n                    <span> updated </span>\n                    <span>{{item.artifactName.value}}</span>\n                    <span> on {{item.creationTime.value | date:'full'}}</span>\n                </span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'WR_FOLDER_ARTIFACT_DELETED'\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"WR_FOLDER_ARTIFACT_DELETED\"></mat-icon>\n          </div>\n          <li>\n            <span *ngIf=\"item.principalName\">{{item.principalName.value}}</span>\n            <span class=\"spanPadding\">\n                    <span> deleted </span>\n                    <span>{{item.artifactName.value}}</span>\n                    <span> on {{item.creationTime.value | date:'full'}}</span>\n                </span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n\n        <div class=\"tcs-case-audit-dtl\"\n             *ngIf=\"item.messageId.value === 'BP_TASK_COMPLETED' && ['User Task','Email Task','Calculation Task','TCI Task','AuditSafe Task'].indexOf(item.taskType.value) > -1\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"{{item.taskType.value}}\"></mat-icon>\n          </div>\n          <li>\n            <span *ngIf=\"item.principalName\">{{item.principalName.value}} </span>\n            <span>\n                    <span> completed </span>\n                    <b> {{item.taskName.value}} </b>\n                    <span> on {{item.creationTime.value | date: 'full'}}</span>\n                </span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.messageId.value === 'BP_INSTANCE_COMPLETED'\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"BP_INSTANCE_COMPLETED\"></mat-icon>\n          </div>\n          <li>\n                <span>\n                    <b>{{item.procName.value}} </b>\n                    <span> on {{item.creationTime.value | date: 'full'}}</span>\n                </span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.severity.value === 'ERROR'\">\n          <div class=\"audit-icon-container\">\n            <mat-icon svgIcon=\"ERROR\"></mat-icon>\n          </div>\n          <li>\n                <span *ngIf=\"item.principalName\">{{item.principalName.value}} has error at {{item.taskName.value}}\n                </span>\n            <b> {{item.message.value | parseAuditMessage : item }}</b>\n            <span> on {{item.creationTime.value | date: 'full'}}</span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n        <div class=\"tcs-case-audit-dtl\" *ngIf=\"item.severity.value === 'WARN'\">\n          <div class=\"audit-icon-container warn-icon\">\n            <mat-icon svgIcon=\"ERROR\"></mat-icon>\n          </div>\n          <li>\n                <span *ngIf=\"item.principalName\">{{item.principalName.value}} has warning at {{item.taskName.value}}>\n                </span>\n            <b> {{item.message.value | parseAuditMessage : item }}</b>\n            <span> on {{item.creationTime.value | date: 'full'}}</span>\n          </li>\n          <div class=\"audit-line\"></div>\n        </div>\n\n\n      </ul>\n    </cdk-virtual-scroll-viewport>\n  </div>\n</div>\n",
                    styles: [".tcs-case-audit-pane{border-radius:3px;box-shadow:0 2px 4px 0 rgba(0,0,0,.33);background-color:#fff}.tcs-case-audit-container{height:100%;overflow-x:auto;padding:11px}.tcs-case-audit-dtl{height:70px}.audit-template{padding:20px}.audit-template span{font-family:Source Sans Pro;font-size:12px;font-weight:400;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal}.audit-template ul{padding-left:25px;border-left:2px solid #bfbfbf;display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-align:center;align-items:center;position:relative;margin-left:20px;margin-right:20px}.audit-icon-container{background-color:#fff;padding:5px;position:absolute;left:-19px;border-radius:50%;border:1px solid #0081cb}.audit-icon-container mat-icon{padding:4px}"]
                }] }
    ];
    /** @nocollapse */
    LiveAppsCaseAuditComponent.ctorParameters = function () { return [
        { type: TcCaseAuditService }
    ]; };
    LiveAppsCaseAuditComponent.propDecorators = {
        caseRef: [{ type: Input }],
        sandboxId: [{ type: Input }]
    };
    return LiveAppsCaseAuditComponent;
}(LiveAppsComponent));
export { LiveAppsCaseAuditComponent };
if (false) {
    /**
     * The case reference
     * @type {?}
     */
    LiveAppsCaseAuditComponent.prototype.caseRef;
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsCaseAuditComponent.prototype.sandboxId;
    /** @type {?} */
    LiveAppsCaseAuditComponent.prototype.auditEvents;
    /** @type {?} */
    LiveAppsCaseAuditComponent.prototype.errorMessage;
    /** @type {?} */
    LiveAppsCaseAuditComponent.prototype.startat;
    /** @type {?} */
    LiveAppsCaseAuditComponent.prototype.top;
    /** @type {?} */
    LiveAppsCaseAuditComponent.prototype.end;
    /** @type {?} */
    LiveAppsCaseAuditComponent.prototype.refresh;
    /** @type {?} */
    LiveAppsCaseAuditComponent.prototype.getAuditEvents;
    /** @type {?} */
    LiveAppsCaseAuditComponent.prototype.getNextBatch;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsCaseAuditComponent.prototype.caseAuditService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLWNhc2UtYXVkaXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpYmNvLXRjc3RrL3RjLWxpdmVhcHBzLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2xpdmUtYXBwcy1jYXNlLWF1ZGl0L2xpdmUtYXBwcy1jYXNlLWF1ZGl0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFvQixNQUFNLGVBQWUsQ0FBQztBQUNsRSxPQUFPLEVBQU0sSUFBSSxFQUFFLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRXBELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHNEQUFzRCxDQUFDO0FBQ3ZGLE9BQU8sRUFBQyxrQkFBa0IsRUFBQyxNQUFNLHNDQUFzQyxDQUFDOzs7Ozs7OztBQVN4RTtJQUtnRCxzREFBaUI7SUFvRC9ELG9DQUFzQixnQkFBb0M7UUFBMUQsWUFDRSxpQkFBTyxTQUNSO1FBRnFCLHNCQUFnQixHQUFoQixnQkFBZ0IsQ0FBb0I7UUF4Q25ELGlCQUFXLEdBQWlCLEVBQUUsQ0FBQztRQUUvQixhQUFPLEdBQUcsU0FBUyxDQUFDO1FBQ3BCLFNBQUcsR0FBRyxFQUFFLENBQUM7UUFDVCxTQUFHLEdBQUcsS0FBSyxDQUFDO1FBRVosYUFBTzs7O1FBQUc7WUFDZixLQUFJLENBQUMsT0FBTyxHQUFHLFNBQVMsQ0FBQztZQUN6QixLQUFJLENBQUMsR0FBRyxHQUFHLEVBQUUsQ0FBQztZQUNkLEtBQUksQ0FBQyxHQUFHLEdBQUcsS0FBSyxDQUFDO1lBQ2pCLEtBQUksQ0FBQyxXQUFXLEdBQUcsRUFBRSxDQUFDO1lBQ3RCLEtBQUksQ0FBQyxjQUFjLENBQUMsS0FBSSxDQUFDLE9BQU8sRUFBRSxLQUFJLENBQUMsU0FBUyxFQUFFLEtBQUksQ0FBQyxPQUFPLEVBQUUsS0FBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzVFLENBQUMsRUFBQTtRQUVNLG9CQUFjOzs7Ozs7O1FBQUcsVUFBQyxPQUFlLEVBQUUsU0FBaUIsRUFBRSxPQUFlLEVBQUUsR0FBVztZQUN2RixLQUFJLENBQUMsZ0JBQWdCLENBQUMsWUFBWSxDQUFDLEtBQUksQ0FBQyxPQUFPLEVBQUUsS0FBSSxDQUFDLFNBQVMsRUFBRSxLQUFJLENBQUMsT0FBTyxFQUFFLEtBQUksQ0FBQyxHQUFHLENBQUM7aUJBQ3JGLElBQUksQ0FDSCxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQ1AsU0FBUyxDQUFDLEtBQUksQ0FBQyxXQUFXLENBQUMsQ0FDNUIsQ0FBQyxTQUFTOzs7O1lBQ1gsVUFBQSxjQUFjOzs7b0JBRU4sY0FBYyxHQUFHLGNBQWMsQ0FBQyxXQUFXLENBQUMsTUFBTTs7OztnQkFBQyxVQUFBLENBQUMsSUFBSSxPQUFBLEtBQUksQ0FBQyxXQUFXLENBQUMsS0FBSzs7OztnQkFBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUEzQixDQUEyQixFQUFDLEVBQXhELENBQXdELEVBQUM7Z0JBQ3ZILEtBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLENBQUM7Z0JBQzNELElBQUksY0FBYyxDQUFDLFdBQVcsQ0FBQyxNQUFNLEdBQUcsS0FBSSxDQUFDLEdBQUcsRUFBRTtvQkFDaEQsS0FBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUM7aUJBQ2pCO3FCQUFNO29CQUNMLEtBQUksQ0FBQyxPQUFPLEdBQUcsY0FBYyxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDO2lCQUM1RjtZQUNILENBQUM7Ozs7WUFBRSxVQUFBLEtBQUs7Z0JBQ04sS0FBSSxDQUFDLFlBQVksR0FBRywrQkFBK0IsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQztZQUM3RSxDQUFDLEVBQUMsQ0FBQztRQUNQLENBQUMsRUFBQTtRQUVNLGtCQUFZOzs7O1FBQUcsVUFBQyxLQUFLO1lBQzFCLElBQUksQ0FBQyxLQUFJLENBQUMsR0FBRyxFQUFFO2dCQUNiLEtBQUksQ0FBQyxjQUFjLENBQUMsS0FBSSxDQUFDLE9BQU8sRUFBRSxLQUFJLENBQUMsU0FBUyxFQUFFLEtBQUksQ0FBQyxPQUFPLEVBQUUsS0FBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO2FBQzNFO1FBQ0gsQ0FBQyxFQUFBOztJQUlELENBQUM7O2dCQTNERixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLDJCQUEyQjtvQkFDckMsbXNXQUFvRDs7aUJBRXJEOzs7O2dCQWJPLGtCQUFrQjs7OzBCQW1CdkIsS0FBSzs0QkFLTCxLQUFLOztJQThDUixpQ0FBQztDQUFBLEFBN0RELENBS2dELGlCQUFpQixHQXdEaEU7U0F4RFksMEJBQTBCOzs7Ozs7SUFLckMsNkNBQXlCOzs7OztJQUt6QiwrQ0FBMkI7O0lBRTNCLGlEQUFzQzs7SUFDdEMsa0RBQTRCOztJQUM1Qiw2Q0FBMkI7O0lBQzNCLHlDQUFnQjs7SUFDaEIseUNBQW1COztJQUVuQiw2Q0FNQzs7SUFFRCxvREFrQkM7O0lBRUQsa0RBSUM7Ozs7O0lBRVcsc0RBQThDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge21hcCwgdGFrZSwgdGFrZVVudGlsfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQge0F1ZGl0RXZlbnR9IGZyb20gJy4uLy4uL21vZGVscy90Yy1jYXNlLWF1ZGl0JztcbmltcG9ydCB7TGl2ZUFwcHNDb21wb25lbnR9IGZyb20gJy4uL2xpdmUtYXBwcy1jb21wb25lbnQvbGl2ZS1hcHBzLWNvbXBvbmVudC5jb21wb25lbnQnO1xuaW1wb3J0IHtUY0Nhc2VBdWRpdFNlcnZpY2V9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3RjLWNhc2UtYXVkaXQuc2VydmljZSc7XG5cbi8qKlxuICogUmVuZGVyIGF1ZGl0IHRyYWlsIGZvciBhIGNhc2VcbiAqXG4gKiAgIVthbHQtdGV4dF0oLi4vbGl2ZS1hcHBzLWNhc2UtYXVkaXQucG5nIFwiSW1hZ2VcIilcbiAqXG4gKkBleGFtcGxlIDx0Y2xhLWxpdmUtYXBwcy1jYXNlLWF1ZGl0PjwvdGNsYS1saXZlLWFwcHMtY2FzZS1hdWRpdD5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGNsYS1saXZlLWFwcHMtY2FzZS1hdWRpdCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9saXZlLWFwcHMtY2FzZS1hdWRpdC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2xpdmUtYXBwcy1jYXNlLWF1ZGl0LmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBMaXZlQXBwc0Nhc2VBdWRpdENvbXBvbmVudCBleHRlbmRzIExpdmVBcHBzQ29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95IHtcblxuICAvKipcbiAgICogVGhlIGNhc2UgcmVmZXJlbmNlXG4gICAqL1xuICBASW5wdXQoKSBjYXNlUmVmOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIHNhbmRib3hJZCAtIHRoaXMgY29tZXMgZnJvbSBjbGFpbXMgcmVzb2x2ZXJcbiAgICovXG4gIEBJbnB1dCgpIHNhbmRib3hJZDogbnVtYmVyO1xuXG4gIHB1YmxpYyBhdWRpdEV2ZW50czogQXVkaXRFdmVudFtdID0gW107XG4gIHB1YmxpYyBlcnJvck1lc3NhZ2U6IHN0cmluZztcbiAgcHVibGljIHN0YXJ0YXQgPSB1bmRlZmluZWQ7XG4gIHB1YmxpYyB0b3AgPSAyMDtcbiAgcHVibGljIGVuZCA9IGZhbHNlO1xuXG4gIHB1YmxpYyByZWZyZXNoID0gKCkgPT4ge1xuICAgIHRoaXMuc3RhcnRhdCA9IHVuZGVmaW5lZDtcbiAgICB0aGlzLnRvcCA9IDIwO1xuICAgIHRoaXMuZW5kID0gZmFsc2U7XG4gICAgdGhpcy5hdWRpdEV2ZW50cyA9IFtdO1xuICAgIHRoaXMuZ2V0QXVkaXRFdmVudHModGhpcy5jYXNlUmVmLCB0aGlzLnNhbmRib3hJZCwgdGhpcy5zdGFydGF0LCB0aGlzLnRvcCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0QXVkaXRFdmVudHMgPSAoY2FzZVJlZjogc3RyaW5nLCBzYW5kYm94SWQ6IG51bWJlciwgc3RhcnRBdDogbnVtYmVyLCB0b3A6IG51bWJlcikgPT4ge1xuICAgIHRoaXMuY2FzZUF1ZGl0U2VydmljZS5nZXRDYXNlQXVkaXQodGhpcy5jYXNlUmVmLCB0aGlzLnNhbmRib3hJZCwgdGhpcy5zdGFydGF0LCB0aGlzLnRvcClcbiAgICAgIC5waXBlKFxuICAgICAgICB0YWtlKDEpLFxuICAgICAgICB0YWtlVW50aWwodGhpcy5fZGVzdHJveWVkJClcbiAgICAgICkuc3Vic2NyaWJlKFxuICAgICAgYXVkaXRldmVudGxpc3QgPT4ge1xuICAgICAgICAvLyB0aGlzIHdpbGwgc3RyaXAgYW55IGR1cGxpY2F0ZXMgdGhhdCBtYXkgaGF2ZSBiZWVuIHJldHJpZXZlZCBkdWUgdG8gZmFzdCBzY3JvbGxpbmdcbiAgICAgICAgY29uc3QgZmlsdGVyZWRFdmVudHMgPSBhdWRpdGV2ZW50bGlzdC5hdWRpdGV2ZW50cy5maWx0ZXIoeCA9PiB0aGlzLmF1ZGl0RXZlbnRzLmV2ZXJ5KHkgPT4geS5rZXkudmFsdWUgIT09IHgua2V5LnZhbHVlKSlcbiAgICAgICAgdGhpcy5hdWRpdEV2ZW50cyA9IHRoaXMuYXVkaXRFdmVudHMuY29uY2F0KGZpbHRlcmVkRXZlbnRzKTtcbiAgICAgICAgaWYgKGF1ZGl0ZXZlbnRsaXN0LmF1ZGl0ZXZlbnRzLmxlbmd0aCA8IHRoaXMudG9wKSB7XG4gICAgICAgICAgdGhpcy5lbmQgPSB0cnVlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuc3RhcnRhdCA9IGF1ZGl0ZXZlbnRsaXN0LmF1ZGl0ZXZlbnRzW2F1ZGl0ZXZlbnRsaXN0LmF1ZGl0ZXZlbnRzLmxlbmd0aCAtIDFdLmtleS52YWx1ZTtcbiAgICAgICAgfVxuICAgICAgfSwgZXJyb3IgPT4ge1xuICAgICAgICB0aGlzLmVycm9yTWVzc2FnZSA9ICdFcnJvciByZXRyaWV2aW5nIGNhc2UgYXVkaXQ6ICcgKyBlcnJvci5lcnJvci5lcnJvck1zZztcbiAgICAgIH0pO1xuICB9XG5cbiAgcHVibGljIGdldE5leHRCYXRjaCA9IChldmVudCkgPT4ge1xuICAgIGlmICghdGhpcy5lbmQpIHtcbiAgICAgIHRoaXMuZ2V0QXVkaXRFdmVudHModGhpcy5jYXNlUmVmLCB0aGlzLnNhbmRib3hJZCwgdGhpcy5zdGFydGF0LCB0aGlzLnRvcCk7XG4gICAgfVxuICB9XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGNhc2VBdWRpdFNlcnZpY2U6IFRjQ2FzZUF1ZGl0U2VydmljZSkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxufVxuIl19