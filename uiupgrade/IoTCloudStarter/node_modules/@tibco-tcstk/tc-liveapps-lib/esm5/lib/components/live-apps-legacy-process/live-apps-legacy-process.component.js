/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
import { LegacyIframeService } from '@tibco-tcstk/tc-core-lib';
import { TcVisibilityService } from '@tibco-tcstk/tc-core-lib';
import { LaProcessSelection } from '../../models/tc-case-processes';
/**
 * Wraps legacy angularjs form renderer
 *
 * \@example <tcla-live-apps-legacy-form></tcla-live-apps-legacy-form>
 */
var LiveAppsLegacyProcessComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LiveAppsLegacyProcessComponent, _super);
    function LiveAppsLegacyProcessComponent(visibilityService, host, legacyIframeService) {
        var _this = _super.call(this) || this;
        _this.visibilityService = visibilityService;
        _this.host = host;
        _this.legacyIframeService = legacyIframeService;
        _this.legacyIframeId = _this.legacyIframeId ? _this.legacyIframeId : 'legacyProcessFrame';
        _this.processComplete = new EventEmitter();
        _this.processCancelled = new EventEmitter();
        _this.processActive = false;
        _this.changeProcess = (/**
         * @param {?} process
         * @return {?}
         */
        function (process) {
            // process has changed
            _this.renderProcess(process);
        });
        _this.renderProcess = (/**
         * @param {?} process
         * @return {?}
         */
        function (process) {
            if (_this.processActive && _this.openProcessId) {
                // opening a new process so cancel old one
                _this.cancelProcess(false);
            }
            // send message to external form app
            _this.formDiv.contentWindow.postMessage({
                action: _this.type === 'creator' ? 'runCreator' : 'runAction',
                processId: process.process.id,
                caseRef: process.caseReference,
                caseState: _this.caseState,
                applicationId: _this.applicationId,
                typeId: _this.typeId
            }, window.location.origin);
            // position the form iframe over the processDiv placeholder
            _this.processActive = true;
            _this.openProcessId = process.process.id;
            _this.resizeProcess();
        });
        _this.receiveMessage = (/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.data.action === 'processComplete') {
                _this.processActive = false;
                _this.openProcessId = undefined;
                _this.hideProcess();
                _this.processComplete.emit();
            }
            else if (event.data.action === 'processCancelled') {
                _this.processActive = false;
                _this.openProcessId = undefined;
                _this.hideProcess();
                _this.processCancelled.emit();
            }
        });
        _this.cancelProcess = (/**
         * @param {?=} emit
         * @return {?}
         */
        function (emit) {
            _this.formDiv.contentWindow.postMessage({ 'action': 'cancelProcess' }, window.location.origin);
            _this.processActive = false;
            _this.openProcessId = undefined;
            _this.hideProcess();
            if (emit) {
                _this.processCancelled.emit();
            }
        });
        _this.hideProcess = (/**
         * @return {?}
         */
        function () {
            // hide the iframe!
            _this.formDiv.style.top = '-1000px';
            _this.formDiv.style.left = '-1000px';
            _this.formDiv.style.zIndex = '1';
        });
        _this.resizeProcess = (/**
         * @return {?}
         */
        function () {
            // position the form iframe over the processDiv placeholder
            setTimeout((/**
             * @param {?} handler
             * @return {?}
             */
            function (handler) {
                /** @type {?} */
                var rect = _this.target.getBoundingClientRect();
                _this.formDiv.style.top = rect.top.toString() + 'px';
                _this.formDiv.style.left = rect.left.toString() + 'px';
                _this.formDiv.style.height = rect.height.toString() + 'px';
                _this.formDiv.style.width = rect.width.toString() + 'px';
                _this.formDiv.style.position = 'absolute';
                // creator needs 1001 so it is over the dialog box
                _this.formDiv.style.zIndex = (_this.type === 'creator') ? '1001' : '1000';
            }), 1000);
        });
        _this.initialize = (/**
         * @return {?}
         */
        function () {
            // listen for messages from the iframe
            window.addEventListener('message', _this.receiveMessage, false);
            // we only want to render the process when the element is visible
            /** @type {?} */
            var inSight$ = _this.visibilityService.elementInSight(_this.host);
            inSight$.subscribe((/**
             * @param {?} next
             * @return {?}
             */
            function (next) {
                if (!next) {
                    // element not visible so hide the process if it is showing
                    if (_this.processActive && _this.target) {
                        _this.hideProcess();
                    }
                }
                else {
                    // element is visible
                    if (!_this.processActive) {
                        // if process not already showing - show it
                        // first get a handle on the target div and the legacy iframe
                        _this.target = document.getElementById('processDiv');
                        _this.formDiv = document.getElementById(_this.legacyIframeId);
                        if (_this.openProcessId) {
                            // trigger display of the process
                            _this.renderProcess(_this.process);
                        }
                    }
                    else {
                        _this.resizeProcess();
                    }
                }
            }));
        });
        return _this;
    }
    /**
     * @return {?}
     */
    LiveAppsLegacyProcessComponent.prototype.isFormActive = /**
     * @return {?}
     */
    function () {
        return this.processActive;
    };
    /**
     * @return {?}
     */
    LiveAppsLegacyProcessComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        _super.prototype.ngAfterViewInit.call(this);
        this.openProcessId = this.process.process.id;
        this.containerChanges$.subscribe((/**
         * @param {?} widget
         * @return {?}
         */
        function (widget) {
            if (_this.processActive && _this.target) {
                _this.resizeProcess();
            }
        }));
        // wait for iframe to load before doing anything else
        // this observable will emit true once the iFrame is loaded
        this.legacyIframeService.processStatus.subscribe((/**
         * @param {?} loaded
         * @return {?}
         */
        function (loaded) {
            if (loaded) {
                // iframe is loaded
                _this.initialize();
            }
        }));
    };
    /**
     * @return {?}
     */
    LiveAppsLegacyProcessComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.openProcessId) {
            this.cancelProcess();
        }
    };
    LiveAppsLegacyProcessComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tcla-live-apps-legacy-process',
                    template: "<div #componentDiv fxFill id=\"processDiv\" style=\"border: none;\"></div>\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    LiveAppsLegacyProcessComponent.ctorParameters = function () { return [
        { type: TcVisibilityService },
        { type: ElementRef },
        { type: LegacyIframeService }
    ]; };
    LiveAppsLegacyProcessComponent.propDecorators = {
        legacyIframeId: [{ type: Input }],
        process: [{ type: Input }],
        type: [{ type: Input }],
        applicationId: [{ type: Input }],
        typeId: [{ type: Input }],
        caseRef: [{ type: Input }],
        caseState: [{ type: Input }],
        processComplete: [{ type: Output }],
        processCancelled: [{ type: Output }]
    };
    return LiveAppsLegacyProcessComponent;
}(LiveAppsComponent));
export { LiveAppsLegacyProcessComponent };
if (false) {
    /** @type {?} */
    LiveAppsLegacyProcessComponent.prototype.legacyIframeId;
    /** @type {?} */
    LiveAppsLegacyProcessComponent.prototype.process;
    /** @type {?} */
    LiveAppsLegacyProcessComponent.prototype.type;
    /** @type {?} */
    LiveAppsLegacyProcessComponent.prototype.applicationId;
    /** @type {?} */
    LiveAppsLegacyProcessComponent.prototype.typeId;
    /** @type {?} */
    LiveAppsLegacyProcessComponent.prototype.caseRef;
    /** @type {?} */
    LiveAppsLegacyProcessComponent.prototype.caseState;
    /** @type {?} */
    LiveAppsLegacyProcessComponent.prototype.processComplete;
    /** @type {?} */
    LiveAppsLegacyProcessComponent.prototype.processCancelled;
    /**
     * @type {?}
     * @private
     */
    LiveAppsLegacyProcessComponent.prototype.target;
    /**
     * @type {?}
     * @private
     */
    LiveAppsLegacyProcessComponent.prototype.formDiv;
    /**
     * @type {?}
     * @private
     */
    LiveAppsLegacyProcessComponent.prototype.processActive;
    /**
     * @type {?}
     * @private
     */
    LiveAppsLegacyProcessComponent.prototype.openProcessId;
    /** @type {?} */
    LiveAppsLegacyProcessComponent.prototype.changeProcess;
    /** @type {?} */
    LiveAppsLegacyProcessComponent.prototype.renderProcess;
    /**
     * @type {?}
     * @private
     */
    LiveAppsLegacyProcessComponent.prototype.receiveMessage;
    /** @type {?} */
    LiveAppsLegacyProcessComponent.prototype.cancelProcess;
    /**
     * @type {?}
     * @private
     */
    LiveAppsLegacyProcessComponent.prototype.hideProcess;
    /**
     * @type {?}
     * @private
     */
    LiveAppsLegacyProcessComponent.prototype.resizeProcess;
    /**
     * @type {?}
     * @private
     */
    LiveAppsLegacyProcessComponent.prototype.initialize;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsLegacyProcessComponent.prototype.visibilityService;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsLegacyProcessComponent.prototype.host;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsLegacyProcessComponent.prototype.legacyIframeService;
}
//# sourceMappingURL=data:application/json;base64,