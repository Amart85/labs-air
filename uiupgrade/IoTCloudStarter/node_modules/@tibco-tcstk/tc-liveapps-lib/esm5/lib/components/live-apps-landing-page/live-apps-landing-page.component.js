/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { LandingPageItemConfig, TcGeneralLandingPageService, ActionButtonConfig } from '@tibco-tcstk/tc-core-lib';
import { Router } from '@angular/router';
/**
 * Landing page
 *
 * This component allows a configurable landing page on a per role basis
 *
 * \@example <tcla-live-apps-landing-page></tcla-live-apps-landing-page>
 */
var LiveAppsLandingPageComponent = /** @class */ (function () {
    function LiveAppsLandingPageComponent(router, landingPageService) {
        var _this = this;
        this.router = router;
        this.landingPageService = landingPageService;
        this.getStartedEvent = new EventEmitter();
        this.getStartedClick = (/**
         * @param {?} route
         * @return {?}
         */
        function (route) {
            _this.getStartedEvent.emit(route);
        });
    }
    /**
     * @return {?}
     */
    LiveAppsLandingPageComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.landingPageService.getLandingPageForRole(this.roleId, this.uiAppId).subscribe((/**
         * @param {?} landingPage
         * @return {?}
         */
        function (landingPage) {
            if (landingPage !== undefined) {
                _this.title = landingPage.title;
                _this.subtitle = landingPage.subtitle;
                _this.backgroundImage = (landingPage.backgroundURL !== '' ? '/webresource/orgFolders/' + _this.uiAppId + '/background/' + landingPage.backgroundURL : '');
                _this.topMargin = landingPage.topMargin ? landingPage.topMargin + 'px' : '0px';
                _this.highlights = new Array();
                _this.highlights.push(new LandingPageItemConfig().deserialize({
                    title: landingPage.highlights[0].title,
                    content: landingPage.highlights[0].content,
                    iconURL: landingPage.highlights[0].iconURL
                }));
                _this.highlights.push(new LandingPageItemConfig().deserialize({
                    title: landingPage.highlights[1].title,
                    content: landingPage.highlights[1].content,
                    iconURL: landingPage.highlights[1].iconURL
                }));
                _this.highlights.push(new LandingPageItemConfig().deserialize({
                    title: landingPage.highlights[2].title,
                    content: landingPage.highlights[2].content,
                    iconURL: landingPage.highlights[2].iconURL
                }));
                _this.actionButtons = new Array();
                _this.actionButtons.push(new ActionButtonConfig().deserialize({ text: 'Get started', route: landingPage.homeRoute }));
                _this.navigateURL = landingPage.homeRoute;
            }
            else {
                _this.router.navigate(['errorHandler/NO_LANDING/NO_LANDING']);
            }
        }));
    };
    LiveAppsLandingPageComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tcla-live-apps-landing-page',
                    template: "<tc-tibco-cloud-splash-screen fxFill\n    [title]=\"title\" \n    [subTitle]=\"subtitle\" \n    [backGroundImage]=\"backgroundImage\"\n    [topMargin]=\"topMargin\"\n    [highlights]=\"highlights\"\n    [actionButtons]=\"actionButtons\"\n    (getStartedEvent)=\"getStartedClick($event)\">\n</tc-tibco-cloud-splash-screen>",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    LiveAppsLandingPageComponent.ctorParameters = function () { return [
        { type: Router },
        { type: TcGeneralLandingPageService }
    ]; };
    LiveAppsLandingPageComponent.propDecorators = {
        uiAppId: [{ type: Input }],
        roleId: [{ type: Input }],
        getStartedEvent: [{ type: Output }]
    };
    return LiveAppsLandingPageComponent;
}());
export { LiveAppsLandingPageComponent };
if (false) {
    /** @type {?} */
    LiveAppsLandingPageComponent.prototype.uiAppId;
    /** @type {?} */
    LiveAppsLandingPageComponent.prototype.roleId;
    /** @type {?} */
    LiveAppsLandingPageComponent.prototype.getStartedEvent;
    /** @type {?} */
    LiveAppsLandingPageComponent.prototype.title;
    /** @type {?} */
    LiveAppsLandingPageComponent.prototype.subtitle;
    /** @type {?} */
    LiveAppsLandingPageComponent.prototype.backgroundImage;
    /** @type {?} */
    LiveAppsLandingPageComponent.prototype.topMargin;
    /** @type {?} */
    LiveAppsLandingPageComponent.prototype.highlights;
    /** @type {?} */
    LiveAppsLandingPageComponent.prototype.actionButtons;
    /** @type {?} */
    LiveAppsLandingPageComponent.prototype.navigateURL;
    /** @type {?} */
    LiveAppsLandingPageComponent.prototype.getStartedClick;
    /**
     * @type {?}
     * @private
     */
    LiveAppsLandingPageComponent.prototype.router;
    /**
     * @type {?}
     * @private
     */
    LiveAppsLandingPageComponent.prototype.landingPageService;
}
//# sourceMappingURL=data:application/json;base64,