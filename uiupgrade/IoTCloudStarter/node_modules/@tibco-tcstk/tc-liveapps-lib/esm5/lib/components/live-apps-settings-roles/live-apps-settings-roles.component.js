/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { TibcoCloudSettingsGeneralComponent, RoleAttribute, TcGeneralConfigService, TibcoCloudNewElementComponent } from '@tibco-tcstk/tc-core-lib';
import { ActivatedRoute } from '@angular/router';
import { MatSnackBar, MatDialog } from '@angular/material';
/**
 * Configuration of roles
 *
 * ![alt-text](../live-apps-settings-roles.png "")
 *
 * \@example <tcla-live-apps-settings-roles></tcla-live-apps-settings-roles>
 */
var LiveAppsSettingsRolesComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LiveAppsSettingsRolesComponent, _super);
    function LiveAppsSettingsRolesComponent(route, generalConfigService, snackBar, dialog) {
        var _this = _super.call(this, route, generalConfigService, snackBar) || this;
        _this.route = route;
        _this.generalConfigService = generalConfigService;
        _this.snackBar = snackBar;
        _this.dialog = dialog;
        _this.deleteRoleFunction = (/**
         * @return {?}
         */
        function () {
            _this.generalConfig.roles = _this.generalConfig.roles.filter((/**
             * @param {?} element
             * @return {?}
             */
            function (element) { return element.id !== _this.currentRole.id; }));
            _this.currentRole = undefined;
        });
        _this.selectedRole = (/**
         * @param {?} role
         * @return {?}
         */
        function (role) {
            _this.currentRole = role;
        });
        _this.createRoleFunction = (/**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var dialogRef = _this.dialog.open(TibcoCloudNewElementComponent, {
                panelClass: 'tcs-style-dialog',
                data: { resourceType: 'Role' }
            });
            dialogRef.afterClosed().subscribe((/**
             * @param {?} result
             * @return {?}
             */
            function (result) {
                if (result) {
                    /** @type {?} */
                    var newRole = new RoleAttribute().deserialize({ id: result.id, display: result.name, priority: 1 });
                    _this.generalConfig.roles.push(newRole);
                }
            }));
        });
        return _this;
    }
    /**
     * @return {?}
     */
    LiveAppsSettingsRolesComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.generalConfig = _super.prototype.getRoute.call(this).snapshot.data.generalConfigHolder;
        this.roles = _super.prototype.getRoute.call(this).snapshot.data.allRoles;
        this.groups = _super.prototype.getRoute.call(this).snapshot.data.allGroups;
        this.claims = _super.prototype.getRoute.call(this).snapshot.data.claims;
        this.sandboxId = Number(this.claims.primaryProductionSandbox.id).valueOf();
    };
    LiveAppsSettingsRolesComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tcla-live-apps-settings-roles',
                    template: "<div fxLayout=\"column\" fxFill>\n    <tc-tibco-cloud-widget-header style=\"height: 40px;\" [icon]=\"'tcs-capabilities'\" [headerText]=\"'Role Configuration'\">\n    </tc-tibco-cloud-widget-header>\n    <div fxFlex style=\"padding: 20px; overflow: hidden\" fxLayout=\"column\">\n        <div style=\"overflow: auto;\">\n            <div fxLayout=\"column\" fxFlex>\n                <p>You can configure roles by here:</p>\n                <br>\n                <!-- Role specific -->\n                <mat-accordion>\n                    <mat-expansion-panel *ngFor=\"let role of generalConfig.roles\" (opened)=\"selectedRole(role)\">\n                        <mat-expansion-panel-header>\n                            <mat-panel-title>{{role.display}}</mat-panel-title>\n                        </mat-expansion-panel-header>\n                        <div fxLayout=\"column\">\n                            <div fxLayoutGap=\"10px\">\n                                <mat-form-field fxFlex=\"20\" style=\"min-width: 100px;\">\n                                    <input matInput placeholder=\"Id\" [(ngModel)]=\"role.id\" readonly>\n                                </mat-form-field>\n                                <mat-form-field fxFlex=\"40\" style=\"min-width: 400px;\">\n                                    <input matInput placeholder=\"Display Name\" [(ngModel)]=\"role.display\">\n                                </mat-form-field>\n                                <mat-form-field fxFlex=\"40\" style=\"min-width: 400px;\">\n                                    <mat-select [disableOptionCentering]=\"true\" placeholder=\"Live Apps Group\" [(value)]=\"role.group\" [disabled]=\"role.id === 'Administrator'\">\n                                        <mat-option *ngFor=\"let group of groups.groups\" [value]=\"group.name\">\n                                            <span matTooltip=\"{{group.description}}\" matTooltipShowDelay=\"1000\"\n                                                matTooltipPosition=\"below\">{{group.name}}</span>\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n                            <div fxLayoutGap=\"5px\">\n                                <mat-form-field fxFlex=\"20\">\n                                    <input matInput type=\"number\" min=\"0\" max=\"10\" placeholder=\"Priority\" [(ngModel)]=\"role.priority\">\n                                </mat-form-field>\n                            </div>\n                        </div>\n                    </mat-expansion-panel>\n                </mat-accordion>\n            </div>\n\n        </div>\n        <div fxFlex class=\"tcs-filler-panel\"></div>\n        <div fxLayout=\"row\" fxLayoutAlign=\"end end\" fxLayoutGap=\"10px\" style=\"min-height: 50px\">\n            <button mat-raised-button color=\"secondary\" [disabled]=\"!currentRole\"\n                (click)=\"deleteRoleFunction()\">Delete</button>\n            <button mat-raised-button color=\"secondary\" (click)=\"createRoleFunction()\">New</button>\n            <button mat-raised-button color=\"primary\" (click)=\"runSaveFunction()\">Save</button>\n        </div>\n    </div>\n</div>\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    LiveAppsSettingsRolesComponent.ctorParameters = function () { return [
        { type: ActivatedRoute },
        { type: TcGeneralConfigService },
        { type: MatSnackBar },
        { type: MatDialog }
    ]; };
    return LiveAppsSettingsRolesComponent;
}(TibcoCloudSettingsGeneralComponent));
export { LiveAppsSettingsRolesComponent };
if (false) {
    /** @type {?} */
    LiveAppsSettingsRolesComponent.prototype.roles;
    /** @type {?} */
    LiveAppsSettingsRolesComponent.prototype.groups;
    /** @type {?} */
    LiveAppsSettingsRolesComponent.prototype.currentRole;
    /** @type {?} */
    LiveAppsSettingsRolesComponent.prototype.deleteRoleFunction;
    /** @type {?} */
    LiveAppsSettingsRolesComponent.prototype.selectedRole;
    /** @type {?} */
    LiveAppsSettingsRolesComponent.prototype.createRoleFunction;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsSettingsRolesComponent.prototype.route;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsSettingsRolesComponent.prototype.generalConfigService;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsSettingsRolesComponent.prototype.snackBar;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsSettingsRolesComponent.prototype.dialog;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLXNldHRpbmdzLXJvbGVzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0aWJjby10Y3N0ay90Yy1saXZlYXBwcy1saWIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9saXZlLWFwcHMtc2V0dGluZ3Mtcm9sZXMvbGl2ZS1hcHBzLXNldHRpbmdzLXJvbGVzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDbEQsT0FBTyxFQUFFLGtDQUFrQyxFQUFFLGFBQWEsRUFBRSxzQkFBc0IsRUFBRSw2QkFBNkIsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBRXBKLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSxNQUFNLG1CQUFtQixDQUFDOzs7Ozs7OztBQVMzRDtJQUtvRCwwREFBa0M7SUFPbEYsd0NBQXNCLEtBQXFCLEVBQVksb0JBQTRDLEVBQVksUUFBcUIsRUFBWSxNQUFpQjtRQUFqSyxZQUNJLGtCQUFNLEtBQUssRUFBRSxvQkFBb0IsRUFBRSxRQUFRLENBQUMsU0FDL0M7UUFGcUIsV0FBSyxHQUFMLEtBQUssQ0FBZ0I7UUFBWSwwQkFBb0IsR0FBcEIsb0JBQW9CLENBQXdCO1FBQVksY0FBUSxHQUFSLFFBQVEsQ0FBYTtRQUFZLFlBQU0sR0FBTixNQUFNLENBQVc7UUFZakssd0JBQWtCOzs7UUFBRztZQUNqQixLQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssR0FBRyxLQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxNQUFNOzs7O1lBQUMsVUFBQSxPQUFPLElBQUksT0FBQSxPQUFPLENBQUMsRUFBRSxLQUFLLEtBQUksQ0FBQyxXQUFXLENBQUMsRUFBRSxFQUFsQyxDQUFrQyxFQUFDLENBQUM7WUFDMUcsS0FBSSxDQUFDLFdBQVcsR0FBRyxTQUFTLENBQUM7UUFDakMsQ0FBQyxFQUFBO1FBRUQsa0JBQVk7Ozs7UUFBRyxVQUFDLElBQW1CO1lBQy9CLEtBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1FBQzVCLENBQUMsRUFBQTtRQUVELHdCQUFrQjs7O1FBQUc7O2dCQUNYLFNBQVMsR0FBRyxLQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyw2QkFBNkIsRUFBRTtnQkFDOUQsVUFBVSxFQUFFLGtCQUFrQjtnQkFDOUIsSUFBSSxFQUFFLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRTthQUVqQyxDQUFDO1lBRUYsU0FBUyxDQUFDLFdBQVcsRUFBRSxDQUFDLFNBQVM7Ozs7WUFBQyxVQUFBLE1BQU07Z0JBQ3BDLElBQUksTUFBTSxFQUFFOzt3QkFDRixPQUFPLEdBQUcsSUFBSSxhQUFhLEVBQUUsQ0FBQyxXQUFXLENBQUMsRUFBQyxFQUFFLEVBQUUsTUFBTSxDQUFDLEVBQUUsRUFBRSxPQUFPLEVBQUUsTUFBTSxDQUFDLElBQUksRUFBRSxRQUFRLEVBQUUsQ0FBQyxFQUFFLENBQUM7b0JBQ3BHLEtBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztpQkFDMUM7WUFDTCxDQUFDLEVBQUMsQ0FBQztRQUNQLENBQUMsRUFBQTs7SUFoQ0QsQ0FBQzs7OztJQUVELGlEQUFROzs7SUFBUjtRQUNJLElBQUksQ0FBQyxhQUFhLEdBQUcsaUJBQU0sUUFBUSxXQUFFLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQztRQUN4RSxJQUFJLENBQUMsS0FBSyxHQUFHLGlCQUFNLFFBQVEsV0FBRSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQ3JELElBQUksQ0FBQyxNQUFNLEdBQUcsaUJBQU0sUUFBUSxXQUFFLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDdkQsSUFBSSxDQUFDLE1BQU0sR0FBRyxpQkFBTSxRQUFRLFdBQUUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUNwRCxJQUFJLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLHdCQUF3QixDQUFDLEVBQUUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQy9FLENBQUM7O2dCQXRCSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLCtCQUErQjtvQkFDekMsMHVHQUF3RDs7aUJBRTNEOzs7O2dCQWRRLGNBQWM7Z0JBRnFDLHNCQUFzQjtnQkFHekUsV0FBVztnQkFBRSxTQUFTOztJQXdEL0IscUNBQUM7Q0FBQSxBQS9DRCxDQUtvRCxrQ0FBa0MsR0EwQ3JGO1NBMUNZLDhCQUE4Qjs7O0lBRXZDLCtDQUFvQjs7SUFDcEIsZ0RBQXNCOztJQUV0QixxREFBa0M7O0lBY2xDLDREQUdDOztJQUVELHNEQUVDOztJQUVELDREQWFDOzs7OztJQWxDVywrQ0FBK0I7Ozs7O0lBQUUsOERBQXNEOzs7OztJQUFFLGtEQUErQjs7Ozs7SUFBRSxnREFBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVGliY29DbG91ZFNldHRpbmdzR2VuZXJhbENvbXBvbmVudCwgUm9sZUF0dHJpYnV0ZSwgVGNHZW5lcmFsQ29uZmlnU2VydmljZSwgVGliY29DbG91ZE5ld0VsZW1lbnRDb21wb25lbnQgfSBmcm9tICdAdGliY28tdGNzdGsvdGMtY29yZS1saWInO1xuaW1wb3J0IHsgR3JvdXBzLCBSb2xlcyB9IGZyb20gJy4uLy4uL21vZGVscy90Yy1ncm91cHMtZGF0YSc7XG5pbXBvcnQgeyBBY3RpdmF0ZWRSb3V0ZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBNYXRTbmFja0JhciwgTWF0RGlhbG9nIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwnO1xuXG4vKipcbiAqIENvbmZpZ3VyYXRpb24gb2Ygcm9sZXNcbiAqXG4gKiAhW2FsdC10ZXh0XSguLi9saXZlLWFwcHMtc2V0dGluZ3Mtcm9sZXMucG5nIFwiXCIpXG4gKlxuICpAZXhhbXBsZSA8dGNsYS1saXZlLWFwcHMtc2V0dGluZ3Mtcm9sZXM+PC90Y2xhLWxpdmUtYXBwcy1zZXR0aW5ncy1yb2xlcz5cbiAqL1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0Y2xhLWxpdmUtYXBwcy1zZXR0aW5ncy1yb2xlcycsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2xpdmUtYXBwcy1zZXR0aW5ncy1yb2xlcy5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vbGl2ZS1hcHBzLXNldHRpbmdzLXJvbGVzLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBMaXZlQXBwc1NldHRpbmdzUm9sZXNDb21wb25lbnQgZXh0ZW5kcyBUaWJjb0Nsb3VkU2V0dGluZ3NHZW5lcmFsQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAgIHB1YmxpYyByb2xlczogUm9sZXM7XG4gICAgcHVibGljIGdyb3VwczogR3JvdXBzO1xuXG4gICAgcHVibGljIGN1cnJlbnRSb2xlOiBSb2xlQXR0cmlidXRlO1xuXG4gICAgY29uc3RydWN0b3IocHJvdGVjdGVkIHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZSwgcHJvdGVjdGVkIGdlbmVyYWxDb25maWdTZXJ2aWNlOiBUY0dlbmVyYWxDb25maWdTZXJ2aWNlLCBwcm90ZWN0ZWQgc25hY2tCYXI6IE1hdFNuYWNrQmFyLCBwcm90ZWN0ZWQgZGlhbG9nOiBNYXREaWFsb2cpIHtcbiAgICAgICAgc3VwZXIocm91dGUsIGdlbmVyYWxDb25maWdTZXJ2aWNlLCBzbmFja0Jhcik7XG4gICAgfVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMuZ2VuZXJhbENvbmZpZyA9IHN1cGVyLmdldFJvdXRlKCkuc25hcHNob3QuZGF0YS5nZW5lcmFsQ29uZmlnSG9sZGVyO1xuICAgICAgICB0aGlzLnJvbGVzID0gc3VwZXIuZ2V0Um91dGUoKS5zbmFwc2hvdC5kYXRhLmFsbFJvbGVzO1xuICAgICAgICB0aGlzLmdyb3VwcyA9IHN1cGVyLmdldFJvdXRlKCkuc25hcHNob3QuZGF0YS5hbGxHcm91cHM7XG4gICAgICAgIHRoaXMuY2xhaW1zID0gc3VwZXIuZ2V0Um91dGUoKS5zbmFwc2hvdC5kYXRhLmNsYWltcztcbiAgICAgICAgdGhpcy5zYW5kYm94SWQgPSBOdW1iZXIodGhpcy5jbGFpbXMucHJpbWFyeVByb2R1Y3Rpb25TYW5kYm94LmlkKS52YWx1ZU9mKCk7XG4gICAgfVxuXG4gICAgZGVsZXRlUm9sZUZ1bmN0aW9uID0gKCk6IHZvaWQgPT4ge1xuICAgICAgICB0aGlzLmdlbmVyYWxDb25maWcucm9sZXMgPSB0aGlzLmdlbmVyYWxDb25maWcucm9sZXMuZmlsdGVyKGVsZW1lbnQgPT4gZWxlbWVudC5pZCAhPT0gdGhpcy5jdXJyZW50Um9sZS5pZCk7XG4gICAgICAgIHRoaXMuY3VycmVudFJvbGUgPSB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgc2VsZWN0ZWRSb2xlID0gKHJvbGU6IFJvbGVBdHRyaWJ1dGUpOiB2b2lkID0+IHtcbiAgICAgICAgdGhpcy5jdXJyZW50Um9sZSA9IHJvbGU7XG4gICAgfVxuXG4gICAgY3JlYXRlUm9sZUZ1bmN0aW9uID0gKCk6IHZvaWQgPT4ge1xuICAgICAgICBjb25zdCBkaWFsb2dSZWYgPSB0aGlzLmRpYWxvZy5vcGVuKFRpYmNvQ2xvdWROZXdFbGVtZW50Q29tcG9uZW50LCB7XG4gICAgICAgICAgICBwYW5lbENsYXNzOiAndGNzLXN0eWxlLWRpYWxvZycsXG4gICAgICAgICAgICBkYXRhOiB7IHJlc291cmNlVHlwZTogJ1JvbGUnIH1cblxuICAgICAgICB9KTtcblxuICAgICAgICBkaWFsb2dSZWYuYWZ0ZXJDbG9zZWQoKS5zdWJzY3JpYmUocmVzdWx0ID0+IHtcbiAgICAgICAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBuZXdSb2xlID0gbmV3IFJvbGVBdHRyaWJ1dGUoKS5kZXNlcmlhbGl6ZSh7aWQ6IHJlc3VsdC5pZCwgZGlzcGxheTogcmVzdWx0Lm5hbWUsIHByaW9yaXR5OiAxIH0pO1xuICAgICAgICAgICAgICAgIHRoaXMuZ2VuZXJhbENvbmZpZy5yb2xlcy5wdXNoKG5ld1JvbGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59XG4iXX0=