/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { LiveAppsService } from '../../services/live-apps.service';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
/**
 * Renders list of cases for caserefs
 *
 * ![alt-text](../live-apps-case-list.png "Image")
 *
 * \@example <tcla-live-apps-case-list></tcla-live-apps-case-list>
 */
var LiveAppsCaseListComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LiveAppsCaseListComponent, _super);
    function LiveAppsCaseListComponent(liveapps) {
        var _this = _super.call(this) || this;
        _this.liveapps = liveapps;
        /**
         * ~event clickCase : Case clicked
         * ~payload CaseRoute : CaseRoute object output when case is clicked so calling component can route accordingly - ie. route to case
         */
        _this.clickCase = new EventEmitter();
        /**
         * ~event clearMatches : Clear Matches button clicked
         *
         */
        _this.clearMatches = new EventEmitter();
        _this.clickCaseAction = (/**
         * @param {?} caseRoute
         * @return {?}
         */
        function (caseRoute) {
            _this.clickCase.emit(caseRoute);
        });
        _this.clearMatchingCases = (/**
         * @return {?}
         */
        function () {
            _this.clearMatches.emit();
        });
        return _this;
    }
    /**
     * @return {?}
     */
    LiveAppsCaseListComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    LiveAppsCaseListComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tcla-live-apps-case-list',
                    template: "<div class=\"tcs-case-list-box\" fxLayout=\"column\" fxFill>\n  <div class=\"tcs-case-list-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div fxFlex fxLayoutAlign=\"start center\">\n      <mat-icon class=\"tcs-icon tcs-caselist-icon\" svgIcon=\"tcs-caselist-icon\"></mat-icon>\n      <div class=\"tcs-case-list-header-text\">{{headerText}}</div>\n      <div fxFlex class=\"tcs-type-filter-text\" fxLayoutAlign=\"end center\">\n        <div *ngIf=\"headerMessage\" fxLayout=\"row\">\n          [\n          <div class=\"tcs-type-filter-text-highlight\">{{headerMessage}}</div>\n          ]\n        </div>\n        <mat-icon (click)=\"clearMatchingCases()\" class=\"tcs-icon tcs-icon-active tcs-clear-cases-icon\" svgIcon=\"tcs-clear-icon\" matTooltip=\"Clear Matching Cases\" matTooltipPosition=\"left\" matTooltipShowDelay=\"1000\"></mat-icon>\n      </div>\n    </div>\n  </div>\n\n  <div style=\"height: 100%;\" fxLayout=\"row\">\n    <cdk-virtual-scroll-viewport fxFlex class=\"tcs-case-list-flow-list\" itemSize=\"56\">\n      <div class=\"tcs-case-list-item-box\" *cdkVirtualFor=\"let caseRef of caseRefs; templateCacheSize: 0; let index = index\">\n        <tcla-live-apps-case-summary #componentChildDiv [uiAppId]=\"uiAppId\" [typeBar]=\"true\" [borderCard]=\"false\" [displayType]=\"displayType\" [sandboxId]=\"sandboxId\" [caseRef]=\"caseRef\" [highlight]=\"highlight\" (clickCase)=\"clickCaseAction($event)\"></tcla-live-apps-case-summary>\n        <div class=\"tcs-case-summary-line\"></div>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </div>\n\n</div>\n",
                    styles: [".tcs-case-list-box{width:100%;height:100%;border-radius:3px;box-shadow:0 2px 8px 0 #dedede;background-color:#fff}.tcs-case-list-header{min-height:40px;height:40px;max-height:40px;border-radius:3px 3px 0 0;box-shadow:0 1px 2px 0 #dedede;padding-left:20px;padding-right:20px}.tcs-case-list-header-text{font-family:Source Sans Pro;font-size:18px;font-weight:600;font-style:normal;font-stretch:normal;line-height:1.5;letter-spacing:.3px;text-align:left;color:#000;margin-left:10px}.tcs-case-list-flow-list{margin:24px;overflow-y:auto}:host ::ng-deep .tcs-case-list-flow-list.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{width:100%}.tcs-case-list-item-box{margin:3px 5px 10px}.tcs-icon.tcs-icon-active:hover{cursor:pointer}:host ::ng-deep .tcs-icon.tcs-icon-active:hover .svg-content{fill:#0081cb}.tcs-case-summary-line{padding:0;margin:4px 5px 0;border-bottom:1.1px solid #f4f4f4}.tcs-type-filter-text{font-family:Source Sans Pro;font-size:12px;font-weight:600;font-style:normal;font-stretch:normal;line-height:1.5;letter-spacing:.3px;text-align:left;color:#000;margin-left:10px}.tcs-type-filter-text-highlight{color:#ff7800}"]
                }] }
    ];
    /** @nocollapse */
    LiveAppsCaseListComponent.ctorParameters = function () { return [
        { type: LiveAppsService }
    ]; };
    LiveAppsCaseListComponent.propDecorators = {
        headerText: [{ type: Input }],
        displayType: [{ type: Input }],
        sandboxId: [{ type: Input }],
        uiAppId: [{ type: Input }],
        caseRefs: [{ type: Input }],
        highlight: [{ type: Input }],
        headerMessage: [{ type: Input }],
        clickCase: [{ type: Output }],
        clearMatches: [{ type: Output }]
    };
    return LiveAppsCaseListComponent;
}(LiveAppsComponent));
export { LiveAppsCaseListComponent };
if (false) {
    /**
     * Text shown in menu bar
     * @type {?}
     */
    LiveAppsCaseListComponent.prototype.headerText;
    /**
     * case card format - list, card, miniCard, staticList (no click event)
     * @type {?}
     */
    LiveAppsCaseListComponent.prototype.displayType;
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsCaseListComponent.prototype.sandboxId;
    /**
     * The Application ID of the UI (should ideally be unique as it is shared state key)
     * @type {?}
     */
    LiveAppsCaseListComponent.prototype.uiAppId;
    /**
     * List of case references to display in the list
     * @type {?}
     */
    LiveAppsCaseListComponent.prototype.caseRefs;
    /**
     * Text to highlight in the list of cases (normall text that was searched)
     * @type {?}
     */
    LiveAppsCaseListComponent.prototype.highlight;
    /**
     * Filter text displayed when listing cases after selecting case type and state via report widget
     * @type {?}
     */
    LiveAppsCaseListComponent.prototype.headerMessage;
    /**
     * ~event clickCase : Case clicked
     * ~payload CaseRoute : CaseRoute object output when case is clicked so calling component can route accordingly - ie. route to case
     * @type {?}
     */
    LiveAppsCaseListComponent.prototype.clickCase;
    /**
     * ~event clearMatches : Clear Matches button clicked
     *
     * @type {?}
     */
    LiveAppsCaseListComponent.prototype.clearMatches;
    /** @type {?} */
    LiveAppsCaseListComponent.prototype.errorMessage;
    /** @type {?} */
    LiveAppsCaseListComponent.prototype.clickCaseAction;
    /** @type {?} */
    LiveAppsCaseListComponent.prototype.clearMatchingCases;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsCaseListComponent.prototype.liveapps;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLWNhc2UtbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGliY28tdGNzdGsvdGMtbGl2ZWFwcHMtbGliLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvbGl2ZS1hcHBzLWNhc2UtbGlzdC9saXZlLWFwcHMtY2FzZS1saXN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQWMsWUFBWSxFQUFFLEtBQUssRUFBcUIsTUFBTSxFQUFZLE1BQU0sZUFBZSxDQUFDO0FBRy9HLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxrQ0FBa0MsQ0FBQztBQUNqRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzREFBc0QsQ0FBQzs7Ozs7Ozs7QUFVekY7SUFNK0MscURBQWlCO0lBMkQ5RCxtQ0FBc0IsUUFBeUI7UUFBL0MsWUFDRSxpQkFBTyxTQUNSO1FBRnFCLGNBQVEsR0FBUixRQUFRLENBQWlCOzs7OztRQWxCckMsZUFBUyxHQUE0QixJQUFJLFlBQVksRUFBYSxDQUFDOzs7OztRQU1uRSxrQkFBWSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFJckMscUJBQWU7Ozs7UUFBRyxVQUFDLFNBQW9CO1lBQzVDLEtBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ2pDLENBQUMsRUFBQTtRQUVNLHdCQUFrQjs7O1FBQUc7WUFDMUIsS0FBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUMzQixDQUFDLEVBQUE7O0lBSUQsQ0FBQzs7OztJQUVELDRDQUFROzs7SUFBUjtJQUNBLENBQUM7O2dCQXRFRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLDBCQUEwQjtvQkFDcEMsNGtEQUFtRDs7aUJBRXBEOzs7O2dCQWZPLGVBQWU7Ozs2QkFxQnBCLEtBQUs7OEJBS0wsS0FBSzs0QkFLTCxLQUFLOzBCQUtMLEtBQUs7MkJBS0wsS0FBSzs0QkFLTCxLQUFLO2dDQUtMLEtBQUs7NEJBT0wsTUFBTTsrQkFNTixNQUFNOztJQW1CVCxnQ0FBQztDQUFBLEFBeEVELENBTStDLGlCQUFpQixHQWtFL0Q7U0FsRVkseUJBQXlCOzs7Ozs7SUFJcEMsK0NBQTRCOzs7OztJQUs1QixnREFBNkI7Ozs7O0lBSzdCLDhDQUEyQjs7Ozs7SUFLM0IsNENBQXlCOzs7OztJQUt6Qiw2Q0FBNEI7Ozs7O0lBSzVCLDhDQUEyQjs7Ozs7SUFLM0Isa0RBQStCOzs7Ozs7SUFPL0IsOENBQTZFOzs7Ozs7SUFNN0UsaURBQTRDOztJQUU1QyxpREFBNEI7O0lBRTVCLG9EQUVDOztJQUVELHVEQUVDOzs7OztJQUVXLDZDQUFtQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCwgT3V0cHV0LCBWaWV3Q2hpbGR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtTdWJqZWN0fSBmcm9tICdyeGpzJztcbmltcG9ydCB7bWFwLCB0YWtlLCB0YWtlVW50aWx9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7TGl2ZUFwcHNTZXJ2aWNlfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9saXZlLWFwcHMuc2VydmljZSc7XG5pbXBvcnQgeyBMaXZlQXBwc0NvbXBvbmVudCB9IGZyb20gJy4uL2xpdmUtYXBwcy1jb21wb25lbnQvbGl2ZS1hcHBzLWNvbXBvbmVudC5jb21wb25lbnQnO1xuaW1wb3J0IHtDYXNlUm91dGV9IGZyb20gJy4uLy4uL21vZGVscy9saXZlYXBwc2RhdGEnO1xuXG4vKipcbiAqIFJlbmRlcnMgbGlzdCBvZiBjYXNlcyBmb3IgY2FzZXJlZnNcbiAqXG4gKiAhW2FsdC10ZXh0XSguLi9saXZlLWFwcHMtY2FzZS1saXN0LnBuZyBcIkltYWdlXCIpXG4gKlxuICpAZXhhbXBsZSA8dGNsYS1saXZlLWFwcHMtY2FzZS1saXN0PjwvdGNsYS1saXZlLWFwcHMtY2FzZS1saXN0PlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0Y2xhLWxpdmUtYXBwcy1jYXNlLWxpc3QnLFxuICB0ZW1wbGF0ZVVybDogJy4vbGl2ZS1hcHBzLWNhc2UtbGlzdC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2xpdmUtYXBwcy1jYXNlLWxpc3QuY29tcG9uZW50LmNzcyddXG59KVxuXG5leHBvcnQgY2xhc3MgTGl2ZUFwcHNDYXNlTGlzdENvbXBvbmVudCBleHRlbmRzIExpdmVBcHBzQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgLyoqXG4gICAqIFRleHQgc2hvd24gaW4gbWVudSBiYXJcbiAgICovXG4gIEBJbnB1dCgpIGhlYWRlclRleHQ6IHN0cmluZztcblxuICAvKipcbiAgICogY2FzZSBjYXJkIGZvcm1hdCAtIGxpc3QsIGNhcmQsIG1pbmlDYXJkLCBzdGF0aWNMaXN0IChubyBjbGljayBldmVudClcbiAgICovXG4gIEBJbnB1dCgpIGRpc3BsYXlUeXBlOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIHNhbmRib3hJZCAtIHRoaXMgY29tZXMgZnJvbSBjbGFpbXMgcmVzb2x2ZXJcbiAgICovXG4gIEBJbnB1dCgpIHNhbmRib3hJZDogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBUaGUgQXBwbGljYXRpb24gSUQgb2YgdGhlIFVJIChzaG91bGQgaWRlYWxseSBiZSB1bmlxdWUgYXMgaXQgaXMgc2hhcmVkIHN0YXRlIGtleSlcbiAgICovXG4gIEBJbnB1dCgpIHVpQXBwSWQ6IHN0cmluZztcblxuICAvKipcbiAgICogTGlzdCBvZiBjYXNlIHJlZmVyZW5jZXMgdG8gZGlzcGxheSBpbiB0aGUgbGlzdFxuICAgKi9cbiAgQElucHV0KCkgY2FzZVJlZnM6IHN0cmluZ1tdO1xuXG4gIC8qKlxuICAgKiBUZXh0IHRvIGhpZ2hsaWdodCBpbiB0aGUgbGlzdCBvZiBjYXNlcyAobm9ybWFsbCB0ZXh0IHRoYXQgd2FzIHNlYXJjaGVkKVxuICAgKi9cbiAgQElucHV0KCkgaGlnaGxpZ2h0OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEZpbHRlciB0ZXh0IGRpc3BsYXllZCB3aGVuIGxpc3RpbmcgY2FzZXMgYWZ0ZXIgc2VsZWN0aW5nIGNhc2UgdHlwZSBhbmQgc3RhdGUgdmlhIHJlcG9ydCB3aWRnZXRcbiAgICovXG4gIEBJbnB1dCgpIGhlYWRlck1lc3NhZ2U6IHN0cmluZztcblxuXG4gIC8qKlxuICAgKiB+ZXZlbnQgY2xpY2tDYXNlIDogQ2FzZSBjbGlja2VkXG4gICAqIH5wYXlsb2FkIENhc2VSb3V0ZSA6IENhc2VSb3V0ZSBvYmplY3Qgb3V0cHV0IHdoZW4gY2FzZSBpcyBjbGlja2VkIHNvIGNhbGxpbmcgY29tcG9uZW50IGNhbiByb3V0ZSBhY2NvcmRpbmdseSAtIGllLiByb3V0ZSB0byBjYXNlXG4gICAqL1xuICBAT3V0cHV0KCkgY2xpY2tDYXNlOiBFdmVudEVtaXR0ZXI8Q2FzZVJvdXRlPiA9IG5ldyBFdmVudEVtaXR0ZXI8Q2FzZVJvdXRlPigpO1xuXG4gIC8qKlxuICAgKiB+ZXZlbnQgY2xlYXJNYXRjaGVzIDogQ2xlYXIgTWF0Y2hlcyBidXR0b24gY2xpY2tlZFxuICAgKlxuICAgKi9cbiAgQE91dHB1dCgpIGNsZWFyTWF0Y2hlcyA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBwdWJsaWMgZXJyb3JNZXNzYWdlOiBzdHJpbmc7XG5cbiAgcHVibGljIGNsaWNrQ2FzZUFjdGlvbiA9IChjYXNlUm91dGU6IENhc2VSb3V0ZSkgPT4ge1xuICAgIHRoaXMuY2xpY2tDYXNlLmVtaXQoY2FzZVJvdXRlKTtcbiAgfVxuXG4gIHB1YmxpYyBjbGVhck1hdGNoaW5nQ2FzZXMgPSAoKSA9PiB7XG4gICAgdGhpcy5jbGVhck1hdGNoZXMuZW1pdCgpO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGxpdmVhcHBzOiBMaXZlQXBwc1NlcnZpY2UpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gIH1cblxufVxuIl19