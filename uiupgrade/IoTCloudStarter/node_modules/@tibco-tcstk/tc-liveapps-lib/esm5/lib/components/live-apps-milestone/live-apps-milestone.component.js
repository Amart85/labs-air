/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { TcCaseStatesService } from '../../services/tc-case-states.service';
/**
 * Render a dynamic milestone SVG
 *
 * ![alt-text](../live-apps-milestone.png "Documents Component Image")
 *
 * \@example <tcla-live-apps-milestone></tcla-live-apps-milestone>
 */
var LiveAppsMilestoneComponent = /** @class */ (function () {
    function LiveAppsMilestoneComponent(caseStatesService) {
        this.caseStatesService = caseStatesService;
    }
    /**
     * @return {?}
     */
    LiveAppsMilestoneComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        // work out which section the MS trailer is (first/middle/end)
        /** @type {?} */
        var section = this.isFirst ? 'first' : (this.isLast ? 'end' : 'middle');
        // construct the icon filename
        /** @type {?} */
        var svgFileName = section + '-section-' + this.status + '.svg';
        // work out correct class
        /** @type {?} */
        var bgClass;
        if (this.status === 'completed' && this.isTerminal) {
            bgClass = 'tc-ms-' + 'completed-terminal' + '-bg';
        }
        else {
            bgClass = 'tc-ms-' + this.status + '-bg';
        }
        this.milestoneSvg = 'tcs-milestone-' + this.status + (this.isTerminal ? '-terminal' : '');
        this.sectionSVG = this.caseStatesService.getMilestoneSectionSvg(this.label, 'tc-ms-label', bgClass, svgFileName);
    };
    LiveAppsMilestoneComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tcla-live-apps-milestone',
                    template: "<div class=\"tcs-milestone-block\" fxLayout=\"row\" fxLayoutAlign=\"center start\">\n  <mat-icon class=\"tc-ms-circle-icon\" [svgIcon]=\"milestoneSvg\"></mat-icon>\n  <div [innerHtml]=\"sectionSVG\" fxLayoutAlign=\"start center\"></div>\n</div>\n",
                    styles: [".tc-ms-circle-icon{height:36px;width:36px;margin-right:-8px;margin-left:-8px}.tcs-milestone-block{margin-bottom:1px;margin-top:1px}"]
                }] }
    ];
    /** @nocollapse */
    LiveAppsMilestoneComponent.ctorParameters = function () { return [
        { type: TcCaseStatesService }
    ]; };
    LiveAppsMilestoneComponent.propDecorators = {
        isFirst: [{ type: Input }],
        isLast: [{ type: Input }],
        status: [{ type: Input }],
        label: [{ type: Input }],
        isTerminal: [{ type: Input }],
        phase: [{ type: Input }],
        previousPhase: [{ type: Input }]
    };
    return LiveAppsMilestoneComponent;
}());
export { LiveAppsMilestoneComponent };
if (false) {
    /** @type {?} */
    LiveAppsMilestoneComponent.prototype.isFirst;
    /** @type {?} */
    LiveAppsMilestoneComponent.prototype.isLast;
    /** @type {?} */
    LiveAppsMilestoneComponent.prototype.status;
    /** @type {?} */
    LiveAppsMilestoneComponent.prototype.label;
    /** @type {?} */
    LiveAppsMilestoneComponent.prototype.isTerminal;
    /** @type {?} */
    LiveAppsMilestoneComponent.prototype.phase;
    /** @type {?} */
    LiveAppsMilestoneComponent.prototype.previousPhase;
    /** @type {?} */
    LiveAppsMilestoneComponent.prototype.sectionSVG;
    /** @type {?} */
    LiveAppsMilestoneComponent.prototype.milestoneSvg;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsMilestoneComponent.prototype.caseStatesService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLW1pbGVzdG9uZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGliY28tdGNzdGsvdGMtbGl2ZWFwcHMtbGliLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvbGl2ZS1hcHBzLW1pbGVzdG9uZS9saXZlLWFwcHMtbWlsZXN0b25lLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxLQUFLLEVBQVMsTUFBTSxlQUFlLENBQUM7QUFFdkQsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0sdUNBQXVDLENBQUM7Ozs7Ozs7O0FBUzFFO0lBaUJFLG9DQUFzQixpQkFBc0M7UUFBdEMsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFxQjtJQUFJLENBQUM7Ozs7SUFFakUsNkNBQVE7OztJQUFSOzs7WUFFUSxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDOzs7WUFFbkUsV0FBVyxHQUFHLE9BQU8sR0FBRyxXQUFXLEdBQUcsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNOzs7WUFFNUQsT0FBTztRQUNYLElBQUksSUFBSSxDQUFDLE1BQU0sS0FBSyxXQUFXLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNsRCxPQUFPLEdBQUcsUUFBUSxHQUFHLG9CQUFvQixHQUFHLEtBQUssQ0FBQztTQUNuRDthQUFNO1lBQ0wsT0FBTyxHQUFHLFFBQVEsR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztTQUMxQztRQUNELElBQUksQ0FBQyxZQUFZLEdBQUcsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7UUFFMUYsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsc0JBQXNCLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxhQUFhLEVBQUUsT0FBTyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ25ILENBQUM7O2dCQWxDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLDBCQUEwQjtvQkFDcEMsa1FBQW1EOztpQkFFcEQ7Ozs7Z0JBYk8sbUJBQW1COzs7MEJBZXhCLEtBQUs7eUJBQ0wsS0FBSzt5QkFDTCxLQUFLO3dCQUNMLEtBQUs7NkJBQ0wsS0FBSzt3QkFDTCxLQUFLO2dDQUNMLEtBQUs7O0lBd0JSLGlDQUFDO0NBQUEsQUFwQ0QsSUFvQ0M7U0EvQlksMEJBQTBCOzs7SUFDckMsNkNBQTBCOztJQUMxQiw0Q0FBeUI7O0lBQ3pCLDRDQUF3Qjs7SUFDeEIsMkNBQXVCOztJQUN2QixnREFBNkI7O0lBQzdCLDJDQUF1Qjs7SUFDdkIsbURBQStCOztJQUUvQixnREFBNEI7O0lBQzVCLGtEQUE0Qjs7Ozs7SUFFaEIsdURBQWdEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIElucHV0LCBPbkluaXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtTYWZlSHRtbH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5pbXBvcnQge1RjQ2FzZVN0YXRlc1NlcnZpY2V9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3RjLWNhc2Utc3RhdGVzLnNlcnZpY2UnO1xuXG4vKipcbiAqIFJlbmRlciBhIGR5bmFtaWMgbWlsZXN0b25lIFNWR1xuICpcbiAqICFbYWx0LXRleHRdKC4uL2xpdmUtYXBwcy1taWxlc3RvbmUucG5nIFwiRG9jdW1lbnRzIENvbXBvbmVudCBJbWFnZVwiKVxuICpcbiAqQGV4YW1wbGUgPHRjbGEtbGl2ZS1hcHBzLW1pbGVzdG9uZT48L3RjbGEtbGl2ZS1hcHBzLW1pbGVzdG9uZT5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGNsYS1saXZlLWFwcHMtbWlsZXN0b25lJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xpdmUtYXBwcy1taWxlc3RvbmUuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9saXZlLWFwcHMtbWlsZXN0b25lLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBMaXZlQXBwc01pbGVzdG9uZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIGlzRmlyc3Q6IGJvb2xlYW47XG4gIEBJbnB1dCgpIGlzTGFzdDogYm9vbGVhbjtcbiAgQElucHV0KCkgc3RhdHVzOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGxhYmVsOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGlzVGVybWluYWw6IGJvb2xlYW47XG4gIEBJbnB1dCgpIHBoYXNlOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHByZXZpb3VzUGhhc2U6IHN0cmluZztcblxuICBwdWJsaWMgc2VjdGlvblNWRzogU2FmZUh0bWw7XG4gIHB1YmxpYyBtaWxlc3RvbmVTdmc6IHN0cmluZztcblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgY2FzZVN0YXRlc1NlcnZpY2U6IFRjQ2FzZVN0YXRlc1NlcnZpY2UpIHsgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIC8vIHdvcmsgb3V0IHdoaWNoIHNlY3Rpb24gdGhlIE1TIHRyYWlsZXIgaXMgKGZpcnN0L21pZGRsZS9lbmQpXG4gICAgY29uc3Qgc2VjdGlvbiA9IHRoaXMuaXNGaXJzdCA/ICdmaXJzdCcgOiAodGhpcy5pc0xhc3QgPyAnZW5kJyA6ICdtaWRkbGUnKTtcbiAgICAvLyBjb25zdHJ1Y3QgdGhlIGljb24gZmlsZW5hbWVcbiAgICBjb25zdCBzdmdGaWxlTmFtZSA9IHNlY3Rpb24gKyAnLXNlY3Rpb24tJyArIHRoaXMuc3RhdHVzICsgJy5zdmcnO1xuICAgIC8vIHdvcmsgb3V0IGNvcnJlY3QgY2xhc3NcbiAgICBsZXQgYmdDbGFzcztcbiAgICBpZiAodGhpcy5zdGF0dXMgPT09ICdjb21wbGV0ZWQnICYmIHRoaXMuaXNUZXJtaW5hbCkge1xuICAgICAgYmdDbGFzcyA9ICd0Yy1tcy0nICsgJ2NvbXBsZXRlZC10ZXJtaW5hbCcgKyAnLWJnJztcbiAgICB9IGVsc2Uge1xuICAgICAgYmdDbGFzcyA9ICd0Yy1tcy0nICsgdGhpcy5zdGF0dXMgKyAnLWJnJztcbiAgICB9XG4gICAgdGhpcy5taWxlc3RvbmVTdmcgPSAndGNzLW1pbGVzdG9uZS0nICsgdGhpcy5zdGF0dXMgKyAodGhpcy5pc1Rlcm1pbmFsID8gJy10ZXJtaW5hbCcgOiAnJyk7XG5cbiAgICB0aGlzLnNlY3Rpb25TVkcgPSB0aGlzLmNhc2VTdGF0ZXNTZXJ2aWNlLmdldE1pbGVzdG9uZVNlY3Rpb25TdmcodGhpcy5sYWJlbCwgJ3RjLW1zLWxhYmVsJywgYmdDbGFzcywgc3ZnRmlsZU5hbWUpO1xuICB9XG5cbn1cbiJdfQ==