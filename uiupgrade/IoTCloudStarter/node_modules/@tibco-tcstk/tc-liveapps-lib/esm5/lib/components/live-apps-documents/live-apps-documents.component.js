/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';
import { LiveAppsService } from '../../services/live-apps.service';
import { take, takeUntil } from 'rxjs/operators';
import { DocumentAction } from '../../models/tc-document';
import { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
import { TcDocumentService } from '../../services/tc-document.service';
import { HttpEventType } from '@angular/common/http';
/**
 * Document List and upload Component
 *
 * This Component allows to list, upload, download, Documents attached to a Case-Instance or a whole Application.
 * In the Upload Dialog the User is able to select a local File and enter a short Description.
 *
 * The Component stores also the following Data
 * - uploading User
 * - Timestamp
 * - File Size
 *
 * Document List<br>
 * ![alt-text](../live-apps-documents.png "Documents Component Image")
 * Document Upload Dialog <br>
 * ![alt-text](../Docs-Upload.png "Documents Component Image")
 *
 * \@example <tcla-live-apps-documents></tcla-live-apps-documents>
 */
var LiveAppsDocumentsComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LiveAppsDocumentsComponent, _super);
    function LiveAppsDocumentsComponent(liveapps, documentsService, dialog) {
        var _this = _super.call(this) || this;
        _this.liveapps = liveapps;
        _this.documentsService = documentsService;
        _this.dialog = dialog;
        /**
         * Whether to show the header bar in the widget - eg. favorites on home page (contains icon etc) - if off icons still appear without bar
         */
        _this.showHeader = _this.showHeader ? _this.showHeader : true;
        /**
         * Custom Document Action Event: fired when a custom action is clicked for a document (outputs the action name and a document (DocumentAction))
         */
        _this.customActionClicked = new EventEmitter();
        _this.fileToUpload = undefined;
        _this.refresh = (/**
         * @return {?}
         */
        function () {
            _this.listDocuments();
        });
        _this.customActionClick = (/**
         * @param {?} action
         * @param {?} document
         * @return {?}
         */
        function (action, document) {
            _this.customActionClicked.emit(new DocumentAction().deserialize({
                action: action,
                document: document
            }));
        });
        _this.listDocuments = (/**
         * @return {?}
         */
        function () {
            _this.documentsService.listDocuments(_this.folderType, _this.folderId, _this.sandboxId, _this.filter)
                .pipe(take(1), takeUntil(_this._destroyed$))
                .subscribe((/**
             * @param {?} documentslist
             * @return {?}
             */
            function (documentslist) {
                _this.documents = documentslist.documents;
            }), (/**
             * @param {?} error
             * @return {?}
             */
            function (error) { _this.errorMessage = 'Error retrieving case states: ' + error.error.errorMsg; }));
        });
        _this.uploadDocument = (/**
         * @param {?} doc
         * @return {?}
         */
        function (doc) {
        });
        _this.removeDocument = (/**
         * @param {?} doc
         * @return {?}
         */
        function (doc) {
            _this.documentsService.deleteDocument(_this.folderType, _this.folderId, doc.name, _this.sandboxId)
                .pipe(take(1), takeUntil(_this._destroyed$))
                .subscribe((/**
             * @param {?} val
             * @return {?}
             */
            function (val) {
                console.log(val);
                _this.refresh();
            }), (/**
             * @param {?} error
             * @return {?}
             */
            function (error) { _this.errorMessage = 'Error removing document: ' + error.errorMsg; }));
        });
        _this.viewDocument = (/**
         * @param {?} doc
         * @return {?}
         */
        function (doc) {
            /** @type {?} */
            var viewDocDialogRef = _this.dialog.open(LiveAppsDocumentViewerDialogComponent, {
                width: '75%',
                height: '75%',
                data: {
                    doc: doc,
                    folderType: _this.folderType,
                    folderId: _this.folderId,
                    sandboxId: _this.sandboxId
                }
            });
            viewDocDialogRef.afterClosed().subscribe((/**
             * @param {?} result
             * @return {?}
             */
            function (result) {
            }));
        });
        _this.downloadDocument = (/**
         * @param {?} doc
         * @return {?}
         */
        function (doc) {
            _this.documentsService.downloadDocument(_this.folderType, _this.folderId, doc.name, doc.artifactVersion, _this.sandboxId)
                .pipe(take(1), takeUntil(_this._destroyed$))
                .subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                // todo: check if this works on all browsers
                /** @type {?} */
                var downloadURL = window.URL.createObjectURL(data);
                /** @type {?} */
                var link = document.createElement('a');
                link.href = downloadURL;
                link.download = doc.name;
                link.click();
            }), (/**
             * @param {?} error
             * @return {?}
             */
            function (error) { _this.errorMessage = 'Error downloading document: ' + error.errorMsg; }));
        });
        return _this;
    }
    /**
     * @param {?} files
     * @return {?}
     */
    LiveAppsDocumentsComponent.prototype.attachFile = /**
     * @param {?} files
     * @return {?}
     */
    function (files) {
        this.uploadMessage = '';
        this.fileToUpload = files.item(0);
    };
    /**
     * @param {?} description
     * @return {?}
     */
    LiveAppsDocumentsComponent.prototype.setFileDescription = /**
     * @param {?} description
     * @return {?}
     */
    function (description) {
        this.fileDescription = description;
    };
    /**
     * @param {?} fileToUpload
     * @param {?} description
     * @return {?}
     */
    LiveAppsDocumentsComponent.prototype.uploadFile = /**
     * @param {?} fileToUpload
     * @param {?} description
     * @return {?}
     */
    function (fileToUpload, description) {
        var _this = this;
        this.fileToUpload = fileToUpload;
        this.uploadMessage = 'Uploading: ' + fileToUpload.name;
        this.fileDescription = description;
        this.uploadProgress = 0;
        if (this.fileToUpload) {
            this.documentsService.uploadDocument(this.folderType, this.folderId, this.sandboxId, this.fileToUpload, this.fileToUpload.name, this.fileDescription)
                .subscribe((/**
             * @param {?} response
             * @return {?}
             */
            function (response) {
                if (response.type === HttpEventType.UploadProgress) {
                    _this.uploadProgress = Math.round(100 * response.loaded / response.total);
                    if (_this.uploadProgress === 100) {
                        _this.fileToUpload = undefined;
                        _this.uploadMessage = 'Uploaded: ' + fileToUpload.name;
                        // api seems not to show new documents straight away sometimes - so this minimizes the chances of that if file > 1mb
                        if (fileToUpload.size > 1000000) {
                            setTimeout((/**
                             * @return {?}
                             */
                            function () { _this.refresh(); }), 2000);
                        }
                        else {
                            _this.refresh();
                        }
                        setTimeout((/**
                         * @return {?}
                         */
                        function () { _this.uploadMessage = ''; _this.uploadProgress = undefined; }), 5000);
                    }
                }
            }), (/**
             * @param {?} error
             * @return {?}
             */
            function (error) { console.log('error'); _this.errorMessage = 'Error uploading document: ' + error.errorMsg; }));
        }
    };
    /**
     * @return {?}
     */
    LiveAppsDocumentsComponent.prototype.openDialog = /**
     * @return {?}
     */
    function () {
        var _this = this;
        // only allow if upload not in progress
        if (!this.uploadProgress || this.uploadProgress === 100) {
            /** @type {?} */
            var dialogRef = this.dialog.open(LiveAppsDocumentUploadDialogComponent, {
                width: '500px',
                data: {}
            });
            dialogRef.componentInstance.fileevent.subscribe((/**
             * @param {?} $e
             * @return {?}
             */
            function ($e) {
                _this.uploadFile($e.file, $e.description);
            }));
            dialogRef.afterClosed().subscribe((/**
             * @param {?} result
             * @return {?}
             */
            function (result) {
            }));
        }
    };
    /**
     * @return {?}
     */
    LiveAppsDocumentsComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.refresh();
    };
    LiveAppsDocumentsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tcla-live-apps-documents',
                    template: "<div class=\"tcs-documents-pane\" fxFill fxLayout=\"column\">\n  <div *ngIf=\"showHeader\" class=\"tcs-documents-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div fxLayoutAlign=\"start center\">\n      <mat-icon class=\"tcs-icon tcs-icon-active tcs-collaboration-feed\" svgIcon=\"tcs-document-library\"></mat-icon>\n      <div class=\"tcs-documents-header-text\">{{folderDescription ? folderDescription : 'Documents'}}</div>\n    </div>\n    <mat-icon (click)=\"openDialog()\" [ngClass]=\"{'tcs-icon-disabled' : uploadProgress < 100}\" class=\"tcs-icon tcs-icon-active tcs-document-edit-buttons tcs-document-upload-icon\" [matTooltip]=\"(uploadProgress && uploadProgress !== 100) ? 'Please wait for existing document to upload' : 'Upload Document'\" matTooltipPosition=\"left\" matTooltipShowDelay=\"1000\" svgIcon=\"tcs-document-upload\"></mat-icon>\n  </div>\n  <div *ngIf=\"!showHeader\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n    <mat-icon style=\"margin: 5px\" [ngClass]=\"{'tcs-icon-disabled' : uploadProgress < 100}\" (click)=\"openDialog()\" class=\"tcs-icon tcs-icon-active tcs-document-edit-buttons tcs-document-upload-icon\" [matTooltip]=\"(uploadProgress && uploadProgress !== 100) ? 'Please wait for existing document to upload' : 'Upload Document'\" matTooltipPosition=\"left\" matTooltipShowDelay=\"1000\" svgIcon=\"tcs-document-upload\"></mat-icon>\n  </div>\n  <div fxLayout=\"column\" style=\"overflow: auto\">\n    <div *ngIf=\"uploadProgress\">\n      <div>{{uploadMessage}}</div>\n      <mat-progress-bar\n        mode=\"determinate\"\n        [value]=\"uploadProgress\"\n      >\n      </mat-progress-bar>\n    </div>\n    <div class=\"tcs-document-list\" fxLayout=\"column\">\n      <div *ngIf=\"documents && documents.length > 0\">\n        <div class=\"tcs-document-detail-box tcs-document\" *ngFor=\"let document of documents | orderByDate: 'lastModifiedDate'\" fxLayout=\"column\">\n          <div class=\"tcs-document-box\" fxLayoutAlign=\"space-between center\" fxLayout=\"row\" fxFlex>\n            <div fxLayoutAlign=\"start center\">\n              <mat-icon class=\"tcs-icon tcs-icon-active tcs-document-type-icon\" svgIcon=\"tcs-document-{{document.fileIcon}}\"></mat-icon>\n            </div>\n            <div class=\"tcs-document-details-text-box\" fxLayout=\"column\" fxLayoutAlign=\"center start\" fxFlex>\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFill>\n                  <div class=\"tcs-document-name-text\" matTooltip=\"{{document.name}}\" matTooltipShowDelay=\"1000\" matTooltipPosition=\"below\">{{document.name | ellipsis: 30}}</div>\n                  <div fxLayout=\"row\" fxLayoutAlign=\"end center\" fxFlex>\n                    <div class=\"tcs-document-filesize-text\">&nbsp;({{document.fileSize}})</div>\n                  </div>\n                </div>\n                <div class=\"tcs-document-comment-text\" matTooltip=\"{{document.description}}\" matTooltipShowDelay=\"1000\" matTooltipPosition=\"below\">{{document.description | ellipsis: 50}}</div>\n              <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                <div class=\"tcs-document-modified-text\">{{document.lastModifiedDate | durationSince}}</div>\n                <div *ngIf=\"document.lastModifiedByDetails\" class=\"tcs-document-modified-text\" matTooltip=\"{{document.lastModifiedByDetails.username}}\" matTooltipShowDelay=\"1000\" matTooltipPosition=\"below\">&nbsp;by {{document.lastModifiedByDetails.username | ellipsis: 40}}</div>\n              </div>\n            </div>\n\n            <div fxLayoutAlign=\"end center\">\n              <mat-icon [matMenuTriggerFor]=\"docActionMenu\" class=\"tcs-icon tcs-icon-active tcs-document-action-icon\" svgIcon=\"tcs-document-action\"></mat-icon>\n              <mat-menu #docActionMenu=\"matMenu\" class=\"tcs-icon tcs-icon-active tcs-document-action-icon\">\n                <button class=\"tcs-document-action-text\" mat-menu-item (click)=\"viewDocument(document)\">View</button>\n                <button class=\"tcs-document-action-text\" mat-menu-item (click)=\"downloadDocument(document)\">Download</button>\n                <button class=\"tcs-document-action-text\" mat-menu-item (click)=\"removeDocument(document)\">Delete</button>\n                <button *ngFor=\"let customAction of customActions\" class=\"tcs-document-action-text\" mat-menu-item (click)=\"customActionClick(customAction, document)\">{{customAction}}</button>\n              </mat-menu>\n\n\n            </div>\n          </div>\n          <div class=\"tcs-document-line\"></div>\n        </div>\n      </div>\n      <div *ngIf=\"!(documents?.length > 0)\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"10px\" style=\"margin-top: 20px;\">\n        <mat-icon [svgIcon]=\"'ic-no-docs-icon'\" style=\"height: 48px; width: 48px;\"></mat-icon>\n        <div style=\"height: 100%\" fxLayoutAlign=\"start center\">\n          <span class=\"tcs-no-item-text\">No documents found</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n",
                    styles: [".tcs-hidden-input{display:none}.tcs-small-pane{width:400px;max-width:400px;height:386px;max-height:400px;border-radius:3px;box-shadow:0 2px 4px 0 rgba(0,0,0,.33);background-color:#fff;margin:0;padding:0}.tcs-documents-pane{border-radius:3px;box-shadow:0 2px 4px 0 rgba(0,0,0,.33);background-color:#fff}.tcs-documents-header{min-height:40px;height:40px;border-radius:3px 3px 0 0;box-shadow:0 1px 2px 0 #dedede;padding-left:20px;padding-right:20px}.tcs-documents-header-text{margin-left:10px;font-family:Source Sans Pro;font-size:18px;font-weight:600;font-style:normal;font-stretch:normal;line-height:1.5;letter-spacing:.3px}.tcs-document-name-text{font-family:Source Sans Pro;font-size:16px;font-weight:600;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;color:#0081cb}.tcs-document-comment-text{font-family:Source Sans Pro;font-size:12px;font-weight:400;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;color:#727272}.tcs-document-filesize-text,.tcs-document-modified-text{font-family:Source Sans Pro;font-size:10px;font-weight:600;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:-.1px;color:#b6b6b6}.tcs-document-details-text-box{padding:2px 10px}:host ::ng-deep .tcs-icon-disabled.tcs-icon.tcs-document-edit-buttons path.svg-content{fill:#b6b6b6}:host ::ng-deep .tcs-icon-disabled.tcs-icon.tcs-document-edit-buttons:hover path.svg-content{fill:#b6b6b6;cursor:not-allowed}:host ::ng-deep .tcs-icon.tcs-document-edit-buttons:hover path.svg-content{fill:#0081cb;cursor:pointer}:host ::ng-deep .tcs-icon.tcs-document-edit-icon:hover path.svg-content{fill:#0081cb;cursor:pointer}.tcs-document-detail-box{min-height:85px;flex-shrink:0;padding-left:20px;padding-right:20px}.tcs-document-detail-box:hover{background-color:#eef0f7;-webkit-transition:background-color .5s;transition:background-color .5s}.tcs-document-line{padding:0;margin:0 20px;border-bottom:1.1px solid #f4f4f4}.tcs-document-list{overflow-y:auto}.tcs-no-item-text{font-family:Source Sans Pro;font-size:16px;font-weight:400;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;color:#b6b6b6}"]
                }] }
    ];
    /** @nocollapse */
    LiveAppsDocumentsComponent.ctorParameters = function () { return [
        { type: LiveAppsService },
        { type: TcDocumentService },
        { type: MatDialog }
    ]; };
    LiveAppsDocumentsComponent.propDecorators = {
        sandboxId: [{ type: Input }],
        folderType: [{ type: Input }],
        folderId: [{ type: Input }],
        filter: [{ type: Input }],
        folderDescription: [{ type: Input }],
        showHeader: [{ type: Input }],
        customActions: [{ type: Input }],
        customActionClicked: [{ type: Output }]
    };
    return LiveAppsDocumentsComponent;
}(LiveAppsComponent));
export { LiveAppsDocumentsComponent };
if (false) {
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsDocumentsComponent.prototype.sandboxId;
    /**
     * orgFolders' or 'caseFolders' - different API calls made according to which one this is
     * @type {?}
     */
    LiveAppsDocumentsComponent.prototype.folderType;
    /**
     * The organisation folder to store/retrieve documents
     * @type {?}
     */
    LiveAppsDocumentsComponent.prototype.folderId;
    /**
     * NOT used but would allow a search filter on documents
     * @type {?}
     */
    LiveAppsDocumentsComponent.prototype.filter;
    /**
     * header text on component (defaults to documents)
     * @type {?}
     */
    LiveAppsDocumentsComponent.prototype.folderDescription;
    /**
     * Whether to show the header bar in the widget - eg. favorites on home page (contains icon etc) - if off icons still appear without bar
     * @type {?}
     */
    LiveAppsDocumentsComponent.prototype.showHeader;
    /**
     * Custom Document Buttons (array of text)
     * @type {?}
     */
    LiveAppsDocumentsComponent.prototype.customActions;
    /**
     * Custom Document Action Event: fired when a custom action is clicked for a document (outputs the action name and a document (DocumentAction))
     * @type {?}
     */
    LiveAppsDocumentsComponent.prototype.customActionClicked;
    /** @type {?} */
    LiveAppsDocumentsComponent.prototype.errorMessage;
    /** @type {?} */
    LiveAppsDocumentsComponent.prototype.documents;
    /** @type {?} */
    LiveAppsDocumentsComponent.prototype.fileToUpload;
    /** @type {?} */
    LiveAppsDocumentsComponent.prototype.fileDescription;
    /** @type {?} */
    LiveAppsDocumentsComponent.prototype.uploadMessage;
    /** @type {?} */
    LiveAppsDocumentsComponent.prototype.uploadProgress;
    /** @type {?} */
    LiveAppsDocumentsComponent.prototype.refresh;
    /** @type {?} */
    LiveAppsDocumentsComponent.prototype.customActionClick;
    /** @type {?} */
    LiveAppsDocumentsComponent.prototype.listDocuments;
    /** @type {?} */
    LiveAppsDocumentsComponent.prototype.uploadDocument;
    /** @type {?} */
    LiveAppsDocumentsComponent.prototype.removeDocument;
    /** @type {?} */
    LiveAppsDocumentsComponent.prototype.viewDocument;
    /** @type {?} */
    LiveAppsDocumentsComponent.prototype.downloadDocument;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsDocumentsComponent.prototype.liveapps;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsDocumentsComponent.prototype.documentsService;
    /** @type {?} */
    LiveAppsDocumentsComponent.prototype.dialog;
}
var LiveAppsDocumentUploadDialogComponent = /** @class */ (function () {
    function LiveAppsDocumentUploadDialogComponent(dialogRef) {
        var _this = this;
        this.dialogRef = dialogRef;
        this.fileevent = new EventEmitter();
        this.fileToUpload = undefined;
        this.description = undefined;
        this.uploadFile = (/**
         * @return {?}
         */
        function () {
            if (_this.fileToUpload) {
                _this.fileevent.emit({ file: _this.fileToUpload, description: _this.description });
                _this.dialogRef.close();
            }
        });
    }
    /**
     * @param {?} description
     * @return {?}
     */
    LiveAppsDocumentUploadDialogComponent.prototype.setFileDescription = /**
     * @param {?} description
     * @return {?}
     */
    function (description) {
        this.description = description;
    };
    /**
     * @param {?} files
     * @return {?}
     */
    LiveAppsDocumentUploadDialogComponent.prototype.attachFile = /**
     * @param {?} files
     * @return {?}
     */
    function (files) {
        // this.uploadMessage = '';
        this.fileToUpload = files.item(0);
    };
    /**
     * @return {?}
     */
    LiveAppsDocumentUploadDialogComponent.prototype.onNoClick = /**
     * @return {?}
     */
    function () {
        this.dialogRef.close();
    };
    LiveAppsDocumentUploadDialogComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tcla-live-apps-document-upload-dialog',
                    template: "<h1 mat-dialog-title>Upload New File</h1>\n<div mat-dialog-content>\n  <form #fileUploadForm=\"ngForm\" fxFlex fxLayout=\"column\">\n    <div fxLayout=\"row\">\n      <button type=\"button\" mat-raised-button (click)=\"fileInput.click()\">Choose File To Upload</button>\n      <div *ngIf=\"fileToUpload\">{{fileToUpload.name}}</div>\n      <!-- below input is hidden and enabled by above button -->\n      <input class=\"tcs-hidden-input\" (change)=\"attachFile($event.target.files)\" #fileInput type=\"file\" id=\"file\">\n    </div>\n    <mat-form-field fxFlex>\n      <input matInput name=\"description\" type=\"text\" placeholder=\"Comments\" [(ngModel)]=\"description\"/>\n    </mat-form-field>\n\n  </form>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"uploadFile()\" type=\"submit\" [disabled]=\"!fileToUpload\">Upload</button>\n  <button mat-button (click)=\"onNoClick()\">Cancel</button>\n</div>\n",
                    styles: [".tcs-hidden-input{display:none}"]
                }] }
    ];
    /** @nocollapse */
    LiveAppsDocumentUploadDialogComponent.ctorParameters = function () { return [
        { type: MatDialogRef }
    ]; };
    LiveAppsDocumentUploadDialogComponent.propDecorators = {
        fileevent: [{ type: Output }]
    };
    return LiveAppsDocumentUploadDialogComponent;
}());
export { LiveAppsDocumentUploadDialogComponent };
if (false) {
    /** @type {?} */
    LiveAppsDocumentUploadDialogComponent.prototype.fileevent;
    /** @type {?} */
    LiveAppsDocumentUploadDialogComponent.prototype.fileToUpload;
    /** @type {?} */
    LiveAppsDocumentUploadDialogComponent.prototype.description;
    /** @type {?} */
    LiveAppsDocumentUploadDialogComponent.prototype.uploadFile;
    /** @type {?} */
    LiveAppsDocumentUploadDialogComponent.prototype.dialogRef;
}
var LiveAppsDocumentViewerDialogComponent = /** @class */ (function () {
    function LiveAppsDocumentViewerDialogComponent(dialogRef, data) {
        this.dialogRef = dialogRef;
        this.data = data;
        this.doc = this.data.doc;
        this.folderType = this.data.folderType;
        this.folderId = this.data.folderId;
        this.sandboxId = this.data.sandboxId;
    }
    /**
     * @return {?}
     */
    LiveAppsDocumentViewerDialogComponent.prototype.onNoClick = /**
     * @return {?}
     */
    function () {
        this.dialogRef.close();
    };
    LiveAppsDocumentViewerDialogComponent.decorators = [
        { type: Component, args: [{
                    selector: 'tcla-live-apps-document-viewer-dialog',
                    template: "<div fxFill fxLayout=\"column\">\n<h1 mat-dialog-title>View Document</h1>\n<div mat-dialog-content fxFlex=\"grow\" style=\"overflow: hidden\">\n  <tcla-live-apps-document-viewer [document]=\"doc\" [folderId]=\"folderId\" [folderType]=\"folderType\" [sandboxId]=\"sandboxId\"></tcla-live-apps-document-viewer>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">Close</button>\n</div>\n</div>\n",
                    styles: [".tcs-hidden-input{display:none}"]
                }] }
    ];
    /** @nocollapse */
    LiveAppsDocumentViewerDialogComponent.ctorParameters = function () { return [
        { type: MatDialogRef },
        { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
    ]; };
    return LiveAppsDocumentViewerDialogComponent;
}());
export { LiveAppsDocumentViewerDialogComponent };
if (false) {
    /** @type {?} */
    LiveAppsDocumentViewerDialogComponent.prototype.doc;
    /** @type {?} */
    LiveAppsDocumentViewerDialogComponent.prototype.folderType;
    /** @type {?} */
    LiveAppsDocumentViewerDialogComponent.prototype.folderId;
    /** @type {?} */
    LiveAppsDocumentViewerDialogComponent.prototype.sandboxId;
    /** @type {?} */
    LiveAppsDocumentViewerDialogComponent.prototype.dialogRef;
    /** @type {?} */
    LiveAppsDocumentViewerDialogComponent.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,