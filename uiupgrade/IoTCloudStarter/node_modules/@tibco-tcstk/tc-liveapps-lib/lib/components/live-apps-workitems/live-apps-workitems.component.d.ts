import { AfterViewInit, ElementRef, EventEmitter, OnInit } from '@angular/core';
import { CaseRoute } from '../../models/liveappsdata';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
import { TcComponent } from '@tibco-tcstk/tc-core-lib';
import { TcWorkitemsService } from '../../services/tc-workitems.service';
import { Workitem } from '../../models/tc-workitems';
/**
 * Workitems widget, this Component lists workitems.
 *
 *
 * ![alt-text](../live-apps-workitems.png "")
 *
 *@example <tcla-live-apps-workitems></tcla-live-apps-workitems>
 */
export declare class LiveAppsWorkitemsComponent extends LiveAppsComponent implements OnInit, AfterViewInit {
    protected workitemsService: TcWorkitemsService;
    /**
     * sandboxId - this comes from claims resolver
     */
    sandboxId: number;
    /**
     * The Application ID of the UI (should ideally be unique as it is shared state key)
     */
    uiAppId: string;
    /**
     * The list of LA Application IDs you want to handle
     */
    appIds: string[];
    /**
     * The caseRef for which to display workitems
     */
    caseRef: string;
    /**
     * case card format - list, card, miniCard, staticList (no click event)
     */
    displayType: string;
    /**
     * Whether to show the header bar in the widget - eg. favorites on home page (contains icon etc) - if off icons still appear without bar
     */
    showHeader: boolean;
    /**
     * ~event clickCase : Case clicked
     * ~payload CaseRoute : CaseRoute object output when case is clicked so calling component can route accordingly - ie. route to case
     */
    clickCase: EventEmitter<CaseRoute>;
    componentDiv: ElementRef;
    workitems: Workitem[];
    errorMessage: string;
    widget: TcComponent;
    cardWidthPct: Number;
    clickWorkitemAction: (caseRoute: CaseRoute) => void;
    refresh: () => void;
    handleDeleted: (caseRef: string, workitemId: string) => void;
    constructor(workitemsService: TcWorkitemsService);
    ngAfterViewInit(): void;
    ngOnInit(): void;
}
