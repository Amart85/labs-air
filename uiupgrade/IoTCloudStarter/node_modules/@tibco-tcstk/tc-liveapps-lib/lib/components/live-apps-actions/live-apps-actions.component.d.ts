import { EventEmitter, OnInit } from '@angular/core';
import { ProcessId } from '../../models/liveappsdata';
import { LaProcessSelection } from '../../models/tc-case-processes';
import { CustomFormDefs } from '@tibco-tcstk/tc-forms-lib';
import { LiveAppsCaseActionsComponent } from '../live-apps-case-actions/live-apps-case-actions.component';
/**
 * Not used by app but wraps action list and action execution.
 *
 *@example <tcla-live-apps-actions></tcla-live-apps-actions>
 */
export declare class LiveAppsActionsComponent implements OnInit {
    actionSelector: LiveAppsCaseActionsComponent;
    /**
     * The case reference
     */
    caseRef: string;
    /**
     * The state of the case
     */
    caseState: string;
    /**
     * sandboxId - this comes from claims resolver
     */
    sandboxId: number;
    /**
     * LA Application ID
     */
    applicationId: string;
    /**
     * The LA Application Type Id (generally 1)
     */
    typeId: string;
    /**
     * Custom Form configuration file
     */
    customFormDefs: CustomFormDefs;
    /**
     * Allow override of forms framework
     * Options: bootstrap-4 or material-design
     */
    formsFramework: string;
    /**
     * Dont show buttons for any actions that start with this string.
     * eg: '$' will remove the action $Update
     */
    actionFilter: string[];
    /**
     * ~event caseActioned : Case action starterd (process started)
     * ~payload ProcessId : processId of started process in live apps (action)
     */
    caseActioned: EventEmitter<ProcessId>;
    selectedAction: LaProcessSelection;
    handleActionCompleted: (result: ProcessId) => void;
    handleActionClicked: (action: any) => void;
    constructor();
    ngOnInit(): void;
}
