/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { take, takeUntil } from 'rxjs/operators';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
import { TcCoreCommonFunctions } from '@tibco-tcstk/tc-core-lib';
import { TcWorkitemsService } from '../../services/tc-workitems.service';
/**
 * Workitems widget, this Component lists workitems.
 *
 *
 * ![alt-text](../live-apps-workitems.png "")
 *
 * \@example <tcla-live-apps-workitems></tcla-live-apps-workitems>
 */
export class LiveAppsWorkitemsComponent extends LiveAppsComponent {
    /**
     * @param {?} workitemsService
     */
    constructor(workitemsService) {
        super();
        this.workitemsService = workitemsService;
        /**
         * case card format - list, card, miniCard, staticList (no click event)
         */
        this.displayType = this.displayType ? this.displayType : 'wiMiniCard'; // miniCard, card, list
        // miniCard, card, list
        /**
         * Whether to show the header bar in the widget - eg. favorites on home page (contains icon etc) - if off icons still appear without bar
         */
        this.showHeader = this.showHeader ? this.showHeader : true;
        /**
         * ~event clickCase : Case clicked
         * ~payload CaseRoute : CaseRoute object output when case is clicked so calling component can route accordingly - ie. route to case
         */
        this.clickCase = new EventEmitter();
        this.clickWorkitemAction = (/**
         * @param {?} caseRoute
         * @return {?}
         */
        (caseRoute) => {
            this.clickCase.emit(caseRoute);
        });
        this.refresh = (/**
         * @return {?}
         */
        () => {
            this.workitems = [];
            this.workitemsService.getWorkitems(this.sandboxId, this.appIds, this.caseRef, 0, 20)
                .pipe(take(1), takeUntil(this._destroyed$)).subscribe((/**
             * @param {?} next
             * @return {?}
             */
            next => {
                this.workitems = next || [];
            }), (/**
             * @param {?} error
             * @return {?}
             */
            error => { this.errorMessage = 'Error retrieving workitems: ' + error.error.errorMsg; }));
        });
        this.handleDeleted = (/**
         * @param {?} caseRef
         * @param {?} workitemId
         * @return {?}
         */
        (caseRef, workitemId) => {
            this.workitems.splice(this.workitems.findIndex(((/**
             * @param {?} wi
             * @return {?}
             */
            function (wi) {
                console.warn('Workitem: ', workitemId + ' for case: ' + caseRef + ' not shown as case deleted');
                return wi.header.itemContext.caseRef === caseRef;
            }))), 1);
        });
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        super.ngAfterViewInit();
        this.cardWidthPct = TcCoreCommonFunctions.calcSummaryCardPct(this.widget);
        this.containerChanges$.subscribe((/**
         * @param {?} widget
         * @return {?}
         */
        widget => {
            this.cardWidthPct = TcCoreCommonFunctions.calcSummaryCardPct(widget);
        }));
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        super.ngOnInit();
        this.refresh();
    }
}
LiveAppsWorkitemsComponent.decorators = [
    { type: Component, args: [{
                selector: 'tcla-live-apps-workitems',
                template: "<div #componentDiv class=\"tcs-case-recent-box\" fxLayout=\"column\" fxFill>\n  <div *ngIf=\"showHeader\" class=\"tcs-case-recent-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div fxLayoutAlign=\"start center\">\n      <mat-icon class=\"tcs-icon tcs-recent-icon\" svgIcon=\"tcs-recent-icon\"></mat-icon>\n      <div class=\"tcs-case-recent-header-text\">Workitems</div>\n    </div>\n  </div>\n  <div *ngIf=\"!showHeader\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n  </div>\n  <div *ngIf=\"workitems.length > 0\"class=\"tcs-case-recent-flow-list\" fxLayout=\"column\" fxLayout=\"row wrap\">\n    <div class=\"tcs-case-recent-item-box\" *ngFor=\"let workitem of workitems\" [fxFlex]=\"cardWidthPct\">\n      <tcla-live-apps-case-summary [uiAppId]=\"uiAppId\" [typeBar]=\"true\" [borderCard]=\"false\" [displayType]=\"displayType\" [sandboxId]=\"sandboxId\" [caseRef]=\"workitem.header.itemContext.caseRef\" [description]=\"workitem.header.description\" [workitemId]=\"workitem.id\" (clickCase)=\"clickWorkitemAction($event)\" (deleted)=\"handleDeleted($event, workitem.id)\"></tcla-live-apps-case-summary>\n      <div class=\"tcs-case-recent-line\"></div>\n    </div>\n  </div>\n  <div *ngIf=\"!(workitems.length > 0)\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"10px\" style=\"margin: 20px;\">\n    <mat-icon [svgIcon]=\"'ic-no-cases-icon'\" style=\"height: 48px; width: 48px;\"></mat-icon>\n    <div style=\"height: 100%\" fxLayoutAlign=\"start center\">\n      <span class=\"tcs-no-item-text\">No workitems found</span>\n    </div>\n  </div>\n</div>\n",
                styles: [".tcs-case-recent-box{border-radius:3px;box-shadow:0 2px 8px 0 #dedede;background-color:#fff}.tcs-case-recent-header{min-height:40px;border-radius:3px 3px 0 0;box-shadow:0 1px 2px 0 #dedede;padding-left:20px;padding-right:20px}.tcs-case-recent-header-text{font-family:Source Sans Pro;font-size:18px;font-weight:600;font-style:normal;font-stretch:normal;line-height:1.5;letter-spacing:.3px;text-align:left;color:#000;margin-left:10px}.tcs-case-recent-flow-list{margin:24px;overflow-y:auto}.tcs-case-recent-item-box{padding:2px}.tcs-icon.tcs-icon-active:hover{cursor:pointer}:host ::ng-deep .tcs-icon.tcs-icon-active:hover .svg-content{fill:#0081cb}.tcs-case-recent-line{padding:0;margin:4px 5px 0;border-bottom:1.1px solid #f4f4f4}.tcs-no-item-text{font-family:Source Sans Pro;font-size:16px;font-weight:400;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;color:#b6b6b6}"]
            }] }
];
/** @nocollapse */
LiveAppsWorkitemsComponent.ctorParameters = () => [
    { type: TcWorkitemsService }
];
LiveAppsWorkitemsComponent.propDecorators = {
    sandboxId: [{ type: Input }],
    uiAppId: [{ type: Input }],
    appIds: [{ type: Input }],
    caseRef: [{ type: Input }],
    displayType: [{ type: Input }],
    showHeader: [{ type: Input }],
    clickCase: [{ type: Output }],
    componentDiv: [{ type: ViewChild, args: ['componentDiv', { static: false },] }]
};
if (false) {
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsWorkitemsComponent.prototype.sandboxId;
    /**
     * The Application ID of the UI (should ideally be unique as it is shared state key)
     * @type {?}
     */
    LiveAppsWorkitemsComponent.prototype.uiAppId;
    /**
     * The list of LA Application IDs you want to handle
     * @type {?}
     */
    LiveAppsWorkitemsComponent.prototype.appIds;
    /**
     * The caseRef for which to display workitems
     * @type {?}
     */
    LiveAppsWorkitemsComponent.prototype.caseRef;
    /**
     * case card format - list, card, miniCard, staticList (no click event)
     * @type {?}
     */
    LiveAppsWorkitemsComponent.prototype.displayType;
    /**
     * Whether to show the header bar in the widget - eg. favorites on home page (contains icon etc) - if off icons still appear without bar
     * @type {?}
     */
    LiveAppsWorkitemsComponent.prototype.showHeader;
    /**
     * ~event clickCase : Case clicked
     * ~payload CaseRoute : CaseRoute object output when case is clicked so calling component can route accordingly - ie. route to case
     * @type {?}
     */
    LiveAppsWorkitemsComponent.prototype.clickCase;
    /** @type {?} */
    LiveAppsWorkitemsComponent.prototype.componentDiv;
    /** @type {?} */
    LiveAppsWorkitemsComponent.prototype.workitems;
    /** @type {?} */
    LiveAppsWorkitemsComponent.prototype.errorMessage;
    /** @type {?} */
    LiveAppsWorkitemsComponent.prototype.widget;
    /** @type {?} */
    LiveAppsWorkitemsComponent.prototype.cardWidthPct;
    /** @type {?} */
    LiveAppsWorkitemsComponent.prototype.clickWorkitemAction;
    /** @type {?} */
    LiveAppsWorkitemsComponent.prototype.refresh;
    /** @type {?} */
    LiveAppsWorkitemsComponent.prototype.handleDeleted;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsWorkitemsComponent.prototype.workitemsService;
}
//# sourceMappingURL=data:application/json;base64,