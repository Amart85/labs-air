/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild, ViewChildren } from '@angular/core';
import { CaseType } from '../../models/liveappsdata';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
import { LiveAppsCaseSearchComponent } from '../live-apps-case-search/live-apps-case-search.component';
import { LiveAppsService } from '../../services/live-apps.service';
/**
 * High Level search widget component (wraps others)
 * This Component allows to search for existing Cases and list Case Cards.
 *
 * ![alt-text](../live-apps-search-widget.png "")
 *
 * \@example <tcla-live-apps-search-widget></tcla-live-apps-search-widget>
 */
export class LiveAppsSearchWidgetComponent extends LiveAppsComponent {
    /**
     * @param {?} liveapps
     */
    constructor(liveapps) {
        super();
        this.liveapps = liveapps;
        /**
         * The fixed height of the case list results pane
         */
        this.resultsHeight = this.resultsHeight ? this.resultsHeight : '400px';
        /**
         * ~event caseSelected : Case Clicked
         * ~payload string : emits case reference when a case is clicked (so parent can navigate to case)
         */
        this.caseSelected = new EventEmitter();
        // case search
        this.matchedRefs = [];
        // handle case search results
        this.handleSearchResults = (/**
         * @param {?} data
         * @return {?}
         */
        (data) => {
            this.message = undefined;
            this.matchedRefs = data.caserefs;
            this.searchString = data.searchString;
        });
        this.handleClearMatches = (/**
         * @return {?}
         */
        () => {
            this.caseSearchComponent.clearResults();
            this.matchedRefs = [];
            this.message = undefined;
        });
        // case clicked
        this.clickCaseAction = (/**
         * @param {?} caseReference
         * @return {?}
         */
        (caseReference) => {
            this.caseSelected.emit(caseReference);
        });
        this.refresh = (/**
         * @return {?}
         */
        () => {
            if (this.caseSearchComponent) {
                this.caseSearchComponent.refresh();
            }
        });
        this.searchCasesByState = (/**
         * @param {?} stateId
         * @param {?} stateLabel
         * @param {?} appId
         * @param {?} typeId
         * @param {?} message
         * @return {?}
         */
        (stateId, stateLabel, appId, typeId, message) => {
            this.caseSearchComponent.setCaseType(new CaseType().deserialize({ applicationId: appId, id: typeId }));
            this.caseSearchComponent.setSelectedStateId(stateId, stateLabel);
            this.message = message;
            this.liveapps.caseSearchEntries('', this.sandboxId, appId, typeId, true, 0, 1000, stateId).subscribe((/**
             * @param {?} results
             * @return {?}
             */
            results => {
                this.matchedRefs = results.caserefs;
            }));
        });
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        super.ngAfterViewInit();
        this.containerChanges$.subscribe();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        super.ngOnInit();
    }
}
LiveAppsSearchWidgetComponent.decorators = [
    { type: Component, args: [{
                selector: 'tcla-live-apps-search-widget',
                template: "<div fxFill fxLayout=\"column\" #componentDiv>\n  <div fxLayout=\"row\" style=\"margin-top: 10px; margin-bottom: 10px;\">\n    <tcla-live-apps-case-search fxFlex fxLayoutAlign=\"center center\" [sandboxId]=\"sandboxId\" [appIds]=\"appIds\" (foundRefs)=\"handleSearchResults($event)\"></tcla-live-apps-case-search>\n  </div>\n  <div *ngIf=\"matchedRefs.length>0\" fxLayout=\"row\" fxLayoutAlign=\"space-around start\" [ngStyle]=\"{'min-height' : resultsHeight}\" style=\"margin-left: 50px; margin-right: 50px; margin-top: 20px; margin-bottom: 20px; height: 100%;\">\n    <tcla-live-apps-case-list #componentChildDiv fxFlex style=\"height: 100%\" [sandboxId]=\"sandboxId\" [uiAppId]=\"uiAppId\" [caseRefs]=\"matchedRefs\" [displayType]=\"widget.gtXs ? 'list' : 'miniCard'\" [headerText]=\"'Matching Cases'\" [headerMessage]=\"message\" [highlight]=\"searchString\" (clickCase)=\"clickCaseAction($event)\" (clearMatches)=\"handleClearMatches()\"></tcla-live-apps-case-list>\n    <!--tcla-live-apps-case-list #componentChildDiv fxFlex style=\"height: 100%\" [sandboxId]=\"sandboxId\" [uiAppId]=\"uiAppId\" [caseRefs]=\"matchedRefs\" [displayType]=\"'list'\" [headerText]=\"'Matching Cases'\" [headerMessage]=\"message\" [highlight]=\"searchString\" (clickCase)=\"clickCaseAction($event)\" (clearMatches)=\"handleClearMatches()\"></tcla-live-apps-case-list-->\n  </div>\n</div>\n\n",
                styles: [""]
            }] }
];
/** @nocollapse */
LiveAppsSearchWidgetComponent.ctorParameters = () => [
    { type: LiveAppsService }
];
LiveAppsSearchWidgetComponent.propDecorators = {
    sandboxId: [{ type: Input }],
    uiAppId: [{ type: Input }],
    appIds: [{ type: Input }],
    resultsHeight: [{ type: Input }],
    caseSelected: [{ type: Output }],
    caseSearchComponent: [{ type: ViewChild, args: [LiveAppsCaseSearchComponent, { static: false },] }],
    componentDiv: [{ type: ViewChild, args: ['componentDiv', { static: false },] }],
    componentDivs: [{ type: ViewChildren, args: ['componentDiv',] }]
};
if (false) {
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsSearchWidgetComponent.prototype.sandboxId;
    /**
     * The Application ID of the UI (should ideally be unique as it is shared state key)
     * @type {?}
     */
    LiveAppsSearchWidgetComponent.prototype.uiAppId;
    /**
     * The list of LA Application IDs you want to handle
     * @type {?}
     */
    LiveAppsSearchWidgetComponent.prototype.appIds;
    /**
     * The fixed height of the case list results pane
     * @type {?}
     */
    LiveAppsSearchWidgetComponent.prototype.resultsHeight;
    /**
     * ~event caseSelected : Case Clicked
     * ~payload string : emits case reference when a case is clicked (so parent can navigate to case)
     * @type {?}
     */
    LiveAppsSearchWidgetComponent.prototype.caseSelected;
    /** @type {?} */
    LiveAppsSearchWidgetComponent.prototype.caseSearchComponent;
    /** @type {?} */
    LiveAppsSearchWidgetComponent.prototype.componentDiv;
    /** @type {?} */
    LiveAppsSearchWidgetComponent.prototype.componentDivs;
    /** @type {?} */
    LiveAppsSearchWidgetComponent.prototype.widget;
    /** @type {?} */
    LiveAppsSearchWidgetComponent.prototype.matchedRefs;
    /** @type {?} */
    LiveAppsSearchWidgetComponent.prototype.searchString;
    /** @type {?} */
    LiveAppsSearchWidgetComponent.prototype.message;
    /** @type {?} */
    LiveAppsSearchWidgetComponent.prototype.handleSearchResults;
    /** @type {?} */
    LiveAppsSearchWidgetComponent.prototype.handleClearMatches;
    /** @type {?} */
    LiveAppsSearchWidgetComponent.prototype.clickCaseAction;
    /** @type {?} */
    LiveAppsSearchWidgetComponent.prototype.refresh;
    /** @type {?} */
    LiveAppsSearchWidgetComponent.prototype.searchCasesByState;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsSearchWidgetComponent.prototype.liveapps;
}
//# sourceMappingURL=data:application/json;base64,