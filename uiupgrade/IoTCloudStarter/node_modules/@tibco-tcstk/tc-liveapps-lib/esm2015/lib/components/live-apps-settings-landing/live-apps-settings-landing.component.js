/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { MatSnackBar, MatDialog } from '@angular/material';
import { TcGeneralLandingPageConfigService, TibcoCloudNewElementComponent, TibcoCloudUploadDialogComponent } from '@tibco-tcstk/tc-core-lib';
import { TcDocumentService } from '../../services/tc-document.service';
import { LandingPageConfig, LandingPageItemConfig } from '../../models/tc-live-apps-landing-page-config';
/**
 * Configuration page home
 *
 * \@example <tcla-live-apps-setting-landing></tcla-live-apps-setting-landing>
 */
export class LiveAppsSettingsLandingComponent {
    /**
     * @param {?} route
     * @param {?} generalLandingPageConfigService
     * @param {?} snackBar
     * @param {?} dialog
     * @param {?} documentsService
     */
    constructor(route, generalLandingPageConfigService, snackBar, dialog, documentsService) {
        this.route = route;
        this.generalLandingPageConfigService = generalLandingPageConfigService;
        this.snackBar = snackBar;
        this.dialog = dialog;
        this.documentsService = documentsService;
        /**
         * New Configuration
         */
        this.runNewConfiguration = (/**
         * @return {?}
         */
        () => {
            /** @type {?} */
            const dialogRef = this.dialog.open(TibcoCloudNewElementComponent, {
                width: '50%',
                height: '30%',
                maxWidth: '100vw',
                maxHeight: '100vh',
                panelClass: 'tcs-style-dialog',
                data: { resourceType: 'Landing Page' }
            });
            dialogRef.afterClosed().subscribe((/**
             * @param {?} result
             * @return {?}
             */
            result => {
                if (result) {
                    /** @type {?} */
                    const newElement = new LandingPageConfig().deserialize({
                        key: result.id,
                        description: result.name,
                        highlights: [new LandingPageItemConfig(), new LandingPageItemConfig(), new LandingPageItemConfig()]
                    });
                    this.landingPages.push(newElement);
                    this.selectedWelcomePage = newElement;
                }
            }));
        });
        /**
         * Helper to Compare Objects
         */
        this.compareObjects = (/**
         * @param {?} o1
         * @param {?} o2
         * @return {?}
         */
        (o1, o2) => {
            return o1 === o2;
        });
    }
    /**
     * @ignore
     * @return {?}
     */
    ngOnInit() {
        this.landingPagesConfig = this.route.snapshot.data.landingPagesConfigHolder;
        this.landingPages = this.landingPagesConfig.landingPage;
        this.allRoles = this.route.snapshot.data.allRolesHolder.roles.filter((/**
         * @param {?} element
         * @return {?}
         */
        element => !element.configuration));
        this.sandboxId = this.route.snapshot.data.claims.primaryProductionSandbox.id;
        this.uiAppId = this.route.snapshot.data.landingPagesConfigHolder.uiAppId;
        // If there is only one landing page selects it automatically
        if (this.landingPages.length == 1) {
            this.selectedWelcomePage = this.landingPages[0];
        }
    }
    /**
     * Save Configuration
     * @return {?}
     */
    runSaveFunction() {
        this.generalLandingPageConfigService.updateGeneralLandingPageConfig(this.sandboxId, this.uiAppId, this.landingPagesConfig, this.landingPagesConfig.id).subscribe((/**
         * @param {?} result
         * @return {?}
         */
        result => {
            this.snackBar.open('Landing Pages configuration saved', 'OK', {
                duration: 3000
            });
        }), (/**
         * @param {?} err
         * @return {?}
         */
        err => {
            this.snackBar.open('Error saving Landing Pages configuration', 'OK', {
                duration: 3000
            });
        }));
    }
    /**
     * Delete Configuration
     * @return {?}
     */
    runDeleteConfiguration() {
        /** @type {?} */
        const pages = this.landingPages;
        pages.forEach((/**
         * @param {?} element
         * @return {?}
         */
        element => {
            if (element == this.selectedWelcomePage) {
                /** @type {?} */
                const index = pages.indexOf(element, 0);
                pages.splice(index, 1);
                this.selectedWelcomePage = undefined;
            }
        }));
    }
    /**
     * @param {?} imageFormat
     * @param {?} location
     * @param {?=} index
     * @return {?}
     */
    openDialog(imageFormat, location, index) {
        /** @type {?} */
        const dialogRef = this.dialog.open(TibcoCloudUploadDialogComponent, {
            width: '500px',
            data: {
                title: 'Upload New ' + location + ' image',
                allowedExtensions: imageFormat,
                location: location,
                index: index
            }
        });
        dialogRef.componentInstance.fileevent.subscribe((/**
         * @param {?} $e
         * @return {?}
         */
        ($e) => {
            this.uploadFile($e.file, location, index);
        }));
        dialogRef.afterClosed().subscribe((/**
         * @param {?} result
         * @return {?}
         */
        result => {
        }));
    }
    /**
     * @param {?} file
     * @param {?} location
     * @param {?=} index
     * @return {?}
     */
    uploadFile(file, location, index) {
        if (file) {
            switch (location) {
                case 'background':
                    this.selectedWelcomePage.backgroundURL = file.name;
                    break;
                case 'hightlight':
                    this.selectedWelcomePage.highlights[index].iconURL = file.name;
                    break;
                default:
                    break;
            }
            this.documentsService.uploadDocument('orgFolders', this.uiAppId, this.sandboxId, file, location + '%2F' + file.name, '')
                .subscribe((/**
             * @param {?} val
             * @return {?}
             */
            val => {
                console.log("*********** DONE");
            }), (/**
             * @param {?} error
             * @return {?}
             */
            error => { console.log('error', error.errorMsg); })); //); this.errorMessage = 'Error uploading state icon: ' +
        }
    }
}
LiveAppsSettingsLandingComponent.decorators = [
    { type: Component, args: [{
                selector: 'tcla-live-apps-settings-landing',
                template: "<div fxLayout=\"column\" fxFill>\n    <tc-tibco-cloud-widget-header style=\"height: 40px;\" [icon]=\"'tcs-capabilities'\"\n        [headerText]=\"'Landing Page Configuration'\"></tc-tibco-cloud-widget-header>\n    <div fxFlex style=\"padding: 20px; overflow: hidden\" fxLayout=\"column\">\n        <div style=\"overflow: auto;\">\n            <div fxLayout=\"column\" fxFlex>\n                <p>You can manage the configuration for the landing pages here.</p>\n                <br>\n                <mat-form-field>\n                    <mat-label>Welcome Page Configuration</mat-label>\n                    <mat-select [(value)]=\"selectedWelcomePage\">\n                        <mat-option *ngFor=\"let landingPage of landingPages\" [value]=\"landingPage\">\n                            {{landingPage.key}}-{{landingPage.description}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <div *ngIf=\"selectedWelcomePage\">\n                    <div fxLayoutGap=\"10px\">\n                        <mat-form-field fxFlex=\"50\">\n                            <input matInput placeholder=\"Title\" [(ngModel)]=\"selectedWelcomePage.title\">\n                        </mat-form-field>\n                        <mat-form-field fxFlex=\"50\">\n                            <input matInput placeholder=\"Subtitle\" [(ngModel)]=\"selectedWelcomePage.subtitle\">\n                        </mat-form-field>\n                    </div>\n                    <div fxLayoutGap=\"10px\">\n                        <div fxFlex=\"50\">\n                            <mat-form-field fxFlex>\n                                <input matInput placeholder=\"Background URL\" [(ngModel)]=\"selectedWelcomePage.backgroundURL\">\n                            </mat-form-field>\n                            <mat-icon (click)=\"openDialog('.jpeg,.png', 'background')\"\n                                class=\"tcs-icon tcs-icon-active tcs-document-edit-buttons tcs-document-upload-icon\"\n                                matTooltip=\"Upload Document\"\n                                matTooltipPosition=\"left\" matTooltipShowDelay=\"1000\" svgIcon=\"tcs-document-upload\"></mat-icon>\n                        </div>\n                        <mat-form-field fxFlex=\"50\">\n                            <input matInput placeholder=\"Margin above highlight panel (px)\" type=\"number\" min=\"0\" [(ngModel)]=\"selectedWelcomePage.topMargin\">\n                        </mat-form-field>\n                    </div>\n                    <div fxLayoutGap=\"10px\">\n                        <mat-form-field fxFlex=\"50\">\n                            <mat-label>Used in roles</mat-label>\n                            <mat-select [(ngModel)]=\"selectedWelcomePage.roles\" [compareWith]=\"compareObjects\" multiple>\n                                <mat-option *ngFor=\"let role of allRoles\" [value]=\"role.id\">{{role.display}}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field fxFlex=\"50\">\n                            <input matInput placeholder=\"Home route\" [(ngModel)]=\"selectedWelcomePage.homeRoute\">\n                        </mat-form-field>\n                    </div>\n                    <div>Hightlights</div>\n                    <div *ngFor=\"let highlight of selectedWelcomePage.highlights; let i = index\" fxLayoutGap=\"10px\">\n                        <div fxFlex=\"15\">\n                            <mat-form-field fxFlex=\"80\">\n                                <input matInput placeholder=\"Icon URL\" [(ngModel)]=\"highlight.iconURL\">\n                            </mat-form-field>\n                            <mat-icon fxFlex=\"20\" (click)=\"openDialog('.svg', 'hightlight', i)\"\n                                class=\"tcs-icon tcs-icon-active tcs-document-edit-buttons tcs-document-upload-icon\" matTooltip=\"Upload Document\"\n                                matTooltipPosition=\"left\" matTooltipShowDelay=\"1000\" svgIcon=\"tcs-document-upload\"></mat-icon>\n                        </div>\n                        <mat-form-field fxFlex=\"30\">\n                            <input matInput placeholder=\"Title\" [(ngModel)]=\"highlight.title\">\n                        </mat-form-field>\n                        <mat-form-field fxFlex=\"55\">\n                            <textarea matInput placeholder=\"Subtitle\" [(ngModel)]=\"highlight.content\" cdkAutosizeMinRows=\"3\" cdkAutosizeMaxRows=\"3\"></textarea>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div fxFlex class=\"tcs-filler-panel\"></div>\n        <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"end end\" style=\"min-height: 50px\">\n            <button mat-raised-button color=\"secundary\" (click)=\"runDeleteConfiguration()\">Delete</button>\n            <button mat-raised-button color=\"secundary\" (click)=\"runNewConfiguration()\">New</button>\n            <button mat-raised-button color=\"primary\" (click)=\"runSaveFunction()\">Save</button>\n        </div>\n    </div>\n</div>",
                styles: [".tcs-document-upload-icon{margin-top:10px}"]
            }] }
];
/** @nocollapse */
LiveAppsSettingsLandingComponent.ctorParameters = () => [
    { type: ActivatedRoute },
    { type: TcGeneralLandingPageConfigService },
    { type: MatSnackBar },
    { type: MatDialog },
    { type: TcDocumentService }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    LiveAppsSettingsLandingComponent.prototype.landingPagesConfig;
    /**
     * @type {?}
     * @private
     */
    LiveAppsSettingsLandingComponent.prototype.sandboxId;
    /**
     * @type {?}
     * @private
     */
    LiveAppsSettingsLandingComponent.prototype.uiAppId;
    /** @type {?} */
    LiveAppsSettingsLandingComponent.prototype.landingPages;
    /** @type {?} */
    LiveAppsSettingsLandingComponent.prototype.selectedWelcomePage;
    /** @type {?} */
    LiveAppsSettingsLandingComponent.prototype.allRoles;
    /** @type {?} */
    LiveAppsSettingsLandingComponent.prototype.selectedRole;
    /**
     * New Configuration
     * @type {?}
     */
    LiveAppsSettingsLandingComponent.prototype.runNewConfiguration;
    /**
     * Helper to Compare Objects
     * @type {?}
     */
    LiveAppsSettingsLandingComponent.prototype.compareObjects;
    /**
     * @type {?}
     * @private
     */
    LiveAppsSettingsLandingComponent.prototype.route;
    /**
     * @type {?}
     * @private
     */
    LiveAppsSettingsLandingComponent.prototype.generalLandingPageConfigService;
    /**
     * @type {?}
     * @private
     */
    LiveAppsSettingsLandingComponent.prototype.snackBar;
    /**
     * @type {?}
     * @private
     */
    LiveAppsSettingsLandingComponent.prototype.dialog;
    /**
     * @type {?}
     * @private
     */
    LiveAppsSettingsLandingComponent.prototype.documentsService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLXNldHRpbmdzLWxhbmRpbmcuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpYmNvLXRjc3RrL3RjLWxpdmVhcHBzLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2xpdmUtYXBwcy1zZXR0aW5ncy1sYW5kaW5nL2xpdmUtYXBwcy1zZXR0aW5ncy1sYW5kaW5nLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDakQsT0FBTyxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUMzRCxPQUFPLEVBQWlCLGlDQUFpQyxFQUFFLDZCQUE2QixFQUFFLCtCQUErQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDNUosT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDdkUsT0FBTyxFQUE0QixpQkFBaUIsRUFBRSxxQkFBcUIsRUFBRSxNQUFNLCtDQUErQyxDQUFDOzs7Ozs7QUFZbkksTUFBTSxPQUFPLGdDQUFnQzs7Ozs7Ozs7SUFXekMsWUFDWSxLQUFxQixFQUNyQiwrQkFBa0UsRUFDbEUsUUFBcUIsRUFDckIsTUFBaUIsRUFDakIsZ0JBQW1DO1FBSm5DLFVBQUssR0FBTCxLQUFLLENBQWdCO1FBQ3JCLG9DQUErQixHQUEvQiwrQkFBK0IsQ0FBbUM7UUFDbEUsYUFBUSxHQUFSLFFBQVEsQ0FBYTtRQUNyQixXQUFNLEdBQU4sTUFBTSxDQUFXO1FBQ2pCLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBbUI7Ozs7UUF1RC9DLHdCQUFtQjs7O1FBQUcsR0FBUSxFQUFFOztrQkFFdEIsU0FBUyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLDZCQUE2QixFQUFFO2dCQUM5RCxLQUFLLEVBQUUs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QUEyQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBY3RpdmF0ZWRSb3V0ZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBNYXRTbmFja0JhciwgTWF0RGlhbG9nIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwnO1xuaW1wb3J0IHsgUm9sZUF0dHJpYnV0ZSwgVGNHZW5lcmFsTGFuZGluZ1BhZ2VDb25maWdTZXJ2aWNlLCBUaWJjb0Nsb3VkTmV3RWxlbWVudENvbXBvbmVudCwgVGliY29DbG91ZFVwbG9hZERpYWxvZ0NvbXBvbmVudCB9IGZyb20gJ0B0aWJjby10Y3N0ay90Yy1jb3JlLWxpYic7XG5pbXBvcnQgeyBUY0RvY3VtZW50U2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3RjLWRvY3VtZW50LnNlcnZpY2UnO1xuaW1wb3J0IHsgR2VuZXJhbExhbmRpbmdQYWdlQ29uZmlnLCBMYW5kaW5nUGFnZUNvbmZpZywgTGFuZGluZ1BhZ2VJdGVtQ29uZmlnIH0gZnJvbSAnLi4vLi4vbW9kZWxzL3RjLWxpdmUtYXBwcy1sYW5kaW5nLXBhZ2UtY29uZmlnJztcblxuLyoqXG4gKiBDb25maWd1cmF0aW9uIHBhZ2UgaG9tZVxuICpcbiAqQGV4YW1wbGUgPHRjbGEtbGl2ZS1hcHBzLXNldHRpbmctbGFuZGluZz48L3RjbGEtbGl2ZS1hcHBzLXNldHRpbmctbGFuZGluZz5cbiAqL1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0Y2xhLWxpdmUtYXBwcy1zZXR0aW5ncy1sYW5kaW5nJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vbGl2ZS1hcHBzLXNldHRpbmdzLWxhbmRpbmcuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2xpdmUtYXBwcy1zZXR0aW5ncy1sYW5kaW5nLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBMaXZlQXBwc1NldHRpbmdzTGFuZGluZ0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgICBwcml2YXRlIGxhbmRpbmdQYWdlc0NvbmZpZzogR2VuZXJhbExhbmRpbmdQYWdlQ29uZmlnO1xuICAgIHByaXZhdGUgc2FuZGJveElkOiBudW1iZXI7XG4gICAgcHJpdmF0ZSB1aUFwcElkOiBzdHJpbmc7XG5cbiAgICBwdWJsaWMgbGFuZGluZ1BhZ2VzOiBMYW5kaW5nUGFnZUNvbmZpZ1tdO1xuICAgIHB1YmxpYyBzZWxlY3RlZFdlbGNvbWVQYWdlOiBMYW5kaW5nUGFnZUNvbmZpZztcbiAgICBwdWJsaWMgYWxsUm9sZXM6IFJvbGVBdHRyaWJ1dGVbXTtcbiAgICBwdWJsaWMgc2VsZWN0ZWRSb2xlOiBSb2xlQXR0cmlidXRlW107XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHJpdmF0ZSByb3V0ZTogQWN0aXZhdGVkUm91dGUsXG4gICAgICAgIHByaXZhdGUgZ2VuZXJhbExhbmRpbmdQYWdlQ29uZmlnU2VydmljZTogVGNHZW5lcmFsTGFuZGluZ1BhZ2VDb25maWdTZXJ2aWNlLFxuICAgICAgICBwcml2YXRlIHNuYWNrQmFyOiBNYXRTbmFja0JhcixcbiAgICAgICAgcHJpdmF0ZSBkaWFsb2c6IE1hdERpYWxvZyxcbiAgICAgICAgcHJpdmF0ZSBkb2N1bWVudHNTZXJ2aWNlOiBUY0RvY3VtZW50U2VydmljZVxuICAgICkgeyB9XG5cbiAgICAvKipcbiAgICAqIEBpZ25vcmVcbiAgICAqL1xuICAgIG5nT25Jbml0KCkgeyAgICAgIFxuICAgICAgICB0aGlzLmxhbmRpbmdQYWdlc0NvbmZpZyA9IHRoaXMucm91dGUuc25hcHNob3QuZGF0YS5sYW5kaW5nUGFnZXNDb25maWdIb2xkZXI7XG4gICAgICAgIHRoaXMubGFuZGluZ1BhZ2VzID0gdGhpcy5sYW5kaW5nUGFnZXNDb25maWcubGFuZGluZ1BhZ2U7XG4gICAgICAgIHRoaXMuYWxsUm9sZXMgPSB0aGlzLnJvdXRlLnNuYXBzaG90LmRhdGEuYWxsUm9sZXNIb2xkZXIucm9sZXMuZmlsdGVyKGVsZW1lbnQgPT4gIWVsZW1lbnQuY29uZmlndXJhdGlvbik7XG5cbiAgICAgICAgdGhpcy5zYW5kYm94SWQgPSB0aGlzLnJvdXRlLnNuYXBzaG90LmRhdGEuY2xhaW1zLnByaW1hcnlQcm9kdWN0aW9uU2FuZGJveC5pZDtcbiAgICAgICAgdGhpcy51aUFwcElkID0gdGhpcy5yb3V0ZS5zbmFwc2hvdC5kYXRhLmxhbmRpbmdQYWdlc0NvbmZpZ0hvbGRlci51aUFwcElkO1xuXG4gICAgICAgIC8vIElmIHRoZXJlIGlzIG9ubHkgb25lIGxhbmRpbmcgcGFnZSBzZWxlY3RzIGl0IGF1dG9tYXRpY2FsbHlcbiAgICAgICAgaWYgKHRoaXMubGFuZGluZ1BhZ2VzLmxlbmd0aCA9PSAxKSB7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdGVkV2VsY29tZVBhZ2UgPSB0aGlzLmxhbmRpbmdQYWdlc1swXTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNhdmUgQ29uZmlndXJhdGlvblxuICAgICAqL1xuICAgIHJ1blNhdmVGdW5jdGlvbigpe1xuICAgICAgICB0aGlzLmdlbmVyYWxMYW5kaW5nUGFnZUNvbmZpZ1NlcnZpY2UudXBkYXRlR2VuZXJhbExhbmRpbmdQYWdlQ29uZmlnKHRoaXMuc2FuZGJveElkLCB0aGlzLnVpQXBwSWQsIHRoaXMubGFuZGluZ1BhZ2VzQ29uZmlnLCB0aGlzLmxhbmRpbmdQYWdlc0NvbmZpZy5pZCkuc3Vic2NyaWJlKFxuICAgICAgICAgICAgcmVzdWx0ID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnNuYWNrQmFyLm9wZW4oJ0xhbmRpbmcgUGFnZXMgY29uZmlndXJhdGlvbiBzYXZlZCcsICdPSycsIHtcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDMwMDBcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnIgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuc25hY2tCYXIub3BlbignRXJyb3Igc2F2aW5nIExhbmRpbmcgUGFnZXMgY29uZmlndXJhdGlvbicsICdPSycsIHtcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDMwMDBcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBEZWxldGUgQ29uZmlndXJhdGlvblxuICAgICAqL1xuICAgIHJ1bkRlbGV0ZUNvbmZpZ3VyYXRpb24oKXtcbiAgICAgICAgY29uc3QgcGFnZXMgPSB0aGlzLmxhbmRpbmdQYWdlcztcbiAgICAgICAgcGFnZXMuZm9yRWFjaChlbGVtZW50ID0+IHtcbiAgICAgICAgICAgIGlmIChlbGVtZW50ID09IHRoaXMuc2VsZWN0ZWRXZWxjb21lUGFnZSl7XG4gICAgICAgICAgICAgICAgY29uc3QgaW5kZXggPSBwYWdlcy5pbmRleE9mKGVsZW1lbnQsIDApO1xuICAgICAgICAgICAgICAgIHBhZ2VzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZFdlbGNvbWVQYWdlID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBOZXcgQ29uZmlndXJhdGlvblxuICAgICAqL1xuICAgIHJ1bk5ld0NvbmZpZ3VyYXRpb24gPSAoKTp2b2lkID0+IHtcblxuICAgICAgICBjb25zdCBkaWFsb2dSZWYgPSB0aGlzLmRpYWxvZy5vcGVuKFRpYmNvQ2xvdWROZXdFbGVtZW50Q29tcG9uZW50LCB7XG4gICAgICAgICAgICB3aWR0aDogJzUwJScsXG4gICAgICAgICAgICBoZWlnaHQ6ICczMCUnLFxuICAgICAgICAgICAgbWF4V2lkdGg6ICcxMDB2dycsXG4gICAgICAgICAgICBtYXhIZWlnaHQ6ICcxMDB2aCcsXG4gICAgICAgICAgICBwYW5lbENsYXNzOiAndGNzLXN0eWxlLWRpYWxvZycsXG4gICAgICAgICAgICBkYXRhOiB7IHJlc291cmNlVHlwZTogJ0xhbmRpbmcgUGFnZScgfVxuICAgICAgICB9KTtcblxuICAgICAgICBkaWFsb2dSZWYuYWZ0ZXJDbG9zZWQoKS5zdWJzY3JpYmUocmVzdWx0ID0+IHtcbiAgICAgICAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBuZXdFbGVtZW50ID0gbmV3IExhbmRpbmdQYWdlQ29uZmlnKCkuZGVzZXJpYWxpemUoe1xuICAgICAgICAgICAgICAgICAgICBrZXk6IHJlc3VsdC5pZCxcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IHJlc3VsdC5uYW1lLFxuICAgICAgICAgICAgICAgICAgICBoaWdobGlnaHRzOiBbbmV3IExhbmRpbmdQYWdlSXRlbUNvbmZpZygpLCBuZXcgTGFuZGluZ1BhZ2VJdGVtQ29uZmlnKCksIG5ldyBMYW5kaW5nUGFnZUl0ZW1Db25maWcoKV1cbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIHRoaXMubGFuZGluZ1BhZ2VzLnB1c2gobmV3RWxlbWVudCk7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZFdlbGNvbWVQYWdlID0gbmV3RWxlbWVudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogSGVscGVyIHRvIENvbXBhcmUgT2JqZWN0c1xuICAgICAqL1xuICAgIGNvbXBhcmVPYmplY3RzID0gKG8xOiBzdHJpbmcsIG8yOiBzdHJpbmcpOiBib29sZWFuID0+IHtcbiAgICAgICAgcmV0dXJuIG8xID09PSBvMjtcbiAgICB9XG5cbiAgICBwdWJsaWMgb3BlbkRpYWxvZyhpbWFnZUZvcm1hdDogc3RyaW5nLCBsb2NhdGlvbjogc3RyaW5nLCBpbmRleD86IG51bWJlcik6IHZvaWQge1xuXG4gICAgICAgIGNvbnN0IGRpYWxvZ1JlZiA9IHRoaXMuZGlhbG9nLm9wZW4oVGliY29DbG91ZFVwbG9hZERpYWxvZ0NvbXBvbmVudCwge1xuICAgICAgICAgICAgd2lkdGg6ICc1MDBweCcsXG4gICAgICAgICAgICBkYXRhOiB7IFxuICAgICAgICAgICAgICAgIHRpdGxlOiAnVXBsb2FkIE5ldyAnICsgbG9jYXRpb24gKyAnIGltYWdlJyxcbiAgICAgICAgICAgICAgICBhbGxvd2VkRXh0ZW5zaW9uczogaW1hZ2VGb3JtYXQsXG4gICAgICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICAgICAgICAgIGluZGV4OiBpbmRleFxuICAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgZGlhbG9nUmVmLmNvbXBvbmVudEluc3RhbmNlLmZpbGVldmVudC5zdWJzY3JpYmUoKCRlKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnVwbG9hZEZpbGUoJGUuZmlsZSwgbG9jYXRpb24sIGluZGV4KTtcbiAgICAgICAgfSlcblxuICAgICAgICBkaWFsb2dSZWYuYWZ0ZXJDbG9zZWQoKS5zdWJzY3JpYmUocmVzdWx0ID0+IHtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHVibGljIHVwbG9hZEZpbGUoZmlsZTogRmlsZSwgbG9jYXRpb246IHN0cmluZywgaW5kZXg/OiBudW1iZXIpIHtcbiAgICAgICAgaWYgKGZpbGUpIHtcbiAgICAgICAgICAgIHN3aXRjaCAobG9jYXRpb24pIHtcbiAgICAgICAgICAgICAgICBjYXNlICdiYWNrZ3JvdW5kJzpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZFdlbGNvbWVQYWdlLmJhY2tncm91bmRVUkwgPSBmaWxlLm5hbWU7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ2hpZ2h0bGlnaHQnOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkV2VsY29tZVBhZ2UuaGlnaGxpZ2h0c1tpbmRleF0uaWNvblVSTCA9IGZpbGUubmFtZTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHRoaXMuZG9jdW1lbnRzU2VydmljZS51cGxvYWREb2N1bWVudCgnb3JnRm9sZGVycycsIHRoaXMudWlBcHBJZCwgdGhpcy5zYW5kYm94SWQsIGZpbGUsIGxvY2F0aW9uICsgJyUyRicgKyBmaWxlLm5hbWUsICcnKVxuICAgICAgICAgICAgICAgIC5zdWJzY3JpYmUoXG4gICAgICAgICAgICAgICAgICAgIHZhbCA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIioqKioqKioqKioqIERPTkVcIilcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZXJyb3IgPT4geyBjb25zb2xlLmxvZygnZXJyb3InLCBlcnJvci5lcnJvck1zZykgfSk7IC8vKTsgdGhpcy5lcnJvck1lc3NhZ2UgPSAnRXJyb3IgdXBsb2FkaW5nIHN0YXRlIGljb246ICcgK1xuICAgICAgICB9XG4gICAgfVxuXG5cbn1cbiJdfQ==