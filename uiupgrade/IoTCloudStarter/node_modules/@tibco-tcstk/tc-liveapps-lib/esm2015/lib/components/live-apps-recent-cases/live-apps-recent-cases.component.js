/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { LiveAppsService } from '../../services/live-apps.service';
import { take, takeUntil } from 'rxjs/operators';
import { LiveAppsComponent } from '../live-apps-component/live-apps-component.component';
import { TcCoreCommonFunctions } from '@tibco-tcstk/tc-core-lib';
/**
 * Recent cases widget, this Component list recent visited Cases.
 *
 * ![alt-text](../live-apps-recent-cases.png "")
 *
 * \@example <tcla-live-apps-recent-cases></tcla-live-apps-recent-cases>
 */
export class LiveAppsRecentCasesComponent extends LiveAppsComponent {
    /**
     * @param {?} liveapps
     */
    constructor(liveapps) {
        super();
        this.liveapps = liveapps;
        /**
         * case card format - list, card, miniCard, staticList (no click event)
         */
        this.displayType = this.displayType ? this.displayType : 'miniCard'; // miniCard, card, list
        // miniCard, card, list
        /**
         * Whether to show the header bar in the widget - eg. favorites on home page (contains icon etc) - if off icons still appear without bar
         */
        this.showHeader = this.showHeader ? this.showHeader : true;
        /**
         * ~event clickCase : Case clicked
         * ~payload CaseRoute : CaseRoute object output when case is clicked so calling component can route accordingly - ie. route to case
         */
        this.clickCase = new EventEmitter();
        this.clickCaseAction = (/**
         * @param {?} caseRoute
         * @return {?}
         */
        (caseRoute) => {
            this.clickCase.emit(caseRoute);
        });
        this.refresh = (/**
         * @return {?}
         */
        () => {
            this.recentCases = [];
            this.liveapps.getRecentCases(this.uiAppId, this.sandboxId)
                .pipe(take(1), takeUntil(this._destroyed$)).subscribe((/**
             * @param {?} next
             * @return {?}
             */
            next => {
                this.recentCases = next.caseRefs || [];
            }), (/**
             * @param {?} error
             * @return {?}
             */
            error => { this.errorMessage = 'Error retrieving recent cases: ' + error.error.errorMsg; }));
        });
        this.clearRecentCases = (/**
         * @return {?}
         */
        () => {
            // -1 will clear recent cases
            this.liveapps.setRecentCase('-1', this.uiAppId, this.sandboxId);
            this.recentCases = [];
        });
        this.handleDeleted = (/**
         * @param {?} caseRef
         * @return {?}
         */
        (caseRef) => {
            this.recentCases.splice(this.recentCases.indexOf(caseRef), 1);
            this.liveapps.unsetRecentCase(caseRef, this.uiAppId, this.sandboxId);
        });
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        super.ngAfterViewInit();
        this.cardWidthPct = TcCoreCommonFunctions.calcSummaryCardPct(this.widget);
        this.containerChanges$.subscribe((/**
         * @param {?} widget
         * @return {?}
         */
        widget => {
            this.cardWidthPct = TcCoreCommonFunctions.calcSummaryCardPct(widget);
        }));
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        super.ngOnInit();
        this.refresh();
    }
}
LiveAppsRecentCasesComponent.decorators = [
    { type: Component, args: [{
                selector: 'tcla-live-apps-recent-cases',
                template: "<div #componentDiv class=\"tcs-case-recent-box\" fxLayout=\"column\" fxFill>\n  <div *ngIf=\"showHeader\" class=\"tcs-case-recent-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div fxLayoutAlign=\"start center\">\n      <mat-icon class=\"tcs-icon tcs-recent-icon\" svgIcon=\"tcs-recent-icon\"></mat-icon>\n      <div class=\"tcs-case-recent-header-text\">Recent</div>\n    </div>\n    <mat-icon (click)=\"clearRecentCases()\" class=\"tcs-icon tcs-icon-active tcs-clear-recent-icon\" svgIcon=\"tcs-clear-icon\" matTooltip=\"Clear Recent Cases\" matTooltipPosition=\"left\" matTooltipShowDelay=\"1000\"></mat-icon>\n  </div>\n  <div *ngIf=\"!showHeader\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n    <mat-icon style=\"margin: 5px\" (click)=\"clearRecentCases()\" class=\"tcs-icon tcs-icon-active tcs-clear-recent-icon\" svgIcon=\"tcs-clear-icon\" matTooltip=\"Clear Recent Cases\" matTooltipPosition=\"left\" matTooltipShowDelay=\"1000\"></mat-icon>\n  </div>\n  <div *ngIf=\"recentCases.length > 0\"class=\"tcs-case-recent-flow-list\" fxLayout=\"column\" fxLayout=\"row wrap\">\n    <div class=\"tcs-case-recent-item-box\" *ngFor=\"let case of recentCases\" [fxFlex]=\"cardWidthPct\">\n      <tcla-live-apps-case-summary [uiAppId]=\"uiAppId\" [typeBar]=\"true\" [borderCard]=\"false\" [displayType]=\"displayType\" [sandboxId]=\"sandboxId\" [caseRef]=\"case\" (clickCase)=\"clickCaseAction($event)\" (deleted)=\"handleDeleted($event)\"></tcla-live-apps-case-summary>\n      <div class=\"tcs-case-recent-line\"></div>\n    </div>\n  </div>\n  <div *ngIf=\"!(recentCases.length > 0)\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"10px\" style=\"margin: 20px;\">\n    <mat-icon [svgIcon]=\"'ic-no-cases-icon'\" style=\"height: 48px; width: 48px;\"></mat-icon>\n    <div style=\"height: 100%\" fxLayoutAlign=\"start center\">\n      <span class=\"tcs-no-item-text\">No cases found</span>\n    </div>\n  </div>\n</div>\n",
                styles: [".tcs-case-recent-box{border-radius:3px;box-shadow:0 2px 8px 0 #dedede;background-color:#fff}.tcs-case-recent-header{min-height:40px;border-radius:3px 3px 0 0;box-shadow:0 1px 2px 0 #dedede;padding-left:20px;padding-right:20px}.tcs-case-recent-header-text{font-family:Source Sans Pro;font-size:18px;font-weight:600;font-style:normal;font-stretch:normal;line-height:1.5;letter-spacing:.3px;text-align:left;color:#000;margin-left:10px}.tcs-case-recent-flow-list{margin:10px;overflow-y:auto;padding:4px}.tcs-case-recent-item-box{padding:5px}.tcs-icon.tcs-icon-active:hover{cursor:pointer}:host ::ng-deep .tcs-icon.tcs-icon-active:hover .svg-content{fill:#0081cb}.tcs-case-recent-line{padding:0;margin:4px 5px 0;border-bottom:1.1px solid #f4f4f4}.tcs-no-item-text{font-family:Source Sans Pro;font-size:16px;font-weight:400;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;color:#b6b6b6}"]
            }] }
];
/** @nocollapse */
LiveAppsRecentCasesComponent.ctorParameters = () => [
    { type: LiveAppsService }
];
LiveAppsRecentCasesComponent.propDecorators = {
    sandboxId: [{ type: Input }],
    uiAppId: [{ type: Input }],
    displayType: [{ type: Input }],
    showHeader: [{ type: Input }],
    clickCase: [{ type: Output }],
    componentDiv: [{ type: ViewChild, args: ['componentDiv', { static: false },] }]
};
if (false) {
    /**
     * sandboxId - this comes from claims resolver
     * @type {?}
     */
    LiveAppsRecentCasesComponent.prototype.sandboxId;
    /**
     * The Application ID of the UI (should ideally be unique as it is shared state key)
     * @type {?}
     */
    LiveAppsRecentCasesComponent.prototype.uiAppId;
    /**
     * case card format - list, card, miniCard, staticList (no click event)
     * @type {?}
     */
    LiveAppsRecentCasesComponent.prototype.displayType;
    /**
     * Whether to show the header bar in the widget - eg. favorites on home page (contains icon etc) - if off icons still appear without bar
     * @type {?}
     */
    LiveAppsRecentCasesComponent.prototype.showHeader;
    /**
     * ~event clickCase : Case clicked
     * ~payload CaseRoute : CaseRoute object output when case is clicked so calling component can route accordingly - ie. route to case
     * @type {?}
     */
    LiveAppsRecentCasesComponent.prototype.clickCase;
    /** @type {?} */
    LiveAppsRecentCasesComponent.prototype.componentDiv;
    /** @type {?} */
    LiveAppsRecentCasesComponent.prototype.recentCases;
    /** @type {?} */
    LiveAppsRecentCasesComponent.prototype.errorMessage;
    /** @type {?} */
    LiveAppsRecentCasesComponent.prototype.widget;
    /** @type {?} */
    LiveAppsRecentCasesComponent.prototype.cardWidthPct;
    /** @type {?} */
    LiveAppsRecentCasesComponent.prototype.clickCaseAction;
    /** @type {?} */
    LiveAppsRecentCasesComponent.prototype.refresh;
    /** @type {?} */
    LiveAppsRecentCasesComponent.prototype.clearRecentCases;
    /** @type {?} */
    LiveAppsRecentCasesComponent.prototype.handleDeleted;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsRecentCasesComponent.prototype.liveapps;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLXJlY2VudC1jYXNlcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGliY28tdGNzdGsvdGMtbGl2ZWFwcHMtbGliLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvbGl2ZS1hcHBzLXJlY2VudC1jYXNlcy9saXZlLWFwcHMtcmVjZW50LWNhc2VzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUdMLFNBQVMsRUFDVCxVQUFVLEVBQ1YsWUFBWSxFQUNaLEtBQUssRUFJTCxNQUFNLEVBQ04sU0FBUyxFQUNWLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxrQ0FBa0MsQ0FBQztBQUVqRSxPQUFPLEVBQU0sSUFBSSxFQUFFLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRXBELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHNEQUFzRCxDQUFDO0FBQ3ZGLE9BQU8sRUFBYyxxQkFBcUIsRUFBQyxNQUFNLDBCQUEwQixDQUFDOzs7Ozs7OztBQWM1RSxNQUFNLE9BQU8sNEJBQTZCLFNBQVEsaUJBQWlCOzs7O0lBNERqRSxZQUFzQixRQUF5QjtRQUM3QyxLQUFLLEVBQUUsQ0FBQztRQURZLGFBQVEsR0FBUixRQUFRLENBQWlCOzs7O1FBOUN0QyxnQkFBVyxHQUFXLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLHVCQUF1Qjs7Ozs7UUFJL0YsZUFBVSxHQUFZLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQzs7Ozs7UUFNOUQsY0FBUyxHQUE0QixJQUFJLFlBQVksRUFBYSxDQUFDO1FBU3RFLG9CQUFlOzs7O1FBQUcsQ0FBQyxTQUFvQixFQUFFLEVBQUU7WUFDaEQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDakMsQ0FBQyxFQUFBO1FBRU0sWUFBTzs7O1FBQUcsR0FBRyxFQUFFO1lBQ3BCLElBQUksQ0FBQyxXQUFXLEdBQUcsRUFBRSxDQUFDO1lBQ3RCLElBQUksQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQztpQkFDdkQsSUFBSSxDQUNILElBQUksQ0FBQyxDQUFDLENBQUMsRUFDUCxTQUFTLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUM1QixDQUFDLFNBQVM7Ozs7WUFDWCxJQUFJLENBQUMsRUFBRTtnQkFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxRQUFRLElBQUksRUFBRSxDQUFDO1lBQ3pDLENBQUM7Ozs7WUFBRSxLQUFLLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxZQUFZLEdBQUcsaUNBQWlDLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQztRQUNuRyxDQUFDLEVBQUE7UUFFTSxxQkFBZ0I7OztRQUFHLEdBQUcsRUFBRTtZQUM3Qiw2QkFBNkI7WUFDN0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQ2hFLElBQUksQ0FBQyxXQUFXLEdBQUcsRUFBRSxDQUFDO1FBQ3hCLENBQUMsRUFBQTtRQUVNLGtCQUFhOzs7O1FBQUcsQ0FBQyxPQUFlLEVBQUUsRUFBRTtZQUN6QyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUM5RCxJQUFJLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDdkUsQ0FBQyxFQUFBO0lBSUQsQ0FBQzs7OztJQUdELGVBQWU7UUFDYixLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDeEIsSUFBSSxDQUFDLFlBQVksR0FBRyxxQkFBcUIsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDMUUsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFNBQVM7Ozs7UUFBQyxNQUFNLENBQUMsRUFBRTtZQUN4QyxJQUFJLENBQUMsWUFBWSxHQUFHLHFCQUFxQixDQUFDLGtCQUFrQixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZFLENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDakIsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ2pCLENBQUM7OztZQWpGRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLDZCQUE2QjtnQkFDdkMsdTdEQUFzRDs7YUFFdkQ7Ozs7WUFsQk8sZUFBZTs7O3dCQXVCcEIsS0FBSztzQkFLTCxLQUFLOzBCQUtMLEtBQUs7eUJBSUwsS0FBSzt3QkFNTCxNQUFNOzJCQUVOLFNBQVMsU0FBQyxjQUFjLEVBQUUsRUFBQyxNQUFNLEVBQUUsS0FBSyxFQUFDOzs7Ozs7O0lBdEIxQyxpREFBMkI7Ozs7O0lBSzNCLCtDQUF5Qjs7Ozs7SUFLekIsbURBQWdGOzs7OztJQUloRixrREFBd0U7Ozs7OztJQU14RSxpREFBNkU7O0lBRTdFLG9EQUFxRTs7SUFFckUsbURBQTZCOztJQUM3QixvREFBNEI7O0lBQzVCLDhDQUEyQjs7SUFDM0Isb0RBQTRCOztJQUU1Qix1REFFQzs7SUFFRCwrQ0FVQzs7SUFFRCx3REFJQzs7SUFFRCxxREFHQzs7Ozs7SUFFVyxnREFBbUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBBZnRlclZpZXdDaGVja2VkLFxuICBBZnRlclZpZXdJbml0LFxuICBDb21wb25lbnQsXG4gIEVsZW1lbnRSZWYsXG4gIEV2ZW50RW1pdHRlcixcbiAgSW5wdXQsXG4gIE9uQ2hhbmdlcyxcbiAgT25EZXN0cm95LFxuICBPbkluaXQsXG4gIE91dHB1dCxcbiAgVmlld0NoaWxkXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtMaXZlQXBwc1NlcnZpY2V9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2xpdmUtYXBwcy5zZXJ2aWNlJztcbmltcG9ydCB7U3ViamVjdH0gZnJvbSAncnhqcyc7XG5pbXBvcnQge21hcCwgdGFrZSwgdGFrZVVudGlsfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQge0Nhc2VMaXN0LCBDYXNlUm91dGV9IGZyb20gJy4uLy4uL21vZGVscy9saXZlYXBwc2RhdGEnO1xuaW1wb3J0IHtMaXZlQXBwc0NvbXBvbmVudH0gZnJvbSAnLi4vbGl2ZS1hcHBzLWNvbXBvbmVudC9saXZlLWFwcHMtY29tcG9uZW50LmNvbXBvbmVudCc7XG5pbXBvcnQge1RjQ29tcG9uZW50LCBUY0NvcmVDb21tb25GdW5jdGlvbnN9IGZyb20gJ0B0aWJjby10Y3N0ay90Yy1jb3JlLWxpYic7XG5cbi8qKlxuICogUmVjZW50IGNhc2VzIHdpZGdldCwgdGhpcyBDb21wb25lbnQgbGlzdCByZWNlbnQgdmlzaXRlZCBDYXNlcy5cbiAqXG4gKiAhW2FsdC10ZXh0XSguLi9saXZlLWFwcHMtcmVjZW50LWNhc2VzLnBuZyBcIlwiKVxuICpcbiAqQGV4YW1wbGUgPHRjbGEtbGl2ZS1hcHBzLXJlY2VudC1jYXNlcz48L3RjbGEtbGl2ZS1hcHBzLXJlY2VudC1jYXNlcz5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGNsYS1saXZlLWFwcHMtcmVjZW50LWNhc2VzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xpdmUtYXBwcy1yZWNlbnQtY2FzZXMuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9saXZlLWFwcHMtcmVjZW50LWNhc2VzLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBMaXZlQXBwc1JlY2VudENhc2VzQ29tcG9uZW50IGV4dGVuZHMgTGl2ZUFwcHNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyVmlld0luaXQge1xuICAvKipcbiAgICogc2FuZGJveElkIC0gdGhpcyBjb21lcyBmcm9tIGNsYWltcyByZXNvbHZlclxuICAgKi9cbiAgQElucHV0KCkgc2FuZGJveElkOiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFRoZSBBcHBsaWNhdGlvbiBJRCBvZiB0aGUgVUkgKHNob3VsZCBpZGVhbGx5IGJlIHVuaXF1ZSBhcyBpdCBpcyBzaGFyZWQgc3RhdGUga2V5KVxuICAgKi9cbiAgQElucHV0KCkgdWlBcHBJZDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBjYXNlIGNhcmQgZm9ybWF0IC0gbGlzdCwgY2FyZCwgbWluaUNhcmQsIHN0YXRpY0xpc3QgKG5vIGNsaWNrIGV2ZW50KVxuICAgKi9cbiAgQElucHV0KCkgZGlzcGxheVR5cGU6IHN0cmluZyA9IHRoaXMuZGlzcGxheVR5cGUgPyB0aGlzLmRpc3BsYXlUeXBlIDogJ21pbmlDYXJkJzsgLy8gbWluaUNhcmQsIGNhcmQsIGxpc3RcbiAgLyoqXG4gICAqIFdoZXRoZXIgdG8gc2hvdyB0aGUgaGVhZGVyIGJhciBpbiB0aGUgd2lkZ2V0IC0gZWcuIGZhdm9yaXRlcyBvbiBob21lIHBhZ2UgKGNvbnRhaW5zIGljb24gZXRjKSAtIGlmIG9mZiBpY29ucyBzdGlsbCBhcHBlYXIgd2l0aG91dCBiYXJcbiAgICovXG4gIEBJbnB1dCgpIHNob3dIZWFkZXI6IGJvb2xlYW4gPSB0aGlzLnNob3dIZWFkZXIgPyB0aGlzLnNob3dIZWFkZXIgOiB0cnVlO1xuXG4gIC8qKlxuICAgKiB+ZXZlbnQgY2xpY2tDYXNlIDogQ2FzZSBjbGlja2VkXG4gICAqIH5wYXlsb2FkIENhc2VSb3V0ZSA6IENhc2VSb3V0ZSBvYmplY3Qgb3V0cHV0IHdoZW4gY2FzZSBpcyBjbGlja2VkIHNvIGNhbGxpbmcgY29tcG9uZW50IGNhbiByb3V0ZSBhY2NvcmRpbmdseSAtIGllLiByb3V0ZSB0byBjYXNlXG4gICAqL1xuICBAT3V0cHV0KCkgY2xpY2tDYXNlOiBFdmVudEVtaXR0ZXI8Q2FzZVJvdXRlPiA9IG5ldyBFdmVudEVtaXR0ZXI8Q2FzZVJvdXRlPigpO1xuXG4gIEBWaWV3Q2hpbGQoJ2NvbXBvbmVudERpdicsIHtzdGF0aWM6IGZhbHNlfSkgY29tcG9uZW50RGl2OiBFbGVtZW50UmVmO1xuXG4gIHB1YmxpYyByZWNlbnRDYXNlczogc3RyaW5nW107XG4gIHB1YmxpYyBlcnJvck1lc3NhZ2U6IHN0cmluZztcbiAgcHVibGljIHdpZGdldDogVGNDb21wb25lbnQ7XG4gIHB1YmxpYyBjYXJkV2lkdGhQY3Q6IE51bWJlcjtcblxuICBwdWJsaWMgY2xpY2tDYXNlQWN0aW9uID0gKGNhc2VSb3V0ZTogQ2FzZVJvdXRlKSA9PiB7XG4gICAgdGhpcy5jbGlja0Nhc2UuZW1pdChjYXNlUm91dGUpO1xuICB9XG5cbiAgcHVibGljIHJlZnJlc2ggPSAoKSA9PiB7XG4gICAgdGhpcy5yZWNlbnRDYXNlcyA9IFtdO1xuICAgIHRoaXMubGl2ZWFwcHMuZ2V0UmVjZW50Q2FzZXModGhpcy51aUFwcElkLCB0aGlzLnNhbmRib3hJZClcbiAgICAgIC5waXBlKFxuICAgICAgICB0YWtlKDEpLFxuICAgICAgICB0YWtlVW50aWwodGhpcy5fZGVzdHJveWVkJClcbiAgICAgICkuc3Vic2NyaWJlKFxuICAgICAgbmV4dCA9PiB7XG4gICAgICAgIHRoaXMucmVjZW50Q2FzZXMgPSBuZXh0LmNhc2VSZWZzIHx8IFtdO1xuICAgICAgfSwgZXJyb3IgPT4geyB0aGlzLmVycm9yTWVzc2FnZSA9ICdFcnJvciByZXRyaWV2aW5nIHJlY2VudCBjYXNlczogJyArIGVycm9yLmVycm9yLmVycm9yTXNnOyB9KTtcbiAgfVxuXG4gIHB1YmxpYyBjbGVhclJlY2VudENhc2VzID0gKCkgPT4ge1xuICAgIC8vIC0xIHdpbGwgY2xlYXIgcmVjZW50IGNhc2VzXG4gICAgdGhpcy5saXZlYXBwcy5zZXRSZWNlbnRDYXNlKCctMScsIHRoaXMudWlBcHBJZCwgdGhpcy5zYW5kYm94SWQpO1xuICAgIHRoaXMucmVjZW50Q2FzZXMgPSBbXTtcbiAgfVxuXG4gIHB1YmxpYyBoYW5kbGVEZWxldGVkID0gKGNhc2VSZWY6IHN0cmluZykgPT4ge1xuICAgIHRoaXMucmVjZW50Q2FzZXMuc3BsaWNlKHRoaXMucmVjZW50Q2FzZXMuaW5kZXhPZihjYXNlUmVmKSwgMSk7XG4gICAgdGhpcy5saXZlYXBwcy51bnNldFJlY2VudENhc2UoY2FzZVJlZiwgdGhpcy51aUFwcElkLCB0aGlzLnNhbmRib3hJZCk7XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgbGl2ZWFwcHM6IExpdmVBcHBzU2VydmljZSkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICBzdXBlci5uZ0FmdGVyVmlld0luaXQoKTtcbiAgICB0aGlzLmNhcmRXaWR0aFBjdCA9IFRjQ29yZUNvbW1vbkZ1bmN0aW9ucy5jYWxjU3VtbWFyeUNhcmRQY3QodGhpcy53aWRnZXQpO1xuICAgIHRoaXMuY29udGFpbmVyQ2hhbmdlcyQuc3Vic2NyaWJlKHdpZGdldCA9PiB7XG4gICAgICB0aGlzLmNhcmRXaWR0aFBjdCA9IFRjQ29yZUNvbW1vbkZ1bmN0aW9ucy5jYWxjU3VtbWFyeUNhcmRQY3Qod2lkZ2V0KTtcbiAgICB9KTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHN1cGVyLm5nT25Jbml0KCk7XG4gICAgdGhpcy5yZWZyZXNoKCk7XG4gIH1cblxufVxuIl19