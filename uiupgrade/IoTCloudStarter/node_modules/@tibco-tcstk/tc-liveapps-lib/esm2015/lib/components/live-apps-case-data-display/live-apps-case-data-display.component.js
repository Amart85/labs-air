/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { JsonSchema } from '../../models/liveappsdata';
import { CustomFormDefs } from '@tibco-tcstk/tc-forms-lib';
import { TcCaseProcessesService } from '../../services/tc-case-processes.service';
/**
 * Renders case data in a form
 *
 * ![alt-text](../live-apps-case-data-display.png "Image")
 *
 * \@example <tcla-live-apps-case-data-display></tcla-live-apps-case-data-display>
 */
export class LiveAppsCaseDataDisplayComponent {
    /**
     * @param {?} caseProcessService
     */
    constructor(caseProcessService) {
        this.caseProcessService = caseProcessService;
        this.DEFAULT_CASE_DATA_LAYOUT = [
            '*',
            { type: 'submit', title: 'Save', condition: '1===2' },
            { type: 'actions', title: 'hello', condition: '1===2' }
        ];
        /**
         * Allow override of forms framework
         * Options: bootstrap-4 or material-design
         */
        this.formsFramework = this.formsFramework ? this.formsFramework : 'material-design';
        /**
         * Layout object that can be passed to override default layout of the form renderer
         */
        this.layout = this.layout ? this.layout : this.DEFAULT_CASE_DATA_LAYOUT;
        /**
         * Emit event to cause refresh of page
         * *
         */
        this.refreshEvent = new EventEmitter();
    }
    /**
     * @param {?} data
     * @return {?}
     */
    updateDataAction(data) {
        data = {
            [this.name]: data
        };
        this.caseProcessService.caseDataFormUpdate(this.caseRef, this.appId, this.typeId, this.sandboxId, '$Update', data).subscribe((/**
         * @param {?} next
         * @return {?}
         */
        next => {
            this.refreshEvent.emit();
        }), (/**
         * @param {?} error1
         * @return {?}
         */
        error1 => {
            console.error('Unable to trigger update of case data');
        }));
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        // since this is the 'display' of case data we set to readonly and no validation
        // legacy makes the labels appear above the data
        this.options = {
            defaultOptions: {
                'readonly': true,
                'appearance': 'legacy'
            },
            'validateOnRender': false
        };
        console.log(this.schema);
    }
}
LiveAppsCaseDataDisplayComponent.decorators = [
    { type: Component, args: [{
                selector: 'tcla-live-apps-case-data-display',
                template: "<tcfrm-rendered-form *ngIf=\"schema && caseData && options\" [schema]=\"schema\" [layout]=\"layout\" [data]=\"caseData\" [caseRef]=\"caseRef\" [appId]=\"appId\" [options]=\"options\" [customFormDefs]=\"customFormDefs\" [formsFramework]=\"formsFramework\" [formRef]=\"formRef\" (formSubmit)=\"updateDataAction($event)\"></tcfrm-rendered-form>\n",
                styles: [":host ::ng-deep button{visibility:hidden}"]
            }] }
];
/** @nocollapse */
LiveAppsCaseDataDisplayComponent.ctorParameters = () => [
    { type: TcCaseProcessesService }
];
LiveAppsCaseDataDisplayComponent.propDecorators = {
    sandboxId: [{ type: Input }],
    caseData: [{ type: Input }],
    appId: [{ type: Input }],
    typeId: [{ type: Input }],
    caseRef: [{ type: Input }],
    name: [{ type: Input }],
    schema: [{ type: Input }],
    formsFramework: [{ type: Input }],
    layout: [{ type: Input }],
    customFormDefs: [{ type: Input }],
    formRef: [{ type: Input }],
    refreshEvent: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    LiveAppsCaseDataDisplayComponent.prototype.DEFAULT_CASE_DATA_LAYOUT;
    /**
     * SandboxId
     * @type {?}
     */
    LiveAppsCaseDataDisplayComponent.prototype.sandboxId;
    /**
     * The case data
     * @type {?}
     */
    LiveAppsCaseDataDisplayComponent.prototype.caseData;
    /**
     * The case reference
     * @type {?}
     */
    LiveAppsCaseDataDisplayComponent.prototype.appId;
    /**
     * The applicationId
     * @type {?}
     */
    LiveAppsCaseDataDisplayComponent.prototype.typeId;
    /**
     * The typeId
     * @type {?}
     */
    LiveAppsCaseDataDisplayComponent.prototype.caseRef;
    /**
     * The 'name' of the main case type
     * @type {?}
     */
    LiveAppsCaseDataDisplayComponent.prototype.name;
    /**
     * The schema of the case type
     * @type {?}
     */
    LiveAppsCaseDataDisplayComponent.prototype.schema;
    /**
     * Allow override of forms framework
     * Options: bootstrap-4 or material-design
     * @type {?}
     */
    LiveAppsCaseDataDisplayComponent.prototype.formsFramework;
    /**
     * Layout object that can be passed to override default layout of the form renderer
     * @type {?}
     */
    LiveAppsCaseDataDisplayComponent.prototype.layout;
    /**
     * Custom Form configuration file
     * @type {?}
     */
    LiveAppsCaseDataDisplayComponent.prototype.customFormDefs;
    /**
     * Custom Form Reference
     * @type {?}
     */
    LiveAppsCaseDataDisplayComponent.prototype.formRef;
    /**
     * Emit event to cause refresh of page
     * *
     * @type {?}
     */
    LiveAppsCaseDataDisplayComponent.prototype.refreshEvent;
    /** @type {?} */
    LiveAppsCaseDataDisplayComponent.prototype.options;
    /**
     * @type {?}
     * @protected
     */
    LiveAppsCaseDataDisplayComponent.prototype.caseProcessService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS1hcHBzLWNhc2UtZGF0YS1kaXNwbGF5LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0aWJjby10Y3N0ay90Yy1saXZlYXBwcy1saWIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9saXZlLWFwcHMtY2FzZS1kYXRhLWRpc3BsYXkvbGl2ZS1hcHBzLWNhc2UtZGF0YS1kaXNwbGF5LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUM3RSxPQUFPLEVBQTBCLFVBQVUsRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBQzlFLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUN6RCxPQUFPLEVBQUMsc0JBQXNCLEVBQUMsTUFBTSwwQ0FBMEMsQ0FBQzs7Ozs7Ozs7QUFlaEYsTUFBTSxPQUFPLGdDQUFnQzs7OztJQTBFM0MsWUFBc0Isa0JBQTBDO1FBQTFDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBd0I7UUF4RWhFLDZCQUF3QixHQUFHO1lBQ3pCLEdBQUc7WUFDSCxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFO1lBQ3JELEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUU7U0FFeEQsQ0FBQzs7Ozs7UUEyQ08sbUJBQWMsR0FBVyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQzs7OztRQUt2RixXQUFNLEdBQVUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLHdCQUF3QixDQUFDOzs7OztRQWV6RSxpQkFBWSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFJd0IsQ0FBQzs7Ozs7SUFFOUQsZ0JBQWdCLENBQUMsSUFBUztRQUMvQixJQUFJLEdBQUc7WUFDTCxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJO1NBQ2xCLENBQUE7UUFFRCxJQUFJLENBQUMsa0JBQWtCLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRSxTQUFTLEVBQUUsSUFBSSxDQUFDLENBQUMsU0FBUzs7OztRQUMxSCxJQUFJLENBQUMsRUFBRTtZQUNMLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDM0IsQ0FBQzs7OztRQUNELE1BQU0sQ0FBQyxFQUFFO1lBQ1AsT0FBTyxDQUFDLEtBQUssQ0FBQyx1Q0FBdUMsQ0FBQyxDQUFDO1FBQ3pELENBQUMsRUFDRixDQUFDO0lBQ0osQ0FBQzs7OztJQUVELFFBQVE7UUFDTixnRkFBZ0Y7UUFDaEYsZ0RBQWdEO1FBQ2hELElBQUksQ0FBQyxPQUFPLEdBQUc7WUFDYixjQUFjLEVBQUU7Z0JBQ2QsVUFBVSxFQUFFLElBQUk7Z0JBQ2hCLFlBQVksRUFBRSxRQUFRO2FBQ3ZCO1lBQ0Qsa0JBQWtCLEVBQUUsS0FBSztTQUMxQixDQUFDO1FBQ0YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDM0IsQ0FBQzs7O1lBM0dGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsa0NBQWtDO2dCQUM1QyxtV0FBMkQ7O2FBRTVEOzs7O1lBZE8sc0JBQXNCOzs7d0JBMkIzQixLQUFLO3VCQUtMLEtBQUs7b0JBTUwsS0FBSztxQkFLTCxLQUFLO3NCQUtMLEtBQUs7bUJBTUwsS0FBSztxQkFLTCxLQUFLOzZCQU1MLEtBQUs7cUJBS0wsS0FBSzs2QkFLTCxLQUFLO3NCQUtMLEtBQUs7MkJBS0wsTUFBTTs7OztJQXBFUCxvRUFLRTs7Ozs7SUFLRixxREFBMkI7Ozs7O0lBSzNCLG9EQUEwQjs7Ozs7SUFNMUIsaURBQXNCOzs7OztJQUt0QixrREFBdUI7Ozs7O0lBS3ZCLG1EQUF5Qjs7Ozs7SUFNekIsZ0RBQXNCOzs7OztJQUt0QixrREFBNEI7Ozs7OztJQU01QiwwREFBZ0c7Ozs7O0lBS2hHLGtEQUFtRjs7Ozs7SUFLbkYsMERBQXdDOzs7OztJQUt4QyxtREFBeUI7Ozs7OztJQUt6Qix3REFBNEM7O0lBRTVDLG1EQUFROzs7OztJQUVJLDhEQUFvRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkluaXQsIE91dHB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0Nhc2VUeXBlLCBDYXNlVHlwZXNMaXN0LCBKc29uU2NoZW1hfSBmcm9tICcuLi8uLi9tb2RlbHMvbGl2ZWFwcHNkYXRhJztcbmltcG9ydCB7Q3VzdG9tRm9ybURlZnN9IGZyb20gJ0B0aWJjby10Y3N0ay90Yy1mb3Jtcy1saWInO1xuaW1wb3J0IHtUY0Nhc2VQcm9jZXNzZXNTZXJ2aWNlfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy90Yy1jYXNlLXByb2Nlc3Nlcy5zZXJ2aWNlJztcblxuLyoqXG4gKiBSZW5kZXJzIGNhc2UgZGF0YSBpbiBhIGZvcm1cbiAqXG4gKiAhW2FsdC10ZXh0XSguLi9saXZlLWFwcHMtY2FzZS1kYXRhLWRpc3BsYXkucG5nIFwiSW1hZ2VcIilcbiAqXG4gKkBleGFtcGxlIDx0Y2xhLWxpdmUtYXBwcy1jYXNlLWRhdGEtZGlzcGxheT48L3RjbGEtbGl2ZS1hcHBzLWNhc2UtZGF0YS1kaXNwbGF5PlxuICovXG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RjbGEtbGl2ZS1hcHBzLWNhc2UtZGF0YS1kaXNwbGF5JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xpdmUtYXBwcy1jYXNlLWRhdGEtZGlzcGxheS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2xpdmUtYXBwcy1jYXNlLWRhdGEtZGlzcGxheS5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgTGl2ZUFwcHNDYXNlRGF0YURpc3BsYXlDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIERFRkFVTFRfQ0FTRV9EQVRBX0xBWU9VVCA9IFtcbiAgICAnKicsXG4gICAgeyB0eXBlOiAnc3VibWl0JywgdGl0bGU6ICdTYXZlJywgY29uZGl0aW9uOiAnMT09PTInIH0sXG4gICAgeyB0eXBlOiAnYWN0aW9ucycsIHRpdGxlOiAnaGVsbG8nLCBjb25kaXRpb246ICcxPT09MicgfVxuXG4gIF07XG5cbiAgLyoqXG4gICAqIFNhbmRib3hJZFxuICAgKi9cbiAgQElucHV0KCkgc2FuZGJveElkOiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFRoZSBjYXNlIGRhdGFcbiAgICovXG4gIEBJbnB1dCgpIGNhc2VEYXRhOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBjYXNlIHJlZmVyZW5jZVxuICAgKi9cblxuICBASW5wdXQoKSBhcHBJZDogc3RyaW5nXG4gIC8qKlxuICAgKiBUaGUgYXBwbGljYXRpb25JZFxuICAgKi9cblxuICBASW5wdXQoKSB0eXBlSWQ6IHN0cmluZ1xuICAvKipcbiAgICogVGhlIHR5cGVJZFxuICAgKi9cblxuICBASW5wdXQoKSBjYXNlUmVmOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSAnbmFtZScgb2YgdGhlIG1haW4gY2FzZSB0eXBlXG4gICAqL1xuXG4gIEBJbnB1dCgpIG5hbWU6IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIHNjaGVtYSBvZiB0aGUgY2FzZSB0eXBlXG4gICAqL1xuICBASW5wdXQoKSBzY2hlbWE6IEpzb25TY2hlbWE7XG5cbiAgLyoqXG4gICAqIEFsbG93IG92ZXJyaWRlIG9mIGZvcm1zIGZyYW1ld29ya1xuICAgKiBPcHRpb25zOiBib290c3RyYXAtNCBvciBtYXRlcmlhbC1kZXNpZ25cbiAgICovXG4gIEBJbnB1dCgpIGZvcm1zRnJhbWV3b3JrOiBzdHJpbmcgPSB0aGlzLmZvcm1zRnJhbWV3b3JrID8gdGhpcy5mb3Jtc0ZyYW1ld29yayA6ICdtYXRlcmlhbC1kZXNpZ24nO1xuXG4gIC8qKlxuICAgKiBMYXlvdXQgb2JqZWN0IHRoYXQgY2FuIGJlIHBhc3NlZCB0byBvdmVycmlkZSBkZWZhdWx0IGxheW91dCBvZiB0aGUgZm9ybSByZW5kZXJlclxuICAgKi9cbiAgQElucHV0KCkgbGF5b3V0OiBhbnlbXSA9IHRoaXMubGF5b3V0ID8gdGhpcy5sYXlvdXQgOiB0aGlzLkRFRkFVTFRfQ0FTRV9EQVRBX0xBWU9VVDtcblxuICAvKipcbiAgICogQ3VzdG9tIEZvcm0gY29uZmlndXJhdGlvbiBmaWxlXG4gICAqL1xuICBASW5wdXQoKSBjdXN0b21Gb3JtRGVmczogQ3VzdG9tRm9ybURlZnM7XG5cbiAgLyoqXG4gICAqIEN1c3RvbSBGb3JtIFJlZmVyZW5jZVxuICAgKi9cbiAgQElucHV0KCkgZm9ybVJlZjogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBFbWl0IGV2ZW50IHRvIGNhdXNlIHJlZnJlc2ggb2YgcGFnZVxuICAgKiAqKi9cbiAgQE91dHB1dCgpIHJlZnJlc2hFdmVudCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBvcHRpb25zO1xuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBjYXNlUHJvY2Vzc1NlcnZpY2U6IFRjQ2FzZVByb2Nlc3Nlc1NlcnZpY2UpIHsgfVxuXG4gIHB1YmxpYyB1cGRhdGVEYXRhQWN0aW9uKGRhdGE6IGFueSkge1xuICAgIGRhdGEgPSB7XG4gICAgICBbdGhpcy5uYW1lXTogZGF0YVxuICAgIH1cblxuICAgIHRoaXMuY2FzZVByb2Nlc3NTZXJ2aWNlLmNhc2VEYXRhRm9ybVVwZGF0ZSh0aGlzLmNhc2VSZWYsIHRoaXMuYXBwSWQsIHRoaXMudHlwZUlkLCB0aGlzLnNhbmRib3hJZCwgJyRVcGRhdGUnLCBkYXRhKS5zdWJzY3JpYmUoXG4gICAgICBuZXh0ID0+IHtcbiAgICAgICAgdGhpcy5yZWZyZXNoRXZlbnQuZW1pdCgpO1xuICAgICAgfSxcbiAgICAgIGVycm9yMSA9PiB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ1VuYWJsZSB0byB0cmlnZ2VyIHVwZGF0ZSBvZiBjYXNlIGRhdGEnKTtcbiAgICAgIH1cbiAgICApO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgLy8gc2luY2UgdGhpcyBpcyB0aGUgJ2Rpc3BsYXknIG9mIGNhc2UgZGF0YSB3ZSBzZXQgdG8gcmVhZG9ubHkgYW5kIG5vIHZhbGlkYXRpb25cbiAgICAvLyBsZWdhY3kgbWFrZXMgdGhlIGxhYmVscyBhcHBlYXIgYWJvdmUgdGhlIGRhdGFcbiAgICB0aGlzLm9wdGlvbnMgPSB7XG4gICAgICBkZWZhdWx0T3B0aW9uczoge1xuICAgICAgICAncmVhZG9ubHknOiB0cnVlLFxuICAgICAgICAnYXBwZWFyYW5jZSc6ICdsZWdhY3knXG4gICAgICB9LFxuICAgICAgJ3ZhbGlkYXRlT25SZW5kZXInOiBmYWxzZVxuICAgIH07XG4gICAgY29uc29sZS5sb2codGhpcy5zY2hlbWEpO1xuICB9XG5cbn1cbiJdfQ==