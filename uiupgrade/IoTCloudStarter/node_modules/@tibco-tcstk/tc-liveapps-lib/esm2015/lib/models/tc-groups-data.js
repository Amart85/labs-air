/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
export class Group {
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    deserialize(input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    }
}
if (false) {
    /** @type {?} */
    Group.prototype.name;
    /** @type {?} */
    Group.prototype.description;
    /** @type {?} */
    Group.prototype.type;
    /** @type {?} */
    Group.prototype.id;
}
export class Groups {
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    deserialize(input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    }
}
if (false) {
    /** @type {?} */
    Groups.prototype.groups;
}
export class Roles {
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    deserialize(input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    }
}
if (false) {
    /** @type {?} */
    Roles.prototype.roles;
}
export class RouteAccessControlConfig {
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    deserialize(input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    }
}
if (false) {
    /** @type {?} */
    RouteAccessControlConfig.prototype.id;
    /** @type {?} */
    RouteAccessControlConfig.prototype.uiAppId;
    /** @type {?} */
    RouteAccessControlConfig.prototype.allowedRoutes;
    /** @type {?} */
    RouteAccessControlConfig.prototype.allowedButtonIds;
    /** @type {?} */
    RouteAccessControlConfig.prototype.configuration;
}
export class RouteAccessControlConfigurationElement {
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} input
     * @return {THIS}
     */
    deserialize(input) {
        Object.assign((/** @type {?} */ (this)), input);
        return (/** @type {?} */ (this));
    }
}
if (false) {
    /** @type {?} */
    RouteAccessControlConfigurationElement.prototype.roleId;
    /** @type {?} */
    RouteAccessControlConfigurationElement.prototype.routes;
    /** @type {?} */
    RouteAccessControlConfigurationElement.prototype.buttonIds;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGMtZ3JvdXBzLWRhdGEuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGliY28tdGNzdGsvdGMtbGl2ZWFwcHMtbGliLyIsInNvdXJjZXMiOlsibGliL21vZGVscy90Yy1ncm91cHMtZGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsTUFBTSxPQUFPLEtBQUs7Ozs7Ozs7SUFLaEIsV0FBVyxDQUFDLEtBQVU7UUFDcEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxtQkFBQSxJQUFJLEVBQUEsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUMzQixPQUFPLG1CQUFBLElBQUksRUFBQSxDQUFDO0lBQ2QsQ0FBQztDQUNGOzs7SUFSQyxxQkFBb0I7O0lBQ3BCLDRCQUEyQjs7SUFDM0IscUJBQW9COztJQUNwQixtQkFBa0I7O0FBT3BCLE1BQU0sT0FBTyxNQUFNOzs7Ozs7O0lBRWpCLFdBQVcsQ0FBQyxLQUFVO1FBQ3BCLE1BQU0sQ0FBQyxNQUFNLENBQUMsbUJBQUEsSUFBSSxFQUFBLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDM0IsT0FBTyxtQkFBQSxJQUFJLEVBQUEsQ0FBQztJQUNkLENBQUM7Q0FDRjs7O0lBTEMsd0JBQWdCOztBQU9sQixNQUFNLE9BQU8sS0FBSzs7Ozs7OztJQUVoQixXQUFXLENBQUMsS0FBVTtRQUNwQixNQUFNLENBQUMsTUFBTSxDQUFDLG1CQUFBLElBQUksRUFBQSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzNCLE9BQU8sbUJBQUEsSUFBSSxFQUFBLENBQUM7SUFDZCxDQUFDO0NBQ0Y7OztJQUxDLHNCQUF1Qjs7QUFPekIsTUFBTSxPQUFPLHdCQUF3Qjs7Ozs7OztJQU1qQyxXQUFXLENBQUMsS0FBVTtRQUNsQixNQUFNLENBQUMsTUFBTSxDQUFDLG1CQUFBLElBQUksRUFBQSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzNCLE9BQU8sbUJBQUEsSUFBSSxFQUFBLENBQUM7SUFDaEIsQ0FBQztDQUNKOzs7SUFURyxzQ0FBVzs7SUFDWCwyQ0FBZ0I7O0lBQ2hCLGlEQUF3Qjs7SUFDeEIsb0RBQTJCOztJQUMzQixpREFBd0Q7O0FBTzVELE1BQU0sT0FBTyxzQ0FBc0M7Ozs7Ozs7SUFJL0MsV0FBVyxDQUFDLEtBQVU7UUFDbEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxtQkFBQSxJQUFJLEVBQUEsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUMzQixPQUFPLG1CQUFBLElBQUksRUFBQSxDQUFDO0lBQ2hCLENBQUM7Q0FDSjs7O0lBUEcsd0RBQWU7O0lBQ2Ysd0RBQWlCOztJQUNqQiwyREFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Rlc2VyaWFsaXphYmxlLCBSb2xlQXR0cmlidXRlfSBmcm9tICdAdGliY28tdGNzdGsvdGMtY29yZS1saWInO1xuXG5leHBvcnQgY2xhc3MgR3JvdXAge1xuICBwdWJsaWMgbmFtZTogc3RyaW5nO1xuICBwdWJsaWMgZGVzY3JpcHRpb246IHN0cmluZztcbiAgcHVibGljIHR5cGU6IHN0cmluZztcbiAgcHVibGljIGlkOiBzdHJpbmc7XG4gIGRlc2VyaWFsaXplKGlucHV0OiBhbnkpOiB0aGlzIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgR3JvdXBzIHtcbiAgZ3JvdXBzOiBHcm91cFtdO1xuICBkZXNlcmlhbGl6ZShpbnB1dDogYW55KTogdGhpcyB7XG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLCBpbnB1dCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFJvbGVzIHtcbiAgcm9sZXM6IFJvbGVBdHRyaWJ1dGVbXTtcbiAgZGVzZXJpYWxpemUoaW5wdXQ6IGFueSk6IHRoaXMge1xuICAgIE9iamVjdC5hc3NpZ24odGhpcywgaW5wdXQpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBSb3V0ZUFjY2Vzc0NvbnRyb2xDb25maWcge1xuICAgIGlkOiBzdHJpbmc7XG4gICAgdWlBcHBJZDogc3RyaW5nO1xuICAgIGFsbG93ZWRSb3V0ZXM6IHN0cmluZ1tdO1xuICAgIGFsbG93ZWRCdXR0b25JZHM6IHN0cmluZ1tdO1xuICAgIGNvbmZpZ3VyYXRpb246IFJvdXRlQWNjZXNzQ29udHJvbENvbmZpZ3VyYXRpb25FbGVtZW50W107XG4gICAgZGVzZXJpYWxpemUoaW5wdXQ6IGFueSk6IHRoaXMge1xuICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMsIGlucHV0KTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxufVxuXG5leHBvcnQgY2xhc3MgUm91dGVBY2Nlc3NDb250cm9sQ29uZmlndXJhdGlvbkVsZW1lbnQge1xuICAgIHJvbGVJZDogc3RyaW5nO1xuICAgIHJvdXRlczogc3RyaW5nW107XG4gICAgYnV0dG9uSWRzOiBzdHJpbmdbXTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgZGVzZXJpYWxpemUoaW5wdXQ6IGFueSk6IHRoaXMge1xuICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMsIGlucHV0KTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxufVxuIl19