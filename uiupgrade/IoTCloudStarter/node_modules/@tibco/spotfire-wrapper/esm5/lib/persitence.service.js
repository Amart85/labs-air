/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// Copyright (c) 2018-2018. TIBCO Software Inc. All Rights Reserved. Confidential & Proprietary.
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
var PersistanceService = /** @class */ (function () {
    function PersistanceService() {
        var _this = this;
        this.pfx = '';
        this.set = (/**
         * @param {?} key
         * @param {?} data
         * @return {?}
         */
        function (key, data) {
            try {
                localStorage.setItem(_this.pfx + ".sw." + key, JSON.stringify(data));
            }
            catch (e) {
                console.error('Error saving to localStorage', e);
            }
        });
        this.get = (/**
         * @param {?} key
         * @return {?}
         */
        function (key) {
            try {
                return JSON.parse(localStorage.getItem(_this.pfx + ".sw." + key));
            }
            catch (e) {
                console.error('Error getting data from localStorage', e);
                return null;
            }
        });
    }
    PersistanceService.decorators = [
        { type: Injectable, args: [{ providedIn: 'root' },] }
    ];
    /** @nocollapse */ PersistanceService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function PersistanceService_Factory() { return new PersistanceService(); }, token: PersistanceService, providedIn: "root" });
    return PersistanceService;
}());
export { PersistanceService };
if (false) {
    /** @type {?} */
    PersistanceService.prototype.pfx;
    /** @type {?} */
    PersistanceService.prototype.set;
    /** @type {?} */
    PersistanceService.prototype.get;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyc2l0ZW5jZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRpYmNvL3Nwb3RmaXJlLXdyYXBwZXIvIiwic291cmNlcyI6WyJsaWIvcGVyc2l0ZW5jZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFFM0M7SUFBQTtRQUFBLGlCQWtCQztRQWhCQyxRQUFHLEdBQUcsRUFBRSxDQUFDO1FBQ1QsUUFBRzs7Ozs7UUFBRyxVQUFDLEdBQVcsRUFBRSxJQUFTO1lBQzNCLElBQUk7Z0JBQ0YsWUFBWSxDQUFDLE9BQU8sQ0FBSSxLQUFJLENBQUMsR0FBRyxZQUFPLEdBQUssRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7YUFDckU7WUFBQyxPQUFPLENBQUMsRUFBRTtnQkFDVixPQUFPLENBQUMsS0FBSyxDQUFDLDhCQUE4QixFQUFFLENBQUMsQ0FBQyxDQUFDO2FBQ2xEO1FBQ0gsQ0FBQyxFQUFBO1FBQ0QsUUFBRzs7OztRQUFHLFVBQUMsR0FBVztZQUNoQixJQUFJO2dCQUNGLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFJLEtBQUksQ0FBQyxHQUFHLFlBQU8sR0FBSyxDQUFDLENBQUMsQ0FBQzthQUNsRTtZQUFDLE9BQU8sQ0FBQyxFQUFFO2dCQUNWLE9BQU8sQ0FBQyxLQUFLLENBQUMsc0NBQXNDLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQ3pELE9BQU8sSUFBSSxDQUFDO2FBQ2I7UUFDSCxDQUFDLEVBQUE7S0FDRjs7Z0JBbEJBLFVBQVUsU0FBQyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUU7Ozs2QkFIbEM7Q0FxQkMsQUFsQkQsSUFrQkM7U0FqQlksa0JBQWtCOzs7SUFDN0IsaUNBQVM7O0lBQ1QsaUNBTUM7O0lBQ0QsaUNBT0MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMTgtMjAxOC4gVElCQ08gU29mdHdhcmUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLiBDb25maWRlbnRpYWwgJiBQcm9wcmlldGFyeS5cbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSlcbmV4cG9ydCBjbGFzcyBQZXJzaXN0YW5jZVNlcnZpY2Uge1xuICBwZnggPSAnJztcbiAgc2V0ID0gKGtleTogc3RyaW5nLCBkYXRhOiBhbnkpID0+IHtcbiAgICB0cnkge1xuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oYCR7dGhpcy5wZnh9LnN3LiR7a2V5fWAsIEpTT04uc3RyaW5naWZ5KGRhdGEpKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBzYXZpbmcgdG8gbG9jYWxTdG9yYWdlJywgZSk7XG4gICAgfVxuICB9XG4gIGdldCA9IChrZXk6IHN0cmluZykgPT4ge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShgJHt0aGlzLnBmeH0uc3cuJHtrZXl9YCkpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGdldHRpbmcgZGF0YSBmcm9tIGxvY2FsU3RvcmFnZScsIGUpO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9XG59XG4iXX0=